// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cen
{
    public static partial class Invokes
    {
        /// <summary>
        /// This data source provides CEN Regional Route Entries available to the user.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/cen_region_route_entries.html.markdown.
        /// </summary>
        [Obsolete("Use GetRegionRouteEntries.InvokeAsync() instead")]
        public static Task<GetRegionRouteEntriesResult> GetRegionRouteEntries(GetRegionRouteEntriesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRegionRouteEntriesResult>("alicloud:cen/getRegionRouteEntries:getRegionRouteEntries", args ?? InvokeArgs.Empty, options.WithVersion());
    }
    public static class GetRegionRouteEntries
    {
        /// <summary>
        /// This data source provides CEN Regional Route Entries available to the user.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/cen_region_route_entries.html.markdown.
        /// </summary>
        public static Task<GetRegionRouteEntriesResult> InvokeAsync(GetRegionRouteEntriesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRegionRouteEntriesResult>("alicloud:cen/getRegionRouteEntries:getRegionRouteEntries", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetRegionRouteEntriesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the CEN instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// ID of the region.
        /// </summary>
        [Input("regionId", required: true)]
        public string RegionId { get; set; } = null!;

        public GetRegionRouteEntriesArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetRegionRouteEntriesResult
    {
        /// <summary>
        /// A list of CEN Route Entries. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRegionRouteEntriesEntriesResult> Entries;
        public readonly string InstanceId;
        public readonly string? OutputFile;
        public readonly string RegionId;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetRegionRouteEntriesResult(
            ImmutableArray<Outputs.GetRegionRouteEntriesEntriesResult> entries,
            string instanceId,
            string? outputFile,
            string regionId,
            string id)
        {
            Entries = entries;
            InstanceId = instanceId;
            OutputFile = outputFile;
            RegionId = regionId;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetRegionRouteEntriesEntriesResult
    {
        /// <summary>
        /// The destination CIDR block of the route entry.
        /// </summary>
        public readonly string CidrBlock;
        /// <summary>
        /// ID of the next hop.
        /// </summary>
        public readonly string NextHopId;
        /// <summary>
        /// ID of the region where the next hop is located.
        /// </summary>
        public readonly string NextHopRegionId;
        /// <summary>
        /// Type of the next hop.
        /// </summary>
        public readonly string NextHopType;
        /// <summary>
        /// Type of the route entry.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetRegionRouteEntriesEntriesResult(
            string cidrBlock,
            string nextHopId,
            string nextHopRegionId,
            string nextHopType,
            string type)
        {
            CidrBlock = cidrBlock;
            NextHopId = nextHopId;
            NextHopRegionId = nextHopRegionId;
            NextHopType = nextHopType;
            Type = type;
        }
    }
    }
}
