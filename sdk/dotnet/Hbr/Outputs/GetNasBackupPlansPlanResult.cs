// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Hbr.Outputs
{

    [OutputType]
    public sealed class GetNasBackupPlansPlanResult
    {
        /// <summary>
        /// Backup Type. Valid Values: * Complete. Valid values: `COMPLETE`.
        /// </summary>
        public readonly string BackupType;
        /// <summary>
        /// File System Creation Time. **Note** The time format of the API adopts the ISO 8601 format, such as `2021-07-09T15:45:30CST` or `2021-07-09T07:45:30Z`.
        /// </summary>
        public readonly string CreateTime;
        public readonly bool Disabled;
        /// <summary>
        /// The File System ID.
        /// </summary>
        public readonly string FileSystemId;
        public readonly string Id;
        public readonly string NasBackupPlanId;
        /// <summary>
        /// The name of the resource.
        /// </summary>
        public readonly string NasBackupPlanName;
        /// <summary>
        /// Options. NAS Backup Plan Does Not Support Yet.
        /// </summary>
        public readonly string Options;
        /// <summary>
        /// Backup Path. Up to 65536 Characters. e.g.`["/home", "/var"]`
        /// </summary>
        public readonly ImmutableArray<string> Paths;
        /// <summary>
        /// Backup Retention Period, the Minimum Value of 1.
        /// </summary>
        public readonly string Retention;
        /// <summary>
        /// The Backup Policy. Formats: I | {Range Specified by the Starttime }|{ Interval}\n* The Time Range Specified by the Starttime Backup Start Time in Unix Time Seconds.\n* Interval ISO8601 Time Intervals. For Example:\n**PT1H Interval for an Hour.\n**P1D Interval Day.\nMeaning from {Range Specified by the Starttime} Every {Interval} of the Time Where We Took Backups Once a Task. Does Not Compensate the Has Elapsed Time the Backup Task. If the Last Backup Has Not Been Completed without Triggering the next Backup.
        /// </summary>
        public readonly string Schedule;
        /// <summary>
        /// The Vault ID of the EcsBackupPlan used.
        /// </summary>
        public readonly string VaultId;

        [OutputConstructor]
        private GetNasBackupPlansPlanResult(
            string backupType,

            string createTime,

            bool disabled,

            string fileSystemId,

            string id,

            string nasBackupPlanId,

            string nasBackupPlanName,

            string options,

            ImmutableArray<string> paths,

            string retention,

            string schedule,

            string vaultId)
        {
            BackupType = backupType;
            CreateTime = createTime;
            Disabled = disabled;
            FileSystemId = fileSystemId;
            Id = id;
            NasBackupPlanId = nasBackupPlanId;
            NasBackupPlanName = nasBackupPlanName;
            Options = options;
            Paths = paths;
            Retention = retention;
            Schedule = schedule;
            VaultId = vaultId;
        }
    }
}
