// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cdn
{
    public partial class Domain : Pulumi.CustomResource
    {
        /// <summary>
        /// The auth config of the accelerated domain.
        /// </summary>
        [Output("authConfig")]
        public Output<Outputs.DomainAuthConfig?> AuthConfig { get; private set; } = null!;

        [Output("blockIps")]
        public Output<ImmutableArray<string>> BlockIps { get; private set; } = null!;

        /// <summary>
        /// The cache configs of the accelerated domain.
        /// </summary>
        [Output("cacheConfigs")]
        public Output<ImmutableArray<Outputs.DomainCacheConfigs>> CacheConfigs { get; private set; } = null!;

        /// <summary>
        /// Cdn type of the accelerated domain. Valid values are `web`, `download`, `video`, `liveStream`.
        /// </summary>
        [Output("cdnType")]
        public Output<string> CdnType { get; private set; } = null!;

        [Output("certificateConfig")]
        public Output<Outputs.DomainCertificateConfig?> CertificateConfig { get; private set; } = null!;

        /// <summary>
        /// Name of the accelerated domain. This name without suffix can have a string of 1 to 63 characters, must contain only alphanumeric characters or "-", and must not begin or end with "-", and "-" must not in the 3th and 4th character positions at the same time. Suffix `.sh` and `.tel` are not supported.
        /// </summary>
        [Output("domainName")]
        public Output<string> DomainName { get; private set; } = null!;

        /// <summary>
        /// The http header configs of the accelerated domain.
        /// </summary>
        [Output("httpHeaderConfigs")]
        public Output<ImmutableArray<Outputs.DomainHttpHeaderConfigs>> HttpHeaderConfigs { get; private set; } = null!;

        /// <summary>
        /// Page Optimize config of the accelerated domain. Valid values are `on` and `off`. Default value is `off`. It can effectively remove the page redundant content, reduce the file size and improve the speed of distribution when this parameter value is `on`.
        /// </summary>
        [Output("optimizeEnable")]
        public Output<string?> OptimizeEnable { get; private set; } = null!;

        /// <summary>
        /// The error page config of the accelerated domain.
        /// </summary>
        [Output("page404Config")]
        public Output<Outputs.DomainPage404Config?> Page404Config { get; private set; } = null!;

        /// <summary>
        /// Page Compress config of the accelerated domain. Valid values are `on` and `off`. Default value is `off`.
        /// </summary>
        [Output("pageCompressEnable")]
        public Output<string?> PageCompressEnable { get; private set; } = null!;

        /// <summary>
        /// The parameter filter config of the accelerated domain.
        /// </summary>
        [Output("parameterFilterConfig")]
        public Output<Outputs.DomainParameterFilterConfig?> ParameterFilterConfig { get; private set; } = null!;

        /// <summary>
        /// Range Source config of the accelerated domain. Valid values are `on` and `off`. Default value is `off`.
        /// </summary>
        [Output("rangeEnable")]
        public Output<string?> RangeEnable { get; private set; } = null!;

        /// <summary>
        /// The refer config of the accelerated domain.
        /// </summary>
        [Output("referConfig")]
        public Output<Outputs.DomainReferConfig?> ReferConfig { get; private set; } = null!;

        /// <summary>
        /// Scope of the accelerated domain. Valid values are `domestic`, `overseas`, `global`. Default value is `domestic`. This parameter's setting is valid Only for the international users and domestic L3 and above users .
        /// </summary>
        [Output("scope")]
        public Output<string> Scope { get; private set; } = null!;

        /// <summary>
        /// Source port of the accelerated domain. Valid values are `80` and `443`. Default value is `80`. You must use `80` when the `source_type` is `oss`.
        /// </summary>
        [Output("sourcePort")]
        public Output<int?> SourcePort { get; private set; } = null!;

        /// <summary>
        /// Source type of the accelerated domain. Valid values are `ipaddr`, `domain`, `oss`. You must set this parameter when `cdn_type` value is not `liveStream`.
        /// </summary>
        [Output("sourceType")]
        public Output<string?> SourceType { get; private set; } = null!;

        /// <summary>
        /// Sources of the accelerated domain. It's a list of domain names or IP address and consists of at most 20 items. You must set this parameter when `cdn_type` value is not `liveStream`.
        /// </summary>
        [Output("sources")]
        public Output<ImmutableArray<string>> Sources { get; private set; } = null!;

        /// <summary>
        /// Video Seek config of the accelerated domain. Valid values are `on` and `off`. Default value is `off`.
        /// </summary>
        [Output("videoSeekEnable")]
        public Output<string?> VideoSeekEnable { get; private set; } = null!;


        /// <summary>
        /// Create a Domain resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Domain(string name, DomainArgs args, CustomResourceOptions? options = null)
            : base("alicloud:cdn/domain:Domain", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Domain(string name, Input<string> id, DomainState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:cdn/domain:Domain", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Domain resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Domain Get(string name, Input<string> id, DomainState? state = null, CustomResourceOptions? options = null)
        {
            return new Domain(name, id, state, options);
        }
    }

    public sealed class DomainArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The auth config of the accelerated domain.
        /// </summary>
        [Input("authConfig")]
        public Input<Inputs.DomainAuthConfigArgs>? AuthConfig { get; set; }

        [Input("blockIps")]
        private InputList<string>? _blockIps;
        [Obsolete(@"Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.")]
        public InputList<string> BlockIps
        {
            get => _blockIps ?? (_blockIps = new InputList<string>());
            set => _blockIps = value;
        }

        [Input("cacheConfigs")]
        private InputList<Inputs.DomainCacheConfigsArgs>? _cacheConfigs;

        /// <summary>
        /// The cache configs of the accelerated domain.
        /// </summary>
        [Obsolete(@"Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.")]
        public InputList<Inputs.DomainCacheConfigsArgs> CacheConfigs
        {
            get => _cacheConfigs ?? (_cacheConfigs = new InputList<Inputs.DomainCacheConfigsArgs>());
            set => _cacheConfigs = value;
        }

        /// <summary>
        /// Cdn type of the accelerated domain. Valid values are `web`, `download`, `video`, `liveStream`.
        /// </summary>
        [Input("cdnType", required: true)]
        public Input<string> CdnType { get; set; } = null!;

        [Input("certificateConfig")]
        public Input<Inputs.DomainCertificateConfigArgs>? CertificateConfig { get; set; }

        /// <summary>
        /// Name of the accelerated domain. This name without suffix can have a string of 1 to 63 characters, must contain only alphanumeric characters or "-", and must not begin or end with "-", and "-" must not in the 3th and 4th character positions at the same time. Suffix `.sh` and `.tel` are not supported.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        [Input("httpHeaderConfigs")]
        private InputList<Inputs.DomainHttpHeaderConfigsArgs>? _httpHeaderConfigs;

        /// <summary>
        /// The http header configs of the accelerated domain.
        /// </summary>
        [Obsolete(@"Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.")]
        public InputList<Inputs.DomainHttpHeaderConfigsArgs> HttpHeaderConfigs
        {
            get => _httpHeaderConfigs ?? (_httpHeaderConfigs = new InputList<Inputs.DomainHttpHeaderConfigsArgs>());
            set => _httpHeaderConfigs = value;
        }

        /// <summary>
        /// Page Optimize config of the accelerated domain. Valid values are `on` and `off`. Default value is `off`. It can effectively remove the page redundant content, reduce the file size and improve the speed of distribution when this parameter value is `on`.
        /// </summary>
        [Input("optimizeEnable")]
        public Input<string>? OptimizeEnable { get; set; }

        /// <summary>
        /// The error page config of the accelerated domain.
        /// </summary>
        [Input("page404Config")]
        public Input<Inputs.DomainPage404ConfigArgs>? Page404Config { get; set; }

        /// <summary>
        /// Page Compress config of the accelerated domain. Valid values are `on` and `off`. Default value is `off`.
        /// </summary>
        [Input("pageCompressEnable")]
        public Input<string>? PageCompressEnable { get; set; }

        /// <summary>
        /// The parameter filter config of the accelerated domain.
        /// </summary>
        [Input("parameterFilterConfig")]
        public Input<Inputs.DomainParameterFilterConfigArgs>? ParameterFilterConfig { get; set; }

        /// <summary>
        /// Range Source config of the accelerated domain. Valid values are `on` and `off`. Default value is `off`.
        /// </summary>
        [Input("rangeEnable")]
        public Input<string>? RangeEnable { get; set; }

        /// <summary>
        /// The refer config of the accelerated domain.
        /// </summary>
        [Input("referConfig")]
        public Input<Inputs.DomainReferConfigArgs>? ReferConfig { get; set; }

        /// <summary>
        /// Scope of the accelerated domain. Valid values are `domestic`, `overseas`, `global`. Default value is `domestic`. This parameter's setting is valid Only for the international users and domestic L3 and above users .
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// Source port of the accelerated domain. Valid values are `80` and `443`. Default value is `80`. You must use `80` when the `source_type` is `oss`.
        /// </summary>
        [Input("sourcePort")]
        public Input<int>? SourcePort { get; set; }

        /// <summary>
        /// Source type of the accelerated domain. Valid values are `ipaddr`, `domain`, `oss`. You must set this parameter when `cdn_type` value is not `liveStream`.
        /// </summary>
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        [Input("sources")]
        private InputList<string>? _sources;

        /// <summary>
        /// Sources of the accelerated domain. It's a list of domain names or IP address and consists of at most 20 items. You must set this parameter when `cdn_type` value is not `liveStream`.
        /// </summary>
        [Obsolete(@"Use `alicloud_cdn_domain_new` configuration `sources` argument instead.")]
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        /// <summary>
        /// Video Seek config of the accelerated domain. Valid values are `on` and `off`. Default value is `off`.
        /// </summary>
        [Input("videoSeekEnable")]
        public Input<string>? VideoSeekEnable { get; set; }

        public DomainArgs()
        {
        }
    }

    public sealed class DomainState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The auth config of the accelerated domain.
        /// </summary>
        [Input("authConfig")]
        public Input<Inputs.DomainAuthConfigGetArgs>? AuthConfig { get; set; }

        [Input("blockIps")]
        private InputList<string>? _blockIps;
        [Obsolete(@"Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.")]
        public InputList<string> BlockIps
        {
            get => _blockIps ?? (_blockIps = new InputList<string>());
            set => _blockIps = value;
        }

        [Input("cacheConfigs")]
        private InputList<Inputs.DomainCacheConfigsGetArgs>? _cacheConfigs;

        /// <summary>
        /// The cache configs of the accelerated domain.
        /// </summary>
        [Obsolete(@"Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.")]
        public InputList<Inputs.DomainCacheConfigsGetArgs> CacheConfigs
        {
            get => _cacheConfigs ?? (_cacheConfigs = new InputList<Inputs.DomainCacheConfigsGetArgs>());
            set => _cacheConfigs = value;
        }

        /// <summary>
        /// Cdn type of the accelerated domain. Valid values are `web`, `download`, `video`, `liveStream`.
        /// </summary>
        [Input("cdnType")]
        public Input<string>? CdnType { get; set; }

        [Input("certificateConfig")]
        public Input<Inputs.DomainCertificateConfigGetArgs>? CertificateConfig { get; set; }

        /// <summary>
        /// Name of the accelerated domain. This name without suffix can have a string of 1 to 63 characters, must contain only alphanumeric characters or "-", and must not begin or end with "-", and "-" must not in the 3th and 4th character positions at the same time. Suffix `.sh` and `.tel` are not supported.
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        [Input("httpHeaderConfigs")]
        private InputList<Inputs.DomainHttpHeaderConfigsGetArgs>? _httpHeaderConfigs;

        /// <summary>
        /// The http header configs of the accelerated domain.
        /// </summary>
        [Obsolete(@"Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.")]
        public InputList<Inputs.DomainHttpHeaderConfigsGetArgs> HttpHeaderConfigs
        {
            get => _httpHeaderConfigs ?? (_httpHeaderConfigs = new InputList<Inputs.DomainHttpHeaderConfigsGetArgs>());
            set => _httpHeaderConfigs = value;
        }

        /// <summary>
        /// Page Optimize config of the accelerated domain. Valid values are `on` and `off`. Default value is `off`. It can effectively remove the page redundant content, reduce the file size and improve the speed of distribution when this parameter value is `on`.
        /// </summary>
        [Input("optimizeEnable")]
        public Input<string>? OptimizeEnable { get; set; }

        /// <summary>
        /// The error page config of the accelerated domain.
        /// </summary>
        [Input("page404Config")]
        public Input<Inputs.DomainPage404ConfigGetArgs>? Page404Config { get; set; }

        /// <summary>
        /// Page Compress config of the accelerated domain. Valid values are `on` and `off`. Default value is `off`.
        /// </summary>
        [Input("pageCompressEnable")]
        public Input<string>? PageCompressEnable { get; set; }

        /// <summary>
        /// The parameter filter config of the accelerated domain.
        /// </summary>
        [Input("parameterFilterConfig")]
        public Input<Inputs.DomainParameterFilterConfigGetArgs>? ParameterFilterConfig { get; set; }

        /// <summary>
        /// Range Source config of the accelerated domain. Valid values are `on` and `off`. Default value is `off`.
        /// </summary>
        [Input("rangeEnable")]
        public Input<string>? RangeEnable { get; set; }

        /// <summary>
        /// The refer config of the accelerated domain.
        /// </summary>
        [Input("referConfig")]
        public Input<Inputs.DomainReferConfigGetArgs>? ReferConfig { get; set; }

        /// <summary>
        /// Scope of the accelerated domain. Valid values are `domestic`, `overseas`, `global`. Default value is `domestic`. This parameter's setting is valid Only for the international users and domestic L3 and above users .
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// Source port of the accelerated domain. Valid values are `80` and `443`. Default value is `80`. You must use `80` when the `source_type` is `oss`.
        /// </summary>
        [Input("sourcePort")]
        public Input<int>? SourcePort { get; set; }

        /// <summary>
        /// Source type of the accelerated domain. Valid values are `ipaddr`, `domain`, `oss`. You must set this parameter when `cdn_type` value is not `liveStream`.
        /// </summary>
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        [Input("sources")]
        private InputList<string>? _sources;

        /// <summary>
        /// Sources of the accelerated domain. It's a list of domain names or IP address and consists of at most 20 items. You must set this parameter when `cdn_type` value is not `liveStream`.
        /// </summary>
        [Obsolete(@"Use `alicloud_cdn_domain_new` configuration `sources` argument instead.")]
        public InputList<string> Sources
        {
            get => _sources ?? (_sources = new InputList<string>());
            set => _sources = value;
        }

        /// <summary>
        /// Video Seek config of the accelerated domain. Valid values are `on` and `off`. Default value is `off`.
        /// </summary>
        [Input("videoSeekEnable")]
        public Input<string>? VideoSeekEnable { get; set; }

        public DomainState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class DomainAuthConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Auth type of the auth config. Valid values are  `no_auth`, `type_a`, `type_b` and `type_c`. Default value is `no_auth`.
        /// </summary>
        [Input("authType")]
        public Input<string>? AuthType { get; set; }

        /// <summary>
        /// Master authentication key of the auth config. This parameter can have a string of 6 to 32 characters and must contain only alphanumeric characters.
        /// </summary>
        [Input("masterKey")]
        public Input<string>? MasterKey { get; set; }

        /// <summary>
        /// Slave authentication key of the auth config. This parameter can have a string of 6 to 32 characters and must contain only alphanumeric characters.
        /// </summary>
        [Input("slaveKey")]
        public Input<string>? SlaveKey { get; set; }

        /// <summary>
        /// Authentication cache time of the auth config. Default value is `1800`. It's value is valid only when the `auth_type` is `type_b` or `type_c`.
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        public DomainAuthConfigArgs()
        {
        }
    }

    public sealed class DomainAuthConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Auth type of the auth config. Valid values are  `no_auth`, `type_a`, `type_b` and `type_c`. Default value is `no_auth`.
        /// </summary>
        [Input("authType")]
        public Input<string>? AuthType { get; set; }

        /// <summary>
        /// Master authentication key of the auth config. This parameter can have a string of 6 to 32 characters and must contain only alphanumeric characters.
        /// </summary>
        [Input("masterKey")]
        public Input<string>? MasterKey { get; set; }

        /// <summary>
        /// Slave authentication key of the auth config. This parameter can have a string of 6 to 32 characters and must contain only alphanumeric characters.
        /// </summary>
        [Input("slaveKey")]
        public Input<string>? SlaveKey { get; set; }

        /// <summary>
        /// Authentication cache time of the auth config. Default value is `1800`. It's value is valid only when the `auth_type` is `type_b` or `type_c`.
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        public DomainAuthConfigGetArgs()
        {
        }
    }

    public sealed class DomainCacheConfigsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cache content of the cache config. It's value is a path string when the `cache_type` is `path`. When the `cache_type` is `suffix`, it's value is a string which contains multiple file suffixes separated by commas.
        /// </summary>
        [Input("cacheContent", required: true)]
        public Input<string> CacheContent { get; set; } = null!;

        [Input("cacheId")]
        public Input<string>? CacheId { get; set; }

        /// <summary>
        /// Cache type of the cache config. Valid values are `suffix` and `path`.
        /// </summary>
        [Input("cacheType", required: true)]
        public Input<string> CacheType { get; set; } = null!;

        /// <summary>
        /// Cache time of the cache config.
        /// </summary>
        [Input("ttl", required: true)]
        public Input<int> Ttl { get; set; } = null!;

        /// <summary>
        /// Weight of the cache config. This parameter's value is between 1 and 99. Default value is `1`. The higher the value, the higher the priority.
        /// </summary>
        [Input("weight")]
        public Input<int>? Weight { get; set; }

        public DomainCacheConfigsArgs()
        {
        }
    }

    public sealed class DomainCacheConfigsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cache content of the cache config. It's value is a path string when the `cache_type` is `path`. When the `cache_type` is `suffix`, it's value is a string which contains multiple file suffixes separated by commas.
        /// </summary>
        [Input("cacheContent", required: true)]
        public Input<string> CacheContent { get; set; } = null!;

        [Input("cacheId")]
        public Input<string>? CacheId { get; set; }

        /// <summary>
        /// Cache type of the cache config. Valid values are `suffix` and `path`.
        /// </summary>
        [Input("cacheType", required: true)]
        public Input<string> CacheType { get; set; } = null!;

        /// <summary>
        /// Cache time of the cache config.
        /// </summary>
        [Input("ttl", required: true)]
        public Input<int> Ttl { get; set; } = null!;

        /// <summary>
        /// Weight of the cache config. This parameter's value is between 1 and 99. Default value is `1`. The higher the value, the higher the priority.
        /// </summary>
        [Input("weight")]
        public Input<int>? Weight { get; set; }

        public DomainCacheConfigsGetArgs()
        {
        }
    }

    public sealed class DomainCertificateConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The SSL private key. This is required if `server_certificate_status` is `on`
        /// </summary>
        [Input("privateKey")]
        public Input<string>? PrivateKey { get; set; }

        /// <summary>
        /// The SSL server certificate string. This is required if `server_certificate_status` is `on`
        /// </summary>
        [Input("serverCertificate")]
        public Input<string>? ServerCertificate { get; set; }

        /// <summary>
        /// This parameter indicates whether or not enable https. Valid values are `on` and `off`. Default value is `on`.
        /// </summary>
        [Input("serverCertificateStatus")]
        public Input<string>? ServerCertificateStatus { get; set; }

        public DomainCertificateConfigArgs()
        {
        }
    }

    public sealed class DomainCertificateConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The SSL private key. This is required if `server_certificate_status` is `on`
        /// </summary>
        [Input("privateKey")]
        public Input<string>? PrivateKey { get; set; }

        /// <summary>
        /// The SSL server certificate string. This is required if `server_certificate_status` is `on`
        /// </summary>
        [Input("serverCertificate")]
        public Input<string>? ServerCertificate { get; set; }

        /// <summary>
        /// This parameter indicates whether or not enable https. Valid values are `on` and `off`. Default value is `on`.
        /// </summary>
        [Input("serverCertificateStatus")]
        public Input<string>? ServerCertificateStatus { get; set; }

        public DomainCertificateConfigGetArgs()
        {
        }
    }

    public sealed class DomainHttpHeaderConfigsArgs : Pulumi.ResourceArgs
    {
        [Input("headerId")]
        public Input<string>? HeaderId { get; set; }

        /// <summary>
        /// Header key of the http header. Valid values are `Content-Type`, `Cache-Control`, `Content-Disposition`, `Content-Language`，`Expires`, `Access-Control-Allow-Origin`, `Access-Control-Allow-Methods` and `Access-Control-Max-Age`.
        /// </summary>
        [Input("headerKey", required: true)]
        public Input<string> HeaderKey { get; set; } = null!;

        /// <summary>
        /// Header value of the http header.
        /// </summary>
        [Input("headerValue", required: true)]
        public Input<string> HeaderValue { get; set; } = null!;

        public DomainHttpHeaderConfigsArgs()
        {
        }
    }

    public sealed class DomainHttpHeaderConfigsGetArgs : Pulumi.ResourceArgs
    {
        [Input("headerId")]
        public Input<string>? HeaderId { get; set; }

        /// <summary>
        /// Header key of the http header. Valid values are `Content-Type`, `Cache-Control`, `Content-Disposition`, `Content-Language`，`Expires`, `Access-Control-Allow-Origin`, `Access-Control-Allow-Methods` and `Access-Control-Max-Age`.
        /// </summary>
        [Input("headerKey", required: true)]
        public Input<string> HeaderKey { get; set; } = null!;

        /// <summary>
        /// Header value of the http header.
        /// </summary>
        [Input("headerValue", required: true)]
        public Input<string> HeaderValue { get; set; } = null!;

        public DomainHttpHeaderConfigsGetArgs()
        {
        }
    }

    public sealed class DomainPage404ConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom page url of the error page. It must be the full path under the accelerated domain name. It's value must be `http://promotion.alicdn.com/help/oss/error.html` when `page_type` value is `charity` and It can not be set when `page_type` value is `default`.
        /// </summary>
        [Input("customPageUrl")]
        public Input<string>? CustomPageUrl { get; set; }

        [Input("errorCode")]
        public Input<string>? ErrorCode { get; set; }

        /// <summary>
        /// Page type of the error page. Valid values are `default`, `charity`, `other`. Default value is `default`.
        /// </summary>
        [Input("pageType")]
        public Input<string>? PageType { get; set; }

        public DomainPage404ConfigArgs()
        {
        }
    }

    public sealed class DomainPage404ConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom page url of the error page. It must be the full path under the accelerated domain name. It's value must be `http://promotion.alicdn.com/help/oss/error.html` when `page_type` value is `charity` and It can not be set when `page_type` value is `default`.
        /// </summary>
        [Input("customPageUrl")]
        public Input<string>? CustomPageUrl { get; set; }

        [Input("errorCode")]
        public Input<string>? ErrorCode { get; set; }

        /// <summary>
        /// Page type of the error page. Valid values are `default`, `charity`, `other`. Default value is `default`.
        /// </summary>
        [Input("pageType")]
        public Input<string>? PageType { get; set; }

        public DomainPage404ConfigGetArgs()
        {
        }
    }

    public sealed class DomainParameterFilterConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// This parameter indicates whether or not the `parameter_filter_config` is enable. Valid values are `on` and `off`. Default value is `off`.  
        /// </summary>
        [Input("enable")]
        public Input<string>? Enable { get; set; }

        [Input("hashKeyArgs")]
        private InputList<string>? _hashKeyArgs;

        /// <summary>
        /// Reserved parameters of `parameter_filter_config`. It's a list of string and consists of at most 10 items.
        /// </summary>
        public InputList<string> HashKeyArgs
        {
            get => _hashKeyArgs ?? (_hashKeyArgs = new InputList<string>());
            set => _hashKeyArgs = value;
        }

        public DomainParameterFilterConfigArgs()
        {
        }
    }

    public sealed class DomainParameterFilterConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// This parameter indicates whether or not the `parameter_filter_config` is enable. Valid values are `on` and `off`. Default value is `off`.  
        /// </summary>
        [Input("enable")]
        public Input<string>? Enable { get; set; }

        [Input("hashKeyArgs")]
        private InputList<string>? _hashKeyArgs;

        /// <summary>
        /// Reserved parameters of `parameter_filter_config`. It's a list of string and consists of at most 10 items.
        /// </summary>
        public InputList<string> HashKeyArgs
        {
            get => _hashKeyArgs ?? (_hashKeyArgs = new InputList<string>());
            set => _hashKeyArgs = value;
        }

        public DomainParameterFilterConfigGetArgs()
        {
        }
    }

    public sealed class DomainReferConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// This parameter indicates whether or not to allow empty refer access. Valid values are `on` and `off`. Default value is `on`.
        /// </summary>
        [Input("allowEmpty")]
        public Input<string>? AllowEmpty { get; set; }

        [Input("referLists", required: true)]
        private InputList<string>? _referLists;

        /// <summary>
        /// A list of domain names of the refer config.
        /// </summary>
        public InputList<string> ReferLists
        {
            get => _referLists ?? (_referLists = new InputList<string>());
            set => _referLists = value;
        }

        /// <summary>
        /// Refer type of the refer config. Valid values are `block` and `allow`. Default value is `block`.
        /// </summary>
        [Input("referType")]
        public Input<string>? ReferType { get; set; }

        public DomainReferConfigArgs()
        {
        }
    }

    public sealed class DomainReferConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// This parameter indicates whether or not to allow empty refer access. Valid values are `on` and `off`. Default value is `on`.
        /// </summary>
        [Input("allowEmpty")]
        public Input<string>? AllowEmpty { get; set; }

        [Input("referLists", required: true)]
        private InputList<string>? _referLists;

        /// <summary>
        /// A list of domain names of the refer config.
        /// </summary>
        public InputList<string> ReferLists
        {
            get => _referLists ?? (_referLists = new InputList<string>());
            set => _referLists = value;
        }

        /// <summary>
        /// Refer type of the refer config. Valid values are `block` and `allow`. Default value is `block`.
        /// </summary>
        [Input("referType")]
        public Input<string>? ReferType { get; set; }

        public DomainReferConfigGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class DomainAuthConfig
    {
        /// <summary>
        /// Auth type of the auth config. Valid values are  `no_auth`, `type_a`, `type_b` and `type_c`. Default value is `no_auth`.
        /// </summary>
        public readonly string? AuthType;
        /// <summary>
        /// Master authentication key of the auth config. This parameter can have a string of 6 to 32 characters and must contain only alphanumeric characters.
        /// </summary>
        public readonly string MasterKey;
        /// <summary>
        /// Slave authentication key of the auth config. This parameter can have a string of 6 to 32 characters and must contain only alphanumeric characters.
        /// </summary>
        public readonly string SlaveKey;
        /// <summary>
        /// Authentication cache time of the auth config. Default value is `1800`. It's value is valid only when the `auth_type` is `type_b` or `type_c`.
        /// </summary>
        public readonly int? Timeout;

        [OutputConstructor]
        private DomainAuthConfig(
            string? authType,
            string masterKey,
            string slaveKey,
            int? timeout)
        {
            AuthType = authType;
            MasterKey = masterKey;
            SlaveKey = slaveKey;
            Timeout = timeout;
        }
    }

    [OutputType]
    public sealed class DomainCacheConfigs
    {
        /// <summary>
        /// Cache content of the cache config. It's value is a path string when the `cache_type` is `path`. When the `cache_type` is `suffix`, it's value is a string which contains multiple file suffixes separated by commas.
        /// </summary>
        public readonly string CacheContent;
        public readonly string CacheId;
        /// <summary>
        /// Cache type of the cache config. Valid values are `suffix` and `path`.
        /// </summary>
        public readonly string CacheType;
        /// <summary>
        /// Cache time of the cache config.
        /// </summary>
        public readonly int Ttl;
        /// <summary>
        /// Weight of the cache config. This parameter's value is between 1 and 99. Default value is `1`. The higher the value, the higher the priority.
        /// </summary>
        public readonly int? Weight;

        [OutputConstructor]
        private DomainCacheConfigs(
            string cacheContent,
            string cacheId,
            string cacheType,
            int ttl,
            int? weight)
        {
            CacheContent = cacheContent;
            CacheId = cacheId;
            CacheType = cacheType;
            Ttl = ttl;
            Weight = weight;
        }
    }

    [OutputType]
    public sealed class DomainCertificateConfig
    {
        /// <summary>
        /// The SSL private key. This is required if `server_certificate_status` is `on`
        /// </summary>
        public readonly string? PrivateKey;
        /// <summary>
        /// The SSL server certificate string. This is required if `server_certificate_status` is `on`
        /// </summary>
        public readonly string? ServerCertificate;
        /// <summary>
        /// This parameter indicates whether or not enable https. Valid values are `on` and `off`. Default value is `on`.
        /// </summary>
        public readonly string? ServerCertificateStatus;

        [OutputConstructor]
        private DomainCertificateConfig(
            string? privateKey,
            string? serverCertificate,
            string? serverCertificateStatus)
        {
            PrivateKey = privateKey;
            ServerCertificate = serverCertificate;
            ServerCertificateStatus = serverCertificateStatus;
        }
    }

    [OutputType]
    public sealed class DomainHttpHeaderConfigs
    {
        public readonly string HeaderId;
        /// <summary>
        /// Header key of the http header. Valid values are `Content-Type`, `Cache-Control`, `Content-Disposition`, `Content-Language`，`Expires`, `Access-Control-Allow-Origin`, `Access-Control-Allow-Methods` and `Access-Control-Max-Age`.
        /// </summary>
        public readonly string HeaderKey;
        /// <summary>
        /// Header value of the http header.
        /// </summary>
        public readonly string HeaderValue;

        [OutputConstructor]
        private DomainHttpHeaderConfigs(
            string headerId,
            string headerKey,
            string headerValue)
        {
            HeaderId = headerId;
            HeaderKey = headerKey;
            HeaderValue = headerValue;
        }
    }

    [OutputType]
    public sealed class DomainPage404Config
    {
        /// <summary>
        /// Custom page url of the error page. It must be the full path under the accelerated domain name. It's value must be `http://promotion.alicdn.com/help/oss/error.html` when `page_type` value is `charity` and It can not be set when `page_type` value is `default`.
        /// </summary>
        public readonly string? CustomPageUrl;
        public readonly string ErrorCode;
        /// <summary>
        /// Page type of the error page. Valid values are `default`, `charity`, `other`. Default value is `default`.
        /// </summary>
        public readonly string? PageType;

        [OutputConstructor]
        private DomainPage404Config(
            string? customPageUrl,
            string errorCode,
            string? pageType)
        {
            CustomPageUrl = customPageUrl;
            ErrorCode = errorCode;
            PageType = pageType;
        }
    }

    [OutputType]
    public sealed class DomainParameterFilterConfig
    {
        /// <summary>
        /// This parameter indicates whether or not the `parameter_filter_config` is enable. Valid values are `on` and `off`. Default value is `off`.  
        /// </summary>
        public readonly string? Enable;
        /// <summary>
        /// Reserved parameters of `parameter_filter_config`. It's a list of string and consists of at most 10 items.
        /// </summary>
        public readonly ImmutableArray<string> HashKeyArgs;

        [OutputConstructor]
        private DomainParameterFilterConfig(
            string? enable,
            ImmutableArray<string> hashKeyArgs)
        {
            Enable = enable;
            HashKeyArgs = hashKeyArgs;
        }
    }

    [OutputType]
    public sealed class DomainReferConfig
    {
        /// <summary>
        /// This parameter indicates whether or not to allow empty refer access. Valid values are `on` and `off`. Default value is `on`.
        /// </summary>
        public readonly string? AllowEmpty;
        /// <summary>
        /// A list of domain names of the refer config.
        /// </summary>
        public readonly ImmutableArray<string> ReferLists;
        /// <summary>
        /// Refer type of the refer config. Valid values are `block` and `allow`. Default value is `block`.
        /// </summary>
        public readonly string? ReferType;

        [OutputConstructor]
        private DomainReferConfig(
            string? allowEmpty,
            ImmutableArray<string> referLists,
            string? referType)
        {
            AllowEmpty = allowEmpty;
            ReferLists = referLists;
            ReferType = referType;
        }
    }
    }
}
