// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpc
{
    public static partial class Invokes
    {
        /// <summary>
        /// The SSL-VPN client certificates data source lists lots of SSL-VPN client certificates resource information owned by an Alicloud account.
        /// 
        /// 
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/ssl_vpn_client_certs.html.markdown.
        /// </summary>
        [Obsolete("Use GetSslVpnClientCerts.InvokeAsync() instead")]
        public static Task<GetSslVpnClientCertsResult> GetSslVpnClientCerts(GetSslVpnClientCertsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSslVpnClientCertsResult>("alicloud:vpc/getSslVpnClientCerts:getSslVpnClientCerts", args ?? InvokeArgs.Empty, options.WithVersion());
    }
    public static class GetSslVpnClientCerts
    {
        /// <summary>
        /// The SSL-VPN client certificates data source lists lots of SSL-VPN client certificates resource information owned by an Alicloud account.
        /// 
        /// 
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/ssl_vpn_client_certs.html.markdown.
        /// </summary>
        public static Task<GetSslVpnClientCertsResult> InvokeAsync(GetSslVpnClientCertsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSslVpnClientCertsResult>("alicloud:vpc/getSslVpnClientCerts:getSslVpnClientCerts", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetSslVpnClientCertsArgs : Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// IDs of the SSL-VPN client certificates.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string of SSL-VPN client certificate name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// Save the result to the file.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Use the SSL-VPN server ID as the search key.
        /// </summary>
        [Input("sslVpnServerId")]
        public string? SslVpnServerId { get; set; }

        public GetSslVpnClientCertsArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetSslVpnClientCertsResult
    {
        public readonly ImmutableArray<Outputs.GetSslVpnClientCertsCertsResult> Certs;
        /// <summary>
        /// A list of SSL-VPN client cert IDs.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of SSL-VPN client cert names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        /// <summary>
        /// ID of the SSL-VPN Server.
        /// </summary>
        public readonly string? SslVpnServerId;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetSslVpnClientCertsResult(
            ImmutableArray<Outputs.GetSslVpnClientCertsCertsResult> certs,
            ImmutableArray<string> ids,
            string? nameRegex,
            ImmutableArray<string> names,
            string? outputFile,
            string? sslVpnServerId,
            string id)
        {
            Certs = certs;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            SslVpnServerId = sslVpnServerId;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetSslVpnClientCertsCertsResult
    {
        /// <summary>
        /// The time of creation.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The expiration time of the client certificate.
        /// </summary>
        public readonly int EndTime;
        /// <summary>
        /// ID of the SSL-VPN client certificate.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the SSL-VPN client certificate.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Use the SSL-VPN server ID as the search key.
        /// </summary>
        public readonly string SslVpnServerId;
        /// <summary>
        /// The status of the client certificate. valid value:expiring-soon, normal, expired.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetSslVpnClientCertsCertsResult(
            string createTime,
            int endTime,
            string id,
            string name,
            string sslVpnServerId,
            string status)
        {
            CreateTime = createTime;
            EndTime = endTime;
            Id = id;
            Name = name;
            SslVpnServerId = sslVpnServerId;
            Status = status;
        }
    }
    }
}
