// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Vpc
{
    public static class GetForwardEntries
    {
        /// <summary>
        /// This data source provides a list of Forward Entries owned by an Alibaba Cloud account.
        /// 
        /// &gt; **NOTE:** Available in 1.37.0+.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AliCloud = Pulumi.AliCloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var config = new Config();
        ///         var name = config.Get("name") ?? "forward-entry-config-example-name";
        ///         var defaultZones = Output.Create(AliCloud.GetZones.InvokeAsync(new AliCloud.GetZonesArgs
        ///         {
        ///             AvailableResourceCreation = "VSwitch",
        ///         }));
        ///         var defaultNetwork = new AliCloud.Vpc.Network("defaultNetwork", new AliCloud.Vpc.NetworkArgs
        ///         {
        ///             CidrBlock = "172.16.0.0/12",
        ///         });
        ///         var defaultSwitch = new AliCloud.Vpc.Switch("defaultSwitch", new AliCloud.Vpc.SwitchArgs
        ///         {
        ///             AvailabilityZone = defaultZones.Apply(defaultZones =&gt; defaultZones.Zones[0].Id),
        ///             CidrBlock = "172.16.0.0/21",
        ///             VpcId = defaultNetwork.Id,
        ///         });
        ///         var defaultNatGateway = new AliCloud.Vpc.NatGateway("defaultNatGateway", new AliCloud.Vpc.NatGatewayArgs
        ///         {
        ///             Specification = "Small",
        ///             VpcId = defaultNetwork.Id,
        ///         });
        ///         var defaultEip = new AliCloud.Ecs.Eip("defaultEip", new AliCloud.Ecs.EipArgs
        ///         {
        ///         });
        ///         var defaultEipAssociation = new AliCloud.Ecs.EipAssociation("defaultEipAssociation", new AliCloud.Ecs.EipAssociationArgs
        ///         {
        ///             AllocationId = defaultEip.Id,
        ///             InstanceId = defaultNatGateway.Id,
        ///         });
        ///         var defaultForwardEntry = new AliCloud.Vpc.ForwardEntry("defaultForwardEntry", new AliCloud.Vpc.ForwardEntryArgs
        ///         {
        ///             ExternalIp = defaultEip.IpAddress,
        ///             ExternalPort = "80",
        ///             ForwardTableId = defaultNatGateway.ForwardTableIds,
        ///             InternalIp = "172.16.0.3",
        ///             InternalPort = "8080",
        ///             IpProtocol = "tcp",
        ///         });
        ///         var defaultForwardEntries = defaultForwardEntry.ForwardTableId.Apply(forwardTableId =&gt; AliCloud.Vpc.GetForwardEntries.InvokeAsync(new AliCloud.Vpc.GetForwardEntriesArgs
        ///         {
        ///             ForwardTableId = forwardTableId,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// 
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetForwardEntriesResult> InvokeAsync(GetForwardEntriesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetForwardEntriesResult>("alicloud:vpc/getForwardEntries:getForwardEntries", args ?? new GetForwardEntriesArgs(), options.WithVersion());
    }


    public sealed class GetForwardEntriesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The public IP address.
        /// </summary>
        [Input("externalIp")]
        public string? ExternalIp { get; set; }

        /// <summary>
        /// The ID of the Forward table.
        /// </summary>
        [Input("forwardTableId", required: true)]
        public string ForwardTableId { get; set; } = null!;

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of Forward Entries IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The private IP address.
        /// </summary>
        [Input("internalIp")]
        public string? InternalIp { get; set; }

        /// <summary>
        /// A regex string to filter results by forward entry name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("names")]
        private List<string>? _names;

        /// <summary>
        /// A list of Forward Entries names.
        /// </summary>
        public List<string> Names
        {
            get => _names ?? (_names = new List<string>());
            set => _names = value;
        }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetForwardEntriesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetForwardEntriesResult
    {
        /// <summary>
        /// A list of Forward Entries. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetForwardEntriesEntryResult> Entries;
        /// <summary>
        /// The public IP address.
        /// </summary>
        public readonly string? ExternalIp;
        public readonly string ForwardTableId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of Forward Entries IDs.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// The private IP address.
        /// </summary>
        public readonly string? InternalIp;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of Forward Entries names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;

        [OutputConstructor]
        private GetForwardEntriesResult(
            ImmutableArray<Outputs.GetForwardEntriesEntryResult> entries,

            string? externalIp,

            string forwardTableId,

            string id,

            ImmutableArray<string> ids,

            string? internalIp,

            string? nameRegex,

            ImmutableArray<string> names,

            string? outputFile)
        {
            Entries = entries;
            ExternalIp = externalIp;
            ForwardTableId = forwardTableId;
            Id = id;
            Ids = ids;
            InternalIp = internalIp;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
        }
    }
}
