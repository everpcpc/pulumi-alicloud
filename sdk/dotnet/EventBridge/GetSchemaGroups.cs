// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.EventBridge
{
    public static class GetSchemaGroups
    {
        public static Task<GetSchemaGroupsResult> InvokeAsync(GetSchemaGroupsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSchemaGroupsResult>("alicloud:eventbridge/getSchemaGroups:getSchemaGroups", args ?? new GetSchemaGroupsArgs(), options.WithVersion());
    }


    public sealed class GetSchemaGroupsArgs : Pulumi.InvokeArgs
    {
        [Input("descriptionRegex")]
        public string? DescriptionRegex { get; set; }

        [Input("ids")]
        private List<string>? _ids;
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("prefix")]
        public string? Prefix { get; set; }

        public GetSchemaGroupsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSchemaGroupsResult
    {
        public readonly string? DescriptionRegex;
        public readonly ImmutableArray<string> Descriptions;
        public readonly ImmutableArray<Outputs.GetSchemaGroupsGroupResult> Groups;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? OutputFile;
        public readonly string? Prefix;

        [OutputConstructor]
        private GetSchemaGroupsResult(
            string? descriptionRegex,

            ImmutableArray<string> descriptions,

            ImmutableArray<Outputs.GetSchemaGroupsGroupResult> groups,

            string id,

            ImmutableArray<string> ids,

            string? outputFile,

            string? prefix)
        {
            DescriptionRegex = descriptionRegex;
            Descriptions = descriptions;
            Groups = groups;
            Id = id;
            Ids = ids;
            OutputFile = outputFile;
            Prefix = prefix;
        }
    }
}
