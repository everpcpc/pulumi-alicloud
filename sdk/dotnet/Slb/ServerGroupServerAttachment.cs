// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Slb
{
    /// <summary>
    /// &gt; **NOTE:** Available in v1.163.0+.
    /// 
    /// For information about server group server attachment and how to use it, see [Configure a server group server attachment](https://www.alibabacloud.com/help/en/doc-detail/35218.html).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var config = new Config();
    ///         var name = config.Get("name") ?? "slbservergroupvpc";
    ///         var num = config.GetNumber("num") ?? 5;
    ///         var defaultZones = Output.Create(AliCloud.GetZones.InvokeAsync(new AliCloud.GetZonesArgs
    ///         {
    ///             AvailableDiskCategory = "cloud_efficiency",
    ///             AvailableResourceCreation = "VSwitch",
    ///         }));
    ///         var defaultInstanceTypes = defaultZones.Apply(defaultZones =&gt; Output.Create(AliCloud.Ecs.GetInstanceTypes.InvokeAsync(new AliCloud.Ecs.GetInstanceTypesArgs
    ///         {
    ///             AvailabilityZone = defaultZones.Zones?[0]?.Id,
    ///             CpuCoreCount = 1,
    ///             MemorySize = 2,
    ///         })));
    ///         var defaultImages = Output.Create(AliCloud.Ecs.GetImages.InvokeAsync(new AliCloud.Ecs.GetImagesArgs
    ///         {
    ///             NameRegex = "^ubuntu_[0-9]+_[0-9]+_x64*",
    ///             MostRecent = true,
    ///             Owners = "system",
    ///         }));
    ///         var defaultNetworks = Output.Create(AliCloud.Vpc.GetNetworks.InvokeAsync(new AliCloud.Vpc.GetNetworksArgs
    ///         {
    ///             NameRegex = "default-NODELETING",
    ///         }));
    ///         var defaultSwitches = Output.Tuple(defaultNetworks, defaultZones).Apply(values =&gt;
    ///         {
    ///             var defaultNetworks = values.Item1;
    ///             var defaultZones = values.Item2;
    ///             return Output.Create(AliCloud.Vpc.GetSwitches.InvokeAsync(new AliCloud.Vpc.GetSwitchesArgs
    ///             {
    ///                 VpcId = defaultNetworks.Ids?[0],
    ///                 ZoneId = defaultZones.Zones?[0]?.Id,
    ///             }));
    ///         });
    ///         var defaultSecurityGroup = new AliCloud.Ecs.SecurityGroup("defaultSecurityGroup", new AliCloud.Ecs.SecurityGroupArgs
    ///         {
    ///             VpcId = defaultNetworks.Apply(defaultNetworks =&gt; defaultNetworks.Ids?[0]),
    ///         });
    ///         var defaultInstance = new List&lt;AliCloud.Ecs.Instance&gt;();
    ///         for (var rangeIndex = 0; rangeIndex &lt; num; rangeIndex++)
    ///         {
    ///             var range = new { Value = rangeIndex };
    ///             defaultInstance.Add(new AliCloud.Ecs.Instance($"defaultInstance-{range.Value}", new AliCloud.Ecs.InstanceArgs
    ///             {
    ///                 ImageId = defaultImages.Apply(defaultImages =&gt; defaultImages.Images?[0]?.Id),
    ///                 InstanceType = defaultInstanceTypes.Apply(defaultInstanceTypes =&gt; defaultInstanceTypes.InstanceTypes?[0]?.Id),
    ///                 InstanceName = name,
    ///                 SecurityGroups = 
    ///                 {
    ///                     defaultSecurityGroup,
    ///                 }.Select(__item =&gt; __item.Id).ToList(),
    ///                 InternetChargeType = "PayByTraffic",
    ///                 InternetMaxBandwidthOut = 10,
    ///                 AvailabilityZone = defaultZones.Apply(defaultZones =&gt; defaultZones.Zones?[0]?.Id),
    ///                 InstanceChargeType = "PostPaid",
    ///                 SystemDiskCategory = "cloud_efficiency",
    ///                 VswitchId = defaultSwitches.Apply(defaultSwitches =&gt; defaultSwitches.Ids?[0]),
    ///             }));
    ///         }
    ///         var defaultApplicationLoadBalancer = new AliCloud.Slb.ApplicationLoadBalancer("defaultApplicationLoadBalancer", new AliCloud.Slb.ApplicationLoadBalancerArgs
    ///         {
    ///             LoadBalancerName = name,
    ///             VswitchId = defaultSwitches.Apply(defaultSwitches =&gt; defaultSwitches.Vswitches?[0]?.Id),
    ///             LoadBalancerSpec = "slb.s2.small",
    ///             AddressType = "intranet",
    ///         });
    ///         var defaultServerGroup = new AliCloud.Slb.ServerGroup("defaultServerGroup", new AliCloud.Slb.ServerGroupArgs
    ///         {
    ///             LoadBalancerId = defaultApplicationLoadBalancer.Id,
    ///         });
    ///         var defaultServerGroupServerAttachment = new List&lt;AliCloud.Slb.ServerGroupServerAttachment&gt;();
    ///         for (var rangeIndex = 0; rangeIndex &lt; num; rangeIndex++)
    ///         {
    ///             var range = new { Value = rangeIndex };
    ///             defaultServerGroupServerAttachment.Add(new AliCloud.Slb.ServerGroupServerAttachment($"defaultServerGroupServerAttachment-{range.Value}", new AliCloud.Slb.ServerGroupServerAttachmentArgs
    ///             {
    ///                 ServerGroupId = defaultServerGroup.Id,
    ///                 ServerId = defaultInstance[range.Index].Id,
    ///                 Port = 8080,
    ///                 Weight = 0,
    ///             }));
    ///         }
    ///         var defaultListener = new AliCloud.Slb.Listener("defaultListener", new AliCloud.Slb.ListenerArgs
    ///         {
    ///             LoadBalancerId = defaultApplicationLoadBalancer.Id,
    ///             BackendPort = 80,
    ///             FrontendPort = 80,
    ///             Protocol = "tcp",
    ///             Bandwidth = 10,
    ///             Scheduler = "rr",
    ///             ServerGroupId = defaultServerGroup.Id,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Load balancer backend server group server attachment can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import alicloud:slb/serverGroupServerAttachment:ServerGroupServerAttachment example &lt;server_group_id&gt;:&lt;server_id&gt;:&lt;port&gt;
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:slb/serverGroupServerAttachment:ServerGroupServerAttachment")]
    public partial class ServerGroupServerAttachment : Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the backend server.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The port that is used by the backend server. Valid values: `1` to `65535`.
        /// </summary>
        [Output("port")]
        public Output<int> Port { get; private set; } = null!;

        /// <summary>
        /// The ID of the server group.
        /// </summary>
        [Output("serverGroupId")]
        public Output<string> ServerGroupId { get; private set; } = null!;

        /// <summary>
        /// The ID of the backend server. You can specify the ID of an Elastic Compute Service (ECS) instance or an elastic network interface (ENI).
        /// </summary>
        [Output("serverId")]
        public Output<string> ServerId { get; private set; } = null!;

        /// <summary>
        /// The type of backend server. Valid values: `ecs`, `eni`.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The weight of the backend server. Valid values: `0` to `100`. Default value: `100`. If the value is set to `0`, no requests are forwarded to the backend server.
        /// </summary>
        [Output("weight")]
        public Output<int> Weight { get; private set; } = null!;


        /// <summary>
        /// Create a ServerGroupServerAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServerGroupServerAttachment(string name, ServerGroupServerAttachmentArgs args, CustomResourceOptions? options = null)
            : base("alicloud:slb/serverGroupServerAttachment:ServerGroupServerAttachment", name, args ?? new ServerGroupServerAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServerGroupServerAttachment(string name, Input<string> id, ServerGroupServerAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:slb/serverGroupServerAttachment:ServerGroupServerAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServerGroupServerAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServerGroupServerAttachment Get(string name, Input<string> id, ServerGroupServerAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new ServerGroupServerAttachment(name, id, state, options);
        }
    }

    public sealed class ServerGroupServerAttachmentArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the backend server.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The port that is used by the backend server. Valid values: `1` to `65535`.
        /// </summary>
        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        /// <summary>
        /// The ID of the server group.
        /// </summary>
        [Input("serverGroupId", required: true)]
        public Input<string> ServerGroupId { get; set; } = null!;

        /// <summary>
        /// The ID of the backend server. You can specify the ID of an Elastic Compute Service (ECS) instance or an elastic network interface (ENI).
        /// </summary>
        [Input("serverId", required: true)]
        public Input<string> ServerId { get; set; } = null!;

        /// <summary>
        /// The type of backend server. Valid values: `ecs`, `eni`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The weight of the backend server. Valid values: `0` to `100`. Default value: `100`. If the value is set to `0`, no requests are forwarded to the backend server.
        /// </summary>
        [Input("weight")]
        public Input<int>? Weight { get; set; }

        public ServerGroupServerAttachmentArgs()
        {
        }
    }

    public sealed class ServerGroupServerAttachmentState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the backend server.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The port that is used by the backend server. Valid values: `1` to `65535`.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// The ID of the server group.
        /// </summary>
        [Input("serverGroupId")]
        public Input<string>? ServerGroupId { get; set; }

        /// <summary>
        /// The ID of the backend server. You can specify the ID of an Elastic Compute Service (ECS) instance or an elastic network interface (ENI).
        /// </summary>
        [Input("serverId")]
        public Input<string>? ServerId { get; set; }

        /// <summary>
        /// The type of backend server. Valid values: `ecs`, `eni`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The weight of the backend server. Valid values: `0` to `100`. Default value: `100`. If the value is set to `0`, no requests are forwarded to the backend server.
        /// </summary>
        [Input("weight")]
        public Input<int>? Weight { get; set; }

        public ServerGroupServerAttachmentState()
        {
        }
    }
}
