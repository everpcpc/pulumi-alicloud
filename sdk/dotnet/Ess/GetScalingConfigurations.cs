// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ess
{
    public static partial class Invokes
    {
        /// <summary>
        /// This data source provides available scaling configuration resources. 
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/ess_scaling_configurations.html.markdown.
        /// </summary>
        public static Task<GetScalingConfigurationsResult> GetScalingConfigurations(GetScalingConfigurationsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetScalingConfigurationsResult>("alicloud:ess/getScalingConfigurations:getScalingConfigurations", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetScalingConfigurationsArgs : Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of scaling configuration IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter resulting scaling configurations by name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Scaling group id the scaling configurations belong to.
        /// </summary>
        [Input("scalingGroupId")]
        public string? ScalingGroupId { get; set; }

        public GetScalingConfigurationsArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetScalingConfigurationsResult
    {
        /// <summary>
        /// A list of scaling rules. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScalingConfigurationsConfigurationsResult> Configurations;
        /// <summary>
        /// A list of scaling configuration ids.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of scaling configuration names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        /// <summary>
        /// ID of the scaling group.
        /// </summary>
        public readonly string? ScalingGroupId;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetScalingConfigurationsResult(
            ImmutableArray<Outputs.GetScalingConfigurationsConfigurationsResult> configurations,
            ImmutableArray<string> ids,
            string? nameRegex,
            ImmutableArray<string> names,
            string? outputFile,
            string? scalingGroupId,
            string id)
        {
            Configurations = configurations;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            ScalingGroupId = scalingGroupId;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetScalingConfigurationsConfigurationsDataDisksResult
    {
        /// <summary>
        /// Category of data disk.
        /// </summary>
        public readonly string? Category;
        /// <summary>
        /// Delete_with_instance attribute of data disk.
        /// </summary>
        public readonly bool? DeleteWithInstance;
        /// <summary>
        /// Device attribute of data disk.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// Size of data disk.
        /// </summary>
        public readonly int? Size;
        /// <summary>
        /// Size of data disk.
        /// </summary>
        public readonly string? SnapshotId;

        [OutputConstructor]
        private GetScalingConfigurationsConfigurationsDataDisksResult(
            string? category,
            bool? deleteWithInstance,
            string? device,
            int? size,
            string? snapshotId)
        {
            Category = category;
            DeleteWithInstance = deleteWithInstance;
            Device = device;
            Size = size;
            SnapshotId = snapshotId;
        }
    }

    [OutputType]
    public sealed class GetScalingConfigurationsConfigurationsResult
    {
        /// <summary>
        /// Creation time of the scaling configuration.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// Data disks of the scaling configuration.
        /// </summary>
        public readonly ImmutableArray<GetScalingConfigurationsConfigurationsDataDisksResult> DataDisks;
        /// <summary>
        /// ID of the scaling rule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Image ID of the scaling configuration.
        /// </summary>
        public readonly string ImageId;
        /// <summary>
        /// Instance type of the scaling configuration.
        /// </summary>
        public readonly string InstanceType;
        /// <summary>
        /// Internet charge type of the scaling configuration.
        /// </summary>
        public readonly string InternetChargeType;
        /// <summary>
        /// Internet max bandwidth in of the scaling configuration.
        /// </summary>
        public readonly int InternetMaxBandwidthIn;
        /// <summary>
        /// Internet max bandwidth of the scaling configuration.
        /// </summary>
        public readonly int InternetMaxBandwidthOut;
        /// <summary>
        /// Lifecycle state of the scaling configuration.
        /// </summary>
        public readonly string LifecycleState;
        /// <summary>
        /// Name of the scaling configuration.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Scaling group id the scaling configurations belong to.
        /// </summary>
        public readonly string ScalingGroupId;
        /// <summary>
        /// Security group ID of the scaling configuration.
        /// </summary>
        public readonly string SecurityGroupId;
        /// <summary>
        /// System disk category of the scaling configuration.
        /// </summary>
        public readonly string SystemDiskCategory;
        /// <summary>
        /// System disk size of the scaling configuration.
        /// </summary>
        public readonly int SystemDiskSize;

        [OutputConstructor]
        private GetScalingConfigurationsConfigurationsResult(
            string creationTime,
            ImmutableArray<GetScalingConfigurationsConfigurationsDataDisksResult> dataDisks,
            string id,
            string imageId,
            string instanceType,
            string internetChargeType,
            int internetMaxBandwidthIn,
            int internetMaxBandwidthOut,
            string lifecycleState,
            string name,
            string scalingGroupId,
            string securityGroupId,
            string systemDiskCategory,
            int systemDiskSize)
        {
            CreationTime = creationTime;
            DataDisks = dataDisks;
            Id = id;
            ImageId = imageId;
            InstanceType = instanceType;
            InternetChargeType = internetChargeType;
            InternetMaxBandwidthIn = internetMaxBandwidthIn;
            InternetMaxBandwidthOut = internetMaxBandwidthOut;
            LifecycleState = lifecycleState;
            Name = name;
            ScalingGroupId = scalingGroupId;
            SecurityGroupId = securityGroupId;
            SystemDiskCategory = systemDiskCategory;
            SystemDiskSize = systemDiskSize;
        }
    }
    }
}
