// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ess
{
    public static partial class Invokes
    {
        /// <summary>
        /// This data source provides available scaling rule resources. 
        /// 
        /// 
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/ess_scaling_rules.html.markdown.
        /// </summary>
        [Obsolete("Use GetScalingRules.InvokeAsync() instead")]
        public static Task<GetScalingRulesResult> GetScalingRules(GetScalingRulesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetScalingRulesResult>("alicloud:ess/getScalingRules:getScalingRules", args ?? InvokeArgs.Empty, options.WithVersion());
    }
    public static class GetScalingRules
    {
        /// <summary>
        /// This data source provides available scaling rule resources. 
        /// 
        /// 
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/ess_scaling_rules.html.markdown.
        /// </summary>
        public static Task<GetScalingRulesResult> InvokeAsync(GetScalingRulesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetScalingRulesResult>("alicloud:ess/getScalingRules:getScalingRules", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetScalingRulesArgs : Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of scaling rule IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter resulting scaling rules by name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Scaling group id the scaling rules belong to.
        /// </summary>
        [Input("scalingGroupId")]
        public string? ScalingGroupId { get; set; }

        /// <summary>
        /// Type of scaling rule.
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public GetScalingRulesArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetScalingRulesResult
    {
        /// <summary>
        /// A list of scaling rule ids.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of scaling rule names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        /// <summary>
        /// A list of scaling rules. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetScalingRulesRulesResult> Rules;
        /// <summary>
        /// ID of the scaling group.
        /// </summary>
        public readonly string? ScalingGroupId;
        /// <summary>
        /// Type of the scaling rule.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetScalingRulesResult(
            ImmutableArray<string> ids,
            string? nameRegex,
            ImmutableArray<string> names,
            string? outputFile,
            ImmutableArray<Outputs.GetScalingRulesRulesResult> rules,
            string? scalingGroupId,
            string? type,
            string id)
        {
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            Rules = rules;
            ScalingGroupId = scalingGroupId;
            Type = type;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetScalingRulesRulesResult
    {
        /// <summary>
        /// Adjustment type of the scaling rule.
        /// </summary>
        public readonly string AdjustmentType;
        /// <summary>
        /// Adjustment value of the scaling rule.
        /// </summary>
        public readonly int AdjustmentValue;
        /// <summary>
        /// Cooldown time of the scaling rule.
        /// </summary>
        public readonly int Cooldown;
        /// <summary>
        /// ID of the scaling rule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Min adjustment magnitude of scaling rule.
        /// </summary>
        public readonly int MinAdjustmentMagnitude;
        /// <summary>
        /// Name of the scaling rule.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Scaling group id the scaling rules belong to.
        /// </summary>
        public readonly string ScalingGroupId;
        /// <summary>
        /// Ari of scaling rule.
        /// </summary>
        public readonly string ScalingRuleAri;
        /// <summary>
        /// Type of scaling rule.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetScalingRulesRulesResult(
            string adjustmentType,
            int adjustmentValue,
            int cooldown,
            string id,
            int minAdjustmentMagnitude,
            string name,
            string scalingGroupId,
            string scalingRuleAri,
            string type)
        {
            AdjustmentType = adjustmentType;
            AdjustmentValue = adjustmentValue;
            Cooldown = cooldown;
            Id = id;
            MinAdjustmentMagnitude = minAdjustmentMagnitude;
            Name = name;
            ScalingGroupId = scalingGroupId;
            ScalingRuleAri = scalingRuleAri;
            Type = type;
        }
    }
    }
}
