// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Drds
{
    public static partial class Invokes
    {
        /// <summary>
        ///  The `alicloud.drds.Instance` data source provides a collection of DRDS instances available in Alibaba Cloud account.
        /// Filters support regular expression for the instance name, searches by tags, and other filters which are listed below.
        /// 
        /// &gt; **NOTE:** Available in 1.35.0+.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/drds_instances.html.markdown.
        /// </summary>
        [Obsolete("Use GetInstances.InvokeAsync() instead")]
        public static Task<GetInstancesResult> GetInstances(GetInstancesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInstancesResult>("alicloud:drds/getInstances:getInstances", args ?? InvokeArgs.Empty, options.WithVersion());
    }
    public static class GetInstances
    {
        /// <summary>
        ///  The `alicloud.drds.Instance` data source provides a collection of DRDS instances available in Alibaba Cloud account.
        /// Filters support regular expression for the instance name, searches by tags, and other filters which are listed below.
        /// 
        /// &gt; **NOTE:** Available in 1.35.0+.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/drds_instances.html.markdown.
        /// </summary>
        public static Task<GetInstancesResult> InvokeAsync(GetInstancesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInstancesResult>("alicloud:drds/getInstances:getInstances", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetInstancesArgs : Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of DRDS instance IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to filter results by instance name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetInstancesArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetInstancesResult
    {
        /// <summary>
        /// A list of DRDS descriptions. 
        /// </summary>
        public readonly ImmutableArray<string> Descriptions;
        /// <summary>
        /// A list of DRDS instance IDs.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// A list of DRDS instances.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesInstancesResult> Instances;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetInstancesResult(
            ImmutableArray<string> descriptions,
            ImmutableArray<string> ids,
            ImmutableArray<Outputs.GetInstancesInstancesResult> instances,
            string? nameRegex,
            string? outputFile,
            string id)
        {
            Descriptions = descriptions;
            Ids = ids;
            Instances = instances;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetInstancesInstancesResult
    {
        /// <summary>
        /// Creation time of the instance.
        /// </summary>
        public readonly int CreateTime;
        /// <summary>
        /// The DRDS instance description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the DRDS instance.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// `Classic` for public classic network or `VPC` for private network.
        /// </summary>
        public readonly string NetworkType;
        /// <summary>
        /// Status of the instance.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The DRDS Instance type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The DRDS Instance version.
        /// </summary>
        public readonly int Version;
        /// <summary>
        /// Zone ID the instance belongs to.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetInstancesInstancesResult(
            int createTime,
            string description,
            string id,
            string networkType,
            string status,
            string type,
            int version,
            string zoneId)
        {
            CreateTime = createTime;
            Description = description;
            Id = id;
            NetworkType = networkType;
            Status = status;
            Type = type;
            Version = version;
            ZoneId = zoneId;
        }
    }
    }
}
