// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud
{
    public static partial class Invokes
    {
        /// <summary>
        /// This data source provides Alibaba Cloud regions.
        /// 
        /// 
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/regions.html.markdown.
        /// </summary>
        [Obsolete("Use GetRegions.InvokeAsync() instead")]
        public static Task<GetRegionsResult> GetRegions(GetRegionsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRegionsResult>("alicloud:index/getRegions:getRegions", args ?? InvokeArgs.Empty, options.WithVersion());
    }
    public static class GetRegions
    {
        /// <summary>
        /// This data source provides Alibaba Cloud regions.
        /// 
        /// 
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/regions.html.markdown.
        /// </summary>
        public static Task<GetRegionsResult> InvokeAsync(GetRegionsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRegionsResult>("alicloud:index/getRegions:getRegions", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetRegionsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Set to true to match only the region configured in the provider.
        /// </summary>
        [Input("current")]
        public bool? Current { get; set; }

        /// <summary>
        /// The name of the region to select, such as `eu-central-1`.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetRegionsArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetRegionsResult
    {
        public readonly bool Current;
        /// <summary>
        /// A list of region IDs.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string Name;
        public readonly string? OutputFile;
        /// <summary>
        /// A list of regions. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRegionsRegionsResult> Regions;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetRegionsResult(
            bool current,
            ImmutableArray<string> ids,
            string name,
            string? outputFile,
            ImmutableArray<Outputs.GetRegionsRegionsResult> regions,
            string id)
        {
            Current = current;
            Ids = ids;
            Name = name;
            OutputFile = outputFile;
            Regions = regions;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetRegionsRegionsResult
    {
        /// <summary>
        /// ID of the region.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the region in the local language.
        /// </summary>
        public readonly string LocalName;
        public readonly string RegionId;

        [OutputConstructor]
        private GetRegionsRegionsResult(
            string id,
            string localName,
            string regionId)
        {
            Id = id;
            LocalName = localName;
            RegionId = regionId;
        }
    }
    }
}
