// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Gpdb
{
    public static partial class Invokes
    {
        /// <summary>
        /// The `alicloud.gpdb.getInstances` data source provides a collection of AnalyticDB for PostgreSQL instances available in Alicloud account.
        /// Filters support regular expression for the instance name or availability_zone.
        /// 
        /// &gt; **NOTE:**  Available in 1.47.0+
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/gpdb_instances.html.markdown.
        /// </summary>
        public static Task<GetInstancesResult> GetInstances(GetInstancesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInstancesResult>("alicloud:gpdb/getInstances:getInstances", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetInstancesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Instance availability zone.
        /// </summary>
        [Input("availabilityZone")]
        public string? AvailabilityZone { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of instance IDs.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to apply to the instance name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("tags")]
        private Dictionary<string, object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        /// <summary>
        /// Used to retrieve instances belong to specified `vswitch` resources.
        /// </summary>
        [Input("vswitchId")]
        public string? VswitchId { get; set; }

        public GetInstancesArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetInstancesResult
    {
        /// <summary>
        /// Instance availability zone.
        /// </summary>
        public readonly string? AvailabilityZone;
        /// <summary>
        /// The ids list of AnalyticDB for PostgreSQL instances.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// A list of AnalyticDB for PostgreSQL instances. Its every element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstancesInstancesResult> Instances;
        public readonly string? NameRegex;
        /// <summary>
        /// The names list of AnalyticDB for PostgreSQL instance.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        public readonly ImmutableDictionary<string, object>? Tags;
        public readonly string? VswitchId;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetInstancesResult(
            string? availabilityZone,
            ImmutableArray<string> ids,
            ImmutableArray<Outputs.GetInstancesInstancesResult> instances,
            string? nameRegex,
            ImmutableArray<string> names,
            string? outputFile,
            ImmutableDictionary<string, object>? tags,
            string? vswitchId,
            string id)
        {
            AvailabilityZone = availabilityZone;
            Ids = ids;
            Instances = instances;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            Tags = tags;
            VswitchId = vswitchId;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetInstancesInstancesResult
    {
        /// <summary>
        /// Instance availability zone.
        /// </summary>
        public readonly string AvailabilityZone;
        /// <summary>
        /// Billing method. Value options are `PostPaid` for  Pay-As-You-Go and `PrePaid` for yearly or monthly subscription.
        /// </summary>
        public readonly string ChargeType;
        /// <summary>
        /// The time when you create an instance. The format is YYYY-MM-DDThh:mm:ssZ, such as 2011-05-30T12:11:4Z.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// The description of an instance.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Database engine type. Supported option is `gpdb`.
        /// </summary>
        public readonly string Engine;
        /// <summary>
        /// Database engine version.
        /// </summary>
        public readonly string EngineVersion;
        /// <summary>
        /// The instance id.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The group type.
        /// </summary>
        public readonly string InstanceClass;
        /// <summary>
        /// The number of groups.
        /// </summary>
        public readonly string InstanceGroupCount;
        public readonly string InstanceNetworkType;
        /// <summary>
        /// Region ID the instance belongs to.
        /// </summary>
        public readonly string RegionId;
        /// <summary>
        /// Status of the instance.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetInstancesInstancesResult(
            string availabilityZone,
            string chargeType,
            string creationTime,
            string description,
            string engine,
            string engineVersion,
            string id,
            string instanceClass,
            string instanceGroupCount,
            string instanceNetworkType,
            string regionId,
            string status)
        {
            AvailabilityZone = availabilityZone;
            ChargeType = chargeType;
            CreationTime = creationTime;
            Description = description;
            Engine = engine;
            EngineVersion = engineVersion;
            Id = id;
            InstanceClass = instanceClass;
            InstanceGroupCount = instanceGroupCount;
            InstanceNetworkType = instanceNetworkType;
            RegionId = regionId;
            Status = status;
        }
    }
    }
}
