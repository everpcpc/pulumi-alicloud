// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Adb
{
    public static partial class Invokes
    {
        /// <summary>
        /// The `alicloud.adb.getClusters` data source provides a collection of ADB clusters available in Alibaba Cloud account.
        /// Filters support regular expression for the cluster description, searches by tags, and other filters which are listed below.
        /// 
        /// &gt; **NOTE:** Available in v1.71.0+.
        /// 
        /// 
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/adb_clusters.html.markdown.
        /// </summary>
        [Obsolete("Use GetClusters.InvokeAsync() instead")]
        public static Task<GetClustersResult> GetClusters(GetClustersArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClustersResult>("alicloud:adb/getClusters:getClusters", args ?? InvokeArgs.Empty, options.WithVersion());
    }
    public static class GetClusters
    {
        /// <summary>
        /// The `alicloud.adb.getClusters` data source provides a collection of ADB clusters available in Alibaba Cloud account.
        /// Filters support regular expression for the cluster description, searches by tags, and other filters which are listed below.
        /// 
        /// &gt; **NOTE:** Available in v1.71.0+.
        /// 
        /// 
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/adb_clusters.html.markdown.
        /// </summary>
        public static Task<GetClustersResult> InvokeAsync(GetClustersArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClustersResult>("alicloud:adb/getClusters:getClusters", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetClustersArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// A regex string to filter results by cluster description.
        /// </summary>
        [Input("descriptionRegex")]
        public string? DescriptionRegex { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of ADB cluster IDs. 
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("tags")]
        private Dictionary<string, object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// - Key: It can be up to 64 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It cannot be a null string.
        /// - Value: It can be up to 128 characters in length. It cannot begin with "aliyun", "acs:", "http://", or "https://". It can be a null string.
        /// </summary>
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        public GetClustersArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetClustersResult
    {
        /// <summary>
        /// A list of ADB clusters. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClustersClustersResult> Clusters;
        public readonly string? DescriptionRegex;
        /// <summary>
        /// A list of ADB cluster descriptions. 
        /// </summary>
        public readonly ImmutableArray<string> Descriptions;
        /// <summary>
        /// A list of ADB cluster IDs. 
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? OutputFile;
        public readonly ImmutableDictionary<string, object>? Tags;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetClustersResult(
            ImmutableArray<Outputs.GetClustersClustersResult> clusters,
            string? descriptionRegex,
            ImmutableArray<string> descriptions,
            ImmutableArray<string> ids,
            string? outputFile,
            ImmutableDictionary<string, object>? tags,
            string id)
        {
            Clusters = clusters;
            DescriptionRegex = descriptionRegex;
            Descriptions = descriptions;
            Ids = ids;
            OutputFile = outputFile;
            Tags = tags;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetClustersClustersResult
    {
        /// <summary>
        /// Billing method. Value options: `PostPaid` for Pay-As-You-Go and `PrePaid` for subscription.
        /// </summary>
        public readonly string ChargeType;
        /// <summary>
        /// The CreateTime of the ADB cluster.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The DBNodeClass of the ADB cluster.
        /// </summary>
        public readonly string DbNodeClass;
        /// <summary>
        /// The DBNodeCount of the ADB cluster.
        /// </summary>
        public readonly int DbNodeCount;
        /// <summary>
        /// The DBNodeStorage of the ADB cluster.
        /// </summary>
        public readonly int DbNodeStorage;
        /// <summary>
        /// The description of the ADB cluster.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Expiration time. Pay-As-You-Go clusters never expire.
        /// </summary>
        public readonly string ExpireTime;
        /// <summary>
        /// The expired of the ADB cluster.
        /// </summary>
        public readonly string Expired;
        /// <summary>
        /// The ID of the ADB cluster.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The LockMode of the ADB cluster.
        /// </summary>
        public readonly string LockMode;
        /// <summary>
        /// The DBClusterNetworkType of the ADB cluster.
        /// </summary>
        public readonly string NetworkType;
        /// <summary>
        /// Region ID the cluster belongs to.
        /// </summary>
        public readonly string RegionId;
        /// <summary>
        /// status of the cluster.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// ID of the VPC the cluster belongs to.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// The ZoneId of the ADB cluster.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetClustersClustersResult(
            string chargeType,
            string createTime,
            string dbNodeClass,
            int dbNodeCount,
            int dbNodeStorage,
            string description,
            string expireTime,
            string expired,
            string id,
            string lockMode,
            string networkType,
            string regionId,
            string status,
            string vpcId,
            string zoneId)
        {
            ChargeType = chargeType;
            CreateTime = createTime;
            DbNodeClass = dbNodeClass;
            DbNodeCount = dbNodeCount;
            DbNodeStorage = dbNodeStorage;
            Description = description;
            ExpireTime = expireTime;
            Expired = expired;
            Id = id;
            LockMode = lockMode;
            NetworkType = networkType;
            RegionId = regionId;
            Status = status;
            VpcId = vpcId;
            ZoneId = zoneId;
        }
    }
    }
}
