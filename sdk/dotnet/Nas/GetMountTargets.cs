// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Nas
{
    public static partial class Invokes
    {
        /// <summary>
        /// This data source provides MountTargets available to the user.
        /// 
        /// &gt; NOTE: Available in 1.35.0+
        /// 
        /// 
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/nas_mount_targets.html.markdown.
        /// </summary>
        [Obsolete("Use GetMountTargets.InvokeAsync() instead")]
        public static Task<GetMountTargetsResult> GetMountTargets(GetMountTargetsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMountTargetsResult>("alicloud:nas/getMountTargets:getMountTargets", args ?? InvokeArgs.Empty, options.WithVersion());
    }
    public static class GetMountTargets
    {
        /// <summary>
        /// This data source provides MountTargets available to the user.
        /// 
        /// &gt; NOTE: Available in 1.35.0+
        /// 
        /// 
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/nas_mount_targets.html.markdown.
        /// </summary>
        public static Task<GetMountTargetsResult> InvokeAsync(GetMountTargetsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMountTargetsResult>("alicloud:nas/getMountTargets:getMountTargets", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetMountTargetsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter results by a specific AccessGroupName.
        /// </summary>
        [Input("accessGroupName")]
        public string? AccessGroupName { get; set; }

        /// <summary>
        /// The ID of the FileSystem that owns the MountTarget.
        /// </summary>
        [Input("fileSystemId", required: true)]
        public string FileSystemId { get; set; } = null!;

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of MountTargetDomain.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// Filter results by a specific MountTargetDomain.
        /// </summary>
        [Input("mountTargetDomain")]
        public string? MountTargetDomain { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Filter results by a specific NetworkType.
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        /// <summary>
        /// Filter results by a specific VpcId.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        /// <summary>
        /// Filter results by a specific VSwitchId.
        /// </summary>
        [Input("vswitchId")]
        public string? VswitchId { get; set; }

        public GetMountTargetsArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetMountTargetsResult
    {
        /// <summary>
        /// AccessGroup of The MountTarget.
        /// </summary>
        public readonly string? AccessGroupName;
        public readonly string FileSystemId;
        /// <summary>
        /// A list of MountTargetDomain.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// MountTargetDomain of the MountTarget.
        /// * `type`- NetworkType of The MountTarget.
        /// </summary>
        public readonly string? MountTargetDomain;
        public readonly string? OutputFile;
        /// <summary>
        /// A list of MountTargetDomains. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMountTargetsTargetsResult> Targets;
        public readonly string? Type;
        /// <summary>
        /// VpcId of The MountTarget.
        /// </summary>
        public readonly string? VpcId;
        /// <summary>
        /// VSwitchId of The MountTarget.
        /// </summary>
        public readonly string? VswitchId;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetMountTargetsResult(
            string? accessGroupName,
            string fileSystemId,
            ImmutableArray<string> ids,
            string? mountTargetDomain,
            string? outputFile,
            ImmutableArray<Outputs.GetMountTargetsTargetsResult> targets,
            string? type,
            string? vpcId,
            string? vswitchId,
            string id)
        {
            AccessGroupName = accessGroupName;
            FileSystemId = fileSystemId;
            Ids = ids;
            MountTargetDomain = mountTargetDomain;
            OutputFile = outputFile;
            Targets = targets;
            Type = type;
            VpcId = vpcId;
            VswitchId = vswitchId;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetMountTargetsTargetsResult
    {
        /// <summary>
        /// Filter results by a specific AccessGroupName.
        /// </summary>
        public readonly string AccessGroupName;
        /// <summary>
        /// ID of the MountTargetDomain.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Filter results by a specific MountTargetDomain.
        /// </summary>
        public readonly string MountTargetDomain;
        /// <summary>
        /// Filter results by a specific NetworkType.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Filter results by a specific VpcId.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// Filter results by a specific VSwitchId.
        /// </summary>
        public readonly string VswitchId;

        [OutputConstructor]
        private GetMountTargetsTargetsResult(
            string accessGroupName,
            string id,
            string mountTargetDomain,
            string type,
            string vpcId,
            string vswitchId)
        {
            AccessGroupName = accessGroupName;
            Id = id;
            MountTargetDomain = mountTargetDomain;
            Type = type;
            VpcId = vpcId;
            VswitchId = vswitchId;
        }
    }
    }
}
