// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Nas
{
    public static partial class Invokes
    {
        /// <summary>
        /// This data source provides user-available access groups. Use when you can create mount points
        /// 
        /// &gt; NOTE: Available in 1.35.0+
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/nas_access_groups.html.markdown.
        /// </summary>
        public static Task<GetAccessGroupsResult> GetAccessGroups(GetAccessGroupsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAccessGroupsResult>("alicloud:nas/getAccessGroups:getAccessGroups", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetAccessGroupsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter results by a specific Description.
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// A regex string to filter AccessGroups by name. 
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// Filter results by a specific AccessGroupType.
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public GetAccessGroupsArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetAccessGroupsResult
    {
        /// <summary>
        /// Destription of the AccessGroup.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A list of AccessGroups. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAccessGroupsGroupsResult> Groups;
        /// <summary>
        /// A list of AccessGroup IDs, the value is set to `names` .
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of AccessGroup names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        /// <summary>
        /// AccessGroupType of the AccessGroup.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetAccessGroupsResult(
            string? description,
            ImmutableArray<Outputs.GetAccessGroupsGroupsResult> groups,
            ImmutableArray<string> ids,
            string? nameRegex,
            ImmutableArray<string> names,
            string? outputFile,
            string? type,
            string id)
        {
            Description = description;
            Groups = groups;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            Type = type;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetAccessGroupsGroupsResult
    {
        /// <summary>
        /// Filter results by a specific Description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// AccessGroupName of the AccessGroup.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// MountTargetCount block of the AccessGroup
        /// </summary>
        public readonly int MountTargetCount;
        /// <summary>
        /// RuleCount of the AccessGroup.
        /// </summary>
        public readonly int RuleCount;
        /// <summary>
        /// Filter results by a specific AccessGroupType.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAccessGroupsGroupsResult(
            string description,
            string id,
            int mountTargetCount,
            int ruleCount,
            string type)
        {
            Description = description;
            Id = id;
            MountTargetCount = mountTargetCount;
            RuleCount = ruleCount;
            Type = type;
        }
    }
    }
}
