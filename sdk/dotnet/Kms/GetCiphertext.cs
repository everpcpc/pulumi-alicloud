// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Kms
{
    public static partial class Invokes
    {
        public static Task<GetCiphertextResult> GetCiphertext(GetCiphertextArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCiphertextResult>("alicloud:kms/getCiphertext:getCiphertext", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetCiphertextArgs : Pulumi.InvokeArgs
    {
        [Input("encryptionContext")]
        private Dictionary<string, string>? _encryptionContext;
        public Dictionary<string, string> EncryptionContext
        {
            get => _encryptionContext ?? (_encryptionContext = new Dictionary<string, string>());
            set => _encryptionContext = value;
        }

        /// <summary>
        /// The globally unique ID of the CMK.
        /// * `encryption_context` -
        /// (Optional) The Encryption context. If you specify this parameter here, it is also required when you call the Decrypt API operation. For more information, see [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm).
        /// </summary>
        [Input("keyId", required: true)]
        public string KeyId { get; set; } = null!;

        /// <summary>
        /// The plaintext to be encrypted which must be encoded in Base64.
        /// </summary>
        [Input("plaintext", required: true)]
        public string Plaintext { get; set; } = null!;

        public GetCiphertextArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetCiphertextResult
    {
        /// <summary>
        /// The ciphertext of the data key encrypted with the primary CMK version.
        /// </summary>
        public readonly string CiphertextBlob;
        public readonly ImmutableDictionary<string, string>? EncryptionContext;
        public readonly string KeyId;
        public readonly string Plaintext;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetCiphertextResult(
            string ciphertextBlob,
            ImmutableDictionary<string, string>? encryptionContext,
            string keyId,
            string plaintext,
            string id)
        {
            CiphertextBlob = ciphertextBlob;
            EncryptionContext = encryptionContext;
            KeyId = keyId;
            Plaintext = plaintext;
            Id = id;
        }
    }
}
