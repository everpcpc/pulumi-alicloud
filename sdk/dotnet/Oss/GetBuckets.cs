// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Oss
{
    public static partial class Invokes
    {
        /// <summary>
        /// This data source provides the OSS buckets of the current Alibaba Cloud user.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/oss_buckets.html.markdown.
        /// </summary>
        [Obsolete("Use GetBuckets.InvokeAsync() instead")]
        public static Task<GetBucketsResult> GetBuckets(GetBucketsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBucketsResult>("alicloud:oss/getBuckets:getBuckets", args ?? InvokeArgs.Empty, options.WithVersion());
    }
    public static class GetBuckets
    {
        /// <summary>
        /// This data source provides the OSS buckets of the current Alibaba Cloud user.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/oss_buckets.html.markdown.
        /// </summary>
        public static Task<GetBucketsResult> InvokeAsync(GetBucketsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBucketsResult>("alicloud:oss/getBuckets:getBuckets", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetBucketsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// A regex string to filter results by bucket name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetBucketsArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetBucketsResult
    {
        /// <summary>
        /// A list of buckets. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBucketsBucketsResult> Buckets;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of bucket names. 
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string? OutputFile;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetBucketsResult(
            ImmutableArray<Outputs.GetBucketsBucketsResult> buckets,
            string? nameRegex,
            ImmutableArray<string> names,
            string? outputFile,
            string id)
        {
            Buckets = buckets;
            NameRegex = nameRegex;
            Names = names;
            OutputFile = outputFile;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetBucketsBucketsCorsRulesResult
    {
        /// <summary>
        /// Control whether the headers specified by Access-Control-Request-Headers in the OPTIONS prefetch command are allowed. Each header specified by Access-Control-Request-Headers must match a value in AllowedHeader. Each rule allows up to one wildcard “*” .
        /// </summary>
        public readonly ImmutableArray<string> AllowedHeaders;
        /// <summary>
        /// Specify the allowed methods for cross-domain requests. Possible values: `GET`, `PUT`, `DELETE`, `POST` and `HEAD`.
        /// </summary>
        public readonly ImmutableArray<string> AllowedMethods;
        /// <summary>
        /// The origins allowed for cross-domain requests. Multiple elements can be used to specify multiple allowed origins. Each rule allows up to one wildcard "\*". If "\*" is specified, cross-domain requests of all origins are allowed.
        /// </summary>
        public readonly ImmutableArray<string> AllowedOrigins;
        /// <summary>
        /// Specify the response headers allowing users to access from an application (for example, a Javascript XMLHttpRequest object). The wildcard "\*" is not allowed.
        /// </summary>
        public readonly ImmutableArray<string> ExposeHeaders;
        /// <summary>
        /// Specify the cache time for the returned result of a browser prefetch (OPTIONS) request to a specific resource.
        /// </summary>
        public readonly int MaxAgeSeconds;

        [OutputConstructor]
        private GetBucketsBucketsCorsRulesResult(
            ImmutableArray<string> allowedHeaders,
            ImmutableArray<string> allowedMethods,
            ImmutableArray<string> allowedOrigins,
            ImmutableArray<string> exposeHeaders,
            int maxAgeSeconds)
        {
            AllowedHeaders = allowedHeaders;
            AllowedMethods = allowedMethods;
            AllowedOrigins = allowedOrigins;
            ExposeHeaders = exposeHeaders;
            MaxAgeSeconds = maxAgeSeconds;
        }
    }

    [OutputType]
    public sealed class GetBucketsBucketsLifecycleRulesExpirationResult
    {
        /// <summary>
        /// Date after which the rule to take effect. The format is like 2017-03-09.
        /// </summary>
        public readonly string? Date;
        /// <summary>
        /// Indicate the number of days after the last object update until the rules take effect.
        /// </summary>
        public readonly int? Days;

        [OutputConstructor]
        private GetBucketsBucketsLifecycleRulesExpirationResult(
            string? date,
            int? days)
        {
            Date = date;
            Days = days;
        }
    }

    [OutputType]
    public sealed class GetBucketsBucketsLifecycleRulesResult
    {
        /// <summary>
        /// Indicate whether the rule is enabled or not.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// A list of one element containing expiration attributes of an object. It contains the following attributes:
        /// </summary>
        public readonly GetBucketsBucketsLifecycleRulesExpirationResult Expiration;
        /// <summary>
        /// Unique ID of the rule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Prefix applicable to a rule. Only those objects with a matching prefix can be affected by the rule.
        /// </summary>
        public readonly string Prefix;

        [OutputConstructor]
        private GetBucketsBucketsLifecycleRulesResult(
            bool enabled,
            GetBucketsBucketsLifecycleRulesExpirationResult expiration,
            string id,
            string prefix)
        {
            Enabled = enabled;
            Expiration = expiration;
            Id = id;
            Prefix = prefix;
        }
    }

    [OutputType]
    public sealed class GetBucketsBucketsLoggingResult
    {
        /// <summary>
        /// Bucket for storing access logs.
        /// </summary>
        public readonly string TargetBucket;
        /// <summary>
        /// Prefix of the saved access log file paths.
        /// </summary>
        public readonly string TargetPrefix;

        [OutputConstructor]
        private GetBucketsBucketsLoggingResult(
            string targetBucket,
            string targetPrefix)
        {
            TargetBucket = targetBucket;
            TargetPrefix = targetPrefix;
        }
    }

    [OutputType]
    public sealed class GetBucketsBucketsRefererConfigResult
    {
        /// <summary>
        /// Indicate whether the access request referer field can be empty.
        /// </summary>
        public readonly bool AllowEmpty;
        /// <summary>
        /// Referer access whitelist.
        /// </summary>
        public readonly ImmutableArray<string> Referers;

        [OutputConstructor]
        private GetBucketsBucketsRefererConfigResult(
            bool allowEmpty,
            ImmutableArray<string> referers)
        {
            AllowEmpty = allowEmpty;
            Referers = referers;
        }
    }

    [OutputType]
    public sealed class GetBucketsBucketsResult
    {
        /// <summary>
        /// Bucket access control list. Possible values: `private`, `public-read` and `public-read-write`.
        /// </summary>
        public readonly string Acl;
        /// <summary>
        /// A list of CORS rule configurations. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<GetBucketsBucketsCorsRulesResult> CorsRules;
        /// <summary>
        /// Bucket creation date.
        /// </summary>
        public readonly string CreationDate;
        /// <summary>
        /// Internet domain name for accessing the bucket from outside.
        /// </summary>
        public readonly string ExtranetEndpoint;
        /// <summary>
        /// Intranet domain name for accessing the bucket from an ECS instance in the same region.
        /// </summary>
        public readonly string IntranetEndpoint;
        /// <summary>
        /// A list CORS of lifecycle configurations. When Lifecycle is enabled, OSS automatically deletes the objects or transitions the objects (to another storage class) corresponding the lifecycle rules on a regular basis. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<GetBucketsBucketsLifecycleRulesResult> LifecycleRules;
        /// <summary>
        /// Region of the data center where the bucket is located.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// A list of one element containing configuration parameters used for storing access log information. It contains the following attributes:
        /// </summary>
        public readonly GetBucketsBucketsLoggingResult Logging;
        /// <summary>
        /// Bucket name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Bucket owner.
        /// </summary>
        public readonly string Owner;
        public readonly string? Policy;
        /// <summary>
        /// A list of one element containing referer configuration. It contains the following attributes:
        /// </summary>
        public readonly GetBucketsBucketsRefererConfigResult RefererConfig;
        /// <summary>
        /// A configuration of default encryption for a bucket. It contains the following attributes:
        /// </summary>
        public readonly GetBucketsBucketsServerSideEncryptionRuleResult ServerSideEncryptionRule;
        /// <summary>
        /// Object storage type. Possible values: `Standard`, `IA` and `Archive`.
        /// </summary>
        public readonly string StorageClass;
        /// <summary>
        /// A mapping of tags.
        /// </summary>
        public readonly ImmutableDictionary<string, object> Tags;
        /// <summary>
        /// If present , the versioning state has been set on the bucket. It contains the following attribute.
        /// </summary>
        public readonly GetBucketsBucketsVersioningResult Versioning;
        /// <summary>
        /// A list of one element containing configuration parameters used when the bucket is used as a website. It contains the following attributes:
        /// </summary>
        public readonly GetBucketsBucketsWebsiteResult Website;

        [OutputConstructor]
        private GetBucketsBucketsResult(
            string acl,
            ImmutableArray<GetBucketsBucketsCorsRulesResult> corsRules,
            string creationDate,
            string extranetEndpoint,
            string intranetEndpoint,
            ImmutableArray<GetBucketsBucketsLifecycleRulesResult> lifecycleRules,
            string location,
            GetBucketsBucketsLoggingResult logging,
            string name,
            string owner,
            string? policy,
            GetBucketsBucketsRefererConfigResult refererConfig,
            GetBucketsBucketsServerSideEncryptionRuleResult serverSideEncryptionRule,
            string storageClass,
            ImmutableDictionary<string, object> tags,
            GetBucketsBucketsVersioningResult versioning,
            GetBucketsBucketsWebsiteResult website)
        {
            Acl = acl;
            CorsRules = corsRules;
            CreationDate = creationDate;
            ExtranetEndpoint = extranetEndpoint;
            IntranetEndpoint = intranetEndpoint;
            LifecycleRules = lifecycleRules;
            Location = location;
            Logging = logging;
            Name = name;
            Owner = owner;
            Policy = policy;
            RefererConfig = refererConfig;
            ServerSideEncryptionRule = serverSideEncryptionRule;
            StorageClass = storageClass;
            Tags = tags;
            Versioning = versioning;
            Website = website;
        }
    }

    [OutputType]
    public sealed class GetBucketsBucketsServerSideEncryptionRuleResult
    {
        /// <summary>
        /// The server-side encryption algorithm to use.
        /// </summary>
        public readonly string SseAlgorithm;

        [OutputConstructor]
        private GetBucketsBucketsServerSideEncryptionRuleResult(string sseAlgorithm)
        {
            SseAlgorithm = sseAlgorithm;
        }
    }

    [OutputType]
    public sealed class GetBucketsBucketsVersioningResult
    {
        /// <summary>
        /// A bucket versioning state. Possible values:`Enabled` and `Suspended`.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetBucketsBucketsVersioningResult(string status)
        {
            Status = status;
        }
    }

    [OutputType]
    public sealed class GetBucketsBucketsWebsiteResult
    {
        /// <summary>
        /// Key of the HTML document containing the error page.
        /// </summary>
        public readonly string ErrorDocument;
        /// <summary>
        /// Key of the HTML document containing the home page.
        /// </summary>
        public readonly string IndexDocument;

        [OutputConstructor]
        private GetBucketsBucketsWebsiteResult(
            string errorDocument,
            string indexDocument)
        {
            ErrorDocument = errorDocument;
            IndexDocument = indexDocument;
        }
    }
    }
}
