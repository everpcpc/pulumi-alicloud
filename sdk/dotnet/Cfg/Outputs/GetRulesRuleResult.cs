// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Cfg.Outputs
{

    [OutputType]
    public sealed class GetRulesRuleResult
    {
        public readonly int AccountId;
        /// <summary>
        /// The information about the compliance evaluations based on the rule.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRulesRuleComplianceResult> Compliances;
        public readonly string ConfigRuleArn;
        public readonly string ConfigRuleId;
        /// <summary>
        /// The state of the config rule, valid values: `ACTIVE`, `DELETING`, `DELETING_RESULTS`, `EVALUATING` and `INACTIVE`.
        /// </summary>
        public readonly string ConfigRuleState;
        public readonly int CreateTimestamp;
        public readonly string Description;
        /// <summary>
        /// Event source of the Config Rule.
        /// </summary>
        public readonly string EventSource;
        /// <summary>
        /// The ID of the Config Rule.
        /// * `account_id`- The ID of the Alicloud account.
        /// * `config_rule_arn`- The ARN of the Config Rule.
        /// * `config_rule_id`- The ID of the Config Rule.
        /// * `config_rule_state`- The state of the Config Rule.
        /// * `create_timestamp`- The timestamp of the Config Rule created.
        /// * `description`- The description of the Config Rule.
        /// * `input_parameters`- The input paramrters of the Config Rule.
        /// * `modified_timestamp`- the timestamp of the Config Rule modified.
        /// * `risk_level`- The risk level of the Config Rule.
        /// * `rule_name`- The name of the Config Rule.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableDictionary<string, object> InputParameters;
        public readonly int ModifiedTimestamp;
        /// <summary>
        /// The risk level of Config Rule. Valid values: `1`: Critical ,`2`: Warning , `3`: Info.
        /// </summary>
        public readonly int RiskLevel;
        public readonly string RuleName;
        /// <summary>
        /// The ID of the resource to be evaluated.
        /// </summary>
        public readonly string ScopeComplianceResourceId;
        /// <summary>
        /// The types of the resources to be evaluated against the rule.
        /// </summary>
        public readonly ImmutableArray<string> ScopeComplianceResourceTypes;
        /// <summary>
        /// Rule trigger mechanism.
        /// </summary>
        public readonly string SourceDetailMessageType;
        public readonly string SourceIdentifier;
        /// <summary>
        /// Rule execution cycle. 
        /// * `source_identifier`- The name of the custom rule or managed rule.
        /// * `source_owner`- The source owner of the Config Rule.
        /// </summary>
        public readonly string SourceMaximumExecutionFrequency;
        public readonly string SourceOwner;

        [OutputConstructor]
        private GetRulesRuleResult(
            int accountId,

            ImmutableArray<Outputs.GetRulesRuleComplianceResult> compliances,

            string configRuleArn,

            string configRuleId,

            string configRuleState,

            int createTimestamp,

            string description,

            string eventSource,

            string id,

            ImmutableDictionary<string, object> inputParameters,

            int modifiedTimestamp,

            int riskLevel,

            string ruleName,

            string scopeComplianceResourceId,

            ImmutableArray<string> scopeComplianceResourceTypes,

            string sourceDetailMessageType,

            string sourceIdentifier,

            string sourceMaximumExecutionFrequency,

            string sourceOwner)
        {
            AccountId = accountId;
            Compliances = compliances;
            ConfigRuleArn = configRuleArn;
            ConfigRuleId = configRuleId;
            ConfigRuleState = configRuleState;
            CreateTimestamp = createTimestamp;
            Description = description;
            EventSource = eventSource;
            Id = id;
            InputParameters = inputParameters;
            ModifiedTimestamp = modifiedTimestamp;
            RiskLevel = riskLevel;
            RuleName = ruleName;
            ScopeComplianceResourceId = scopeComplianceResourceId;
            ScopeComplianceResourceTypes = scopeComplianceResourceTypes;
            SourceDetailMessageType = sourceDetailMessageType;
            SourceIdentifier = sourceIdentifier;
            SourceMaximumExecutionFrequency = sourceMaximumExecutionFrequency;
            SourceOwner = sourceOwner;
        }
    }
}
