// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Emr
{
    public static partial class Invokes
    {
        /// <summary>
        /// The `alicloud.emr.getMainVersions` data source provides a collection of emr 
        /// main versions available in Alibaba Cloud account when create a emr cluster.
        /// 
        /// &gt; **NOTE:** Available in 1.59.0+
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/emr_main_versions.html.markdown.
        /// </summary>
        public static Task<GetMainVersionsResult> GetMainVersions(GetMainVersionsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMainVersionsResult>("alicloud:emr/getMainVersions:getMainVersions", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetMainVersionsArgs : Pulumi.InvokeArgs
    {
        [Input("clusterTypes")]
        private List<string>? _clusterTypes;

        /// <summary>
        /// The supported clusterType of this emr version.
        /// Possible values may be any one or combination of these: ["HADOOP", "DRUID", "KAFKA", "ZOOKEEPER", "FLINK", "CLICKHOUSE"]
        /// </summary>
        public List<string> ClusterTypes
        {
            get => _clusterTypes ?? (_clusterTypes = new List<string>());
            set => _clusterTypes = value;
        }

        /// <summary>
        /// The version of the emr cluster instance. Possible values: `EMR-4.0.0`, `EMR-3.23.0`, `EMR-3.22.0`.
        /// </summary>
        [Input("emrVersion")]
        public string? EmrVersion { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetMainVersionsArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetMainVersionsResult
    {
        public readonly ImmutableArray<string> ClusterTypes;
        /// <summary>
        /// The version of the emr cluster instance.
        /// </summary>
        public readonly string? EmrVersion;
        /// <summary>
        /// A list of emr instance types IDs. 
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        /// <summary>
        /// A list of versions of the emr cluster instance. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMainVersionsMainVersionsResult> MainVersions;
        public readonly string? OutputFile;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetMainVersionsResult(
            ImmutableArray<string> clusterTypes,
            string? emrVersion,
            ImmutableArray<string> ids,
            ImmutableArray<Outputs.GetMainVersionsMainVersionsResult> mainVersions,
            string? outputFile,
            string id)
        {
            ClusterTypes = clusterTypes;
            EmrVersion = emrVersion;
            Ids = ids;
            MainVersions = mainVersions;
            OutputFile = outputFile;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetMainVersionsMainVersionsResult
    {
        /// <summary>
        /// A list of cluster types the emr cluster supported. Possible values: `HADOOP`, `ZOOKEEPER`, `KAFKA`, `DRUID`.
        /// </summary>
        public readonly ImmutableArray<string> ClusterTypes;
        /// <summary>
        /// The version of the emr cluster instance. Possible values: `EMR-4.0.0`, `EMR-3.23.0`, `EMR-3.22.0`.
        /// </summary>
        public readonly string EmrVersion;
        /// <summary>
        /// The image id of the emr cluster instance.
        /// </summary>
        public readonly string ImageId;

        [OutputConstructor]
        private GetMainVersionsMainVersionsResult(
            ImmutableArray<string> clusterTypes,
            string emrVersion,
            string imageId)
        {
            ClusterTypes = clusterTypes;
            EmrVersion = emrVersion;
            ImageId = imageId;
        }
    }
    }
}
