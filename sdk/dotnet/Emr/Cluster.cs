// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Emr
{
    /// <summary>
    /// Provides a EMR Cluster resource. With this you can create, read, and release  EMR Cluster. 
    /// 
    /// &gt; **NOTE:** Available in 1.57.0+.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/emr_cluster.html.markdown.
    /// </summary>
    public partial class Cluster : Pulumi.CustomResource
    {
        [Output("bootstrapActions")]
        public Output<ImmutableArray<Outputs.ClusterBootstrapActions>> BootstrapActions { get; private set; } = null!;

        /// <summary>
        /// Charge Type for this group of hosts: PostPaid or PrePaid. If this is not specified, charge type will follow global charge_type value.
        /// </summary>
        [Output("chargeType")]
        public Output<string?> ChargeType { get; private set; } = null!;

        /// <summary>
        /// EMR Cluster Type, e.g. HADOOP, KAFKA, DRUID, GATEWAY etc. You can find all valid EMR cluster type in emr web console. Supported 'GATEWAY' available in 1.61.0+.
        /// </summary>
        [Output("clusterType")]
        public Output<string> ClusterType { get; private set; } = null!;

        [Output("depositType")]
        public Output<string?> DepositType { get; private set; } = null!;

        [Output("easEnable")]
        public Output<bool?> EasEnable { get; private set; } = null!;

        /// <summary>
        /// EMR Version, e.g. EMR-3.22.0. You can find the all valid EMR Version in emr web console.
        /// </summary>
        [Output("emrVer")]
        public Output<string> EmrVer { get; private set; } = null!;

        [Output("highAvailabilityEnable")]
        public Output<bool?> HighAvailabilityEnable { get; private set; } = null!;

        /// <summary>
        /// Groups of Host, You can specify MASTER as a group, CORE as a group (just like the above example).
        /// </summary>
        [Output("hostGroups")]
        public Output<ImmutableArray<Outputs.ClusterHostGroups>> HostGroups { get; private set; } = null!;

        [Output("isOpenPublicIp")]
        public Output<bool?> IsOpenPublicIp { get; private set; } = null!;

        [Output("keyPairName")]
        public Output<string?> KeyPairName { get; private set; } = null!;

        [Output("masterPwd")]
        public Output<string?> MasterPwd { get; private set; } = null!;

        /// <summary>
        /// bootstrap action name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("optionSoftwareLists")]
        public Output<ImmutableArray<string>> OptionSoftwareLists { get; private set; } = null!;

        [Output("relatedClusterId")]
        public Output<string?> RelatedClusterId { get; private set; } = null!;

        [Output("securityGroupId")]
        public Output<string?> SecurityGroupId { get; private set; } = null!;

        [Output("sshEnable")]
        public Output<bool?> SshEnable { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;

        [Output("useLocalMetadb")]
        public Output<bool?> UseLocalMetadb { get; private set; } = null!;

        [Output("userDefinedEmrEcsRole")]
        public Output<string?> UserDefinedEmrEcsRole { get; private set; } = null!;

        [Output("vswitchId")]
        public Output<string?> VswitchId { get; private set; } = null!;

        /// <summary>
        /// Zone ID, e.g. cn-huhehaote-a
        /// * `security_group_id` (Optional, ForceNew) Security Group ID for Cluster, you can also specify this key for each host group.
        /// * `vswitch_id` (Optional, ForceNew) Global vswitch id, you can also specify it in host group.
        /// * `option_software_list` (Optional, ForceNew) Optional software list.
        /// * `high_availability_enable` (Optional, ForceNew) High Available for HDFS and YARN. If this is set true, MASTER group must have two nodes.
        /// * `use_local_metadb` (Optional, ForceNew) Use local metadb. Default is false.
        /// * `ssh_enable` (Optional, ForceNew) If this is set true, we can ssh into cluster. Default value is false.
        /// * `master_pwd` (Optional, ForceNew) Master ssh password.
        /// * `eas_enable` (Optional, ForceNew) High security cluster (true) or not. Default value is false.
        /// * `user_defined_emr_ecs_role` (Optional, ForceNew) Alicloud EMR uses roles to perform actions on your behalf when provisioning cluster resources, running applications, dynamically scaling resources. EMR uses the following roles when interacting with other Alicloud services. Default value is AliyunEmrEcsDefaultRole.
        /// * `key_pair_name` (Optional, ForceNew) Ssh key pair.
        /// * `deposit_type` (Optional, ForceNew) Cluster deposit type, HALF_MANAGED or FULL_MANAGED.
        /// * `related_cluster_id` (Optional, ForceNew) This specify the related cluster id, if this cluster is a Gateway.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs args, CustomResourceOptions? options = null)
            : base("alicloud:emr/cluster:Cluster", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:emr/cluster:Cluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, state, options);
        }
    }

    public sealed class ClusterArgs : Pulumi.ResourceArgs
    {
        [Input("bootstrapActions")]
        private InputList<Inputs.ClusterBootstrapActionsArgs>? _bootstrapActions;
        public InputList<Inputs.ClusterBootstrapActionsArgs> BootstrapActions
        {
            get => _bootstrapActions ?? (_bootstrapActions = new InputList<Inputs.ClusterBootstrapActionsArgs>());
            set => _bootstrapActions = value;
        }

        /// <summary>
        /// Charge Type for this group of hosts: PostPaid or PrePaid. If this is not specified, charge type will follow global charge_type value.
        /// </summary>
        [Input("chargeType")]
        public Input<string>? ChargeType { get; set; }

        /// <summary>
        /// EMR Cluster Type, e.g. HADOOP, KAFKA, DRUID, GATEWAY etc. You can find all valid EMR cluster type in emr web console. Supported 'GATEWAY' available in 1.61.0+.
        /// </summary>
        [Input("clusterType", required: true)]
        public Input<string> ClusterType { get; set; } = null!;

        [Input("depositType")]
        public Input<string>? DepositType { get; set; }

        [Input("easEnable")]
        public Input<bool>? EasEnable { get; set; }

        /// <summary>
        /// EMR Version, e.g. EMR-3.22.0. You can find the all valid EMR Version in emr web console.
        /// </summary>
        [Input("emrVer", required: true)]
        public Input<string> EmrVer { get; set; } = null!;

        [Input("highAvailabilityEnable")]
        public Input<bool>? HighAvailabilityEnable { get; set; }

        [Input("hostGroups")]
        private InputList<Inputs.ClusterHostGroupsArgs>? _hostGroups;

        /// <summary>
        /// Groups of Host, You can specify MASTER as a group, CORE as a group (just like the above example).
        /// </summary>
        public InputList<Inputs.ClusterHostGroupsArgs> HostGroups
        {
            get => _hostGroups ?? (_hostGroups = new InputList<Inputs.ClusterHostGroupsArgs>());
            set => _hostGroups = value;
        }

        [Input("isOpenPublicIp")]
        public Input<bool>? IsOpenPublicIp { get; set; }

        [Input("keyPairName")]
        public Input<string>? KeyPairName { get; set; }

        [Input("masterPwd")]
        public Input<string>? MasterPwd { get; set; }

        /// <summary>
        /// bootstrap action name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("optionSoftwareLists")]
        private InputList<string>? _optionSoftwareLists;
        public InputList<string> OptionSoftwareLists
        {
            get => _optionSoftwareLists ?? (_optionSoftwareLists = new InputList<string>());
            set => _optionSoftwareLists = value;
        }

        [Input("relatedClusterId")]
        public Input<string>? RelatedClusterId { get; set; }

        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        [Input("sshEnable")]
        public Input<bool>? SshEnable { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        [Input("useLocalMetadb")]
        public Input<bool>? UseLocalMetadb { get; set; }

        [Input("userDefinedEmrEcsRole")]
        public Input<string>? UserDefinedEmrEcsRole { get; set; }

        [Input("vswitchId")]
        public Input<string>? VswitchId { get; set; }

        /// <summary>
        /// Zone ID, e.g. cn-huhehaote-a
        /// * `security_group_id` (Optional, ForceNew) Security Group ID for Cluster, you can also specify this key for each host group.
        /// * `vswitch_id` (Optional, ForceNew) Global vswitch id, you can also specify it in host group.
        /// * `option_software_list` (Optional, ForceNew) Optional software list.
        /// * `high_availability_enable` (Optional, ForceNew) High Available for HDFS and YARN. If this is set true, MASTER group must have two nodes.
        /// * `use_local_metadb` (Optional, ForceNew) Use local metadb. Default is false.
        /// * `ssh_enable` (Optional, ForceNew) If this is set true, we can ssh into cluster. Default value is false.
        /// * `master_pwd` (Optional, ForceNew) Master ssh password.
        /// * `eas_enable` (Optional, ForceNew) High security cluster (true) or not. Default value is false.
        /// * `user_defined_emr_ecs_role` (Optional, ForceNew) Alicloud EMR uses roles to perform actions on your behalf when provisioning cluster resources, running applications, dynamically scaling resources. EMR uses the following roles when interacting with other Alicloud services. Default value is AliyunEmrEcsDefaultRole.
        /// * `key_pair_name` (Optional, ForceNew) Ssh key pair.
        /// * `deposit_type` (Optional, ForceNew) Cluster deposit type, HALF_MANAGED or FULL_MANAGED.
        /// * `related_cluster_id` (Optional, ForceNew) This specify the related cluster id, if this cluster is a Gateway.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public ClusterArgs()
        {
        }
    }

    public sealed class ClusterState : Pulumi.ResourceArgs
    {
        [Input("bootstrapActions")]
        private InputList<Inputs.ClusterBootstrapActionsGetArgs>? _bootstrapActions;
        public InputList<Inputs.ClusterBootstrapActionsGetArgs> BootstrapActions
        {
            get => _bootstrapActions ?? (_bootstrapActions = new InputList<Inputs.ClusterBootstrapActionsGetArgs>());
            set => _bootstrapActions = value;
        }

        /// <summary>
        /// Charge Type for this group of hosts: PostPaid or PrePaid. If this is not specified, charge type will follow global charge_type value.
        /// </summary>
        [Input("chargeType")]
        public Input<string>? ChargeType { get; set; }

        /// <summary>
        /// EMR Cluster Type, e.g. HADOOP, KAFKA, DRUID, GATEWAY etc. You can find all valid EMR cluster type in emr web console. Supported 'GATEWAY' available in 1.61.0+.
        /// </summary>
        [Input("clusterType")]
        public Input<string>? ClusterType { get; set; }

        [Input("depositType")]
        public Input<string>? DepositType { get; set; }

        [Input("easEnable")]
        public Input<bool>? EasEnable { get; set; }

        /// <summary>
        /// EMR Version, e.g. EMR-3.22.0. You can find the all valid EMR Version in emr web console.
        /// </summary>
        [Input("emrVer")]
        public Input<string>? EmrVer { get; set; }

        [Input("highAvailabilityEnable")]
        public Input<bool>? HighAvailabilityEnable { get; set; }

        [Input("hostGroups")]
        private InputList<Inputs.ClusterHostGroupsGetArgs>? _hostGroups;

        /// <summary>
        /// Groups of Host, You can specify MASTER as a group, CORE as a group (just like the above example).
        /// </summary>
        public InputList<Inputs.ClusterHostGroupsGetArgs> HostGroups
        {
            get => _hostGroups ?? (_hostGroups = new InputList<Inputs.ClusterHostGroupsGetArgs>());
            set => _hostGroups = value;
        }

        [Input("isOpenPublicIp")]
        public Input<bool>? IsOpenPublicIp { get; set; }

        [Input("keyPairName")]
        public Input<string>? KeyPairName { get; set; }

        [Input("masterPwd")]
        public Input<string>? MasterPwd { get; set; }

        /// <summary>
        /// bootstrap action name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("optionSoftwareLists")]
        private InputList<string>? _optionSoftwareLists;
        public InputList<string> OptionSoftwareLists
        {
            get => _optionSoftwareLists ?? (_optionSoftwareLists = new InputList<string>());
            set => _optionSoftwareLists = value;
        }

        [Input("relatedClusterId")]
        public Input<string>? RelatedClusterId { get; set; }

        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        [Input("sshEnable")]
        public Input<bool>? SshEnable { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        [Input("useLocalMetadb")]
        public Input<bool>? UseLocalMetadb { get; set; }

        [Input("userDefinedEmrEcsRole")]
        public Input<string>? UserDefinedEmrEcsRole { get; set; }

        [Input("vswitchId")]
        public Input<string>? VswitchId { get; set; }

        /// <summary>
        /// Zone ID, e.g. cn-huhehaote-a
        /// * `security_group_id` (Optional, ForceNew) Security Group ID for Cluster, you can also specify this key for each host group.
        /// * `vswitch_id` (Optional, ForceNew) Global vswitch id, you can also specify it in host group.
        /// * `option_software_list` (Optional, ForceNew) Optional software list.
        /// * `high_availability_enable` (Optional, ForceNew) High Available for HDFS and YARN. If this is set true, MASTER group must have two nodes.
        /// * `use_local_metadb` (Optional, ForceNew) Use local metadb. Default is false.
        /// * `ssh_enable` (Optional, ForceNew) If this is set true, we can ssh into cluster. Default value is false.
        /// * `master_pwd` (Optional, ForceNew) Master ssh password.
        /// * `eas_enable` (Optional, ForceNew) High security cluster (true) or not. Default value is false.
        /// * `user_defined_emr_ecs_role` (Optional, ForceNew) Alicloud EMR uses roles to perform actions on your behalf when provisioning cluster resources, running applications, dynamically scaling resources. EMR uses the following roles when interacting with other Alicloud services. Default value is AliyunEmrEcsDefaultRole.
        /// * `key_pair_name` (Optional, ForceNew) Ssh key pair.
        /// * `deposit_type` (Optional, ForceNew) Cluster deposit type, HALF_MANAGED or FULL_MANAGED.
        /// * `related_cluster_id` (Optional, ForceNew) This specify the related cluster id, if this cluster is a Gateway.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public ClusterState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class ClusterBootstrapActionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// bootstrap action args, e.g. "--a=b".
        /// </summary>
        [Input("arg")]
        public Input<string>? Arg { get; set; }

        /// <summary>
        /// bootstrap action name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// bootstrap action path, e.g. "oss://bucket/path".
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        public ClusterBootstrapActionsArgs()
        {
        }
    }

    public sealed class ClusterBootstrapActionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// bootstrap action args, e.g. "--a=b".
        /// </summary>
        [Input("arg")]
        public Input<string>? Arg { get; set; }

        /// <summary>
        /// bootstrap action name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// bootstrap action path, e.g. "oss://bucket/path".
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        public ClusterBootstrapActionsGetArgs()
        {
        }
    }

    public sealed class ClusterHostGroupsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Auto renew for prepaid, true of false. Default is false.
        /// </summary>
        [Input("autoRenew")]
        public Input<bool>? AutoRenew { get; set; }

        /// <summary>
        /// Charge Type for this group of hosts: PostPaid or PrePaid. If this is not specified, charge type will follow global charge_type value.
        /// </summary>
        [Input("chargeType")]
        public Input<string>? ChargeType { get; set; }

        /// <summary>
        /// Data disk capacity.
        /// </summary>
        [Input("diskCapacity")]
        public Input<string>? DiskCapacity { get; set; }

        /// <summary>
        /// Data disk count.
        /// </summary>
        [Input("diskCount")]
        public Input<string>? DiskCount { get; set; }

        /// <summary>
        /// Data disk type. Supported value: cloud,cloud_efficiency,cloud_ssd,local_disk,cloud_essd.
        /// </summary>
        [Input("diskType")]
        public Input<string>? DiskType { get; set; }

        [Input("gpuDriver")]
        public Input<string>? GpuDriver { get; set; }

        /// <summary>
        /// host group name.
        /// </summary>
        [Input("hostGroupName")]
        public Input<string>? HostGroupName { get; set; }

        /// <summary>
        /// host group type, supported value: MASTER, CORE or TASK, supported 'GATEWAY' available in 1.61.0+.
        /// </summary>
        [Input("hostGroupType")]
        public Input<string>? HostGroupType { get; set; }

        /// <summary>
        /// Instance list for cluster scale down. This value follows the json format, e.g. ["instance_id1","instance_id2"]. escape character for " is \".
        /// </summary>
        [Input("instanceList")]
        public Input<string>? InstanceList { get; set; }

        /// <summary>
        /// Host Ecs instance type.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// Host number in this group.
        /// </summary>
        [Input("nodeCount")]
        public Input<string>? NodeCount { get; set; }

        /// <summary>
        /// If charge type is PrePaid, this should be specified, unit is month. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36.
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// System disk capacity.
        /// </summary>
        [Input("sysDiskCapacity")]
        public Input<string>? SysDiskCapacity { get; set; }

        /// <summary>
        /// System disk type. Supported value: cloud,cloud_efficiency,cloud_ssd,cloud_essd.
        /// </summary>
        [Input("sysDiskType")]
        public Input<string>? SysDiskType { get; set; }

        public ClusterHostGroupsArgs()
        {
        }
    }

    public sealed class ClusterHostGroupsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Auto renew for prepaid, true of false. Default is false.
        /// </summary>
        [Input("autoRenew")]
        public Input<bool>? AutoRenew { get; set; }

        /// <summary>
        /// Charge Type for this group of hosts: PostPaid or PrePaid. If this is not specified, charge type will follow global charge_type value.
        /// </summary>
        [Input("chargeType")]
        public Input<string>? ChargeType { get; set; }

        /// <summary>
        /// Data disk capacity.
        /// </summary>
        [Input("diskCapacity")]
        public Input<string>? DiskCapacity { get; set; }

        /// <summary>
        /// Data disk count.
        /// </summary>
        [Input("diskCount")]
        public Input<string>? DiskCount { get; set; }

        /// <summary>
        /// Data disk type. Supported value: cloud,cloud_efficiency,cloud_ssd,local_disk,cloud_essd.
        /// </summary>
        [Input("diskType")]
        public Input<string>? DiskType { get; set; }

        [Input("gpuDriver")]
        public Input<string>? GpuDriver { get; set; }

        /// <summary>
        /// host group name.
        /// </summary>
        [Input("hostGroupName")]
        public Input<string>? HostGroupName { get; set; }

        /// <summary>
        /// host group type, supported value: MASTER, CORE or TASK, supported 'GATEWAY' available in 1.61.0+.
        /// </summary>
        [Input("hostGroupType")]
        public Input<string>? HostGroupType { get; set; }

        /// <summary>
        /// Instance list for cluster scale down. This value follows the json format, e.g. ["instance_id1","instance_id2"]. escape character for " is \".
        /// </summary>
        [Input("instanceList")]
        public Input<string>? InstanceList { get; set; }

        /// <summary>
        /// Host Ecs instance type.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// Host number in this group.
        /// </summary>
        [Input("nodeCount")]
        public Input<string>? NodeCount { get; set; }

        /// <summary>
        /// If charge type is PrePaid, this should be specified, unit is month. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36.
        /// </summary>
        [Input("period")]
        public Input<int>? Period { get; set; }

        /// <summary>
        /// System disk capacity.
        /// </summary>
        [Input("sysDiskCapacity")]
        public Input<string>? SysDiskCapacity { get; set; }

        /// <summary>
        /// System disk type. Supported value: cloud,cloud_efficiency,cloud_ssd,cloud_essd.
        /// </summary>
        [Input("sysDiskType")]
        public Input<string>? SysDiskType { get; set; }

        public ClusterHostGroupsGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class ClusterBootstrapActions
    {
        /// <summary>
        /// bootstrap action args, e.g. "--a=b".
        /// </summary>
        public readonly string? Arg;
        /// <summary>
        /// bootstrap action name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// bootstrap action path, e.g. "oss://bucket/path".
        /// </summary>
        public readonly string? Path;

        [OutputConstructor]
        private ClusterBootstrapActions(
            string? arg,
            string? name,
            string? path)
        {
            Arg = arg;
            Name = name;
            Path = path;
        }
    }

    [OutputType]
    public sealed class ClusterHostGroups
    {
        /// <summary>
        /// Auto renew for prepaid, true of false. Default is false.
        /// </summary>
        public readonly bool? AutoRenew;
        /// <summary>
        /// Charge Type for this group of hosts: PostPaid or PrePaid. If this is not specified, charge type will follow global charge_type value.
        /// </summary>
        public readonly string? ChargeType;
        /// <summary>
        /// Data disk capacity.
        /// </summary>
        public readonly string? DiskCapacity;
        /// <summary>
        /// Data disk count.
        /// </summary>
        public readonly string? DiskCount;
        /// <summary>
        /// Data disk type. Supported value: cloud,cloud_efficiency,cloud_ssd,local_disk,cloud_essd.
        /// </summary>
        public readonly string? DiskType;
        public readonly string? GpuDriver;
        /// <summary>
        /// host group name.
        /// </summary>
        public readonly string? HostGroupName;
        /// <summary>
        /// host group type, supported value: MASTER, CORE or TASK, supported 'GATEWAY' available in 1.61.0+.
        /// </summary>
        public readonly string? HostGroupType;
        /// <summary>
        /// Instance list for cluster scale down. This value follows the json format, e.g. ["instance_id1","instance_id2"]. escape character for " is \".
        /// </summary>
        public readonly string? InstanceList;
        /// <summary>
        /// Host Ecs instance type.
        /// </summary>
        public readonly string? InstanceType;
        /// <summary>
        /// Host number in this group.
        /// </summary>
        public readonly string? NodeCount;
        /// <summary>
        /// If charge type is PrePaid, this should be specified, unit is month. Supported value: 1、2、3、4、5、6、7、8、9、12、24、36.
        /// </summary>
        public readonly int? Period;
        /// <summary>
        /// System disk capacity.
        /// </summary>
        public readonly string? SysDiskCapacity;
        /// <summary>
        /// System disk type. Supported value: cloud,cloud_efficiency,cloud_ssd,cloud_essd.
        /// </summary>
        public readonly string? SysDiskType;

        [OutputConstructor]
        private ClusterHostGroups(
            bool? autoRenew,
            string? chargeType,
            string? diskCapacity,
            string? diskCount,
            string? diskType,
            string? gpuDriver,
            string? hostGroupName,
            string? hostGroupType,
            string? instanceList,
            string? instanceType,
            string? nodeCount,
            int? period,
            string? sysDiskCapacity,
            string? sysDiskType)
        {
            AutoRenew = autoRenew;
            ChargeType = chargeType;
            DiskCapacity = diskCapacity;
            DiskCount = diskCount;
            DiskType = diskType;
            GpuDriver = gpuDriver;
            HostGroupName = hostGroupName;
            HostGroupType = hostGroupType;
            InstanceList = instanceList;
            InstanceType = instanceType;
            NodeCount = nodeCount;
            Period = period;
            SysDiskCapacity = sysDiskCapacity;
            SysDiskType = sysDiskType;
        }
    }
    }
}
