// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Emr
{
    public static partial class Invokes
    {
        /// <summary>
        /// The `alicloud.emr.getDiskTypes` data source provides a collection of data disk and 
        /// system disk types available in Alibaba Cloud account when create a emr cluster.
        /// 
        /// &gt; **NOTE:** Available in 1.60.0+
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/emr_disk_types.html.markdown.
        /// </summary>
        [Obsolete("Use GetDiskTypes.InvokeAsync() instead")]
        public static Task<GetDiskTypesResult> GetDiskTypes(GetDiskTypesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDiskTypesResult>("alicloud:emr/getDiskTypes:getDiskTypes", args ?? InvokeArgs.Empty, options.WithVersion());
    }
    public static class GetDiskTypes
    {
        /// <summary>
        /// The `alicloud.emr.getDiskTypes` data source provides a collection of data disk and 
        /// system disk types available in Alibaba Cloud account when create a emr cluster.
        /// 
        /// &gt; **NOTE:** Available in 1.60.0+
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/emr_disk_types.html.markdown.
        /// </summary>
        public static Task<GetDiskTypesResult> InvokeAsync(GetDiskTypesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDiskTypesResult>("alicloud:emr/getDiskTypes:getDiskTypes", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetDiskTypesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The cluster type of the emr cluster instance. Possible values: `HADOOP`, `KAFKA`, `ZOOKEEPER`, `DRUID`.
        /// </summary>
        [Input("clusterType", required: true)]
        public string ClusterType { get; set; } = null!;

        /// <summary>
        /// The destination resource of emr cluster instance
        /// </summary>
        [Input("destinationResource", required: true)]
        public string DestinationResource { get; set; } = null!;

        /// <summary>
        /// Filter the results by charge type. Valid values: `PrePaid` and `PostPaid`. Default to `PostPaid`.
        /// </summary>
        [Input("instanceChargeType", required: true)]
        public string InstanceChargeType { get; set; } = null!;

        /// <summary>
        /// The ecs instance type of create emr cluster instance.
        /// </summary>
        [Input("instanceType", required: true)]
        public string InstanceType { get; set; } = null!;

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The Zone to create emr cluster instance.
        /// </summary>
        [Input("zoneId")]
        public string? ZoneId { get; set; }

        public GetDiskTypesArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetDiskTypesResult
    {
        public readonly string ClusterType;
        public readonly string DestinationResource;
        /// <summary>
        /// A list of data disk and system disk type IDs. 
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string InstanceChargeType;
        public readonly string InstanceType;
        public readonly string? OutputFile;
        /// <summary>
        /// A list of emr instance types. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDiskTypesTypesResult> Types;
        public readonly string? ZoneId;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetDiskTypesResult(
            string clusterType,
            string destinationResource,
            ImmutableArray<string> ids,
            string instanceChargeType,
            string instanceType,
            string? outputFile,
            ImmutableArray<Outputs.GetDiskTypesTypesResult> types,
            string? zoneId,
            string id)
        {
            ClusterType = clusterType;
            DestinationResource = destinationResource;
            Ids = ids;
            InstanceChargeType = instanceChargeType;
            InstanceType = instanceType;
            OutputFile = outputFile;
            Types = types;
            ZoneId = zoneId;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetDiskTypesTypesResult
    {
        /// <summary>
        /// The maximum value of the data disk to supported the specific instance type
        /// </summary>
        public readonly int Max;
        /// <summary>
        /// The mininum value of the data disk to supported the specific instance type
        /// </summary>
        public readonly int Min;
        /// <summary>
        /// The value of the data disk or system disk
        /// </summary>
        public readonly string Value;

        [OutputConstructor]
        private GetDiskTypesTypesResult(
            int max,
            int min,
            string value)
        {
            Max = max;
            Min = min;
            Value = value;
        }
    }
    }
}
