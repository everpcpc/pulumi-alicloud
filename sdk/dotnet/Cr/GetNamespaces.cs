// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CR
{
    public static partial class Invokes
    {
        /// <summary>
        /// This data source provides a list Container Registry namespaces on Alibaba Cloud.
        /// 
        /// &gt; **NOTE:** Available in v1.35.0+
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/cr_namespaces.html.markdown.
        /// </summary>
        [Obsolete("Use GetNamespaces.InvokeAsync() instead")]
        public static Task<GetNamespacesResult> GetNamespaces(GetNamespacesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNamespacesResult>("alicloud:cr/getNamespaces:getNamespaces", args ?? InvokeArgs.Empty, options.WithVersion());
    }
    public static class GetNamespaces
    {
        /// <summary>
        /// This data source provides a list Container Registry namespaces on Alibaba Cloud.
        /// 
        /// &gt; **NOTE:** Available in v1.35.0+
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/cr_namespaces.html.markdown.
        /// </summary>
        public static Task<GetNamespacesResult> InvokeAsync(GetNamespacesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNamespacesResult>("alicloud:cr/getNamespaces:getNamespaces", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetNamespacesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// A regex string to filter results by namespace name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetNamespacesArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetNamespacesResult
    {
        /// <summary>
        /// A list of matched Container Registry namespaces. Its element is a namespace name.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of namespace names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        /// <summary>
        /// A list of matched Container Registry namespaces. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNamespacesNamespacesResult> Namespaces;
        public readonly string? OutputFile;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetNamespacesResult(
            ImmutableArray<string> ids,
            string? nameRegex,
            ImmutableArray<string> names,
            ImmutableArray<Outputs.GetNamespacesNamespacesResult> namespaces,
            string? outputFile,
            string id)
        {
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            Namespaces = namespaces;
            OutputFile = outputFile;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetNamespacesNamespacesResult
    {
        /// <summary>
        /// Boolean, when it set to true, repositories are automatically created when pushing new images. If it set to false, you create repository for images before pushing.
        /// </summary>
        public readonly bool AutoCreate;
        /// <summary>
        /// `PUBLIC` or `PRIVATE`, default repository visibility in this namespace.
        /// </summary>
        public readonly string DefaultVisibility;
        /// <summary>
        /// Name of Container Registry namespace.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetNamespacesNamespacesResult(
            bool autoCreate,
            string defaultVisibility,
            string name)
        {
            AutoCreate = autoCreate;
            DefaultVisibility = defaultVisibility;
            Name = name;
        }
    }
    }
}
