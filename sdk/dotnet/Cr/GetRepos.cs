// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.CR
{
    public static partial class Invokes
    {
        /// <summary>
        /// This data source provides a list Container Registry repositories on Alibaba Cloud.
        /// 
        /// &gt; **NOTE:** Available in v1.35.0+
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/cr_repos.html.markdown.
        /// </summary>
        public static Task<GetReposResult> GetRepos(GetReposArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetReposResult>("alicloud:cr/getRepos:getRepos", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetReposArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Boolean, false by default, only repository attributes are exported. Set to true if domain list and tags belong to this repository are needed. See `tags` in attributes.
        /// </summary>
        [Input("enableDetails")]
        public bool? EnableDetails { get; set; }

        /// <summary>
        /// A regex string to filter results by repository name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        /// <summary>
        /// Name of container registry namespace where the repositories are located in.
        /// </summary>
        [Input("namespace")]
        public string? Namespace { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetReposArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetReposResult
    {
        public readonly bool? EnableDetails;
        /// <summary>
        /// A list of matched Container Registry Repositories. Its element is set to `names`.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        /// <summary>
        /// A list of repository names.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        /// <summary>
        /// Name of container registry namespace where repo is located.
        /// </summary>
        public readonly string? Namespace;
        public readonly string? OutputFile;
        /// <summary>
        /// A list of matched Container Registry Namespaces. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetReposReposResult> Repos;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetReposResult(
            bool? enableDetails,
            ImmutableArray<string> ids,
            string? nameRegex,
            ImmutableArray<string> names,
            string? @namespace,
            string? outputFile,
            ImmutableArray<Outputs.GetReposReposResult> repos,
            string id)
        {
            EnableDetails = enableDetails;
            Ids = ids;
            NameRegex = nameRegex;
            Names = names;
            Namespace = @namespace;
            OutputFile = outputFile;
            Repos = repos;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetReposReposDomainListResult
    {
        /// <summary>
        /// Domain of internal endpoint, only in some regions.
        /// </summary>
        public readonly string Internal;
        /// <summary>
        /// Domain of public endpoint.
        /// </summary>
        public readonly string Public;
        /// <summary>
        /// Domain of vpc endpoint.
        /// </summary>
        public readonly string Vpc;

        [OutputConstructor]
        private GetReposReposDomainListResult(
            string @internal,
            string @public,
            string vpc)
        {
            Internal = @internal;
            Public = @public;
            Vpc = vpc;
        }
    }

    [OutputType]
    public sealed class GetReposReposResult
    {
        /// <summary>
        /// The repository domain list.
        /// </summary>
        public readonly GetReposReposDomainListResult DomainList;
        /// <summary>
        /// Name of container registry namespace.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Name of container registry namespace where the repositories are located in.
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// `PUBLIC` or `PRIVATE`, repository's visibility.
        /// </summary>
        public readonly string RepoType;
        /// <summary>
        /// The repository general information.
        /// </summary>
        public readonly string Summary;
        /// <summary>
        /// A list of image tags belong to this repository. Each contains several attributes, see `Block Tag`.
        /// </summary>
        public readonly ImmutableArray<GetReposReposTagsResult> Tags;

        [OutputConstructor]
        private GetReposReposResult(
            GetReposReposDomainListResult domainList,
            string name,
            string @namespace,
            string repoType,
            string summary,
            ImmutableArray<GetReposReposTagsResult> tags)
        {
            DomainList = domainList;
            Name = name;
            Namespace = @namespace;
            RepoType = repoType;
            Summary = summary;
            Tags = tags;
        }
    }

    [OutputType]
    public sealed class GetReposReposTagsResult
    {
        /// <summary>
        /// Digest of this image.
        /// </summary>
        public readonly string Digest;
        /// <summary>
        /// Create time of this image, unix time in nanoseconds.
        /// </summary>
        public readonly int ImageCreate;
        /// <summary>
        /// Id of this image.
        /// </summary>
        public readonly string ImageId;
        /// <summary>
        /// Status of this image, in bytes.
        /// </summary>
        public readonly int ImageSize;
        /// <summary>
        /// Last update time of this image, unix time in nanoseconds.
        /// </summary>
        public readonly int ImageUpdate;
        /// <summary>
        /// Status of this image.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Tag of this image.
        /// </summary>
        public readonly string Tag;

        [OutputConstructor]
        private GetReposReposTagsResult(
            string digest,
            int imageCreate,
            string imageId,
            int imageSize,
            int imageUpdate,
            string status,
            string tag)
        {
            Digest = digest;
            ImageCreate = imageCreate;
            ImageId = imageId;
            ImageSize = imageSize;
            ImageUpdate = imageUpdate;
            Status = status;
            Tag = tag;
        }
    }
    }
}
