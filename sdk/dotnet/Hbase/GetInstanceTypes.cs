// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Hbase
{
    public static class GetInstanceTypes
    {
        /// <summary>
        /// This data source provides availability instance_types for HBase that can be accessed by an Alibaba Cloud account within the region configured in the provider.
        /// 
        /// &gt; **NOTE:** Available in v1.106.0+.
        /// </summary>
        public static Task<GetInstanceTypesResult> InvokeAsync(GetInstanceTypesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInstanceTypesResult>("alicloud:hbase/getInstanceTypes:getInstanceTypes", args ?? new GetInstanceTypesArgs(), options.WithVersion());
    }


    public sealed class GetInstanceTypesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The hbase instance type of create hbase cluster instance.
        /// </summary>
        [Input("instanceType")]
        public string? InstanceType { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public GetInstanceTypesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetInstanceTypesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of instance types type IDs.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? InstanceType;
        public readonly string? OutputFile;
        /// <summary>
        /// A list of instance types. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceTypesTypeResult> Types;

        [OutputConstructor]
        private GetInstanceTypesResult(
            string id,

            ImmutableArray<string> ids,

            string? instanceType,

            string? outputFile,

            ImmutableArray<Outputs.GetInstanceTypesTypeResult> types)
        {
            Id = id;
            Ids = ids;
            InstanceType = instanceType;
            OutputFile = outputFile;
            Types = types;
        }
    }
}
