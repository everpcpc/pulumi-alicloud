// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ecs
{
    /// <summary>
    /// Provides a key pair attachment resource to bind key pair for several ECS instances.
    /// 
    /// &gt; **NOTE:** After the key pair is attached with sone instances, there instances must be rebooted to make the key pair affect.
    /// 
    /// ## Example Usage
    /// 
    /// Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AliCloud = Pulumi.AliCloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var @default = Output.Create(AliCloud.GetZones.InvokeAsync(new AliCloud.GetZonesArgs
    ///         {
    ///             AvailableDiskCategory = "cloud_ssd",
    ///             AvailableResourceCreation = "VSwitch",
    ///         }));
    ///         var type = @default.Apply(@default =&gt; Output.Create(AliCloud.Ecs.GetInstanceTypes.InvokeAsync(new AliCloud.Ecs.GetInstanceTypesArgs
    ///         {
    ///             AvailabilityZone = @default.Zones[0].Id,
    ///             CpuCoreCount = 1,
    ///             MemorySize = 2,
    ///         })));
    ///         var images = Output.Create(AliCloud.Ecs.GetImages.InvokeAsync(new AliCloud.Ecs.GetImagesArgs
    ///         {
    ///             NameRegex = "^ubuntu_18.*64",
    ///             MostRecent = true,
    ///             Owners = "system",
    ///         }));
    ///         var config = new Config();
    ///         var name = config.Get("name") ?? "keyPairAttachmentName";
    ///         var vpc = new AliCloud.Vpc.Network("vpc", new AliCloud.Vpc.NetworkArgs
    ///         {
    ///             CidrBlock = "10.1.0.0/21",
    ///         });
    ///         var vswitch = new AliCloud.Vpc.Switch("vswitch", new AliCloud.Vpc.SwitchArgs
    ///         {
    ///             VpcId = vpc.Id,
    ///             CidrBlock = "10.1.1.0/24",
    ///             AvailabilityZone = @default.Apply(@default =&gt; @default.Zones[0].Id),
    ///         });
    ///         var @group = new AliCloud.Ecs.SecurityGroup("group", new AliCloud.Ecs.SecurityGroupArgs
    ///         {
    ///             Description = "New security group",
    ///             VpcId = vpc.Id,
    ///         });
    ///         var instance = new List&lt;AliCloud.Ecs.Instance&gt;();
    ///         for (var rangeIndex = 0; rangeIndex &lt; 2; rangeIndex++)
    ///         {
    ///             var range = new { Value = rangeIndex };
    ///             instance.Add(new AliCloud.Ecs.Instance($"instance-{range.Value}", new AliCloud.Ecs.InstanceArgs
    ///             {
    ///                 InstanceName = $"{name}-{range.Value + 1}",
    ///                 ImageId = images.Apply(images =&gt; images.Images[0].Id),
    ///                 InstanceType = type.Apply(type =&gt; type.InstanceTypes[0].Id),
    ///                 SecurityGroups = 
    ///                 {
    ///                     @group.Id,
    ///                 },
    ///                 VswitchId = vswitch.Id,
    ///                 InternetChargeType = "PayByTraffic",
    ///                 InternetMaxBandwidthOut = 5,
    ///                 Password = "Test12345",
    ///                 InstanceChargeType = "PostPaid",
    ///                 SystemDiskCategory = "cloud_ssd",
    ///             }));
    ///         }
    ///         var pair = new AliCloud.Ecs.KeyPair("pair", new AliCloud.Ecs.KeyPairArgs
    ///         {
    ///             KeyName = name,
    ///         });
    ///         var attachment = new AliCloud.Ecs.KeyPairAttachment("attachment", new AliCloud.Ecs.KeyPairAttachmentArgs
    ///         {
    ///             KeyName = pair.Id,
    ///             InstanceIds = instance.Select(__item =&gt; __item.Id).ToList(),
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [AliCloudResourceType("alicloud:ecs/keyPairAttachment:KeyPairAttachment")]
    public partial class KeyPairAttachment : Pulumi.CustomResource
    {
        /// <summary>
        /// Set it to true and it will reboot instances which attached with the key pair to make key pair affect immediately.
        /// </summary>
        [Output("force")]
        public Output<bool?> Force { get; private set; } = null!;

        /// <summary>
        /// The list of ECS instance's IDs.
        /// </summary>
        [Output("instanceIds")]
        public Output<ImmutableArray<string>> InstanceIds { get; private set; } = null!;

        /// <summary>
        /// The name of key pair used to bind.
        /// </summary>
        [Output("keyName")]
        public Output<string> KeyName { get; private set; } = null!;


        /// <summary>
        /// Create a KeyPairAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KeyPairAttachment(string name, KeyPairAttachmentArgs args, CustomResourceOptions? options = null)
            : base("alicloud:ecs/keyPairAttachment:KeyPairAttachment", name, args ?? new KeyPairAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KeyPairAttachment(string name, Input<string> id, KeyPairAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:ecs/keyPairAttachment:KeyPairAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KeyPairAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KeyPairAttachment Get(string name, Input<string> id, KeyPairAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new KeyPairAttachment(name, id, state, options);
        }
    }

    public sealed class KeyPairAttachmentArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set it to true and it will reboot instances which attached with the key pair to make key pair affect immediately.
        /// </summary>
        [Input("force")]
        public Input<bool>? Force { get; set; }

        [Input("instanceIds", required: true)]
        private InputList<string>? _instanceIds;

        /// <summary>
        /// The list of ECS instance's IDs.
        /// </summary>
        public InputList<string> InstanceIds
        {
            get => _instanceIds ?? (_instanceIds = new InputList<string>());
            set => _instanceIds = value;
        }

        /// <summary>
        /// The name of key pair used to bind.
        /// </summary>
        [Input("keyName", required: true)]
        public Input<string> KeyName { get; set; } = null!;

        public KeyPairAttachmentArgs()
        {
        }
    }

    public sealed class KeyPairAttachmentState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set it to true and it will reboot instances which attached with the key pair to make key pair affect immediately.
        /// </summary>
        [Input("force")]
        public Input<bool>? Force { get; set; }

        [Input("instanceIds")]
        private InputList<string>? _instanceIds;

        /// <summary>
        /// The list of ECS instance's IDs.
        /// </summary>
        public InputList<string> InstanceIds
        {
            get => _instanceIds ?? (_instanceIds = new InputList<string>());
            set => _instanceIds = value;
        }

        /// <summary>
        /// The name of key pair used to bind.
        /// </summary>
        [Input("keyName")]
        public Input<string>? KeyName { get; set; }

        public KeyPairAttachmentState()
        {
        }
    }
}
