// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ecs.Outputs
{

    [OutputType]
    public sealed class GetSnapshotsSnapshotResult
    {
        /// <summary>
        /// Creation time. Time of creation. It is represented according to ISO8601, and UTC time is used. Format: YYYY-MM-DDThh:mmZ.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// Description of the snapshot.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Whether the snapshot is encrypted or not.
        /// </summary>
        public readonly bool Encrypted;
        /// <summary>
        /// ID of the snapshot.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the snapshot.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Product code on the image market place.
        /// </summary>
        public readonly string ProductCode;
        /// <summary>
        /// Progress of snapshot creation, presented in percentage.
        /// </summary>
        public readonly string Progress;
        /// <summary>
        /// The remaining time of a snapshot creation task, in seconds.
        /// </summary>
        public readonly int RemainTime;
        /// <summary>
        /// The number of days that an automatic snapshot retains in the console for your instance.
        /// </summary>
        public readonly int RetentionDays;
        /// <summary>
        /// Source disk ID, which is retained after the source disk of the snapshot is deleted.
        /// </summary>
        public readonly string SourceDiskId;
        /// <summary>
        /// Size of the source disk, measured in GB.
        /// </summary>
        public readonly string SourceDiskSize;
        /// <summary>
        /// Source disk attribute. Value range: `System`,`Data`.
        /// </summary>
        public readonly string SourceDiskType;
        /// <summary>
        /// The snapshot status. Value range: `progressing`, `accomplished` and `failed`.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// A map of tags assigned to the snapshot.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Tags;
        /// <summary>
        /// Whether the snapshots are used to create resources or not. Value range: `image`, `disk`, `image_disk` and `none`.
        /// </summary>
        public readonly string Usage;

        [OutputConstructor]
        private GetSnapshotsSnapshotResult(
            string creationTime,

            string description,

            bool encrypted,

            string id,

            string name,

            string productCode,

            string progress,

            int remainTime,

            int retentionDays,

            string sourceDiskId,

            string sourceDiskSize,

            string sourceDiskType,

            string status,

            ImmutableDictionary<string, object>? tags,

            string usage)
        {
            CreationTime = creationTime;
            Description = description;
            Encrypted = encrypted;
            Id = id;
            Name = name;
            ProductCode = productCode;
            Progress = progress;
            RemainTime = remainTime;
            RetentionDays = retentionDays;
            SourceDiskId = sourceDiskId;
            SourceDiskSize = sourceDiskSize;
            SourceDiskType = sourceDiskType;
            Status = status;
            Tags = tags;
            Usage = usage;
        }
    }
}
