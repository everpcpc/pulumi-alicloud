// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.MarketPlace
{
    public static partial class Invokes
    {
        /// <summary>
        /// This data source provides the Market product items of Alibaba Cloud.
        /// 
        /// &gt; **NOTE:** Available in 1.64.0+
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/market_products.html.markdown.
        /// </summary>
        public static Task<GetProductsResult> GetProducts(GetProductsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetProductsResult>("alicloud:marketplace/getProducts:getProducts", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetProductsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Category ID of products. For more information, see [DescribeProducts](https://help.aliyun.com/document_detail/89834.htm). 
        /// </summary>
        [Input("categoryId")]
        public string? CategoryId { get; set; }

        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of product code.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// A regex string to apply to the product name.
        /// </summary>
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("outputFile")]
        public string? OutputFile { get; set; }

        /// <summary>
        /// The type of products, Valid values: `APP`, `SERVICE`, `MIRROR`, `DOWNLOAD` and `API_SERVICE`.
        /// </summary>
        [Input("productType")]
        public string? ProductType { get; set; }

        /// <summary>
        /// Search term in this query.
        /// </summary>
        [Input("searchTerm")]
        public string? SearchTerm { get; set; }

        /// <summary>
        /// This field determines how to sort the filtered results, Valid values: `user_count-desc`, `created_on-desc`, `price-desc` and `score-desc`.
        /// </summary>
        [Input("sort")]
        public string? Sort { get; set; }

        /// <summary>
        /// The suggested price of the product.
        /// </summary>
        [Input("suggestedPrice")]
        public double? SuggestedPrice { get; set; }

        /// <summary>
        /// The supplier id of the product.
        /// </summary>
        [Input("supplierId")]
        public string? SupplierId { get; set; }

        /// <summary>
        /// The supplier name keyword of the product.
        /// </summary>
        [Input("supplierNameKeyword")]
        public string? SupplierNameKeyword { get; set; }

        public GetProductsArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetProductsResult
    {
        /// <summary>
        /// The category id of the product.
        /// </summary>
        public readonly string? CategoryId;
        /// <summary>
        /// A list of product codes.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string? NameRegex;
        public readonly string? OutputFile;
        public readonly string? ProductType;
        /// <summary>
        /// A list of products. Each element contains the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProductsProductsResult> Products;
        public readonly string? SearchTerm;
        public readonly string? Sort;
        /// <summary>
        /// The suggested price of the product.
        /// </summary>
        public readonly double? SuggestedPrice;
        /// <summary>
        /// The supplier id of the product.
        /// </summary>
        public readonly string? SupplierId;
        public readonly string? SupplierNameKeyword;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetProductsResult(
            string? categoryId,
            ImmutableArray<string> ids,
            string? nameRegex,
            string? outputFile,
            string? productType,
            ImmutableArray<Outputs.GetProductsProductsResult> products,
            string? searchTerm,
            string? sort,
            double? suggestedPrice,
            string? supplierId,
            string? supplierNameKeyword,
            string id)
        {
            CategoryId = categoryId;
            Ids = ids;
            NameRegex = nameRegex;
            OutputFile = outputFile;
            ProductType = productType;
            Products = products;
            SearchTerm = searchTerm;
            Sort = sort;
            SuggestedPrice = suggestedPrice;
            SupplierId = supplierId;
            SupplierNameKeyword = supplierNameKeyword;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetProductsProductsResult
    {
        /// <summary>
        /// The Category ID of products. For more information, see [DescribeProducts](https://help.aliyun.com/document_detail/89834.htm). 
        /// </summary>
        public readonly int CategoryId;
        /// <summary>
        /// The code of the product.
        /// </summary>
        public readonly string Code;
        /// <summary>
        /// The delivery date of the product.
        /// </summary>
        public readonly string DeliveryDate;
        /// <summary>
        /// The delivery way of the product.
        /// </summary>
        public readonly string DeliveryWay;
        /// <summary>
        /// The image URL of the product.
        /// </summary>
        public readonly string ImageUrl;
        /// <summary>
        /// The name of the product.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The operation system of the product.
        /// </summary>
        public readonly string OperationSystem;
        /// <summary>
        /// The rating information of the product.
        /// </summary>
        public readonly string Score;
        /// <summary>
        /// The short description of the product.
        /// </summary>
        public readonly string ShortDescription;
        /// <summary>
        /// The suggested price of the product.
        /// </summary>
        public readonly string SuggestedPrice;
        /// <summary>
        /// The supplier id of the product.
        /// </summary>
        public readonly int SupplierId;
        /// <summary>
        /// The supplier name of the product.
        /// </summary>
        public readonly string SupplierName;
        /// <summary>
        /// The tags of the product.
        /// </summary>
        public readonly string Tags;
        /// <summary>
        /// The detail page URL of the product.
        /// </summary>
        public readonly string TargetUrl;
        /// <summary>
        /// The warranty date of the product.
        /// </summary>
        public readonly string WarrantyDate;

        [OutputConstructor]
        private GetProductsProductsResult(
            int categoryId,
            string code,
            string deliveryDate,
            string deliveryWay,
            string imageUrl,
            string name,
            string operationSystem,
            string score,
            string shortDescription,
            string suggestedPrice,
            int supplierId,
            string supplierName,
            string tags,
            string targetUrl,
            string warrantyDate)
        {
            CategoryId = categoryId;
            Code = code;
            DeliveryDate = deliveryDate;
            DeliveryWay = deliveryWay;
            ImageUrl = imageUrl;
            Name = name;
            OperationSystem = operationSystem;
            Score = score;
            ShortDescription = shortDescription;
            SuggestedPrice = suggestedPrice;
            SupplierId = supplierId;
            SupplierName = supplierName;
            Tags = tags;
            TargetUrl = targetUrl;
            WarrantyDate = warrantyDate;
        }
    }
    }
}
