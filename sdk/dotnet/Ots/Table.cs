// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AliCloud.Ots
{
    /// <summary>
    /// Provides an OTS table resource.
    /// 
    /// &gt; **NOTE:** From Provider version 1.10.0, the provider field 'ots_instance_name' has been deprecated and
    /// you should use resource alicloud_ots_table's new field 'instance_name' and 'table_name' to re-import this resource.
    /// 
    /// 
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/ots_table.html.markdown.
    /// </summary>
    public partial class Table : Pulumi.CustomResource
    {
        /// <summary>
        /// The max version offset of the table. The valid value is 1-9223372036854775807. Defaults to 86400.
        /// </summary>
        [Output("deviationCellVersionInSec")]
        public Output<string?> DeviationCellVersionInSec { get; private set; } = null!;

        /// <summary>
        /// The name of the OTS instance in which table will located.
        /// </summary>
        [Output("instanceName")]
        public Output<string> InstanceName { get; private set; } = null!;

        /// <summary>
        /// The maximum number of versions stored in this table. The valid value is 1-2147483647.
        /// </summary>
        [Output("maxVersion")]
        public Output<int> MaxVersion { get; private set; } = null!;

        /// <summary>
        /// The property of `TableMeta` which indicates the structure information of a table. It describes the attribute value of primary key. The number of `primary_key` should not be less than one and not be more than four.
        /// </summary>
        [Output("primaryKeys")]
        public Output<ImmutableArray<Outputs.TablePrimaryKeys>> PrimaryKeys { get; private set; } = null!;

        /// <summary>
        /// The table name of the OTS instance. If changed, a new table would be created.
        /// </summary>
        [Output("tableName")]
        public Output<string> TableName { get; private set; } = null!;

        /// <summary>
        /// The retention time of data stored in this table (unit: second). The value maximum is 2147483647 and -1 means never expired.
        /// </summary>
        [Output("timeToLive")]
        public Output<int> TimeToLive { get; private set; } = null!;


        /// <summary>
        /// Create a Table resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Table(string name, TableArgs args, CustomResourceOptions? options = null)
            : base("alicloud:ots/table:Table", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Table(string name, Input<string> id, TableState? state = null, CustomResourceOptions? options = null)
            : base("alicloud:ots/table:Table", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Table resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Table Get(string name, Input<string> id, TableState? state = null, CustomResourceOptions? options = null)
        {
            return new Table(name, id, state, options);
        }
    }

    public sealed class TableArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The max version offset of the table. The valid value is 1-9223372036854775807. Defaults to 86400.
        /// </summary>
        [Input("deviationCellVersionInSec")]
        public Input<string>? DeviationCellVersionInSec { get; set; }

        /// <summary>
        /// The name of the OTS instance in which table will located.
        /// </summary>
        [Input("instanceName", required: true)]
        public Input<string> InstanceName { get; set; } = null!;

        /// <summary>
        /// The maximum number of versions stored in this table. The valid value is 1-2147483647.
        /// </summary>
        [Input("maxVersion", required: true)]
        public Input<int> MaxVersion { get; set; } = null!;

        [Input("primaryKeys", required: true)]
        private InputList<Inputs.TablePrimaryKeysArgs>? _primaryKeys;

        /// <summary>
        /// The property of `TableMeta` which indicates the structure information of a table. It describes the attribute value of primary key. The number of `primary_key` should not be less than one and not be more than four.
        /// </summary>
        public InputList<Inputs.TablePrimaryKeysArgs> PrimaryKeys
        {
            get => _primaryKeys ?? (_primaryKeys = new InputList<Inputs.TablePrimaryKeysArgs>());
            set => _primaryKeys = value;
        }

        /// <summary>
        /// The table name of the OTS instance. If changed, a new table would be created.
        /// </summary>
        [Input("tableName", required: true)]
        public Input<string> TableName { get; set; } = null!;

        /// <summary>
        /// The retention time of data stored in this table (unit: second). The value maximum is 2147483647 and -1 means never expired.
        /// </summary>
        [Input("timeToLive", required: true)]
        public Input<int> TimeToLive { get; set; } = null!;

        public TableArgs()
        {
        }
    }

    public sealed class TableState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The max version offset of the table. The valid value is 1-9223372036854775807. Defaults to 86400.
        /// </summary>
        [Input("deviationCellVersionInSec")]
        public Input<string>? DeviationCellVersionInSec { get; set; }

        /// <summary>
        /// The name of the OTS instance in which table will located.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// The maximum number of versions stored in this table. The valid value is 1-2147483647.
        /// </summary>
        [Input("maxVersion")]
        public Input<int>? MaxVersion { get; set; }

        [Input("primaryKeys")]
        private InputList<Inputs.TablePrimaryKeysGetArgs>? _primaryKeys;

        /// <summary>
        /// The property of `TableMeta` which indicates the structure information of a table. It describes the attribute value of primary key. The number of `primary_key` should not be less than one and not be more than four.
        /// </summary>
        public InputList<Inputs.TablePrimaryKeysGetArgs> PrimaryKeys
        {
            get => _primaryKeys ?? (_primaryKeys = new InputList<Inputs.TablePrimaryKeysGetArgs>());
            set => _primaryKeys = value;
        }

        /// <summary>
        /// The table name of the OTS instance. If changed, a new table would be created.
        /// </summary>
        [Input("tableName")]
        public Input<string>? TableName { get; set; }

        /// <summary>
        /// The retention time of data stored in this table (unit: second). The value maximum is 2147483647 and -1 means never expired.
        /// </summary>
        [Input("timeToLive")]
        public Input<int>? TimeToLive { get; set; }

        public TableState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class TablePrimaryKeysArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name for primary key.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Type for primary key. Only `Integer`, `String` or `Binary` is allowed.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public TablePrimaryKeysArgs()
        {
        }
    }

    public sealed class TablePrimaryKeysGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name for primary key.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Type for primary key. Only `Integer`, `String` or `Binary` is allowed.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public TablePrimaryKeysGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class TablePrimaryKeys
    {
        /// <summary>
        /// Name for primary key.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Type for primary key. Only `Integer`, `String` or `Binary` is allowed.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private TablePrimaryKeys(
            string name,
            string type)
        {
            Name = name;
            Type = type;
        }
    }
    }
}
