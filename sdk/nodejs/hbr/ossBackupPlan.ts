// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a HBR Oss Backup Plan resource.
 *
 * For information about HBR Oss Backup Plan and how to use it, see [What is Oss Backup Plan](https://www.alibabacloud.com/product/hybrid-backup-recovery).
 *
 * > **NOTE:** Available in v1.131.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const config = new pulumi.Config();
 * const name = config.get("name") || `%s`;
 * const defaultVault = new alicloud.hbr.Vault("defaultVault", {vaultName: name});
 * const defaultBuckets = alicloud.oss.getBuckets({
 *     nameRegex: "bosh-cf-blobstore-hz",
 * });
 * const example = new alicloud.hbr.OssBackupPlan("example", {
 *     ossBackupPlanName: name,
 *     vaultId: defaultVault.id,
 *     bucket: alicloud_oss_bucket["default"].bucket,
 *     prefix: "/home",
 *     retention: "1",
 *     schedule: "I|1602673264|PT2H",
 *     backupType: "COMPLETE",
 * });
 * ```
 *
 * ## Import
 *
 * HBR Oss Backup Plan can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:hbr/ossBackupPlan:OssBackupPlan example <id>
 * ```
 */
export class OssBackupPlan extends pulumi.CustomResource {
    /**
     * Get an existing OssBackupPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OssBackupPlanState, opts?: pulumi.CustomResourceOptions): OssBackupPlan {
        return new OssBackupPlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:hbr/ossBackupPlan:OssBackupPlan';

    /**
     * Returns true if the given object is an instance of OssBackupPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OssBackupPlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OssBackupPlan.__pulumiType;
    }

    /**
     * Backup Type. Valid Values: * Complete. Valid values: `COMPLETE`.
     */
    public readonly backupType!: pulumi.Output<string>;
    /**
     * The OSS Bucket Name.
     */
    public readonly bucket!: pulumi.Output<string | undefined>;
    /**
     * Whether to Disable the Backup Task. Valid Values: true, false.
     */
    public readonly disabled!: pulumi.Output<boolean>;
    /**
     * The Configuration Page of a Backup Plan Name. 1-64 Characters, requiring a Single Warehouse under Each of the Data Source Type Drop-down List of the Configuration Page of a Backup Plan Name Is Unique.
     */
    public readonly ossBackupPlanName!: pulumi.Output<string>;
    public readonly prefix!: pulumi.Output<string | undefined>;
    /**
     * Backup Retention Period, the Minimum Value of 1.
     */
    public readonly retention!: pulumi.Output<string>;
    /**
     * Backup strategy. Optional format: I|{startTime}|{interval} * startTime Backup start time, UNIX time, in seconds. * interval ISO8601 time interval. E.g: ** PT1H, one hour apart. ** P1D, one day apart. It means to execute a backup task every {interval} starting from {startTime}. The backup task for the elapsed time will not be compensated. If the last backup task is not completed, the next backup task will not be triggered.
     */
    public readonly schedule!: pulumi.Output<string>;
    /**
     * Vault ID.
     */
    public readonly vaultId!: pulumi.Output<string | undefined>;

    /**
     * Create a OssBackupPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OssBackupPlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OssBackupPlanArgs | OssBackupPlanState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OssBackupPlanState | undefined;
            inputs["backupType"] = state ? state.backupType : undefined;
            inputs["bucket"] = state ? state.bucket : undefined;
            inputs["disabled"] = state ? state.disabled : undefined;
            inputs["ossBackupPlanName"] = state ? state.ossBackupPlanName : undefined;
            inputs["prefix"] = state ? state.prefix : undefined;
            inputs["retention"] = state ? state.retention : undefined;
            inputs["schedule"] = state ? state.schedule : undefined;
            inputs["vaultId"] = state ? state.vaultId : undefined;
        } else {
            const args = argsOrState as OssBackupPlanArgs | undefined;
            if ((!args || args.ossBackupPlanName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ossBackupPlanName'");
            }
            if ((!args || args.retention === undefined) && !opts.urn) {
                throw new Error("Missing required property 'retention'");
            }
            if ((!args || args.schedule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schedule'");
            }
            inputs["backupType"] = args ? args.backupType : undefined;
            inputs["bucket"] = args ? args.bucket : undefined;
            inputs["disabled"] = args ? args.disabled : undefined;
            inputs["ossBackupPlanName"] = args ? args.ossBackupPlanName : undefined;
            inputs["prefix"] = args ? args.prefix : undefined;
            inputs["retention"] = args ? args.retention : undefined;
            inputs["schedule"] = args ? args.schedule : undefined;
            inputs["vaultId"] = args ? args.vaultId : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(OssBackupPlan.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OssBackupPlan resources.
 */
export interface OssBackupPlanState {
    /**
     * Backup Type. Valid Values: * Complete. Valid values: `COMPLETE`.
     */
    readonly backupType?: pulumi.Input<string>;
    /**
     * The OSS Bucket Name.
     */
    readonly bucket?: pulumi.Input<string>;
    /**
     * Whether to Disable the Backup Task. Valid Values: true, false.
     */
    readonly disabled?: pulumi.Input<boolean>;
    /**
     * The Configuration Page of a Backup Plan Name. 1-64 Characters, requiring a Single Warehouse under Each of the Data Source Type Drop-down List of the Configuration Page of a Backup Plan Name Is Unique.
     */
    readonly ossBackupPlanName?: pulumi.Input<string>;
    readonly prefix?: pulumi.Input<string>;
    /**
     * Backup Retention Period, the Minimum Value of 1.
     */
    readonly retention?: pulumi.Input<string>;
    /**
     * Backup strategy. Optional format: I|{startTime}|{interval} * startTime Backup start time, UNIX time, in seconds. * interval ISO8601 time interval. E.g: ** PT1H, one hour apart. ** P1D, one day apart. It means to execute a backup task every {interval} starting from {startTime}. The backup task for the elapsed time will not be compensated. If the last backup task is not completed, the next backup task will not be triggered.
     */
    readonly schedule?: pulumi.Input<string>;
    /**
     * Vault ID.
     */
    readonly vaultId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OssBackupPlan resource.
 */
export interface OssBackupPlanArgs {
    /**
     * Backup Type. Valid Values: * Complete. Valid values: `COMPLETE`.
     */
    readonly backupType?: pulumi.Input<string>;
    /**
     * The OSS Bucket Name.
     */
    readonly bucket?: pulumi.Input<string>;
    /**
     * Whether to Disable the Backup Task. Valid Values: true, false.
     */
    readonly disabled?: pulumi.Input<boolean>;
    /**
     * The Configuration Page of a Backup Plan Name. 1-64 Characters, requiring a Single Warehouse under Each of the Data Source Type Drop-down List of the Configuration Page of a Backup Plan Name Is Unique.
     */
    readonly ossBackupPlanName: pulumi.Input<string>;
    readonly prefix?: pulumi.Input<string>;
    /**
     * Backup Retention Period, the Minimum Value of 1.
     */
    readonly retention: pulumi.Input<string>;
    /**
     * Backup strategy. Optional format: I|{startTime}|{interval} * startTime Backup start time, UNIX time, in seconds. * interval ISO8601 time interval. E.g: ** PT1H, one hour apart. ** P1D, one day apart. It means to execute a backup task every {interval} starting from {startTime}. The backup task for the elapsed time will not be compensated. If the last backup task is not completed, the next backup task will not be triggered.
     */
    readonly schedule: pulumi.Input<string>;
    /**
     * Vault ID.
     */
    readonly vaultId?: pulumi.Input<string>;
}
