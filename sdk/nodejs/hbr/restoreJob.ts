// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Hybrid Backup Recovery (HBR) Restore Job resource.
 *
 * For information about Hybrid Backup Recovery (HBR) Restore Job and how to use it, see [What is Restore Job](https://www.alibabacloud.com/help/doc-detail/186575.htm).
 *
 * > **NOTE:** Available in v1.133.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const defaultNasBackupPlans = alicloud.hbr.getNasBackupPlans({
 *     nameRegex: "plan-tf-used-dont-delete",
 * });
 * const nasSnapshots = Promise.all([defaultNasBackupPlans, defaultNasBackupPlans, defaultNasBackupPlans]).then(([defaultNasBackupPlans, defaultNasBackupPlans1, defaultNasBackupPlans2]) => alicloud.hbr.getSnapshots({
 *     sourceType: "NAS",
 *     vaultId: defaultNasBackupPlans.plans[0].vaultId,
 *     fileSystemId: defaultNasBackupPlans1.plans[0].fileSystemId,
 *     createTime: defaultNasBackupPlans2.plans[0].createTime,
 * }));
 * const defaultRestoreJob = new alicloud.hbr.RestoreJob("defaultRestoreJob", {
 *     restoreJobId: "tftestacc112358",
 *     snapshotHash: nasSnapshots.then(nasSnapshots => nasSnapshots.snapshots[0].snapshotHash),
 *     vaultId: defaultNasBackupPlans.then(defaultNasBackupPlans => defaultNasBackupPlans.plans[0].vaultId),
 *     sourceType: "NAS",
 *     restoreType: "NAS",
 *     snapshotId: nasSnapshots.then(nasSnapshots => nasSnapshots.snapshots[0].snapshotId),
 *     targetFileSystemId: defaultNasBackupPlans.then(defaultNasBackupPlans => defaultNasBackupPlans.plans[0].fileSystemId),
 *     targetCreateTime: defaultNasBackupPlans.then(defaultNasBackupPlans => defaultNasBackupPlans.plans[0].createTime),
 *     targetPath: "/",
 *     options: "    {\"includes\":[], \"excludes\":[]}\n",
 * });
 * ```
 *
 * > **NOTE:** This resource can only be created, cannot be modified or deleted. Therefore, any modification of the resource attribute will not affect exist resource.
 *
 * ## Import
 *
 * Hybrid Backup Recovery (HBR) Restore Job can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:hbr/restoreJob:RestoreJob example <restore_job_id>:<restore_type>
 * ```
 */
export class RestoreJob extends pulumi.CustomResource {
    /**
     * Get an existing RestoreJob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RestoreJobState, opts?: pulumi.CustomResourceOptions): RestoreJob {
        return new RestoreJob(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:hbr/restoreJob:RestoreJob';

    /**
     * Returns true if the given object is an instance of RestoreJob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RestoreJob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RestoreJob.__pulumiType;
    }

    /**
     * The exclude path. It's a json string with format:`["/home", "/exclude"]`.
     */
    public readonly exclude!: pulumi.Output<string | undefined>;
    /**
     * The include path. It's a json string with format:`["/home", "/include"]`.
     */
    public readonly include!: pulumi.Output<string | undefined>;
    /**
     * Recovery options. It's a json string with format:`"{"includes":[],"excludes":[]}",`.
     */
    public readonly options!: pulumi.Output<string | undefined>;
    /**
     * Restore Job ID. It's the unique key of this resource, you must specify a unique keyword.
     */
    public readonly restoreJobId!: pulumi.Output<string>;
    /**
     * The type of recovery destination. Valid values: `ECS_FILE`, `NAS`, `OSS`. **Note**: Currently, there is a one-to-one correspondence between the data source type with the recovery destination type.
     */
    public readonly restoreType!: pulumi.Output<string>;
    /**
     * The hashcode of restore Snapshot.
     */
    public readonly snapshotHash!: pulumi.Output<string>;
    /**
     * The ID of Snapshot.
     */
    public readonly snapshotId!: pulumi.Output<string>;
    /**
     * The type of data source. Valid values: `ECS_FILE`, `NAS`, `OSS`.
     */
    public readonly sourceType!: pulumi.Output<string>;
    /**
     * The Restore Job Status.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The target ofo OSS bucket name.
     */
    public readonly targetBucket!: pulumi.Output<string | undefined>;
    public readonly targetClientId!: pulumi.Output<string | undefined>;
    public readonly targetContainer!: pulumi.Output<string | undefined>;
    public readonly targetContainerClusterId!: pulumi.Output<string | undefined>;
    /**
     * The creation Time of destination File System. While sourceType equals `NAS`, this parameter must be set. **Note** The time format of the API adopts the ISO 8601 format, such as `2021-07-09T15:45:30CST` or `2021-07-09T07:45:30Z`.
     */
    public readonly targetCreateTime!: pulumi.Output<string | undefined>;
    public readonly targetDataSourceId!: pulumi.Output<string | undefined>;
    /**
     * The ID of destination File System.
     */
    public readonly targetFileSystemId!: pulumi.Output<string | undefined>;
    /**
     * The target ID of ECS instance.
     */
    public readonly targetInstanceId!: pulumi.Output<string | undefined>;
    /**
     * The target file path of (ECS) instance.
     */
    public readonly targetPath!: pulumi.Output<string | undefined>;
    /**
     * The target of the OSS object prefix.
     */
    public readonly targetPrefix!: pulumi.Output<string | undefined>;
    /**
     * The ID of backup vault.
     */
    public readonly vaultId!: pulumi.Output<string>;

    /**
     * Create a RestoreJob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RestoreJobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RestoreJobArgs | RestoreJobState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RestoreJobState | undefined;
            inputs["exclude"] = state ? state.exclude : undefined;
            inputs["include"] = state ? state.include : undefined;
            inputs["options"] = state ? state.options : undefined;
            inputs["restoreJobId"] = state ? state.restoreJobId : undefined;
            inputs["restoreType"] = state ? state.restoreType : undefined;
            inputs["snapshotHash"] = state ? state.snapshotHash : undefined;
            inputs["snapshotId"] = state ? state.snapshotId : undefined;
            inputs["sourceType"] = state ? state.sourceType : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["targetBucket"] = state ? state.targetBucket : undefined;
            inputs["targetClientId"] = state ? state.targetClientId : undefined;
            inputs["targetContainer"] = state ? state.targetContainer : undefined;
            inputs["targetContainerClusterId"] = state ? state.targetContainerClusterId : undefined;
            inputs["targetCreateTime"] = state ? state.targetCreateTime : undefined;
            inputs["targetDataSourceId"] = state ? state.targetDataSourceId : undefined;
            inputs["targetFileSystemId"] = state ? state.targetFileSystemId : undefined;
            inputs["targetInstanceId"] = state ? state.targetInstanceId : undefined;
            inputs["targetPath"] = state ? state.targetPath : undefined;
            inputs["targetPrefix"] = state ? state.targetPrefix : undefined;
            inputs["vaultId"] = state ? state.vaultId : undefined;
        } else {
            const args = argsOrState as RestoreJobArgs | undefined;
            if ((!args || args.restoreJobId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'restoreJobId'");
            }
            if ((!args || args.restoreType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'restoreType'");
            }
            if ((!args || args.snapshotHash === undefined) && !opts.urn) {
                throw new Error("Missing required property 'snapshotHash'");
            }
            if ((!args || args.snapshotId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'snapshotId'");
            }
            if ((!args || args.sourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceType'");
            }
            if ((!args || args.vaultId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vaultId'");
            }
            inputs["exclude"] = args ? args.exclude : undefined;
            inputs["include"] = args ? args.include : undefined;
            inputs["options"] = args ? args.options : undefined;
            inputs["restoreJobId"] = args ? args.restoreJobId : undefined;
            inputs["restoreType"] = args ? args.restoreType : undefined;
            inputs["snapshotHash"] = args ? args.snapshotHash : undefined;
            inputs["snapshotId"] = args ? args.snapshotId : undefined;
            inputs["sourceType"] = args ? args.sourceType : undefined;
            inputs["targetBucket"] = args ? args.targetBucket : undefined;
            inputs["targetClientId"] = args ? args.targetClientId : undefined;
            inputs["targetContainer"] = args ? args.targetContainer : undefined;
            inputs["targetContainerClusterId"] = args ? args.targetContainerClusterId : undefined;
            inputs["targetCreateTime"] = args ? args.targetCreateTime : undefined;
            inputs["targetDataSourceId"] = args ? args.targetDataSourceId : undefined;
            inputs["targetFileSystemId"] = args ? args.targetFileSystemId : undefined;
            inputs["targetInstanceId"] = args ? args.targetInstanceId : undefined;
            inputs["targetPath"] = args ? args.targetPath : undefined;
            inputs["targetPrefix"] = args ? args.targetPrefix : undefined;
            inputs["vaultId"] = args ? args.vaultId : undefined;
            inputs["status"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(RestoreJob.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RestoreJob resources.
 */
export interface RestoreJobState {
    /**
     * The exclude path. It's a json string with format:`["/home", "/exclude"]`.
     */
    readonly exclude?: pulumi.Input<string>;
    /**
     * The include path. It's a json string with format:`["/home", "/include"]`.
     */
    readonly include?: pulumi.Input<string>;
    /**
     * Recovery options. It's a json string with format:`"{"includes":[],"excludes":[]}",`.
     */
    readonly options?: pulumi.Input<string>;
    /**
     * Restore Job ID. It's the unique key of this resource, you must specify a unique keyword.
     */
    readonly restoreJobId?: pulumi.Input<string>;
    /**
     * The type of recovery destination. Valid values: `ECS_FILE`, `NAS`, `OSS`. **Note**: Currently, there is a one-to-one correspondence between the data source type with the recovery destination type.
     */
    readonly restoreType?: pulumi.Input<string>;
    /**
     * The hashcode of restore Snapshot.
     */
    readonly snapshotHash?: pulumi.Input<string>;
    /**
     * The ID of Snapshot.
     */
    readonly snapshotId?: pulumi.Input<string>;
    /**
     * The type of data source. Valid values: `ECS_FILE`, `NAS`, `OSS`.
     */
    readonly sourceType?: pulumi.Input<string>;
    /**
     * The Restore Job Status.
     */
    readonly status?: pulumi.Input<string>;
    /**
     * The target ofo OSS bucket name.
     */
    readonly targetBucket?: pulumi.Input<string>;
    readonly targetClientId?: pulumi.Input<string>;
    readonly targetContainer?: pulumi.Input<string>;
    readonly targetContainerClusterId?: pulumi.Input<string>;
    /**
     * The creation Time of destination File System. While sourceType equals `NAS`, this parameter must be set. **Note** The time format of the API adopts the ISO 8601 format, such as `2021-07-09T15:45:30CST` or `2021-07-09T07:45:30Z`.
     */
    readonly targetCreateTime?: pulumi.Input<string>;
    readonly targetDataSourceId?: pulumi.Input<string>;
    /**
     * The ID of destination File System.
     */
    readonly targetFileSystemId?: pulumi.Input<string>;
    /**
     * The target ID of ECS instance.
     */
    readonly targetInstanceId?: pulumi.Input<string>;
    /**
     * The target file path of (ECS) instance.
     */
    readonly targetPath?: pulumi.Input<string>;
    /**
     * The target of the OSS object prefix.
     */
    readonly targetPrefix?: pulumi.Input<string>;
    /**
     * The ID of backup vault.
     */
    readonly vaultId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RestoreJob resource.
 */
export interface RestoreJobArgs {
    /**
     * The exclude path. It's a json string with format:`["/home", "/exclude"]`.
     */
    readonly exclude?: pulumi.Input<string>;
    /**
     * The include path. It's a json string with format:`["/home", "/include"]`.
     */
    readonly include?: pulumi.Input<string>;
    /**
     * Recovery options. It's a json string with format:`"{"includes":[],"excludes":[]}",`.
     */
    readonly options?: pulumi.Input<string>;
    /**
     * Restore Job ID. It's the unique key of this resource, you must specify a unique keyword.
     */
    readonly restoreJobId: pulumi.Input<string>;
    /**
     * The type of recovery destination. Valid values: `ECS_FILE`, `NAS`, `OSS`. **Note**: Currently, there is a one-to-one correspondence between the data source type with the recovery destination type.
     */
    readonly restoreType: pulumi.Input<string>;
    /**
     * The hashcode of restore Snapshot.
     */
    readonly snapshotHash: pulumi.Input<string>;
    /**
     * The ID of Snapshot.
     */
    readonly snapshotId: pulumi.Input<string>;
    /**
     * The type of data source. Valid values: `ECS_FILE`, `NAS`, `OSS`.
     */
    readonly sourceType: pulumi.Input<string>;
    /**
     * The target ofo OSS bucket name.
     */
    readonly targetBucket?: pulumi.Input<string>;
    readonly targetClientId?: pulumi.Input<string>;
    readonly targetContainer?: pulumi.Input<string>;
    readonly targetContainerClusterId?: pulumi.Input<string>;
    /**
     * The creation Time of destination File System. While sourceType equals `NAS`, this parameter must be set. **Note** The time format of the API adopts the ISO 8601 format, such as `2021-07-09T15:45:30CST` or `2021-07-09T07:45:30Z`.
     */
    readonly targetCreateTime?: pulumi.Input<string>;
    readonly targetDataSourceId?: pulumi.Input<string>;
    /**
     * The ID of destination File System.
     */
    readonly targetFileSystemId?: pulumi.Input<string>;
    /**
     * The target ID of ECS instance.
     */
    readonly targetInstanceId?: pulumi.Input<string>;
    /**
     * The target file path of (ECS) instance.
     */
    readonly targetPath?: pulumi.Input<string>;
    /**
     * The target of the OSS object prefix.
     */
    readonly targetPrefix?: pulumi.Input<string>;
    /**
     * The ID of backup vault.
     */
    readonly vaultId: pulumi.Input<string>;
}
