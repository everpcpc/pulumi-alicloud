"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * ~> **NOTE:** This resource name has been replaced by [`alicloud_cs_swarm`](https://www.terraform.io/docs/providers/alicloud/r/cs_swarm.html) from [version 1.8.2](https://releases.hashicorp.com/terraform-provider-alicloud/1.8.2/).
 * Please update it.
 */
class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state) {
        return new Cluster(name, state, { id });
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["agentVersion"] = state ? state.agentVersion : undefined;
            inputs["cidrBlock"] = state ? state.cidrBlock : undefined;
            inputs["diskCategory"] = state ? state.diskCategory : undefined;
            inputs["diskSize"] = state ? state.diskSize : undefined;
            inputs["imageId"] = state ? state.imageId : undefined;
            inputs["instanceType"] = state ? state.instanceType : undefined;
            inputs["isOutdated"] = state ? state.isOutdated : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["namePrefix"] = state ? state.namePrefix : undefined;
            inputs["needSlb"] = state ? state.needSlb : undefined;
            inputs["nodeNumber"] = state ? state.nodeNumber : undefined;
            inputs["nodes"] = state ? state.nodes : undefined;
            inputs["password"] = state ? state.password : undefined;
            inputs["releaseEip"] = state ? state.releaseEip : undefined;
            inputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            inputs["size"] = state ? state.size : undefined;
            inputs["slbId"] = state ? state.slbId : undefined;
            inputs["vpcId"] = state ? state.vpcId : undefined;
            inputs["vswitchId"] = state ? state.vswitchId : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.cidrBlock === undefined) {
                throw new Error("Missing required property 'cidrBlock'");
            }
            if (!args || args.instanceType === undefined) {
                throw new Error("Missing required property 'instanceType'");
            }
            if (!args || args.password === undefined) {
                throw new Error("Missing required property 'password'");
            }
            if (!args || args.vswitchId === undefined) {
                throw new Error("Missing required property 'vswitchId'");
            }
            inputs["cidrBlock"] = args ? args.cidrBlock : undefined;
            inputs["diskCategory"] = args ? args.diskCategory : undefined;
            inputs["diskSize"] = args ? args.diskSize : undefined;
            inputs["imageId"] = args ? args.imageId : undefined;
            inputs["instanceType"] = args ? args.instanceType : undefined;
            inputs["isOutdated"] = args ? args.isOutdated : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["namePrefix"] = args ? args.namePrefix : undefined;
            inputs["needSlb"] = args ? args.needSlb : undefined;
            inputs["nodeNumber"] = args ? args.nodeNumber : undefined;
            inputs["password"] = args ? args.password : undefined;
            inputs["releaseEip"] = args ? args.releaseEip : undefined;
            inputs["size"] = args ? args.size : undefined;
            inputs["vswitchId"] = args ? args.vswitchId : undefined;
            inputs["agentVersion"] = undefined /*out*/;
            inputs["nodes"] = undefined /*out*/;
            inputs["securityGroupId"] = undefined /*out*/;
            inputs["slbId"] = undefined /*out*/;
            inputs["vpcId"] = undefined /*out*/;
        }
        super("alicloud:cs/cluster:Cluster", name, inputs, opts);
    }
}
exports.Cluster = Cluster;
//# sourceMappingURL=cluster.js.map