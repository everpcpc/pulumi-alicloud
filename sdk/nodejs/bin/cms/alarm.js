"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * This resource provides a alarm rule resource and it can be used to monitor several cloud services according different metrics.
 * Details for [alarm rule](https://www.alibabacloud.com/help/doc-detail/28608.htm).
 */
class Alarm extends pulumi.CustomResource {
    /**
     * Get an existing Alarm resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state) {
        return new Alarm(name, state, { id });
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["contactGroups"] = state ? state.contactGroups : undefined;
            inputs["dimensions"] = state ? state.dimensions : undefined;
            inputs["enabled"] = state ? state.enabled : undefined;
            inputs["endTime"] = state ? state.endTime : undefined;
            inputs["metric"] = state ? state.metric : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["notifyType"] = state ? state.notifyType : undefined;
            inputs["operator"] = state ? state.operator : undefined;
            inputs["period"] = state ? state.period : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["silenceTime"] = state ? state.silenceTime : undefined;
            inputs["startTime"] = state ? state.startTime : undefined;
            inputs["statistics"] = state ? state.statistics : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["threshold"] = state ? state.threshold : undefined;
            inputs["triggeredCount"] = state ? state.triggeredCount : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.contactGroups === undefined) {
                throw new Error("Missing required property 'contactGroups'");
            }
            if (!args || args.dimensions === undefined) {
                throw new Error("Missing required property 'dimensions'");
            }
            if (!args || args.metric === undefined) {
                throw new Error("Missing required property 'metric'");
            }
            if (!args || args.project === undefined) {
                throw new Error("Missing required property 'project'");
            }
            if (!args || args.threshold === undefined) {
                throw new Error("Missing required property 'threshold'");
            }
            inputs["contactGroups"] = args ? args.contactGroups : undefined;
            inputs["dimensions"] = args ? args.dimensions : undefined;
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["endTime"] = args ? args.endTime : undefined;
            inputs["metric"] = args ? args.metric : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["notifyType"] = args ? args.notifyType : undefined;
            inputs["operator"] = args ? args.operator : undefined;
            inputs["period"] = args ? args.period : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["silenceTime"] = args ? args.silenceTime : undefined;
            inputs["startTime"] = args ? args.startTime : undefined;
            inputs["statistics"] = args ? args.statistics : undefined;
            inputs["threshold"] = args ? args.threshold : undefined;
            inputs["triggeredCount"] = args ? args.triggeredCount : undefined;
            inputs["status"] = undefined /*out*/;
        }
        super("alicloud:cms/alarm:Alarm", name, inputs, opts);
    }
}
exports.Alarm = Alarm;
//# sourceMappingURL=alarm.js.map