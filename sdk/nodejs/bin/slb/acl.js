"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * An access control list contains multiple IP addresses or CIDR blocks.
 * The access control list can help you to define multiple instance listening dimension,
 * and to meet the multiple usage for single access control list.
 *
 * Server Load Balancer allows you to configure access control for listeners.
 * You can configure different whitelists or blacklists for different listeners.
 *
 * You can configure access control
 * when you create a listener or change access control configuration after a listener is created.
 *
 * ~> **NOTE:** One access control list can be attached to many Listeners in different load balancer as whitelists or blacklists.
 *
 * ~> **NOTE:** The maximum number of access control lists per region  is 50.
 *
 * ~> **NOTE:** The maximum number of IP addresses added each time is 50.
 *
 * ~> **NOTE:** The maximum number of entries per access control list is 300.
 *
 * ~> **NOTE:** The maximum number of listeners that an access control list can be added to is 50.
 *
 * For information about slb and how to use it, see [What is Server Load Balancer](https://www.alibabacloud.com/help/doc-detail/27539.htm).
 *
 * For information about acl and how to use it, see [Configure an access control list](https://www.alibabacloud.com/help/doc-detail/85978.htm).
 *
 */
class Acl extends pulumi.CustomResource {
    /**
     * Get an existing Acl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state) {
        return new Acl(name, state, { id });
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["entryLists"] = state ? state.entryLists : undefined;
            inputs["ipVersion"] = state ? state.ipVersion : undefined;
            inputs["name"] = state ? state.name : undefined;
        }
        else {
            const args = argsOrState;
            inputs["entryLists"] = args ? args.entryLists : undefined;
            inputs["ipVersion"] = args ? args.ipVersion : undefined;
            inputs["name"] = args ? args.name : undefined;
        }
        super("alicloud:slb/acl:Acl", name, inputs, opts);
    }
}
exports.Acl = Acl;
//# sourceMappingURL=acl.js.map