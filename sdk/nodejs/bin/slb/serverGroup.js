"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * A virtual server group contains several ECS instances. The virtual server group can help you to define multiple listening dimension,
 * and to meet the personalized requirements of domain name and URL forwarding.
 *
 * ~> **NOTE:** One ECS instance can be added into multiple virtual server groups.
 *
 * ~> **NOTE:** One virtual server group can be attached with multiple listeners in one load balancer.
 *
 * ~> **NOTE:** One Classic and Internet load balancer, its virtual server group can add Classic and VPC ECS instances.
 *
 * ~> **NOTE:** One Classic and Intranet load balancer, its virtual server group can only add Classic ECS instances.
 *
 * ~> **NOTE:** One VPC load balancer, its virtual server group can only add the same VPC ECS instances.
 */
class ServerGroup extends pulumi.CustomResource {
    /**
     * Get an existing ServerGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state) {
        return new ServerGroup(name, state, { id });
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["loadBalancerId"] = state ? state.loadBalancerId : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["servers"] = state ? state.servers : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.loadBalancerId === undefined) {
                throw new Error("Missing required property 'loadBalancerId'");
            }
            inputs["loadBalancerId"] = args ? args.loadBalancerId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["servers"] = args ? args.servers : undefined;
        }
        super("alicloud:slb/serverGroup:ServerGroup", name, inputs, opts);
    }
}
exports.ServerGroup = ServerGroup;
//# sourceMappingURL=serverGroup.js.map