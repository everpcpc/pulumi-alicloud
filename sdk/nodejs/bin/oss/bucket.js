"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * Provides a resource to create a oss bucket and set its attribution.
 *
 * ~> **NOTE:** The bucket namespace is shared by all users of the OSS system. Please set bucket name as unique as possible.
 *
 */
class Bucket extends pulumi.CustomResource {
    /**
     * Get an existing Bucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state) {
        return new Bucket(name, state, { id });
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["acl"] = state ? state.acl : undefined;
            inputs["bucket"] = state ? state.bucket : undefined;
            inputs["corsRules"] = state ? state.corsRules : undefined;
            inputs["creationDate"] = state ? state.creationDate : undefined;
            inputs["extranetEndpoint"] = state ? state.extranetEndpoint : undefined;
            inputs["intranetEndpoint"] = state ? state.intranetEndpoint : undefined;
            inputs["lifecycleRules"] = state ? state.lifecycleRules : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["logging"] = state ? state.logging : undefined;
            inputs["loggingIsenable"] = state ? state.loggingIsenable : undefined;
            inputs["owner"] = state ? state.owner : undefined;
            inputs["refererConfig"] = state ? state.refererConfig : undefined;
            inputs["storageClass"] = state ? state.storageClass : undefined;
            inputs["website"] = state ? state.website : undefined;
        }
        else {
            const args = argsOrState;
            inputs["acl"] = args ? args.acl : undefined;
            inputs["bucket"] = args ? args.bucket : undefined;
            inputs["corsRules"] = args ? args.corsRules : undefined;
            inputs["lifecycleRules"] = args ? args.lifecycleRules : undefined;
            inputs["logging"] = args ? args.logging : undefined;
            inputs["loggingIsenable"] = args ? args.loggingIsenable : undefined;
            inputs["refererConfig"] = args ? args.refererConfig : undefined;
            inputs["website"] = args ? args.website : undefined;
            inputs["creationDate"] = undefined /*out*/;
            inputs["extranetEndpoint"] = undefined /*out*/;
            inputs["intranetEndpoint"] = undefined /*out*/;
            inputs["location"] = undefined /*out*/;
            inputs["owner"] = undefined /*out*/;
            inputs["storageClass"] = undefined /*out*/;
        }
        super("alicloud:oss/bucket:Bucket", name, inputs, opts);
    }
}
exports.Bucket = Bucket;
//# sourceMappingURL=bucket.js.map