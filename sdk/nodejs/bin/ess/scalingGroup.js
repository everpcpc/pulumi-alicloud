"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * Provides a ESS scaling group resource which is a collection of ECS instances with the same application scenarios.
 *
 * It defines the maximum and minimum numbers of ECS instances in the group, and their associated Server Load Balancer instances, RDS instances, and other attributes.
 *
 * ~> **NOTE:** You can launch an ESS scaling group for a VPC network via specifying parameter `vswitch_ids`.
 */
class ScalingGroup extends pulumi.CustomResource {
    /**
     * Get an existing ScalingGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state) {
        return new ScalingGroup(name, state, { id });
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["dbInstanceIds"] = state ? state.dbInstanceIds : undefined;
            inputs["defaultCooldown"] = state ? state.defaultCooldown : undefined;
            inputs["loadbalancerIds"] = state ? state.loadbalancerIds : undefined;
            inputs["maxSize"] = state ? state.maxSize : undefined;
            inputs["minSize"] = state ? state.minSize : undefined;
            inputs["multiAzPolicy"] = state ? state.multiAzPolicy : undefined;
            inputs["removalPolicies"] = state ? state.removalPolicies : undefined;
            inputs["scalingGroupName"] = state ? state.scalingGroupName : undefined;
            inputs["vswitchId"] = state ? state.vswitchId : undefined;
            inputs["vswitchIds"] = state ? state.vswitchIds : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.maxSize === undefined) {
                throw new Error("Missing required property 'maxSize'");
            }
            if (!args || args.minSize === undefined) {
                throw new Error("Missing required property 'minSize'");
            }
            inputs["dbInstanceIds"] = args ? args.dbInstanceIds : undefined;
            inputs["defaultCooldown"] = args ? args.defaultCooldown : undefined;
            inputs["loadbalancerIds"] = args ? args.loadbalancerIds : undefined;
            inputs["maxSize"] = args ? args.maxSize : undefined;
            inputs["minSize"] = args ? args.minSize : undefined;
            inputs["multiAzPolicy"] = args ? args.multiAzPolicy : undefined;
            inputs["removalPolicies"] = args ? args.removalPolicies : undefined;
            inputs["scalingGroupName"] = args ? args.scalingGroupName : undefined;
            inputs["vswitchId"] = args ? args.vswitchId : undefined;
            inputs["vswitchIds"] = args ? args.vswitchIds : undefined;
        }
        super("alicloud:ess/scalingGroup:ScalingGroup", name, inputs, opts);
    }
}
exports.ScalingGroup = ScalingGroup;
//# sourceMappingURL=scalingGroup.js.map