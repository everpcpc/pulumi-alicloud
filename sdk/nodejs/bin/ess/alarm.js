"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * Provides a ESS alarm task resource.
 */
class Alarm extends pulumi.CustomResource {
    /**
     * Get an existing Alarm resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state) {
        return new Alarm(name, state, { id });
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["alarmActions"] = state ? state.alarmActions : undefined;
            inputs["cloudMonitorGroupId"] = state ? state.cloudMonitorGroupId : undefined;
            inputs["comparisonOperator"] = state ? state.comparisonOperator : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["dimensions"] = state ? state.dimensions : undefined;
            inputs["evaluationCount"] = state ? state.evaluationCount : undefined;
            inputs["metricName"] = state ? state.metricName : undefined;
            inputs["metricType"] = state ? state.metricType : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["period"] = state ? state.period : undefined;
            inputs["scalingGroupId"] = state ? state.scalingGroupId : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["statistics"] = state ? state.statistics : undefined;
            inputs["threshold"] = state ? state.threshold : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.alarmActions === undefined) {
                throw new Error("Missing required property 'alarmActions'");
            }
            if (!args || args.metricName === undefined) {
                throw new Error("Missing required property 'metricName'");
            }
            if (!args || args.scalingGroupId === undefined) {
                throw new Error("Missing required property 'scalingGroupId'");
            }
            if (!args || args.threshold === undefined) {
                throw new Error("Missing required property 'threshold'");
            }
            inputs["alarmActions"] = args ? args.alarmActions : undefined;
            inputs["cloudMonitorGroupId"] = args ? args.cloudMonitorGroupId : undefined;
            inputs["comparisonOperator"] = args ? args.comparisonOperator : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["dimensions"] = args ? args.dimensions : undefined;
            inputs["evaluationCount"] = args ? args.evaluationCount : undefined;
            inputs["metricName"] = args ? args.metricName : undefined;
            inputs["metricType"] = args ? args.metricType : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["period"] = args ? args.period : undefined;
            inputs["scalingGroupId"] = args ? args.scalingGroupId : undefined;
            inputs["statistics"] = args ? args.statistics : undefined;
            inputs["threshold"] = args ? args.threshold : undefined;
            inputs["state"] = undefined /*out*/;
        }
        super("alicloud:ess/alarm:Alarm", name, inputs, opts);
    }
}
exports.Alarm = Alarm;
//# sourceMappingURL=alarm.js.map