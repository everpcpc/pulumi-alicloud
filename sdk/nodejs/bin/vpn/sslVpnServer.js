"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * Provides a SSL VPN server resource. [Refer to details](https://www.alibabacloud.com/help/doc-detail/64960.htm)
 *
 * ~> **NOTE:** Terraform will auto build ssl vpn server while it uses `alicloud_ssl_vpn_server` to build a ssl vpn server resource.
 */
class SslVpnServer extends pulumi.CustomResource {
    /**
     * Get an existing SslVpnServer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state) {
        return new SslVpnServer(name, state, { id });
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["cipher"] = state ? state.cipher : undefined;
            inputs["clientIpPool"] = state ? state.clientIpPool : undefined;
            inputs["compress"] = state ? state.compress : undefined;
            inputs["connections"] = state ? state.connections : undefined;
            inputs["internetIp"] = state ? state.internetIp : undefined;
            inputs["localSubnet"] = state ? state.localSubnet : undefined;
            inputs["maxConnections"] = state ? state.maxConnections : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["port"] = state ? state.port : undefined;
            inputs["protocol"] = state ? state.protocol : undefined;
            inputs["vpnGatewayId"] = state ? state.vpnGatewayId : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.clientIpPool === undefined) {
                throw new Error("Missing required property 'clientIpPool'");
            }
            if (!args || args.localSubnet === undefined) {
                throw new Error("Missing required property 'localSubnet'");
            }
            if (!args || args.vpnGatewayId === undefined) {
                throw new Error("Missing required property 'vpnGatewayId'");
            }
            inputs["cipher"] = args ? args.cipher : undefined;
            inputs["clientIpPool"] = args ? args.clientIpPool : undefined;
            inputs["compress"] = args ? args.compress : undefined;
            inputs["localSubnet"] = args ? args.localSubnet : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["port"] = args ? args.port : undefined;
            inputs["protocol"] = args ? args.protocol : undefined;
            inputs["vpnGatewayId"] = args ? args.vpnGatewayId : undefined;
            inputs["connections"] = undefined /*out*/;
            inputs["internetIp"] = undefined /*out*/;
            inputs["maxConnections"] = undefined /*out*/;
        }
        super("alicloud:vpn/sslVpnServer:SslVpnServer", name, inputs, opts);
    }
}
exports.SslVpnServer = SslVpnServer;
//# sourceMappingURL=sslVpnServer.js.map