"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * Provides a SSL VPN client cert resource.
 *
 * ~> **NOTE:** Terraform will auto build SSL VPN client certs  while it uses `alicloud_ssl_vpn_client_cert` to build a ssl vpn client certs resource.
 *              It depends on VPN instance and SSL VPN Server.
 */
class SslVpnClientCert extends pulumi.CustomResource {
    /**
     * Get an existing SslVpnClientCert resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state) {
        return new SslVpnClientCert(name, state, { id });
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["name"] = state ? state.name : undefined;
            inputs["sslVpnServerId"] = state ? state.sslVpnServerId : undefined;
            inputs["status"] = state ? state.status : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.sslVpnServerId === undefined) {
                throw new Error("Missing required property 'sslVpnServerId'");
            }
            inputs["name"] = args ? args.name : undefined;
            inputs["sslVpnServerId"] = args ? args.sslVpnServerId : undefined;
            inputs["status"] = undefined /*out*/;
        }
        super("alicloud:vpn/sslVpnClientCert:SslVpnClientCert", name, inputs, opts);
    }
}
exports.SslVpnClientCert = SslVpnClientCert;
//# sourceMappingURL=sslVpnClientCert.js.map