// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class CopyImage extends pulumi.CustomResource {
    /**
     * Get an existing CopyImage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CopyImageState, opts?: pulumi.CustomResourceOptions): CopyImage {
        return new CopyImage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:ecs/copyImage:CopyImage';

    /**
     * Returns true if the given object is an instance of CopyImage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CopyImage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CopyImage.__pulumiType;
    }

    public readonly description!: pulumi.Output<string | undefined>;
    public readonly encrypted!: pulumi.Output<boolean | undefined>;
    public readonly force!: pulumi.Output<boolean | undefined>;
    public readonly imageName!: pulumi.Output<string>;
    public readonly kmsKeyId!: pulumi.Output<string | undefined>;
    /**
     * @deprecated Attribute 'name' has been deprecated from version 1.69.0. Use `image_name` instead.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly sourceImageId!: pulumi.Output<string>;
    public readonly sourceRegionId!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;

    /**
     * Create a CopyImage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CopyImageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CopyImageArgs | CopyImageState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as CopyImageState | undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["encrypted"] = state ? state.encrypted : undefined;
            inputs["force"] = state ? state.force : undefined;
            inputs["imageName"] = state ? state.imageName : undefined;
            inputs["kmsKeyId"] = state ? state.kmsKeyId : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["sourceImageId"] = state ? state.sourceImageId : undefined;
            inputs["sourceRegionId"] = state ? state.sourceRegionId : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as CopyImageArgs | undefined;
            if (!args || args.sourceImageId === undefined) {
                throw new Error("Missing required property 'sourceImageId'");
            }
            if (!args || args.sourceRegionId === undefined) {
                throw new Error("Missing required property 'sourceRegionId'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["encrypted"] = args ? args.encrypted : undefined;
            inputs["force"] = args ? args.force : undefined;
            inputs["imageName"] = args ? args.imageName : undefined;
            inputs["kmsKeyId"] = args ? args.kmsKeyId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["sourceImageId"] = args ? args.sourceImageId : undefined;
            inputs["sourceRegionId"] = args ? args.sourceRegionId : undefined;
            inputs["tags"] = args ? args.tags : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(CopyImage.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CopyImage resources.
 */
export interface CopyImageState {
    readonly description?: pulumi.Input<string>;
    readonly encrypted?: pulumi.Input<boolean>;
    readonly force?: pulumi.Input<boolean>;
    readonly imageName?: pulumi.Input<string>;
    readonly kmsKeyId?: pulumi.Input<string>;
    /**
     * @deprecated Attribute 'name' has been deprecated from version 1.69.0. Use `image_name` instead.
     */
    readonly name?: pulumi.Input<string>;
    readonly sourceImageId?: pulumi.Input<string>;
    readonly sourceRegionId?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<{[key: string]: any}>;
}

/**
 * The set of arguments for constructing a CopyImage resource.
 */
export interface CopyImageArgs {
    readonly description?: pulumi.Input<string>;
    readonly encrypted?: pulumi.Input<boolean>;
    readonly force?: pulumi.Input<boolean>;
    readonly imageName?: pulumi.Input<string>;
    readonly kmsKeyId?: pulumi.Input<string>;
    /**
     * @deprecated Attribute 'name' has been deprecated from version 1.69.0. Use `image_name` instead.
     */
    readonly name?: pulumi.Input<string>;
    readonly sourceImageId: pulumi.Input<string>;
    readonly sourceRegionId: pulumi.Input<string>;
    readonly tags?: pulumi.Input<{[key: string]: any}>;
}
