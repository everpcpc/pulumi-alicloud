// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a new resource to manage [Action Trail](https://www.alibabacloud.com/help/doc-detail/28804.htm).
 *
 * > **NOTE:** Available in 1.35.0+
 *
 * ## Example Usage
 *
 *
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * // Create a new action trail.
 * const foo = new alicloud.actiontrail.Trail("foo", {
 *     eventRw: "Write-test",
 *     ossBucketName: alicloud_oss_bucket_bucket.id,
 *     ossKeyPrefix: "at-product-account-audit-B",
 *     roleName: alicloud_ram_role_policy_attachment_attach.roleName,
 * });
 * ```
 */
export class Trail extends pulumi.CustomResource {
    /**
     * Get an existing Trail resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TrailState, opts?: pulumi.CustomResourceOptions): Trail {
        return new Trail(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:actiontrail/trail:Trail';

    /**
     * Returns true if the given object is an instance of Trail.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Trail {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Trail.__pulumiType;
    }

    /**
     * Indicates whether the event is a read or a write event. Valid values: Read, Write, and All. Default value: Write.
     */
    public readonly eventRw!: pulumi.Output<string | undefined>;
    /**
     * The name of the trail to be created, which must be unique for an account.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The OSS bucket to which the trail delivers logs. Ensure that this is an existing OSS bucket.
     */
    public readonly ossBucketName!: pulumi.Output<string>;
    /**
     * The prefix of the specified OSS bucket name. This parameter can be left empty.
     */
    public readonly ossKeyPrefix!: pulumi.Output<string | undefined>;
    /**
     * The RAM role in ActionTrail permitted by the user.
     */
    public readonly roleName!: pulumi.Output<string>;
    /**
     * The unique ARN of the Log Service project.
     */
    public readonly slsProjectArn!: pulumi.Output<string | undefined>;
    /**
     * The unique ARN of the Log Service role.
     */
    public readonly slsWriteRoleArn!: pulumi.Output<string | undefined>;

    /**
     * Create a Trail resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TrailArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TrailArgs | TrailState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as TrailState | undefined;
            inputs["eventRw"] = state ? state.eventRw : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["ossBucketName"] = state ? state.ossBucketName : undefined;
            inputs["ossKeyPrefix"] = state ? state.ossKeyPrefix : undefined;
            inputs["roleName"] = state ? state.roleName : undefined;
            inputs["slsProjectArn"] = state ? state.slsProjectArn : undefined;
            inputs["slsWriteRoleArn"] = state ? state.slsWriteRoleArn : undefined;
        } else {
            const args = argsOrState as TrailArgs | undefined;
            if (!args || args.ossBucketName === undefined) {
                throw new Error("Missing required property 'ossBucketName'");
            }
            if (!args || args.roleName === undefined) {
                throw new Error("Missing required property 'roleName'");
            }
            inputs["eventRw"] = args ? args.eventRw : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["ossBucketName"] = args ? args.ossBucketName : undefined;
            inputs["ossKeyPrefix"] = args ? args.ossKeyPrefix : undefined;
            inputs["roleName"] = args ? args.roleName : undefined;
            inputs["slsProjectArn"] = args ? args.slsProjectArn : undefined;
            inputs["slsWriteRoleArn"] = args ? args.slsWriteRoleArn : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Trail.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Trail resources.
 */
export interface TrailState {
    /**
     * Indicates whether the event is a read or a write event. Valid values: Read, Write, and All. Default value: Write.
     */
    readonly eventRw?: pulumi.Input<string>;
    /**
     * The name of the trail to be created, which must be unique for an account.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The OSS bucket to which the trail delivers logs. Ensure that this is an existing OSS bucket.
     */
    readonly ossBucketName?: pulumi.Input<string>;
    /**
     * The prefix of the specified OSS bucket name. This parameter can be left empty.
     */
    readonly ossKeyPrefix?: pulumi.Input<string>;
    /**
     * The RAM role in ActionTrail permitted by the user.
     */
    readonly roleName?: pulumi.Input<string>;
    /**
     * The unique ARN of the Log Service project.
     */
    readonly slsProjectArn?: pulumi.Input<string>;
    /**
     * The unique ARN of the Log Service role.
     */
    readonly slsWriteRoleArn?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Trail resource.
 */
export interface TrailArgs {
    /**
     * Indicates whether the event is a read or a write event. Valid values: Read, Write, and All. Default value: Write.
     */
    readonly eventRw?: pulumi.Input<string>;
    /**
     * The name of the trail to be created, which must be unique for an account.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The OSS bucket to which the trail delivers logs. Ensure that this is an existing OSS bucket.
     */
    readonly ossBucketName: pulumi.Input<string>;
    /**
     * The prefix of the specified OSS bucket name. This parameter can be left empty.
     */
    readonly ossKeyPrefix?: pulumi.Input<string>;
    /**
     * The RAM role in ActionTrail permitted by the user.
     */
    readonly roleName: pulumi.Input<string>;
    /**
     * The unique ARN of the Log Service project.
     */
    readonly slsProjectArn?: pulumi.Input<string>;
    /**
     * The unique ARN of the Log Service role.
     */
    readonly slsWriteRoleArn?: pulumi.Input<string>;
}
