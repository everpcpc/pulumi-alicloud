// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a RAM role attachment resource to bind role for several ECS instances.
 */
export class RoleAttachment extends pulumi.CustomResource {
    /**
     * Get an existing RoleAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoleAttachmentState): RoleAttachment {
        return new RoleAttachment(name, <any>state, { id });
    }

    /**
     * The list of ECS instance's IDs.
     */
    public readonly instanceIds: pulumi.Output<string[]>;
    /**
     * The name of role used to bind. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphens, such as "-", "_", and must not begin with a hyphen.
     */
    public readonly roleName: pulumi.Output<string>;

    /**
     * Create a RoleAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoleAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoleAttachmentArgs | RoleAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: RoleAttachmentState = argsOrState as RoleAttachmentState | undefined;
            inputs["instanceIds"] = state ? state.instanceIds : undefined;
            inputs["roleName"] = state ? state.roleName : undefined;
        } else {
            const args = argsOrState as RoleAttachmentArgs | undefined;
            if (!args || args.instanceIds === undefined) {
                throw new Error("Missing required property 'instanceIds'");
            }
            if (!args || args.roleName === undefined) {
                throw new Error("Missing required property 'roleName'");
            }
            inputs["instanceIds"] = args ? args.instanceIds : undefined;
            inputs["roleName"] = args ? args.roleName : undefined;
        }
        super("alicloud:ram/roleAttachment:RoleAttachment", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RoleAttachment resources.
 */
export interface RoleAttachmentState {
    /**
     * The list of ECS instance's IDs.
     */
    readonly instanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of role used to bind. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphens, such as "-", "_", and must not begin with a hyphen.
     */
    readonly roleName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RoleAttachment resource.
 */
export interface RoleAttachmentArgs {
    /**
     * The list of ECS instance's IDs.
     */
    readonly instanceIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of role used to bind. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphens, such as "-", "_", and must not begin with a hyphen.
     */
    readonly roleName: pulumi.Input<string>;
}
