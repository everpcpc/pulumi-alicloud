// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./getAccount";
export * from "./getCallerIdentity";
export * from "./getFileCrc64Checksum";
export * from "./getMscSubContracts";
export * from "./getRegions";
export * from "./getZones";
export * from "./mscSubContract";
export * from "./provider";

// Export sub-modules:
import * as actiontrail from "./actiontrail";
import * as adb from "./adb";
import * as alb from "./alb";
import * as alikafka from "./alikafka";
import * as amqp from "./amqp";
import * as apigateway from "./apigateway";
import * as arms from "./arms";
import * as bastionhost from "./bastionhost";
import * as brain from "./brain";
import * as cas from "./cas";
import * as cassandra from "./cassandra";
import * as cddc from "./cddc";
import * as cdn from "./cdn";
import * as cen from "./cen";
import * as cfg from "./cfg";
import * as cloudconnect from "./cloudconnect";
import * as cloudfirewall from "./cloudfirewall";
import * as cloudstoragegateway from "./cloudstoragegateway";
import * as cms from "./cms";
import * as config from "./config";
import * as cr from "./cr";
import * as cs from "./cs";
import * as datahub from "./datahub";
import * as dataworks from "./dataworks";
import * as dcdn from "./dcdn";
import * as ddos from "./ddos";
import * as dds from "./dds";
import * as directmail from "./directmail";
import * as dms from "./dms";
import * as dns from "./dns";
import * as drds from "./drds";
import * as eci from "./eci";
import * as ecp from "./ecp";
import * as ecs from "./ecs";
import * as edas from "./edas";
import * as eds from "./eds";
import * as eipanycast from "./eipanycast";
import * as elasticsearch from "./elasticsearch";
import * as emr from "./emr";
import * as ess from "./ess";
import * as eventbridge from "./eventbridge";
import * as expressconnect from "./expressconnect";
import * as fc from "./fc";
import * as fnf from "./fnf";
import * as ga from "./ga";
import * as gpdb from "./gpdb";
import * as hbase from "./hbase";
import * as hbr from "./hbr";
import * as iot from "./iot";
import * as kms from "./kms";
import * as kvstore from "./kvstore";
import * as lindorm from "./lindorm";
import * as log from "./log";
import * as marketplace from "./marketplace";
import * as maxcompute from "./maxcompute";
import * as mns from "./mns";
import * as mongodb from "./mongodb";
import * as mse from "./mse";
import * as nas from "./nas";
import * as oos from "./oos";
import * as oss from "./oss";
import * as ots from "./ots";
import * as polardb from "./polardb";
import * as privatelink from "./privatelink";
import * as pvtz from "./pvtz";
import * as quotas from "./quotas";
import * as ram from "./ram";
import * as rds from "./rds";
import * as resourcemanager from "./resourcemanager";
import * as rocketmq from "./rocketmq";
import * as ros from "./ros";
import * as sae from "./sae";
import * as sag from "./sag";
import * as scdn from "./scdn";
import * as sddp from "./sddp";
import * as slb from "./slb";
import * as tsdb from "./tsdb";
import * as types from "./types";
import * as videosurveillance from "./videosurveillance";
import * as vpc from "./vpc";
import * as vpn from "./vpn";
import * as waf from "./waf";
import * as yundun from "./yundun";

export {
    actiontrail,
    adb,
    alb,
    alikafka,
    amqp,
    apigateway,
    arms,
    bastionhost,
    brain,
    cas,
    cassandra,
    cddc,
    cdn,
    cen,
    cfg,
    cloudconnect,
    cloudfirewall,
    cloudstoragegateway,
    cms,
    config,
    cr,
    cs,
    datahub,
    dataworks,
    dcdn,
    ddos,
    dds,
    directmail,
    dms,
    dns,
    drds,
    eci,
    ecp,
    ecs,
    edas,
    eds,
    eipanycast,
    elasticsearch,
    emr,
    ess,
    eventbridge,
    expressconnect,
    fc,
    fnf,
    ga,
    gpdb,
    hbase,
    hbr,
    iot,
    kms,
    kvstore,
    lindorm,
    log,
    marketplace,
    maxcompute,
    mns,
    mongodb,
    mse,
    nas,
    oos,
    oss,
    ots,
    polardb,
    privatelink,
    pvtz,
    quotas,
    ram,
    rds,
    resourcemanager,
    rocketmq,
    ros,
    sae,
    sag,
    scdn,
    sddp,
    slb,
    tsdb,
    types,
    videosurveillance,
    vpc,
    vpn,
    waf,
    yundun,
};

// Import resources to register:
import { MscSubContract } from "./mscSubContract";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "alicloud:index/mscSubContract:MscSubContract":
                return new MscSubContract(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("alicloud", "index/mscSubContract", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("alicloud", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:alicloud") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
