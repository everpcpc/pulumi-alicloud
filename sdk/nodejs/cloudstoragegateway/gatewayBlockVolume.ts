// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Cloud Storage Gateway Gateway Block Volume resource.
 *
 * For information about Cloud Storage Gateway Gateway Block Volume and how to use it, see [What is Gateway Block Volume](https://www.alibabacloud.com/help/en/doc-detail/53972.htm).
 *
 * > **NOTE:** Available in v1.144.0+.
 *
 * ## Import
 *
 * Cloud Storage Gateway Gateway Block Volume can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:cloudstoragegateway/gatewayBlockVolume:GatewayBlockVolume example <gateway_id>:<index_id>
 * ```
 */
export class GatewayBlockVolume extends pulumi.CustomResource {
    /**
     * Get an existing GatewayBlockVolume resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GatewayBlockVolumeState, opts?: pulumi.CustomResourceOptions): GatewayBlockVolume {
        return new GatewayBlockVolume(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:cloudstoragegateway/gatewayBlockVolume:GatewayBlockVolume';

    /**
     * Returns true if the given object is an instance of GatewayBlockVolume.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GatewayBlockVolume {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GatewayBlockVolume.__pulumiType;
    }

    /**
     * The Block volume set mode to cache mode. Value values: `Cache`, `WriteThrough`.
     */
    public readonly cacheMode!: pulumi.Output<string>;
    /**
     * Whether to enable iSCSI access of CHAP authentication, which currently supports both CHAP inbound authentication.  Default value: `false`.
     */
    public readonly chapEnabled!: pulumi.Output<boolean>;
    /**
     * The password for inbound authentication when the block volume enables iSCSI access to CHAP authentication. **NOTE:** When the `chapEnabled` is  `true` is,The `chapInPassword` is valid.
     */
    public readonly chapInPassword!: pulumi.Output<string | undefined>;
    /**
     * The Inbound CHAP user. The `chapInUser` must be 1 to 32 characters in length, and can contain letters and digits. **NOTE:** When the `chapEnabled` is  `true` is,The `chapInPassword` is valid.
     */
    public readonly chapInUser!: pulumi.Output<string | undefined>;
    /**
     * The Block volume storage allocation unit.  Valid values: `8192`, `16384`, `32768`, `65536`, `131072`. Default value: `32768`. Unit: `Byte`.
     */
    public readonly chunkSize!: pulumi.Output<number>;
    /**
     * The Block volume name. The name must be 1 to 32 characters in length, and can contain lower case letters and digits.
     */
    public readonly gatewayBlockVolumeName!: pulumi.Output<string>;
    /**
     * The Gateway ID.
     */
    public readonly gatewayId!: pulumi.Output<string>;
    /**
     * The ID of the index.
     */
    public /*out*/ readonly indexId!: pulumi.Output<string>;
    /**
     * Whether to delete the source data. Default value `true`. **NOTE:** When `isSourceDeletion` is `true`, the data in the OSS Bucket on the cloud is also deleted when deleting the block gateway volume. Please operate with caution.
     */
    public readonly isSourceDeletion!: pulumi.Output<boolean | undefined>;
    /**
     * The Cache disk to local path. **NOTE:**  When the `cacheMode` is  `Cache` is,The `chapInPassword` is valid.
     */
    public readonly localPath!: pulumi.Output<string | undefined>;
    /**
     * The name of the OSS Bucket.
     */
    public readonly ossBucketName!: pulumi.Output<string>;
    /**
     * Whether to enable SSL access your OSS Buckets. Default value: `true`.
     */
    public readonly ossBucketSsl!: pulumi.Output<boolean>;
    /**
     * The endpoint of the OSS Bucket.
     */
    public readonly ossEndpoint!: pulumi.Output<string>;
    /**
     * The Protocol. Valid values: `iSCSI`.
     */
    public readonly protocol!: pulumi.Output<string>;
    /**
     * The recovery.
     */
    public readonly recovery!: pulumi.Output<boolean | undefined>;
    /**
     * The Volume size. Valid values: `1` to `262144`. Unit: `Byte`.
     */
    public readonly size!: pulumi.Output<number>;
    /**
     * The status of volume. Valid values: 
     * - `0`: Normal condition.
     * - `1`: Failed to create volume.
     * - `2`: Failed to delete volume.
     * - `3`: Failed to enable target.
     * - `4`: Failed to disable target.
     * - `5`: Database error.
     * - `6`: Failed to enable cache.
     * - `7`: Failed to disable cache.
     * - `8`: System error.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a GatewayBlockVolume resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GatewayBlockVolumeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GatewayBlockVolumeArgs | GatewayBlockVolumeState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GatewayBlockVolumeState | undefined;
            inputs["cacheMode"] = state ? state.cacheMode : undefined;
            inputs["chapEnabled"] = state ? state.chapEnabled : undefined;
            inputs["chapInPassword"] = state ? state.chapInPassword : undefined;
            inputs["chapInUser"] = state ? state.chapInUser : undefined;
            inputs["chunkSize"] = state ? state.chunkSize : undefined;
            inputs["gatewayBlockVolumeName"] = state ? state.gatewayBlockVolumeName : undefined;
            inputs["gatewayId"] = state ? state.gatewayId : undefined;
            inputs["indexId"] = state ? state.indexId : undefined;
            inputs["isSourceDeletion"] = state ? state.isSourceDeletion : undefined;
            inputs["localPath"] = state ? state.localPath : undefined;
            inputs["ossBucketName"] = state ? state.ossBucketName : undefined;
            inputs["ossBucketSsl"] = state ? state.ossBucketSsl : undefined;
            inputs["ossEndpoint"] = state ? state.ossEndpoint : undefined;
            inputs["protocol"] = state ? state.protocol : undefined;
            inputs["recovery"] = state ? state.recovery : undefined;
            inputs["size"] = state ? state.size : undefined;
            inputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as GatewayBlockVolumeArgs | undefined;
            if ((!args || args.gatewayBlockVolumeName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gatewayBlockVolumeName'");
            }
            if ((!args || args.gatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gatewayId'");
            }
            if ((!args || args.ossBucketName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ossBucketName'");
            }
            if ((!args || args.ossEndpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ossEndpoint'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            inputs["cacheMode"] = args ? args.cacheMode : undefined;
            inputs["chapEnabled"] = args ? args.chapEnabled : undefined;
            inputs["chapInPassword"] = args ? args.chapInPassword : undefined;
            inputs["chapInUser"] = args ? args.chapInUser : undefined;
            inputs["chunkSize"] = args ? args.chunkSize : undefined;
            inputs["gatewayBlockVolumeName"] = args ? args.gatewayBlockVolumeName : undefined;
            inputs["gatewayId"] = args ? args.gatewayId : undefined;
            inputs["isSourceDeletion"] = args ? args.isSourceDeletion : undefined;
            inputs["localPath"] = args ? args.localPath : undefined;
            inputs["ossBucketName"] = args ? args.ossBucketName : undefined;
            inputs["ossBucketSsl"] = args ? args.ossBucketSsl : undefined;
            inputs["ossEndpoint"] = args ? args.ossEndpoint : undefined;
            inputs["protocol"] = args ? args.protocol : undefined;
            inputs["recovery"] = args ? args.recovery : undefined;
            inputs["size"] = args ? args.size : undefined;
            inputs["indexId"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(GatewayBlockVolume.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GatewayBlockVolume resources.
 */
export interface GatewayBlockVolumeState {
    /**
     * The Block volume set mode to cache mode. Value values: `Cache`, `WriteThrough`.
     */
    cacheMode?: pulumi.Input<string>;
    /**
     * Whether to enable iSCSI access of CHAP authentication, which currently supports both CHAP inbound authentication.  Default value: `false`.
     */
    chapEnabled?: pulumi.Input<boolean>;
    /**
     * The password for inbound authentication when the block volume enables iSCSI access to CHAP authentication. **NOTE:** When the `chapEnabled` is  `true` is,The `chapInPassword` is valid.
     */
    chapInPassword?: pulumi.Input<string>;
    /**
     * The Inbound CHAP user. The `chapInUser` must be 1 to 32 characters in length, and can contain letters and digits. **NOTE:** When the `chapEnabled` is  `true` is,The `chapInPassword` is valid.
     */
    chapInUser?: pulumi.Input<string>;
    /**
     * The Block volume storage allocation unit.  Valid values: `8192`, `16384`, `32768`, `65536`, `131072`. Default value: `32768`. Unit: `Byte`.
     */
    chunkSize?: pulumi.Input<number>;
    /**
     * The Block volume name. The name must be 1 to 32 characters in length, and can contain lower case letters and digits.
     */
    gatewayBlockVolumeName?: pulumi.Input<string>;
    /**
     * The Gateway ID.
     */
    gatewayId?: pulumi.Input<string>;
    /**
     * The ID of the index.
     */
    indexId?: pulumi.Input<string>;
    /**
     * Whether to delete the source data. Default value `true`. **NOTE:** When `isSourceDeletion` is `true`, the data in the OSS Bucket on the cloud is also deleted when deleting the block gateway volume. Please operate with caution.
     */
    isSourceDeletion?: pulumi.Input<boolean>;
    /**
     * The Cache disk to local path. **NOTE:**  When the `cacheMode` is  `Cache` is,The `chapInPassword` is valid.
     */
    localPath?: pulumi.Input<string>;
    /**
     * The name of the OSS Bucket.
     */
    ossBucketName?: pulumi.Input<string>;
    /**
     * Whether to enable SSL access your OSS Buckets. Default value: `true`.
     */
    ossBucketSsl?: pulumi.Input<boolean>;
    /**
     * The endpoint of the OSS Bucket.
     */
    ossEndpoint?: pulumi.Input<string>;
    /**
     * The Protocol. Valid values: `iSCSI`.
     */
    protocol?: pulumi.Input<string>;
    /**
     * The recovery.
     */
    recovery?: pulumi.Input<boolean>;
    /**
     * The Volume size. Valid values: `1` to `262144`. Unit: `Byte`.
     */
    size?: pulumi.Input<number>;
    /**
     * The status of volume. Valid values: 
     * - `0`: Normal condition.
     * - `1`: Failed to create volume.
     * - `2`: Failed to delete volume.
     * - `3`: Failed to enable target.
     * - `4`: Failed to disable target.
     * - `5`: Database error.
     * - `6`: Failed to enable cache.
     * - `7`: Failed to disable cache.
     * - `8`: System error.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GatewayBlockVolume resource.
 */
export interface GatewayBlockVolumeArgs {
    /**
     * The Block volume set mode to cache mode. Value values: `Cache`, `WriteThrough`.
     */
    cacheMode?: pulumi.Input<string>;
    /**
     * Whether to enable iSCSI access of CHAP authentication, which currently supports both CHAP inbound authentication.  Default value: `false`.
     */
    chapEnabled?: pulumi.Input<boolean>;
    /**
     * The password for inbound authentication when the block volume enables iSCSI access to CHAP authentication. **NOTE:** When the `chapEnabled` is  `true` is,The `chapInPassword` is valid.
     */
    chapInPassword?: pulumi.Input<string>;
    /**
     * The Inbound CHAP user. The `chapInUser` must be 1 to 32 characters in length, and can contain letters and digits. **NOTE:** When the `chapEnabled` is  `true` is,The `chapInPassword` is valid.
     */
    chapInUser?: pulumi.Input<string>;
    /**
     * The Block volume storage allocation unit.  Valid values: `8192`, `16384`, `32768`, `65536`, `131072`. Default value: `32768`. Unit: `Byte`.
     */
    chunkSize?: pulumi.Input<number>;
    /**
     * The Block volume name. The name must be 1 to 32 characters in length, and can contain lower case letters and digits.
     */
    gatewayBlockVolumeName: pulumi.Input<string>;
    /**
     * The Gateway ID.
     */
    gatewayId: pulumi.Input<string>;
    /**
     * Whether to delete the source data. Default value `true`. **NOTE:** When `isSourceDeletion` is `true`, the data in the OSS Bucket on the cloud is also deleted when deleting the block gateway volume. Please operate with caution.
     */
    isSourceDeletion?: pulumi.Input<boolean>;
    /**
     * The Cache disk to local path. **NOTE:**  When the `cacheMode` is  `Cache` is,The `chapInPassword` is valid.
     */
    localPath?: pulumi.Input<string>;
    /**
     * The name of the OSS Bucket.
     */
    ossBucketName: pulumi.Input<string>;
    /**
     * Whether to enable SSL access your OSS Buckets. Default value: `true`.
     */
    ossBucketSsl?: pulumi.Input<boolean>;
    /**
     * The endpoint of the OSS Bucket.
     */
    ossEndpoint: pulumi.Input<string>;
    /**
     * The Protocol. Valid values: `iSCSI`.
     */
    protocol: pulumi.Input<string>;
    /**
     * The recovery.
     */
    recovery?: pulumi.Input<boolean>;
    /**
     * The Volume size. Valid values: `1` to `262144`. Unit: `Byte`.
     */
    size?: pulumi.Input<number>;
}
