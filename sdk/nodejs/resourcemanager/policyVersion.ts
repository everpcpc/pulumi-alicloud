// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Resource Manager Policy Version resource. 
 * For information about Resource Manager Policy Version and how to use it, see [What is Resource Manager Policy Version](https://www.alibabacloud.com/help/en/doc-detail/116817.htm).
 *
 * > **NOTE:** Available in v1.84.0+.
 *
 * ## Example Usage
 *
 *
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const examplePolicy = new alicloud.resourcemanager.Policy("examplePolicy", {
 *     policyName: "tftest",
 *     policyDocument: `		{
 * 			"Statement": [{
 * 				"Action": ["oss:*"],
 * 				"Effect": "Allow",
 * 				"Resource": ["acs:oss:*:*:*"]
 * 			}],
 * 			"Version": "1"
 * 		}
 * `,
 * });
 * const examplePolicyVersion = new alicloud.resourcemanager.PolicyVersion("examplePolicyVersion", {
 *     policyName: examplePolicy.policyName,
 *     policyDocument: `		{
 * 			"Statement": [{
 * 				"Action": ["oss:*"],
 * 				"Effect": "Allow",
 * 				"Resource": ["acs:oss:*:*:myphotos"]
 * 			}],
 * 			"Version": "1"
 * 		}
 * `,
 * });
 * ```
 */
export class PolicyVersion extends pulumi.CustomResource {
    /**
     * Get an existing PolicyVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyVersionState, opts?: pulumi.CustomResourceOptions): PolicyVersion {
        return new PolicyVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:resourcemanager/policyVersion:PolicyVersion';

    /**
     * Returns true if the given object is an instance of PolicyVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyVersion.__pulumiType;
    }

    /**
     * The time when the policy version was created.
     */
    public /*out*/ readonly createDate!: pulumi.Output<string>;
    /**
     * Specifies whether to set the policy version as the default version. Default to `false`. 
     */
    public readonly isDefaultVersion!: pulumi.Output<boolean | undefined>;
    /**
     * The content of the policy. The content must be 1 to 2,048 characters in length.
     */
    public readonly policyDocument!: pulumi.Output<string>;
    /**
     * The name of the policy. Name must be 1 to 128 characters in length and can contain letters, digits, and hyphens (-).
     */
    public readonly policyName!: pulumi.Output<string>;
    /**
     * The ID of the policy version.
     */
    public /*out*/ readonly versionId!: pulumi.Output<string>;

    /**
     * Create a PolicyVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyVersionArgs | PolicyVersionState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as PolicyVersionState | undefined;
            inputs["createDate"] = state ? state.createDate : undefined;
            inputs["isDefaultVersion"] = state ? state.isDefaultVersion : undefined;
            inputs["policyDocument"] = state ? state.policyDocument : undefined;
            inputs["policyName"] = state ? state.policyName : undefined;
            inputs["versionId"] = state ? state.versionId : undefined;
        } else {
            const args = argsOrState as PolicyVersionArgs | undefined;
            if (!args || args.policyDocument === undefined) {
                throw new Error("Missing required property 'policyDocument'");
            }
            if (!args || args.policyName === undefined) {
                throw new Error("Missing required property 'policyName'");
            }
            inputs["isDefaultVersion"] = args ? args.isDefaultVersion : undefined;
            inputs["policyDocument"] = args ? args.policyDocument : undefined;
            inputs["policyName"] = args ? args.policyName : undefined;
            inputs["createDate"] = undefined /*out*/;
            inputs["versionId"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(PolicyVersion.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PolicyVersion resources.
 */
export interface PolicyVersionState {
    /**
     * The time when the policy version was created.
     */
    readonly createDate?: pulumi.Input<string>;
    /**
     * Specifies whether to set the policy version as the default version. Default to `false`. 
     */
    readonly isDefaultVersion?: pulumi.Input<boolean>;
    /**
     * The content of the policy. The content must be 1 to 2,048 characters in length.
     */
    readonly policyDocument?: pulumi.Input<string>;
    /**
     * The name of the policy. Name must be 1 to 128 characters in length and can contain letters, digits, and hyphens (-).
     */
    readonly policyName?: pulumi.Input<string>;
    /**
     * The ID of the policy version.
     */
    readonly versionId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PolicyVersion resource.
 */
export interface PolicyVersionArgs {
    /**
     * Specifies whether to set the policy version as the default version. Default to `false`. 
     */
    readonly isDefaultVersion?: pulumi.Input<boolean>;
    /**
     * The content of the policy. The content must be 1 to 2,048 characters in length.
     */
    readonly policyDocument: pulumi.Input<string>;
    /**
     * The name of the policy. Name must be 1 to 128 characters in length and can contain letters, digits, and hyphens (-).
     */
    readonly policyName: pulumi.Input<string>;
}
