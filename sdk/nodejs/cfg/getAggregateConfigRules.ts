// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Config Aggregate Config Rules of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.124.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const example = alicloud.cfg.getAggregateConfigRules({
 *     aggregatorId: "ca-3a9b626622af001d****",
 *     ids: ["cr-5154626622af0034****"],
 *     nameRegex: "the_resource_name",
 * });
 * export const firstConfigAggregateConfigRuleId = example.then(example => example.rules[0].id);
 * ```
 */
export function getAggregateConfigRules(args: GetAggregateConfigRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetAggregateConfigRulesResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("alicloud:cfg/getAggregateConfigRules:getAggregateConfigRules", {
        "aggregateConfigRuleName": args.aggregateConfigRuleName,
        "aggregatorId": args.aggregatorId,
        "enableDetails": args.enableDetails,
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "riskLevel": args.riskLevel,
        "status": args.status,
    }, opts);
}

/**
 * A collection of arguments for invoking getAggregateConfigRules.
 */
export interface GetAggregateConfigRulesArgs {
    /**
     * The name of the rule.
     */
    readonly aggregateConfigRuleName?: string;
    /**
     * The ID of Aggregator.
     */
    readonly aggregatorId: string;
    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    readonly enableDetails?: boolean;
    /**
     * A list of Aggregate Config Rule IDs.
     */
    readonly ids?: string[];
    /**
     * A regex string to filter results by Aggregate Config Rule name.
     */
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The risk level of the resources that are not compliant with the rule. Valid values: `1`: critical, `2`: warning, `3`: info.
     */
    readonly riskLevel?: number;
    /**
     * The status of the rule.
     */
    readonly status?: string;
}

/**
 * A collection of values returned by getAggregateConfigRules.
 */
export interface GetAggregateConfigRulesResult {
    readonly aggregateConfigRuleName?: string;
    readonly aggregatorId: string;
    readonly enableDetails?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly riskLevel?: number;
    readonly rules: outputs.cfg.GetAggregateConfigRulesRule[];
    readonly status?: string;
}
