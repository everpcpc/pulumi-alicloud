// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

export class ApplicationInfo extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationInfo resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationInfoState, opts?: pulumi.CustomResourceOptions): ApplicationInfo {
        return new ApplicationInfo(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:quotas/applicationInfo:ApplicationInfo';

    /**
     * Returns true if the given object is an instance of ApplicationInfo.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationInfo {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationInfo.__pulumiType;
    }

    public /*out*/ readonly approveValue!: pulumi.Output<string>;
    public readonly auditMode!: pulumi.Output<string | undefined>;
    public /*out*/ readonly auditReason!: pulumi.Output<string>;
    public readonly desireValue!: pulumi.Output<number>;
    public readonly dimensions!: pulumi.Output<outputs.quotas.ApplicationInfoDimension[] | undefined>;
    public /*out*/ readonly effectiveTime!: pulumi.Output<string>;
    public /*out*/ readonly expireTime!: pulumi.Output<string>;
    public readonly noticeType!: pulumi.Output<number | undefined>;
    public readonly productCode!: pulumi.Output<string>;
    public readonly quotaActionCode!: pulumi.Output<string>;
    public readonly quotaCategory!: pulumi.Output<string | undefined>;
    public /*out*/ readonly quotaDescription!: pulumi.Output<string>;
    public /*out*/ readonly quotaName!: pulumi.Output<string>;
    public /*out*/ readonly quotaUnit!: pulumi.Output<string>;
    public readonly reason!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a ApplicationInfo resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationInfoArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationInfoArgs | ApplicationInfoState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationInfoState | undefined;
            inputs["approveValue"] = state ? state.approveValue : undefined;
            inputs["auditMode"] = state ? state.auditMode : undefined;
            inputs["auditReason"] = state ? state.auditReason : undefined;
            inputs["desireValue"] = state ? state.desireValue : undefined;
            inputs["dimensions"] = state ? state.dimensions : undefined;
            inputs["effectiveTime"] = state ? state.effectiveTime : undefined;
            inputs["expireTime"] = state ? state.expireTime : undefined;
            inputs["noticeType"] = state ? state.noticeType : undefined;
            inputs["productCode"] = state ? state.productCode : undefined;
            inputs["quotaActionCode"] = state ? state.quotaActionCode : undefined;
            inputs["quotaCategory"] = state ? state.quotaCategory : undefined;
            inputs["quotaDescription"] = state ? state.quotaDescription : undefined;
            inputs["quotaName"] = state ? state.quotaName : undefined;
            inputs["quotaUnit"] = state ? state.quotaUnit : undefined;
            inputs["reason"] = state ? state.reason : undefined;
            inputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as ApplicationInfoArgs | undefined;
            if ((!args || args.desireValue === undefined) && !opts.urn) {
                throw new Error("Missing required property 'desireValue'");
            }
            if ((!args || args.productCode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productCode'");
            }
            if ((!args || args.quotaActionCode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'quotaActionCode'");
            }
            if ((!args || args.reason === undefined) && !opts.urn) {
                throw new Error("Missing required property 'reason'");
            }
            inputs["auditMode"] = args ? args.auditMode : undefined;
            inputs["desireValue"] = args ? args.desireValue : undefined;
            inputs["dimensions"] = args ? args.dimensions : undefined;
            inputs["noticeType"] = args ? args.noticeType : undefined;
            inputs["productCode"] = args ? args.productCode : undefined;
            inputs["quotaActionCode"] = args ? args.quotaActionCode : undefined;
            inputs["quotaCategory"] = args ? args.quotaCategory : undefined;
            inputs["reason"] = args ? args.reason : undefined;
            inputs["approveValue"] = undefined /*out*/;
            inputs["auditReason"] = undefined /*out*/;
            inputs["effectiveTime"] = undefined /*out*/;
            inputs["expireTime"] = undefined /*out*/;
            inputs["quotaDescription"] = undefined /*out*/;
            inputs["quotaName"] = undefined /*out*/;
            inputs["quotaUnit"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ApplicationInfo.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApplicationInfo resources.
 */
export interface ApplicationInfoState {
    readonly approveValue?: pulumi.Input<string>;
    readonly auditMode?: pulumi.Input<string>;
    readonly auditReason?: pulumi.Input<string>;
    readonly desireValue?: pulumi.Input<number>;
    readonly dimensions?: pulumi.Input<pulumi.Input<inputs.quotas.ApplicationInfoDimension>[]>;
    readonly effectiveTime?: pulumi.Input<string>;
    readonly expireTime?: pulumi.Input<string>;
    readonly noticeType?: pulumi.Input<number>;
    readonly productCode?: pulumi.Input<string>;
    readonly quotaActionCode?: pulumi.Input<string>;
    readonly quotaCategory?: pulumi.Input<string>;
    readonly quotaDescription?: pulumi.Input<string>;
    readonly quotaName?: pulumi.Input<string>;
    readonly quotaUnit?: pulumi.Input<string>;
    readonly reason?: pulumi.Input<string>;
    readonly status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApplicationInfo resource.
 */
export interface ApplicationInfoArgs {
    readonly auditMode?: pulumi.Input<string>;
    readonly desireValue: pulumi.Input<number>;
    readonly dimensions?: pulumi.Input<pulumi.Input<inputs.quotas.ApplicationInfoDimension>[]>;
    readonly noticeType?: pulumi.Input<number>;
    readonly productCode: pulumi.Input<string>;
    readonly quotaActionCode: pulumi.Input<string>;
    readonly quotaCategory?: pulumi.Input<string>;
    readonly reason: pulumi.Input<string>;
}
