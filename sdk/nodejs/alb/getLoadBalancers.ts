// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * This data source provides the Alb Load Balancers of the current Alibaba Cloud user.
 *
 * > **NOTE:** Available in v1.132.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const ids = alicloud.alb.getLoadBalancers({});
 * export const albLoadBalancerId1 = ids.then(ids => ids.balancers[0].id);
 * const nameRegex = alicloud.alb.getLoadBalancers({
 *     nameRegex: "^my-LoadBalancer",
 * });
 * export const albLoadBalancerId2 = nameRegex.then(nameRegex => nameRegex.balancers[0].id);
 * ```
 */
export function getLoadBalancers(args?: GetLoadBalancersArgs, opts?: pulumi.InvokeOptions): Promise<GetLoadBalancersResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("alicloud:alb/getLoadBalancers:getLoadBalancers", {
        "addressType": args.addressType,
        "enableDetails": args.enableDetails,
        "ids": args.ids,
        "loadBalancerBussinessStatus": args.loadBalancerBussinessStatus,
        "loadBalancerIds": args.loadBalancerIds,
        "loadBalancerName": args.loadBalancerName,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "resourceGroupId": args.resourceGroupId,
        "status": args.status,
        "tags": args.tags,
        "vpcId": args.vpcId,
        "vpcIds": args.vpcIds,
        "zoneId": args.zoneId,
    }, opts);
}

/**
 * A collection of arguments for invoking getLoadBalancers.
 */
export interface GetLoadBalancersArgs {
    /**
     * The type of IP address that the ALB instance uses to provide services.
     */
    readonly addressType?: string;
    /**
     * Default to `false`. Set it to `true` can output more details about resource attributes.
     */
    readonly enableDetails?: boolean;
    /**
     * A list of Load Balancer IDs.
     */
    readonly ids?: string[];
    /**
     * Load Balancing of the Service Status. Valid Values: `Abnormal` and `Normal`.
     */
    readonly loadBalancerBussinessStatus?: string;
    /**
     * The load balancer ids.
     */
    readonly loadBalancerIds?: string[];
    /**
     * The name of the resource.
     */
    readonly loadBalancerName?: string;
    /**
     * A regex string to filter results by Load Balancer name.
     */
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The ID of the resource group.
     */
    readonly resourceGroupId?: string;
    /**
     * The The load balancer status. Valid values: `Active`, `Configuring`, `CreateFailed`, `Inactive` and `Provisioning`.
     */
    readonly status?: string;
    /**
     * The tag of the resource.
     */
    readonly tags?: {[key: string]: any};
    /**
     * The ID of the virtual private cloud (VPC) where the ALB instance is deployed.
     */
    readonly vpcId?: string;
    /**
     * The vpc ids.
     */
    readonly vpcIds?: string[];
    /**
     * The ID of the zone to which the ALB instance belongs.
     */
    readonly zoneId?: string;
}

/**
 * A collection of values returned by getLoadBalancers.
 */
export interface GetLoadBalancersResult {
    readonly addressType?: string;
    readonly balancers: outputs.alb.GetLoadBalancersBalancer[];
    readonly enableDetails?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids: string[];
    readonly loadBalancerBussinessStatus?: string;
    readonly loadBalancerIds?: string[];
    readonly loadBalancerName?: string;
    readonly nameRegex?: string;
    readonly names: string[];
    readonly outputFile?: string;
    readonly resourceGroupId?: string;
    readonly status?: string;
    readonly tags?: {[key: string]: any};
    readonly vpcId?: string;
    readonly vpcIds?: string[];
    readonly zoneId?: string;
}
