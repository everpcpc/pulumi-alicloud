// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a ALB Load Balancer resource.
 *
 * For information about ALB Load Balancer and how to use it, see [What is Load Balancer](https://www.alibabacloud.com/help/doc-detail/197341.htm).
 *
 * > **NOTE:** Available in v1.132.0+.
 *
 * ## Import
 *
 * ALB Load Balancer can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:alb/loadBalancer:LoadBalancer example <id>
 * ```
 */
export class LoadBalancer extends pulumi.CustomResource {
    /**
     * Get an existing LoadBalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoadBalancerState, opts?: pulumi.CustomResourceOptions): LoadBalancer {
        return new LoadBalancer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:alb/loadBalancer:LoadBalancer';

    /**
     * Returns true if the given object is an instance of LoadBalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LoadBalancer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoadBalancer.__pulumiType;
    }

    /**
     * The Access Logging Configuration Structure.
     */
    public readonly accessLogConfig!: pulumi.Output<outputs.alb.LoadBalancerAccessLogConfig | undefined>;
    /**
     * The method in which IP addresses are assigned. Valid values: `Fixed` and `Dynamic`. Default value: `Dynamic`.
     * *`Fixed`: The ALB instance uses a fixed IP address.
     * *`Dynamic`: An IP address is dynamically assigned to each zone of the ALB instance.
     */
    public readonly addressAllocatedMode!: pulumi.Output<string | undefined>;
    /**
     * The type of IP address that the ALB instance uses to provide services. Valid values: `Intranet`, `Internet`.
     */
    public readonly addressType!: pulumi.Output<string>;
    /**
     * The deletion protection enabled. Valid values: `true` and `false`. Default value: `false`.
     */
    public readonly deletionProtectionEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether to precheck the API request. Valid values: `true` and `false`.
     */
    public readonly dryRun!: pulumi.Output<boolean | undefined>;
    /**
     * The configuration of the billing method.
     */
    public readonly loadBalancerBillingConfig!: pulumi.Output<outputs.alb.LoadBalancerLoadBalancerBillingConfig>;
    /**
     * The edition of the ALB instance. Different editions have different limits and billing methods.  Valid values: `Basic` and `Standard`.
     */
    public readonly loadBalancerEdition!: pulumi.Output<string>;
    /**
     * The name of the resource.
     */
    public readonly loadBalancerName!: pulumi.Output<string>;
    /**
     * Modify the Protection Configuration.
     */
    public readonly modificationProtectionConfig!: pulumi.Output<outputs.alb.LoadBalancerModificationProtectionConfig>;
    /**
     * The ID of the resource group.
     */
    public readonly resourceGroupId!: pulumi.Output<string>;
    /**
     * Specifies whether to enable the configuration read-only mode for the ALB instance. Valid values: `NonProtection` and `ConsoleProtection`.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * The ID of the virtual private cloud (VPC) where the ALB instance is deployed.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * The zones and vSwitches. You must specify at least two zones.
     */
    public readonly zoneMappings!: pulumi.Output<outputs.alb.LoadBalancerZoneMapping[]>;

    /**
     * Create a LoadBalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoadBalancerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LoadBalancerArgs | LoadBalancerState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LoadBalancerState | undefined;
            inputs["accessLogConfig"] = state ? state.accessLogConfig : undefined;
            inputs["addressAllocatedMode"] = state ? state.addressAllocatedMode : undefined;
            inputs["addressType"] = state ? state.addressType : undefined;
            inputs["deletionProtectionEnabled"] = state ? state.deletionProtectionEnabled : undefined;
            inputs["dryRun"] = state ? state.dryRun : undefined;
            inputs["loadBalancerBillingConfig"] = state ? state.loadBalancerBillingConfig : undefined;
            inputs["loadBalancerEdition"] = state ? state.loadBalancerEdition : undefined;
            inputs["loadBalancerName"] = state ? state.loadBalancerName : undefined;
            inputs["modificationProtectionConfig"] = state ? state.modificationProtectionConfig : undefined;
            inputs["resourceGroupId"] = state ? state.resourceGroupId : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["vpcId"] = state ? state.vpcId : undefined;
            inputs["zoneMappings"] = state ? state.zoneMappings : undefined;
        } else {
            const args = argsOrState as LoadBalancerArgs | undefined;
            if ((!args || args.addressType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addressType'");
            }
            if ((!args || args.loadBalancerBillingConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loadBalancerBillingConfig'");
            }
            if ((!args || args.loadBalancerEdition === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loadBalancerEdition'");
            }
            if ((!args || args.loadBalancerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loadBalancerName'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            if ((!args || args.zoneMappings === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneMappings'");
            }
            inputs["accessLogConfig"] = args ? args.accessLogConfig : undefined;
            inputs["addressAllocatedMode"] = args ? args.addressAllocatedMode : undefined;
            inputs["addressType"] = args ? args.addressType : undefined;
            inputs["deletionProtectionEnabled"] = args ? args.deletionProtectionEnabled : undefined;
            inputs["dryRun"] = args ? args.dryRun : undefined;
            inputs["loadBalancerBillingConfig"] = args ? args.loadBalancerBillingConfig : undefined;
            inputs["loadBalancerEdition"] = args ? args.loadBalancerEdition : undefined;
            inputs["loadBalancerName"] = args ? args.loadBalancerName : undefined;
            inputs["modificationProtectionConfig"] = args ? args.modificationProtectionConfig : undefined;
            inputs["resourceGroupId"] = args ? args.resourceGroupId : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["vpcId"] = args ? args.vpcId : undefined;
            inputs["zoneMappings"] = args ? args.zoneMappings : undefined;
            inputs["status"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(LoadBalancer.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LoadBalancer resources.
 */
export interface LoadBalancerState {
    /**
     * The Access Logging Configuration Structure.
     */
    readonly accessLogConfig?: pulumi.Input<inputs.alb.LoadBalancerAccessLogConfig>;
    /**
     * The method in which IP addresses are assigned. Valid values: `Fixed` and `Dynamic`. Default value: `Dynamic`.
     * *`Fixed`: The ALB instance uses a fixed IP address.
     * *`Dynamic`: An IP address is dynamically assigned to each zone of the ALB instance.
     */
    readonly addressAllocatedMode?: pulumi.Input<string>;
    /**
     * The type of IP address that the ALB instance uses to provide services. Valid values: `Intranet`, `Internet`.
     */
    readonly addressType?: pulumi.Input<string>;
    /**
     * The deletion protection enabled. Valid values: `true` and `false`. Default value: `false`.
     */
    readonly deletionProtectionEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies whether to precheck the API request. Valid values: `true` and `false`.
     */
    readonly dryRun?: pulumi.Input<boolean>;
    /**
     * The configuration of the billing method.
     */
    readonly loadBalancerBillingConfig?: pulumi.Input<inputs.alb.LoadBalancerLoadBalancerBillingConfig>;
    /**
     * The edition of the ALB instance. Different editions have different limits and billing methods.  Valid values: `Basic` and `Standard`.
     */
    readonly loadBalancerEdition?: pulumi.Input<string>;
    /**
     * The name of the resource.
     */
    readonly loadBalancerName?: pulumi.Input<string>;
    /**
     * Modify the Protection Configuration.
     */
    readonly modificationProtectionConfig?: pulumi.Input<inputs.alb.LoadBalancerModificationProtectionConfig>;
    /**
     * The ID of the resource group.
     */
    readonly resourceGroupId?: pulumi.Input<string>;
    /**
     * Specifies whether to enable the configuration read-only mode for the ALB instance. Valid values: `NonProtection` and `ConsoleProtection`.
     */
    readonly status?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The ID of the virtual private cloud (VPC) where the ALB instance is deployed.
     */
    readonly vpcId?: pulumi.Input<string>;
    /**
     * The zones and vSwitches. You must specify at least two zones.
     */
    readonly zoneMappings?: pulumi.Input<pulumi.Input<inputs.alb.LoadBalancerZoneMapping>[]>;
}

/**
 * The set of arguments for constructing a LoadBalancer resource.
 */
export interface LoadBalancerArgs {
    /**
     * The Access Logging Configuration Structure.
     */
    readonly accessLogConfig?: pulumi.Input<inputs.alb.LoadBalancerAccessLogConfig>;
    /**
     * The method in which IP addresses are assigned. Valid values: `Fixed` and `Dynamic`. Default value: `Dynamic`.
     * *`Fixed`: The ALB instance uses a fixed IP address.
     * *`Dynamic`: An IP address is dynamically assigned to each zone of the ALB instance.
     */
    readonly addressAllocatedMode?: pulumi.Input<string>;
    /**
     * The type of IP address that the ALB instance uses to provide services. Valid values: `Intranet`, `Internet`.
     */
    readonly addressType: pulumi.Input<string>;
    /**
     * The deletion protection enabled. Valid values: `true` and `false`. Default value: `false`.
     */
    readonly deletionProtectionEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies whether to precheck the API request. Valid values: `true` and `false`.
     */
    readonly dryRun?: pulumi.Input<boolean>;
    /**
     * The configuration of the billing method.
     */
    readonly loadBalancerBillingConfig: pulumi.Input<inputs.alb.LoadBalancerLoadBalancerBillingConfig>;
    /**
     * The edition of the ALB instance. Different editions have different limits and billing methods.  Valid values: `Basic` and `Standard`.
     */
    readonly loadBalancerEdition: pulumi.Input<string>;
    /**
     * The name of the resource.
     */
    readonly loadBalancerName: pulumi.Input<string>;
    /**
     * Modify the Protection Configuration.
     */
    readonly modificationProtectionConfig?: pulumi.Input<inputs.alb.LoadBalancerModificationProtectionConfig>;
    /**
     * The ID of the resource group.
     */
    readonly resourceGroupId?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The ID of the virtual private cloud (VPC) where the ALB instance is deployed.
     */
    readonly vpcId: pulumi.Input<string>;
    /**
     * The zones and vSwitches. You must specify at least two zones.
     */
    readonly zoneMappings: pulumi.Input<pulumi.Input<inputs.alb.LoadBalancerZoneMapping>[]>;
}
