// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a WAF Certificate resource.
 *
 * For information about WAF Certificate and how to use it, see [What is Certificate](https://www.alibabacloud.com/help/doc-detail/28517.htm).
 *
 * > **NOTE:** Available in v1.135.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const defaultCertificate = new alicloud.waf.Certificate("default", {
 *     certificate: "your_certificate",
 *     certificateName: "your_certificate_name",
 *     domain: "your_domain_name",
 *     instanceId: "your_instance_id",
 *     privateKey: "your_private_key",
 * });
 * const default2 = new alicloud.waf.Certificate("default2", {
 *     certificateId: "your_certificate_id",
 *     domain: "your_domain_name",
 *     instanceId: "your_instance_id",
 * });
 * ```
 *
 * ## Import
 *
 * WAF Certificate can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:waf/certificate:Certificate example <instance_id>:<domain>:<certificate_id>
 * ```
 */
export class Certificate extends pulumi.CustomResource {
    /**
     * Get an existing Certificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CertificateState, opts?: pulumi.CustomResourceOptions): Certificate {
        return new Certificate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:waf/certificate:Certificate';

    /**
     * Returns true if the given object is an instance of Certificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Certificate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Certificate.__pulumiType;
    }

    /**
     * Certificate file content.
     */
    public readonly certificate!: pulumi.Output<string | undefined>;
    /**
     * The certificate id is automatically generated when you upload your certificate content.**NOTE:** you can also use Certificate ID saved in SSL.
     */
    public readonly certificateId!: pulumi.Output<string>;
    /**
     * Certificate file name.
     */
    public readonly certificateName!: pulumi.Output<string>;
    /**
     * The domain that you want to add to WAF.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * The ID of the WAF instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The private key.
     */
    public readonly privateKey!: pulumi.Output<string | undefined>;

    /**
     * Create a Certificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CertificateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CertificateArgs | CertificateState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CertificateState | undefined;
            inputs["certificate"] = state ? state.certificate : undefined;
            inputs["certificateId"] = state ? state.certificateId : undefined;
            inputs["certificateName"] = state ? state.certificateName : undefined;
            inputs["domain"] = state ? state.domain : undefined;
            inputs["instanceId"] = state ? state.instanceId : undefined;
            inputs["privateKey"] = state ? state.privateKey : undefined;
        } else {
            const args = argsOrState as CertificateArgs | undefined;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            inputs["certificate"] = args ? args.certificate : undefined;
            inputs["certificateId"] = args ? args.certificateId : undefined;
            inputs["certificateName"] = args ? args.certificateName : undefined;
            inputs["domain"] = args ? args.domain : undefined;
            inputs["instanceId"] = args ? args.instanceId : undefined;
            inputs["privateKey"] = args ? args.privateKey : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Certificate.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Certificate resources.
 */
export interface CertificateState {
    /**
     * Certificate file content.
     */
    readonly certificate?: pulumi.Input<string>;
    /**
     * The certificate id is automatically generated when you upload your certificate content.**NOTE:** you can also use Certificate ID saved in SSL.
     */
    readonly certificateId?: pulumi.Input<string>;
    /**
     * Certificate file name.
     */
    readonly certificateName?: pulumi.Input<string>;
    /**
     * The domain that you want to add to WAF.
     */
    readonly domain?: pulumi.Input<string>;
    /**
     * The ID of the WAF instance.
     */
    readonly instanceId?: pulumi.Input<string>;
    /**
     * The private key.
     */
    readonly privateKey?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Certificate resource.
 */
export interface CertificateArgs {
    /**
     * Certificate file content.
     */
    readonly certificate?: pulumi.Input<string>;
    /**
     * The certificate id is automatically generated when you upload your certificate content.**NOTE:** you can also use Certificate ID saved in SSL.
     */
    readonly certificateId?: pulumi.Input<string>;
    /**
     * Certificate file name.
     */
    readonly certificateName?: pulumi.Input<string>;
    /**
     * The domain that you want to add to WAF.
     */
    readonly domain: pulumi.Input<string>;
    /**
     * The ID of the WAF instance.
     */
    readonly instanceId: pulumi.Input<string>;
    /**
     * The private key.
     */
    readonly privateKey?: pulumi.Input<string>;
}
