// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Express Connect Physical Connection resource.
 *
 * For information about Express Connect Physical Connection and how to use it, see [What is Physical Connection](https://www.alibabacloud.com/help/doc-detail/44852.htm).
 *
 * > **NOTE:** Available in v1.132.0+.
 *
 * ## Example Usage
 *
 * Basic Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as alicloud from "@pulumi/alicloud";
 *
 * const domestic = new alicloud.expressconnect.PhysicalConnection("domestic", {
 *     accessPointId: "ap-cn-hangzhou-yh-B",
 *     bandwidth: "100",
 *     description: "my domestic connection",
 *     lineOperator: "CT",
 *     peerLocation: "example_value",
 *     physicalConnectionName: "example_value",
 *     portType: "1000Base-LX",
 *     type: "VPC",
 * });
 * const international = new alicloud.expressconnect.PhysicalConnection("international", {
 *     accessPointId: "ap-sg-singpore-A",
 *     bandwidth: "100",
 *     description: "my domestic connection",
 *     lineOperator: "Other",
 *     peerLocation: "example_value",
 *     physicalConnectionName: "example_value",
 *     portType: "1000Base-LX",
 *     type: "VPC",
 * });
 * ```
 *
 * ## Import
 *
 * Express Connect Physical Connection can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import alicloud:expressconnect/physicalConnection:PhysicalConnection example <id>
 * ```
 */
export class PhysicalConnection extends pulumi.CustomResource {
    /**
     * Get an existing PhysicalConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PhysicalConnectionState, opts?: pulumi.CustomResourceOptions): PhysicalConnection {
        return new PhysicalConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'alicloud:expressconnect/physicalConnection:PhysicalConnection';

    /**
     * Returns true if the given object is an instance of PhysicalConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PhysicalConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PhysicalConnection.__pulumiType;
    }

    /**
     * The Physical Leased Line Access Point ID.
     */
    public readonly accessPointId!: pulumi.Output<string>;
    /**
     * On the Bandwidth of the ECC Service and Physical Connection.
     */
    public readonly bandwidth!: pulumi.Output<string>;
    /**
     * Operators for Physical Connection Circuit Provided Coding.
     */
    public readonly circuitCode!: pulumi.Output<string | undefined>;
    /**
     * The Physical Connection to Which the Description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Provides Access to the Physical Line Operator. Valid values:
     * * CT: China Telecom
     * * CU: China Unicom
     * * CM: china Mobile
     * * CO: Other Chinese
     * * Equinix: Equinix
     * * Other: Other Overseas.
     */
    public readonly lineOperator!: pulumi.Output<string>;
    /**
     * and an on-Premises Data Center Location.
     */
    public readonly peerLocation!: pulumi.Output<string>;
    /**
     * on Behalf of the Resource Name of the Resources-Attribute Field.
     */
    public readonly physicalConnectionName!: pulumi.Output<string | undefined>;
    /**
     * The Physical Leased Line Access Port Type. Valid value:
     * * 100Base-T: Fast Electrical Ports
     * * 1000Base-T: gigabit Electrical Ports
     * * 1000Base-LX: Gigabit Singlemode Optical Ports (10Km)
     * * 10GBase-T: Gigabit Electrical Port
     * * 10GBase-LR: Gigabit Singlemode Optical Ports (10Km).
     */
    public readonly portType!: pulumi.Output<string | undefined>;
    /**
     * Redundant Physical Connection to Which the ID.
     */
    public readonly redundantPhysicalConnectionId!: pulumi.Output<string | undefined>;
    /**
     * Resources on Behalf of a State of the Resource Attribute Field. Valid values: `Canceled`, `Enabled`, `Terminated`.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Physical Private Line of Type. Default Value: VPC.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a PhysicalConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PhysicalConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PhysicalConnectionArgs | PhysicalConnectionState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PhysicalConnectionState | undefined;
            inputs["accessPointId"] = state ? state.accessPointId : undefined;
            inputs["bandwidth"] = state ? state.bandwidth : undefined;
            inputs["circuitCode"] = state ? state.circuitCode : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["lineOperator"] = state ? state.lineOperator : undefined;
            inputs["peerLocation"] = state ? state.peerLocation : undefined;
            inputs["physicalConnectionName"] = state ? state.physicalConnectionName : undefined;
            inputs["portType"] = state ? state.portType : undefined;
            inputs["redundantPhysicalConnectionId"] = state ? state.redundantPhysicalConnectionId : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as PhysicalConnectionArgs | undefined;
            if ((!args || args.accessPointId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessPointId'");
            }
            if ((!args || args.lineOperator === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lineOperator'");
            }
            if ((!args || args.peerLocation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peerLocation'");
            }
            inputs["accessPointId"] = args ? args.accessPointId : undefined;
            inputs["bandwidth"] = args ? args.bandwidth : undefined;
            inputs["circuitCode"] = args ? args.circuitCode : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["lineOperator"] = args ? args.lineOperator : undefined;
            inputs["peerLocation"] = args ? args.peerLocation : undefined;
            inputs["physicalConnectionName"] = args ? args.physicalConnectionName : undefined;
            inputs["portType"] = args ? args.portType : undefined;
            inputs["redundantPhysicalConnectionId"] = args ? args.redundantPhysicalConnectionId : undefined;
            inputs["status"] = args ? args.status : undefined;
            inputs["type"] = args ? args.type : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(PhysicalConnection.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PhysicalConnection resources.
 */
export interface PhysicalConnectionState {
    /**
     * The Physical Leased Line Access Point ID.
     */
    readonly accessPointId?: pulumi.Input<string>;
    /**
     * On the Bandwidth of the ECC Service and Physical Connection.
     */
    readonly bandwidth?: pulumi.Input<string>;
    /**
     * Operators for Physical Connection Circuit Provided Coding.
     */
    readonly circuitCode?: pulumi.Input<string>;
    /**
     * The Physical Connection to Which the Description.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Provides Access to the Physical Line Operator. Valid values:
     * * CT: China Telecom
     * * CU: China Unicom
     * * CM: china Mobile
     * * CO: Other Chinese
     * * Equinix: Equinix
     * * Other: Other Overseas.
     */
    readonly lineOperator?: pulumi.Input<string>;
    /**
     * and an on-Premises Data Center Location.
     */
    readonly peerLocation?: pulumi.Input<string>;
    /**
     * on Behalf of the Resource Name of the Resources-Attribute Field.
     */
    readonly physicalConnectionName?: pulumi.Input<string>;
    /**
     * The Physical Leased Line Access Port Type. Valid value:
     * * 100Base-T: Fast Electrical Ports
     * * 1000Base-T: gigabit Electrical Ports
     * * 1000Base-LX: Gigabit Singlemode Optical Ports (10Km)
     * * 10GBase-T: Gigabit Electrical Port
     * * 10GBase-LR: Gigabit Singlemode Optical Ports (10Km).
     */
    readonly portType?: pulumi.Input<string>;
    /**
     * Redundant Physical Connection to Which the ID.
     */
    readonly redundantPhysicalConnectionId?: pulumi.Input<string>;
    /**
     * Resources on Behalf of a State of the Resource Attribute Field. Valid values: `Canceled`, `Enabled`, `Terminated`.
     */
    readonly status?: pulumi.Input<string>;
    /**
     * Physical Private Line of Type. Default Value: VPC.
     */
    readonly type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PhysicalConnection resource.
 */
export interface PhysicalConnectionArgs {
    /**
     * The Physical Leased Line Access Point ID.
     */
    readonly accessPointId: pulumi.Input<string>;
    /**
     * On the Bandwidth of the ECC Service and Physical Connection.
     */
    readonly bandwidth?: pulumi.Input<string>;
    /**
     * Operators for Physical Connection Circuit Provided Coding.
     */
    readonly circuitCode?: pulumi.Input<string>;
    /**
     * The Physical Connection to Which the Description.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Provides Access to the Physical Line Operator. Valid values:
     * * CT: China Telecom
     * * CU: China Unicom
     * * CM: china Mobile
     * * CO: Other Chinese
     * * Equinix: Equinix
     * * Other: Other Overseas.
     */
    readonly lineOperator: pulumi.Input<string>;
    /**
     * and an on-Premises Data Center Location.
     */
    readonly peerLocation: pulumi.Input<string>;
    /**
     * on Behalf of the Resource Name of the Resources-Attribute Field.
     */
    readonly physicalConnectionName?: pulumi.Input<string>;
    /**
     * The Physical Leased Line Access Port Type. Valid value:
     * * 100Base-T: Fast Electrical Ports
     * * 1000Base-T: gigabit Electrical Ports
     * * 1000Base-LX: Gigabit Singlemode Optical Ports (10Km)
     * * 10GBase-T: Gigabit Electrical Port
     * * 10GBase-LR: Gigabit Singlemode Optical Ports (10Km).
     */
    readonly portType?: pulumi.Input<string>;
    /**
     * Redundant Physical Connection to Which the ID.
     */
    readonly redundantPhysicalConnectionId?: pulumi.Input<string>;
    /**
     * Resources on Behalf of a State of the Resource Attribute Field. Valid values: `Canceled`, `Enabled`, `Terminated`.
     */
    readonly status?: pulumi.Input<string>;
    /**
     * Physical Private Line of Type. Default Value: VPC.
     */
    readonly type?: pulumi.Input<string>;
}
