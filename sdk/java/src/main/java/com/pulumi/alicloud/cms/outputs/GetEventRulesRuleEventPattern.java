// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.outputs;

import com.pulumi.alicloud.cms.outputs.GetEventRulesRuleEventPatternKeywordFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEventRulesRuleEventPattern {
    /**
     * @return The list of event types.
     * 
     */
    private final List<String> eventTypeLists;
    /**
     * @return The filter keyword.
     * 
     */
    private final List<GetEventRulesRuleEventPatternKeywordFilter> keywordFilters;
    /**
     * @return The list of event levels.
     * 
     */
    private final List<String> levelLists;
    /**
     * @return The list of event names.
     * 
     */
    private final List<String> nameLists;
    /**
     * @return The type of the cloud service.
     * 
     */
    private final String product;
    /**
     * @return The SQL condition that is used to filter events.
     * 
     */
    private final String sqlFilter;

    @CustomType.Constructor
    private GetEventRulesRuleEventPattern(
        @CustomType.Parameter("eventTypeLists") List<String> eventTypeLists,
        @CustomType.Parameter("keywordFilters") List<GetEventRulesRuleEventPatternKeywordFilter> keywordFilters,
        @CustomType.Parameter("levelLists") List<String> levelLists,
        @CustomType.Parameter("nameLists") List<String> nameLists,
        @CustomType.Parameter("product") String product,
        @CustomType.Parameter("sqlFilter") String sqlFilter) {
        this.eventTypeLists = eventTypeLists;
        this.keywordFilters = keywordFilters;
        this.levelLists = levelLists;
        this.nameLists = nameLists;
        this.product = product;
        this.sqlFilter = sqlFilter;
    }

    /**
     * @return The list of event types.
     * 
     */
    public List<String> eventTypeLists() {
        return this.eventTypeLists;
    }
    /**
     * @return The filter keyword.
     * 
     */
    public List<GetEventRulesRuleEventPatternKeywordFilter> keywordFilters() {
        return this.keywordFilters;
    }
    /**
     * @return The list of event levels.
     * 
     */
    public List<String> levelLists() {
        return this.levelLists;
    }
    /**
     * @return The list of event names.
     * 
     */
    public List<String> nameLists() {
        return this.nameLists;
    }
    /**
     * @return The type of the cloud service.
     * 
     */
    public String product() {
        return this.product;
    }
    /**
     * @return The SQL condition that is used to filter events.
     * 
     */
    public String sqlFilter() {
        return this.sqlFilter;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEventRulesRuleEventPattern defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> eventTypeLists;
        private List<GetEventRulesRuleEventPatternKeywordFilter> keywordFilters;
        private List<String> levelLists;
        private List<String> nameLists;
        private String product;
        private String sqlFilter;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEventRulesRuleEventPattern defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventTypeLists = defaults.eventTypeLists;
    	      this.keywordFilters = defaults.keywordFilters;
    	      this.levelLists = defaults.levelLists;
    	      this.nameLists = defaults.nameLists;
    	      this.product = defaults.product;
    	      this.sqlFilter = defaults.sqlFilter;
        }

        public Builder eventTypeLists(List<String> eventTypeLists) {
            this.eventTypeLists = Objects.requireNonNull(eventTypeLists);
            return this;
        }
        public Builder eventTypeLists(String... eventTypeLists) {
            return eventTypeLists(List.of(eventTypeLists));
        }
        public Builder keywordFilters(List<GetEventRulesRuleEventPatternKeywordFilter> keywordFilters) {
            this.keywordFilters = Objects.requireNonNull(keywordFilters);
            return this;
        }
        public Builder keywordFilters(GetEventRulesRuleEventPatternKeywordFilter... keywordFilters) {
            return keywordFilters(List.of(keywordFilters));
        }
        public Builder levelLists(List<String> levelLists) {
            this.levelLists = Objects.requireNonNull(levelLists);
            return this;
        }
        public Builder levelLists(String... levelLists) {
            return levelLists(List.of(levelLists));
        }
        public Builder nameLists(List<String> nameLists) {
            this.nameLists = Objects.requireNonNull(nameLists);
            return this;
        }
        public Builder nameLists(String... nameLists) {
            return nameLists(List.of(nameLists));
        }
        public Builder product(String product) {
            this.product = Objects.requireNonNull(product);
            return this;
        }
        public Builder sqlFilter(String sqlFilter) {
            this.sqlFilter = Objects.requireNonNull(sqlFilter);
            return this;
        }        public GetEventRulesRuleEventPattern build() {
            return new GetEventRulesRuleEventPattern(eventTypeLists, keywordFilters, levelLists, nameLists, product, sqlFilter);
        }
    }
}
