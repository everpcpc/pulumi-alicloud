// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sae;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.sae.ApplicationScalingRuleArgs;
import com.pulumi.alicloud.sae.inputs.ApplicationScalingRuleState;
import com.pulumi.alicloud.sae.outputs.ApplicationScalingRuleScalingRuleMetric;
import com.pulumi.alicloud.sae.outputs.ApplicationScalingRuleScalingRuleTimer;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Serverless App Engine (SAE) Application Scaling Rule resource.
 * 
 * For information about Serverless App Engine (SAE) Application Scaling Rule and how to use it, see [What is Application Scaling Rule](https://help.aliyun.com/document_detail/134120.html).
 * 
 * &gt; **NOTE:** Available in v1.159.0+.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Serverless App Engine (SAE) Application Scaling Rule can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:sae/applicationScalingRule:ApplicationScalingRule example &lt;app_id&gt;:&lt;scaling_rule_name&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:sae/applicationScalingRule:ApplicationScalingRule")
public class ApplicationScalingRule extends com.pulumi.resources.CustomResource {
    /**
     * Application ID.
     * 
     */
    @Export(name="appId", type=String.class, parameters={})
    private Output<String> appId;

    /**
     * @return Application ID.
     * 
     */
    public Output<String> appId() {
        return this.appId;
    }
    /**
     * The min ready instance ratio.
     * 
     */
    @Export(name="minReadyInstanceRatio", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> minReadyInstanceRatio;

    /**
     * @return The min ready instance ratio.
     * 
     */
    public Output<Optional<Integer>> minReadyInstanceRatio() {
        return Codegen.optional(this.minReadyInstanceRatio);
    }
    /**
     * The min ready instances.
     * 
     */
    @Export(name="minReadyInstances", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> minReadyInstances;

    /**
     * @return The min ready instances.
     * 
     */
    public Output<Optional<Integer>> minReadyInstances() {
        return Codegen.optional(this.minReadyInstances);
    }
    /**
     * True whether the auto scaling policy is enabled. The value description is as follows: true: enabled state. false: disabled status. Valid values: `false`, `true`.
     * 
     */
    @Export(name="scalingRuleEnable", type=Boolean.class, parameters={})
    private Output<Boolean> scalingRuleEnable;

    /**
     * @return True whether the auto scaling policy is enabled. The value description is as follows: true: enabled state. false: disabled status. Valid values: `false`, `true`.
     * 
     */
    public Output<Boolean> scalingRuleEnable() {
        return this.scalingRuleEnable;
    }
    /**
     * Monitor the configuration of the indicator elasticity strategy. See the following `Block scaling_rule_metric`.
     * 
     */
    @Export(name="scalingRuleMetric", type=ApplicationScalingRuleScalingRuleMetric.class, parameters={})
    private Output</* @Nullable */ ApplicationScalingRuleScalingRuleMetric> scalingRuleMetric;

    /**
     * @return Monitor the configuration of the indicator elasticity strategy. See the following `Block scaling_rule_metric`.
     * 
     */
    public Output<Optional<ApplicationScalingRuleScalingRuleMetric>> scalingRuleMetric() {
        return Codegen.optional(this.scalingRuleMetric);
    }
    /**
     * The name of a custom elastic scaling policy. In the application, the policy name cannot be repeated. It must start with a lowercase letter, and can only contain lowercase letters, numbers, and dashes (-), and no more than 32 characters. After the scaling policy is successfully created, the policy name cannot be modified.
     * 
     */
    @Export(name="scalingRuleName", type=String.class, parameters={})
    private Output<String> scalingRuleName;

    /**
     * @return The name of a custom elastic scaling policy. In the application, the policy name cannot be repeated. It must start with a lowercase letter, and can only contain lowercase letters, numbers, and dashes (-), and no more than 32 characters. After the scaling policy is successfully created, the policy name cannot be modified.
     * 
     */
    public Output<String> scalingRuleName() {
        return this.scalingRuleName;
    }
    /**
     * Configuration of Timing Resilient Policies. See the following `Block scaling_rule_timer`.
     * 
     */
    @Export(name="scalingRuleTimer", type=ApplicationScalingRuleScalingRuleTimer.class, parameters={})
    private Output</* @Nullable */ ApplicationScalingRuleScalingRuleTimer> scalingRuleTimer;

    /**
     * @return Configuration of Timing Resilient Policies. See the following `Block scaling_rule_timer`.
     * 
     */
    public Output<Optional<ApplicationScalingRuleScalingRuleTimer>> scalingRuleTimer() {
        return Codegen.optional(this.scalingRuleTimer);
    }
    /**
     * Flexible strategy type. Valid values: `mix`, `timing` and `metric`.
     * 
     */
    @Export(name="scalingRuleType", type=String.class, parameters={})
    private Output<String> scalingRuleType;

    /**
     * @return Flexible strategy type. Valid values: `mix`, `timing` and `metric`.
     * 
     */
    public Output<String> scalingRuleType() {
        return this.scalingRuleType;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ApplicationScalingRule(String name) {
        this(name, ApplicationScalingRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ApplicationScalingRule(String name, ApplicationScalingRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ApplicationScalingRule(String name, ApplicationScalingRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:sae/applicationScalingRule:ApplicationScalingRule", name, args == null ? ApplicationScalingRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ApplicationScalingRule(String name, Output<String> id, @Nullable ApplicationScalingRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:sae/applicationScalingRule:ApplicationScalingRule", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ApplicationScalingRule get(String name, Output<String> id, @Nullable ApplicationScalingRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ApplicationScalingRule(name, id, state, options);
    }
}
