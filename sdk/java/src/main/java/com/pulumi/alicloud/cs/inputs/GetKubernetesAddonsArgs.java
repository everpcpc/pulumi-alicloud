// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.inputs;

import com.pulumi.alicloud.cs.inputs.GetKubernetesAddonsAddonArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetKubernetesAddonsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetKubernetesAddonsArgs Empty = new GetKubernetesAddonsArgs();

    /**
     * A list of addons.
     * 
     */
    @Import(name="addons")
    private @Nullable Output<List<GetKubernetesAddonsAddonArgs>> addons;

    /**
     * @return A list of addons.
     * 
     */
    public Optional<Output<List<GetKubernetesAddonsAddonArgs>>> addons() {
        return Optional.ofNullable(this.addons);
    }

    /**
     * The id of kubernetes cluster.
     * 
     */
    @Import(name="clusterId", required=true)
    private Output<String> clusterId;

    /**
     * @return The id of kubernetes cluster.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }

    /**
     * A list of addon IDs. The id of addon consists of the cluster id and the addon name, with the structure &lt;cluster_ud&gt;:&lt;addon_name&gt;.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of addon IDs. The id of addon consists of the cluster id and the addon name, with the structure &lt;cluster_ud&gt;:&lt;addon_name&gt;.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * A regex string to filter results by addon name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    /**
     * @return A regex string to filter results by addon name.
     * 
     */
    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    private GetKubernetesAddonsArgs() {}

    private GetKubernetesAddonsArgs(GetKubernetesAddonsArgs $) {
        this.addons = $.addons;
        this.clusterId = $.clusterId;
        this.ids = $.ids;
        this.nameRegex = $.nameRegex;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetKubernetesAddonsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetKubernetesAddonsArgs $;

        public Builder() {
            $ = new GetKubernetesAddonsArgs();
        }

        public Builder(GetKubernetesAddonsArgs defaults) {
            $ = new GetKubernetesAddonsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addons A list of addons.
         * 
         * @return builder
         * 
         */
        public Builder addons(@Nullable Output<List<GetKubernetesAddonsAddonArgs>> addons) {
            $.addons = addons;
            return this;
        }

        /**
         * @param addons A list of addons.
         * 
         * @return builder
         * 
         */
        public Builder addons(List<GetKubernetesAddonsAddonArgs> addons) {
            return addons(Output.of(addons));
        }

        /**
         * @param addons A list of addons.
         * 
         * @return builder
         * 
         */
        public Builder addons(GetKubernetesAddonsAddonArgs... addons) {
            return addons(List.of(addons));
        }

        /**
         * @param clusterId The id of kubernetes cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The id of kubernetes cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param ids A list of addon IDs. The id of addon consists of the cluster id and the addon name, with the structure &lt;cluster_ud&gt;:&lt;addon_name&gt;.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of addon IDs. The id of addon consists of the cluster id and the addon name, with the structure &lt;cluster_ud&gt;:&lt;addon_name&gt;.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of addon IDs. The id of addon consists of the cluster id and the addon name, with the structure &lt;cluster_ud&gt;:&lt;addon_name&gt;.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param nameRegex A regex string to filter results by addon name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter results by addon name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        public GetKubernetesAddonsArgs build() {
            $.clusterId = Objects.requireNonNull($.clusterId, "expected parameter 'clusterId' to be non-null");
            return $;
        }
    }

}
