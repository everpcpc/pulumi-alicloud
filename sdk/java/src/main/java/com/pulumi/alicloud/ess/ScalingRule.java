// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ess;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.ess.ScalingRuleArgs;
import com.pulumi.alicloud.ess.inputs.ScalingRuleState;
import com.pulumi.alicloud.ess.outputs.ScalingRuleStepAdjustment;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * ESS scaling rule can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:ess/scalingRule:ScalingRule example abc123456
 * ```
 * 
 */
@ResourceType(type="alicloud:ess/scalingRule:ScalingRule")
public class ScalingRule extends com.pulumi.resources.CustomResource {
    /**
     * Adjustment mode of a scaling rule. Optional values:
     * - QuantityChangeInCapacity: It is used to increase or decrease a specified number of ECS instances.
     * - PercentChangeInCapacity: It is used to increase or decrease a specified proportion of ECS instances.
     * - TotalCapacity: It is used to adjust the quantity of ECS instances in the current scaling group to a specified value.
     * 
     */
    @Export(name="adjustmentType", type=String.class, parameters={})
    private Output</* @Nullable */ String> adjustmentType;

    /**
     * @return Adjustment mode of a scaling rule. Optional values:
     * - QuantityChangeInCapacity: It is used to increase or decrease a specified number of ECS instances.
     * - PercentChangeInCapacity: It is used to increase or decrease a specified proportion of ECS instances.
     * - TotalCapacity: It is used to adjust the quantity of ECS instances in the current scaling group to a specified value.
     * 
     */
    public Output<Optional<String>> adjustmentType() {
        return Codegen.optional(this.adjustmentType);
    }
    /**
     * The number of ECS instances to be adjusted in the scaling rule. This parameter is required and applicable only to simple scaling rules. The number of ECS instances to be adjusted in a single scaling activity cannot exceed 500. Value range:
     * - QuantityChangeInCapacity：(0, 500] U (-500, 0]
     * - PercentChangeInCapacity：[0, 10000] U [-100, 0]
     * - TotalCapacity：[0, 1000]
     * 
     */
    @Export(name="adjustmentValue", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> adjustmentValue;

    /**
     * @return The number of ECS instances to be adjusted in the scaling rule. This parameter is required and applicable only to simple scaling rules. The number of ECS instances to be adjusted in a single scaling activity cannot exceed 500. Value range:
     * - QuantityChangeInCapacity：(0, 500] U (-500, 0]
     * - PercentChangeInCapacity：[0, 10000] U [-100, 0]
     * - TotalCapacity：[0, 1000]
     * 
     */
    public Output<Optional<Integer>> adjustmentValue() {
        return Codegen.optional(this.adjustmentValue);
    }
    @Export(name="ari", type=String.class, parameters={})
    private Output<String> ari;

    public Output<String> ari() {
        return this.ari;
    }
    /**
     * The cooldown time of the scaling rule. This parameter is applicable only to simple scaling rules. Value range: [0, 86,400], in seconds. The default value is empty，if not set, the return value will be 0, which is the default value of integer.
     * 
     */
    @Export(name="cooldown", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> cooldown;

    /**
     * @return The cooldown time of the scaling rule. This parameter is applicable only to simple scaling rules. Value range: [0, 86,400], in seconds. The default value is empty，if not set, the return value will be 0, which is the default value of integer.
     * 
     */
    public Output<Optional<Integer>> cooldown() {
        return Codegen.optional(this.cooldown);
    }
    /**
     * Indicates whether scale in by the target tracking policy is disabled. Default to false.
     * 
     */
    @Export(name="disableScaleIn", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> disableScaleIn;

    /**
     * @return Indicates whether scale in by the target tracking policy is disabled. Default to false.
     * 
     */
    public Output<Optional<Boolean>> disableScaleIn() {
        return Codegen.optional(this.disableScaleIn);
    }
    /**
     * The estimated time, in seconds, until a newly launched instance will contribute CloudMonitor metrics. Default to 300.
     * 
     */
    @Export(name="estimatedInstanceWarmup", type=Integer.class, parameters={})
    private Output<Integer> estimatedInstanceWarmup;

    /**
     * @return The estimated time, in seconds, until a newly launched instance will contribute CloudMonitor metrics. Default to 300.
     * 
     */
    public Output<Integer> estimatedInstanceWarmup() {
        return this.estimatedInstanceWarmup;
    }
    /**
     * A CloudMonitor metric name.
     * 
     */
    @Export(name="metricName", type=String.class, parameters={})
    private Output</* @Nullable */ String> metricName;

    /**
     * @return A CloudMonitor metric name.
     * 
     */
    public Output<Optional<String>> metricName() {
        return Codegen.optional(this.metricName);
    }
    /**
     * ID of the scaling group of a scaling rule.
     * 
     */
    @Export(name="scalingGroupId", type=String.class, parameters={})
    private Output<String> scalingGroupId;

    /**
     * @return ID of the scaling group of a scaling rule.
     * 
     */
    public Output<String> scalingGroupId() {
        return this.scalingGroupId;
    }
    /**
     * Name shown for the scaling rule, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number, underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is scaling rule id.
     * 
     */
    @Export(name="scalingRuleName", type=String.class, parameters={})
    private Output<String> scalingRuleName;

    /**
     * @return Name shown for the scaling rule, which must contain 2-64 characters (English or Chinese), starting with numbers, English letters or Chinese characters, and can contain number, underscores `_`, hypens `-`, and decimal point `.`. If this parameter value is not specified, the default value is scaling rule id.
     * 
     */
    public Output<String> scalingRuleName() {
        return this.scalingRuleName;
    }
    /**
     * The scaling rule type, either &#34;SimpleScalingRule&#34;, &#34;TargetTrackingScalingRule&#34;, &#34;StepScalingRule&#34;. Default to &#34;SimpleScalingRule&#34;.
     * 
     */
    @Export(name="scalingRuleType", type=String.class, parameters={})
    private Output</* @Nullable */ String> scalingRuleType;

    /**
     * @return The scaling rule type, either &#34;SimpleScalingRule&#34;, &#34;TargetTrackingScalingRule&#34;, &#34;StepScalingRule&#34;. Default to &#34;SimpleScalingRule&#34;.
     * 
     */
    public Output<Optional<String>> scalingRuleType() {
        return Codegen.optional(this.scalingRuleType);
    }
    /**
     * Steps for StepScalingRule. See Block stepAdjustment below for details.
     * 
     */
    @Export(name="stepAdjustments", type=List.class, parameters={ScalingRuleStepAdjustment.class})
    private Output</* @Nullable */ List<ScalingRuleStepAdjustment>> stepAdjustments;

    /**
     * @return Steps for StepScalingRule. See Block stepAdjustment below for details.
     * 
     */
    public Output<Optional<List<ScalingRuleStepAdjustment>>> stepAdjustments() {
        return Codegen.optional(this.stepAdjustments);
    }
    /**
     * The target value for the metric.
     * 
     */
    @Export(name="targetValue", type=Double.class, parameters={})
    private Output</* @Nullable */ Double> targetValue;

    /**
     * @return The target value for the metric.
     * 
     */
    public Output<Optional<Double>> targetValue() {
        return Codegen.optional(this.targetValue);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ScalingRule(String name) {
        this(name, ScalingRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ScalingRule(String name, ScalingRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ScalingRule(String name, ScalingRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ess/scalingRule:ScalingRule", name, args == null ? ScalingRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ScalingRule(String name, Output<String> id, @Nullable ScalingRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:ess/scalingRule:ScalingRule", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ScalingRule get(String name, Output<String> id, @Nullable ScalingRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ScalingRule(name, id, state, options);
    }
}
