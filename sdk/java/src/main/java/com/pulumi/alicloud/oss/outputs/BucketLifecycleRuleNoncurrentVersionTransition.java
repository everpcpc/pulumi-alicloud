// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class BucketLifecycleRuleNoncurrentVersionTransition {
    /**
     * @return Specifies the number of days after object creation when the specific rule action takes effect.
     * 
     * `NOTE`: One and only one of &#34;created_before_date&#34; and &#34;days&#34; can be specified in one abort_multipart_upload configuration.
     * 
     */
    private final Integer days;
    /**
     * @return The [storage class](https://www.alibabacloud.com/help/doc-detail/51374.htm) to apply. Can be &#34;Standard&#34;, &#34;IA&#34;, &#34;Archive&#34; and &#34;ColdArchive&#34;. Defaults to &#34;Standard&#34;. &#34;ColdArchive&#34; is available in 1.203.0+.
     * 
     */
    private final String storageClass;

    @CustomType.Constructor
    private BucketLifecycleRuleNoncurrentVersionTransition(
        @CustomType.Parameter("days") Integer days,
        @CustomType.Parameter("storageClass") String storageClass) {
        this.days = days;
        this.storageClass = storageClass;
    }

    /**
     * @return Specifies the number of days after object creation when the specific rule action takes effect.
     * 
     * `NOTE`: One and only one of &#34;created_before_date&#34; and &#34;days&#34; can be specified in one abort_multipart_upload configuration.
     * 
     */
    public Integer days() {
        return this.days;
    }
    /**
     * @return The [storage class](https://www.alibabacloud.com/help/doc-detail/51374.htm) to apply. Can be &#34;Standard&#34;, &#34;IA&#34;, &#34;Archive&#34; and &#34;ColdArchive&#34;. Defaults to &#34;Standard&#34;. &#34;ColdArchive&#34; is available in 1.203.0+.
     * 
     */
    public String storageClass() {
        return this.storageClass;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketLifecycleRuleNoncurrentVersionTransition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer days;
        private String storageClass;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketLifecycleRuleNoncurrentVersionTransition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.days = defaults.days;
    	      this.storageClass = defaults.storageClass;
        }

        public Builder days(Integer days) {
            this.days = Objects.requireNonNull(days);
            return this;
        }
        public Builder storageClass(String storageClass) {
            this.storageClass = Objects.requireNonNull(storageClass);
            return this;
        }        public BucketLifecycleRuleNoncurrentVersionTransition build() {
            return new BucketLifecycleRuleNoncurrentVersionTransition(days, storageClass);
        }
    }
}
