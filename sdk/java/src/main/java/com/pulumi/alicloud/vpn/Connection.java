// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.vpn.ConnectionArgs;
import com.pulumi.alicloud.vpn.inputs.ConnectionState;
import com.pulumi.alicloud.vpn.outputs.ConnectionBgpConfig;
import com.pulumi.alicloud.vpn.outputs.ConnectionHealthCheckConfig;
import com.pulumi.alicloud.vpn.outputs.ConnectionIkeConfig;
import com.pulumi.alicloud.vpn.outputs.ConnectionIpsecConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ## Import
 * 
 * VPN connection can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:vpn/connection:Connection example vco-abc123456
 * ```
 * 
 */
@ResourceType(type="alicloud:vpn/connection:Connection")
public class Connection extends com.pulumi.resources.CustomResource {
    /**
     * The configurations of the BGP routing protocol. See the following `Block bgp_config`.
     * 
     */
    @Export(name="bgpConfig", type=ConnectionBgpConfig.class, parameters={})
    private Output<ConnectionBgpConfig> bgpConfig;

    /**
     * @return The configurations of the BGP routing protocol. See the following `Block bgp_config`.
     * 
     */
    public Output<ConnectionBgpConfig> bgpConfig() {
        return this.bgpConfig;
    }
    /**
     * The ID of the customer gateway.
     * 
     */
    @Export(name="customerGatewayId", type=String.class, parameters={})
    private Output<String> customerGatewayId;

    /**
     * @return The ID of the customer gateway.
     * 
     */
    public Output<String> customerGatewayId() {
        return this.customerGatewayId;
    }
    /**
     * Whether to delete a successfully negotiated IPsec tunnel and initiate a negotiation again. Valid value:true,false.
     * 
     */
    @Export(name="effectImmediately", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> effectImmediately;

    /**
     * @return Whether to delete a successfully negotiated IPsec tunnel and initiate a negotiation again. Valid value:true,false.
     * 
     */
    public Output<Optional<Boolean>> effectImmediately() {
        return Codegen.optional(this.effectImmediately);
    }
    /**
     * Whether to enable NAT traversal.
     * 
     */
    @Export(name="enableDpd", type=Boolean.class, parameters={})
    private Output<Boolean> enableDpd;

    /**
     * @return Whether to enable NAT traversal.
     * 
     */
    public Output<Boolean> enableDpd() {
        return this.enableDpd;
    }
    /**
     * Whether to enable NAT traversal.
     * 
     */
    @Export(name="enableNatTraversal", type=Boolean.class, parameters={})
    private Output<Boolean> enableNatTraversal;

    /**
     * @return Whether to enable NAT traversal.
     * 
     */
    public Output<Boolean> enableNatTraversal() {
        return this.enableNatTraversal;
    }
    /**
     * The health check configurations. See the following `Block health_check_config`.
     * 
     */
    @Export(name="healthCheckConfig", type=ConnectionHealthCheckConfig.class, parameters={})
    private Output<ConnectionHealthCheckConfig> healthCheckConfig;

    /**
     * @return The health check configurations. See the following `Block health_check_config`.
     * 
     */
    public Output<ConnectionHealthCheckConfig> healthCheckConfig() {
        return this.healthCheckConfig;
    }
    /**
     * The configurations of phase-one negotiation. See the following `Block ike_config`.
     * 
     */
    @Export(name="ikeConfig", type=ConnectionIkeConfig.class, parameters={})
    private Output<ConnectionIkeConfig> ikeConfig;

    /**
     * @return The configurations of phase-one negotiation. See the following `Block ike_config`.
     * 
     */
    public Output<ConnectionIkeConfig> ikeConfig() {
        return this.ikeConfig;
    }
    /**
     * The configurations of phase-two negotiation. See the following `Block ipsec_config`.
     * 
     */
    @Export(name="ipsecConfig", type=ConnectionIpsecConfig.class, parameters={})
    private Output<ConnectionIpsecConfig> ipsecConfig;

    /**
     * @return The configurations of phase-two negotiation. See the following `Block ipsec_config`.
     * 
     */
    public Output<ConnectionIpsecConfig> ipsecConfig() {
        return this.ipsecConfig;
    }
    /**
     * The CIDR block of the VPC to be connected with the local data center. This parameter is used for phase-two negotiation.
     * 
     */
    @Export(name="localSubnets", type=List.class, parameters={String.class})
    private Output<List<String>> localSubnets;

    /**
     * @return The CIDR block of the VPC to be connected with the local data center. This parameter is used for phase-two negotiation.
     * 
     */
    public Output<List<String>> localSubnets() {
        return this.localSubnets;
    }
    /**
     * The name of the IPsec connection.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the IPsec connection.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The CIDR block of the local data center. This parameter is used for phase-two negotiation.
     * 
     */
    @Export(name="remoteSubnets", type=List.class, parameters={String.class})
    private Output<List<String>> remoteSubnets;

    /**
     * @return The CIDR block of the local data center. This parameter is used for phase-two negotiation.
     * 
     */
    public Output<List<String>> remoteSubnets() {
        return this.remoteSubnets;
    }
    /**
     * The status of VPN connection.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return The status of VPN connection.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The ID of the VPN gateway.
     * 
     */
    @Export(name="vpnGatewayId", type=String.class, parameters={})
    private Output<String> vpnGatewayId;

    /**
     * @return The ID of the VPN gateway.
     * 
     */
    public Output<String> vpnGatewayId() {
        return this.vpnGatewayId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Connection(String name) {
        this(name, ConnectionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Connection(String name, ConnectionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Connection(String name, ConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:vpn/connection:Connection", name, args == null ? ConnectionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Connection(String name, Output<String> id, @Nullable ConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:vpn/connection:Connection", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Connection get(String name, Output<String> id, @Nullable ConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Connection(name, id, state, options);
    }
}
