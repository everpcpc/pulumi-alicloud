// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEventRulesRuleEventPatternKeywordFilter {
    /**
     * @return The keywords that are used to match events.
     * 
     */
    private final List<String> keyWords;
    /**
     * @return The relationship between multiple keywords in a condition.
     * 
     */
    private final String relation;

    @CustomType.Constructor
    private GetEventRulesRuleEventPatternKeywordFilter(
        @CustomType.Parameter("keyWords") List<String> keyWords,
        @CustomType.Parameter("relation") String relation) {
        this.keyWords = keyWords;
        this.relation = relation;
    }

    /**
     * @return The keywords that are used to match events.
     * 
     */
    public List<String> keyWords() {
        return this.keyWords;
    }
    /**
     * @return The relationship between multiple keywords in a condition.
     * 
     */
    public String relation() {
        return this.relation;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEventRulesRuleEventPatternKeywordFilter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> keyWords;
        private String relation;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEventRulesRuleEventPatternKeywordFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyWords = defaults.keyWords;
    	      this.relation = defaults.relation;
        }

        public Builder keyWords(List<String> keyWords) {
            this.keyWords = Objects.requireNonNull(keyWords);
            return this;
        }
        public Builder keyWords(String... keyWords) {
            return keyWords(List.of(keyWords));
        }
        public Builder relation(String relation) {
            this.relation = Objects.requireNonNull(relation);
            return this;
        }        public GetEventRulesRuleEventPatternKeywordFilter build() {
            return new GetEventRulesRuleEventPatternKeywordFilter(keyWords, relation);
        }
    }
}
