// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.graphdatabase.outputs;

import com.pulumi.alicloud.graphdatabase.outputs.GetDbInstancesInstance;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDbInstancesResult {
    private final @Nullable String dbInstanceDescription;
    private final @Nullable Boolean enableDetails;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<String> ids;
    private final List<GetDbInstancesInstance> instances;
    private final @Nullable String outputFile;
    private final @Nullable String status;

    @CustomType.Constructor
    private GetDbInstancesResult(
        @CustomType.Parameter("dbInstanceDescription") @Nullable String dbInstanceDescription,
        @CustomType.Parameter("enableDetails") @Nullable Boolean enableDetails,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ids") List<String> ids,
        @CustomType.Parameter("instances") List<GetDbInstancesInstance> instances,
        @CustomType.Parameter("outputFile") @Nullable String outputFile,
        @CustomType.Parameter("status") @Nullable String status) {
        this.dbInstanceDescription = dbInstanceDescription;
        this.enableDetails = enableDetails;
        this.id = id;
        this.ids = ids;
        this.instances = instances;
        this.outputFile = outputFile;
        this.status = status;
    }

    public Optional<String> dbInstanceDescription() {
        return Optional.ofNullable(this.dbInstanceDescription);
    }
    public Optional<Boolean> enableDetails() {
        return Optional.ofNullable(this.enableDetails);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public List<GetDbInstancesInstance> instances() {
        return this.instances;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbInstancesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String dbInstanceDescription;
        private @Nullable Boolean enableDetails;
        private String id;
        private List<String> ids;
        private List<GetDbInstancesInstance> instances;
        private @Nullable String outputFile;
        private @Nullable String status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDbInstancesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbInstanceDescription = defaults.dbInstanceDescription;
    	      this.enableDetails = defaults.enableDetails;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.instances = defaults.instances;
    	      this.outputFile = defaults.outputFile;
    	      this.status = defaults.status;
        }

        public Builder dbInstanceDescription(@Nullable String dbInstanceDescription) {
            this.dbInstanceDescription = dbInstanceDescription;
            return this;
        }
        public Builder enableDetails(@Nullable Boolean enableDetails) {
            this.enableDetails = enableDetails;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public Builder instances(List<GetDbInstancesInstance> instances) {
            this.instances = Objects.requireNonNull(instances);
            return this;
        }
        public Builder instances(GetDbInstancesInstance... instances) {
            return instances(List.of(instances));
        }
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }        public GetDbInstancesResult build() {
            return new GetDbInstancesResult(dbInstanceDescription, enableDetails, id, ids, instances, outputFile, status);
        }
    }
}
