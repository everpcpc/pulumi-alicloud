// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ga.outputs;

import com.pulumi.alicloud.ga.outputs.GetListenersListenerCertificate;
import com.pulumi.alicloud.ga.outputs.GetListenersListenerPortRange;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetListenersListener {
    /**
     * @return The certificates of the listener.
     * 
     */
    private final List<GetListenersListenerCertificate> certificates;
    /**
     * @return The clientAffinity of the listener.
     * 
     */
    private final String clientAffinity;
    /**
     * @return The description of the listener.
     * 
     */
    private final String description;
    /**
     * @return The ID of the Listener.
     * 
     */
    private final String id;
    /**
     * @return The listenerId of the listener.
     * 
     */
    private final String listenerId;
    /**
     * @return The name of the listener. The length of the name is 2-128 characters. It starts with uppercase and lowercase letters or Chinese characters. It can contain numbers and underscores and dashes.
     * 
     */
    private final String name;
    /**
     * @return The portRanges of the listener.
     * 
     */
    private final List<GetListenersListenerPortRange> portRanges;
    /**
     * @return Type of network transport protocol monitored.
     * 
     */
    private final String protocol;
    /**
     * @return The status of the listener.
     * 
     */
    private final String status;

    @CustomType.Constructor
    private GetListenersListener(
        @CustomType.Parameter("certificates") List<GetListenersListenerCertificate> certificates,
        @CustomType.Parameter("clientAffinity") String clientAffinity,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("listenerId") String listenerId,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("portRanges") List<GetListenersListenerPortRange> portRanges,
        @CustomType.Parameter("protocol") String protocol,
        @CustomType.Parameter("status") String status) {
        this.certificates = certificates;
        this.clientAffinity = clientAffinity;
        this.description = description;
        this.id = id;
        this.listenerId = listenerId;
        this.name = name;
        this.portRanges = portRanges;
        this.protocol = protocol;
        this.status = status;
    }

    /**
     * @return The certificates of the listener.
     * 
     */
    public List<GetListenersListenerCertificate> certificates() {
        return this.certificates;
    }
    /**
     * @return The clientAffinity of the listener.
     * 
     */
    public String clientAffinity() {
        return this.clientAffinity;
    }
    /**
     * @return The description of the listener.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ID of the Listener.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The listenerId of the listener.
     * 
     */
    public String listenerId() {
        return this.listenerId;
    }
    /**
     * @return The name of the listener. The length of the name is 2-128 characters. It starts with uppercase and lowercase letters or Chinese characters. It can contain numbers and underscores and dashes.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The portRanges of the listener.
     * 
     */
    public List<GetListenersListenerPortRange> portRanges() {
        return this.portRanges;
    }
    /**
     * @return Type of network transport protocol monitored.
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return The status of the listener.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListenersListener defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetListenersListenerCertificate> certificates;
        private String clientAffinity;
        private String description;
        private String id;
        private String listenerId;
        private String name;
        private List<GetListenersListenerPortRange> portRanges;
        private String protocol;
        private String status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetListenersListener defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificates = defaults.certificates;
    	      this.clientAffinity = defaults.clientAffinity;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.listenerId = defaults.listenerId;
    	      this.name = defaults.name;
    	      this.portRanges = defaults.portRanges;
    	      this.protocol = defaults.protocol;
    	      this.status = defaults.status;
        }

        public Builder certificates(List<GetListenersListenerCertificate> certificates) {
            this.certificates = Objects.requireNonNull(certificates);
            return this;
        }
        public Builder certificates(GetListenersListenerCertificate... certificates) {
            return certificates(List.of(certificates));
        }
        public Builder clientAffinity(String clientAffinity) {
            this.clientAffinity = Objects.requireNonNull(clientAffinity);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder listenerId(String listenerId) {
            this.listenerId = Objects.requireNonNull(listenerId);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder portRanges(List<GetListenersListenerPortRange> portRanges) {
            this.portRanges = Objects.requireNonNull(portRanges);
            return this;
        }
        public Builder portRanges(GetListenersListenerPortRange... portRanges) {
            return portRanges(List.of(portRanges));
        }
        public Builder protocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }        public GetListenersListener build() {
            return new GetListenersListener(certificates, clientAffinity, description, id, listenerId, name, portRanges, protocol, status);
        }
    }
}
