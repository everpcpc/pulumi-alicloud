// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.maxcompute.outputs;

import com.pulumi.alicloud.maxcompute.outputs.GetProjectsProjectPropertiesEncryption;
import com.pulumi.alicloud.maxcompute.outputs.GetProjectsProjectPropertiesTableLifecycle;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetProjectsProjectProperties {
    /**
     * @return Whether to allow full table scan.
     * 
     */
    private final Boolean allowFullScan;
    /**
     * @return Whether to turn on Decimal2.0.
     * 
     */
    private final Boolean enableDecimal2;
    /**
     * @return Whether encryption is turned on.
     * 
     */
    private final GetProjectsProjectPropertiesEncryption encryption;
    /**
     * @return Job default retention time.
     * 
     */
    private final String retentionDays;
    /**
     * @return SQL charge limit.
     * 
     */
    private final String sqlMeteringMax;
    /**
     * @return Life cycle of tables.
     * 
     */
    private final GetProjectsProjectPropertiesTableLifecycle tableLifecycle;
    /**
     * @return Project time zone.
     * 
     */
    private final String timezone;
    /**
     * @return Type system.
     * 
     */
    private final String typeSystem;

    @CustomType.Constructor
    private GetProjectsProjectProperties(
        @CustomType.Parameter("allowFullScan") Boolean allowFullScan,
        @CustomType.Parameter("enableDecimal2") Boolean enableDecimal2,
        @CustomType.Parameter("encryption") GetProjectsProjectPropertiesEncryption encryption,
        @CustomType.Parameter("retentionDays") String retentionDays,
        @CustomType.Parameter("sqlMeteringMax") String sqlMeteringMax,
        @CustomType.Parameter("tableLifecycle") GetProjectsProjectPropertiesTableLifecycle tableLifecycle,
        @CustomType.Parameter("timezone") String timezone,
        @CustomType.Parameter("typeSystem") String typeSystem) {
        this.allowFullScan = allowFullScan;
        this.enableDecimal2 = enableDecimal2;
        this.encryption = encryption;
        this.retentionDays = retentionDays;
        this.sqlMeteringMax = sqlMeteringMax;
        this.tableLifecycle = tableLifecycle;
        this.timezone = timezone;
        this.typeSystem = typeSystem;
    }

    /**
     * @return Whether to allow full table scan.
     * 
     */
    public Boolean allowFullScan() {
        return this.allowFullScan;
    }
    /**
     * @return Whether to turn on Decimal2.0.
     * 
     */
    public Boolean enableDecimal2() {
        return this.enableDecimal2;
    }
    /**
     * @return Whether encryption is turned on.
     * 
     */
    public GetProjectsProjectPropertiesEncryption encryption() {
        return this.encryption;
    }
    /**
     * @return Job default retention time.
     * 
     */
    public String retentionDays() {
        return this.retentionDays;
    }
    /**
     * @return SQL charge limit.
     * 
     */
    public String sqlMeteringMax() {
        return this.sqlMeteringMax;
    }
    /**
     * @return Life cycle of tables.
     * 
     */
    public GetProjectsProjectPropertiesTableLifecycle tableLifecycle() {
        return this.tableLifecycle;
    }
    /**
     * @return Project time zone.
     * 
     */
    public String timezone() {
        return this.timezone;
    }
    /**
     * @return Type system.
     * 
     */
    public String typeSystem() {
        return this.typeSystem;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProjectsProjectProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean allowFullScan;
        private Boolean enableDecimal2;
        private GetProjectsProjectPropertiesEncryption encryption;
        private String retentionDays;
        private String sqlMeteringMax;
        private GetProjectsProjectPropertiesTableLifecycle tableLifecycle;
        private String timezone;
        private String typeSystem;

        public Builder() {
    	      // Empty
        }

        public Builder(GetProjectsProjectProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowFullScan = defaults.allowFullScan;
    	      this.enableDecimal2 = defaults.enableDecimal2;
    	      this.encryption = defaults.encryption;
    	      this.retentionDays = defaults.retentionDays;
    	      this.sqlMeteringMax = defaults.sqlMeteringMax;
    	      this.tableLifecycle = defaults.tableLifecycle;
    	      this.timezone = defaults.timezone;
    	      this.typeSystem = defaults.typeSystem;
        }

        public Builder allowFullScan(Boolean allowFullScan) {
            this.allowFullScan = Objects.requireNonNull(allowFullScan);
            return this;
        }
        public Builder enableDecimal2(Boolean enableDecimal2) {
            this.enableDecimal2 = Objects.requireNonNull(enableDecimal2);
            return this;
        }
        public Builder encryption(GetProjectsProjectPropertiesEncryption encryption) {
            this.encryption = Objects.requireNonNull(encryption);
            return this;
        }
        public Builder retentionDays(String retentionDays) {
            this.retentionDays = Objects.requireNonNull(retentionDays);
            return this;
        }
        public Builder sqlMeteringMax(String sqlMeteringMax) {
            this.sqlMeteringMax = Objects.requireNonNull(sqlMeteringMax);
            return this;
        }
        public Builder tableLifecycle(GetProjectsProjectPropertiesTableLifecycle tableLifecycle) {
            this.tableLifecycle = Objects.requireNonNull(tableLifecycle);
            return this;
        }
        public Builder timezone(String timezone) {
            this.timezone = Objects.requireNonNull(timezone);
            return this;
        }
        public Builder typeSystem(String typeSystem) {
            this.typeSystem = Objects.requireNonNull(typeSystem);
            return this;
        }        public GetProjectsProjectProperties build() {
            return new GetProjectsProjectProperties(allowFullScan, enableDecimal2, encryption, retentionDays, sqlMeteringMax, tableLifecycle, timezone, typeSystem);
        }
    }
}
