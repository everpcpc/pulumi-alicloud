// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.slb;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.slb.BackendServerArgs;
import com.pulumi.alicloud.slb.inputs.BackendServerState;
import com.pulumi.alicloud.slb.outputs.BackendServerBackendServer;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Add a group of backend servers (ECS or ENI instance) to the Server Load Balancer or remove them from it.
 * 
 * &gt; **NOTE:** Available in 1.53.0+
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.adb.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.ecs.EcsFunctions;
 * import com.pulumi.alicloud.ecp.inputs.GetInstanceTypesArgs;
 * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.ecs.SecurityGroup;
 * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
 * import com.pulumi.alicloud.ecs.Instance;
 * import com.pulumi.alicloud.ecs.InstanceArgs;
 * import com.pulumi.alicloud.slb.ApplicationLoadBalancer;
 * import com.pulumi.alicloud.slb.ApplicationLoadBalancerArgs;
 * import com.pulumi.alicloud.slb.BackendServer;
 * import com.pulumi.alicloud.slb.BackendServerArgs;
 * import com.pulumi.alicloud.slb.inputs.BackendServerBackendServerArgs;
 * import com.pulumi.codegen.internal.KeyedValue;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get(&#34;name&#34;).orElse(&#34;slbbackendservertest&#34;);
 *         final var defaultZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
 *             .availableDiskCategory(&#34;cloud_efficiency&#34;)
 *             .availableResourceCreation(&#34;VSwitch&#34;)
 *             .build());
 * 
 *         final var defaultInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
 *             .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
 *             .cpuCoreCount(1)
 *             .memorySize(2)
 *             .build());
 * 
 *         final var defaultImages = EcsFunctions.getImages(GetImagesArgs.builder()
 *             .nameRegex(&#34;^ubuntu_18.*64&#34;)
 *             .mostRecent(true)
 *             .owners(&#34;system&#34;)
 *             .build());
 * 
 *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
 *             .vpcName(name)
 *             .cidrBlock(&#34;172.16.0.0/16&#34;)
 *             .build());
 * 
 *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
 *             .vpcId(defaultNetwork.id())
 *             .cidrBlock(&#34;172.16.0.0/16&#34;)
 *             .zoneId(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
 *             .vswitchName(name)
 *             .build());
 * 
 *         var defaultSecurityGroup = new SecurityGroup(&#34;defaultSecurityGroup&#34;, SecurityGroupArgs.builder()        
 *             .vpcId(defaultNetwork.id())
 *             .build());
 * 
 *         for (var i = 0; i &lt; &#34;2&#34;; i++) {
 *             new Instance(&#34;defaultInstance-&#34; + i, InstanceArgs.builder()            
 *                 .imageId(defaultImages.applyValue(getImagesResult -&gt; getImagesResult.images()[0].id()))
 *                 .instanceType(defaultInstanceTypes.applyValue(getInstanceTypesResult -&gt; getInstanceTypesResult.instanceTypes()[0].id()))
 *                 .instanceName(name)
 *                 .securityGroups(defaultSecurityGroup.stream().map(element -&gt; element.id()).collect(toList()))
 *                 .internetChargeType(&#34;PayByTraffic&#34;)
 *                 .internetMaxBandwidthOut(&#34;10&#34;)
 *                 .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
 *                 .instanceChargeType(&#34;PostPaid&#34;)
 *                 .systemDiskCategory(&#34;cloud_efficiency&#34;)
 *                 .vswitchId(defaultSwitch.id())
 *                 .build());
 * 
 *         
 * }
 *         var defaultApplicationLoadBalancer = new ApplicationLoadBalancer(&#34;defaultApplicationLoadBalancer&#34;, ApplicationLoadBalancerArgs.builder()        
 *             .loadBalancerName(name)
 *             .vswitchId(defaultSwitch.id())
 *             .build());
 * 
 *         var defaultBackendServer = new BackendServer(&#34;defaultBackendServer&#34;, BackendServerArgs.builder()        
 *             .loadBalancerId(defaultApplicationLoadBalancer.id())
 *             .backendServers(            
 *                 BackendServerBackendServerArgs.builder()
 *                     .serverId(defaultInstance[0].id())
 *                     .weight(100)
 *                     .build(),
 *                 BackendServerBackendServerArgs.builder()
 *                     .serverId(defaultInstance[1].id())
 *                     .weight(100)
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ## Block servers
 * 
 * The servers mapping supports the following:
 * 
 * * `server_id` - (Required) A list backend server ID (ECS instance ID).
 * * `weight` - (Optional) Weight of the backend server. Valid value range: [0-100].
 * * `type` - (Optional) Type of the backend server. Valid value `ecs`, `eni`, `eci`. Default to `ecs`. **NOTE:** From 1.170.0+, The `eci` is valid.
 * * `server_ip` - (Optional, Computed, Available in 1.93.0+) ServerIp of the backend server. This parameter can be specified when the type is `eni`. `ecs` type currently does not support adding `server_ip` parameter.
 * 
 * ## Import
 * 
 * Load balancer backend server can be imported using the load balancer id.
 * 
 * ```sh
 *  $ pulumi import alicloud:slb/backendServer:BackendServer example &lt;load_balancer_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:slb/backendServer:BackendServer")
public class BackendServer extends com.pulumi.resources.CustomResource {
    /**
     * A list of instances to added backend server in the SLB. It contains three sub-fields as `Block server` follows.
     * 
     */
    @Export(name="backendServers", type=List.class, parameters={BackendServerBackendServer.class})
    private Output</* @Nullable */ List<BackendServerBackendServer>> backendServers;

    /**
     * @return A list of instances to added backend server in the SLB. It contains three sub-fields as `Block server` follows.
     * 
     */
    public Output<Optional<List<BackendServerBackendServer>>> backendServers() {
        return Codegen.optional(this.backendServers);
    }
    /**
     * Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
     * 
     */
    @Export(name="deleteProtectionValidation", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> deleteProtectionValidation;

    /**
     * @return Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
     * 
     */
    public Output<Optional<Boolean>> deleteProtectionValidation() {
        return Codegen.optional(this.deleteProtectionValidation);
    }
    /**
     * ID of the load balancer.
     * 
     */
    @Export(name="loadBalancerId", type=String.class, parameters={})
    private Output<String> loadBalancerId;

    /**
     * @return ID of the load balancer.
     * 
     */
    public Output<String> loadBalancerId() {
        return this.loadBalancerId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BackendServer(String name) {
        this(name, BackendServerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BackendServer(String name, BackendServerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BackendServer(String name, BackendServerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:slb/backendServer:BackendServer", name, args == null ? BackendServerArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private BackendServer(String name, Output<String> id, @Nullable BackendServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:slb/backendServer:BackendServer", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BackendServer get(String name, Output<String> id, @Nullable BackendServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BackendServer(name, id, state, options);
    }
}
