// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cdn.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainReferConfig {
    private final @Nullable String allowEmpty;
    private final List<String> referLists;
    private final @Nullable String referType;

    @CustomType.Constructor
    private DomainReferConfig(
        @CustomType.Parameter("allowEmpty") @Nullable String allowEmpty,
        @CustomType.Parameter("referLists") List<String> referLists,
        @CustomType.Parameter("referType") @Nullable String referType) {
        this.allowEmpty = allowEmpty;
        this.referLists = referLists;
        this.referType = referType;
    }

    public Optional<String> allowEmpty() {
        return Optional.ofNullable(this.allowEmpty);
    }
    public List<String> referLists() {
        return this.referLists;
    }
    public Optional<String> referType() {
        return Optional.ofNullable(this.referType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainReferConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String allowEmpty;
        private List<String> referLists;
        private @Nullable String referType;

        public Builder() {
    	      // Empty
        }

        public Builder(DomainReferConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowEmpty = defaults.allowEmpty;
    	      this.referLists = defaults.referLists;
    	      this.referType = defaults.referType;
        }

        public Builder allowEmpty(@Nullable String allowEmpty) {
            this.allowEmpty = allowEmpty;
            return this;
        }
        public Builder referLists(List<String> referLists) {
            this.referLists = Objects.requireNonNull(referLists);
            return this;
        }
        public Builder referLists(String... referLists) {
            return referLists(List.of(referLists));
        }
        public Builder referType(@Nullable String referType) {
            this.referType = referType;
            return this;
        }        public DomainReferConfig build() {
            return new DomainReferConfig(allowEmpty, referLists, referType);
        }
    }
}
