// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rds;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.rds.AccountPrivilegeArgs;
import com.pulumi.alicloud.rds.inputs.AccountPrivilegeState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides an RDS account privilege resource and used to grant several database some access privilege. A database can be granted by multiple account.
 * 
 * &gt; **NOTE:** At present, a database can only have one database owner.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * RDS account privilege can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:rds/accountPrivilege:AccountPrivilege example &#34;rm-12345:tf_account:ReadOnly&#34;
 * ```
 * 
 */
@ResourceType(type="alicloud:rds/accountPrivilege:AccountPrivilege")
public class AccountPrivilege extends com.pulumi.resources.CustomResource {
    /**
     * A specified account name.
     * 
     */
    @Export(name="accountName", type=String.class, parameters={})
    private Output<String> accountName;

    /**
     * @return A specified account name.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }
    /**
     * List of specified database name.
     * 
     */
    @Export(name="dbNames", type=List.class, parameters={String.class})
    private Output<List<String>> dbNames;

    /**
     * @return List of specified database name.
     * 
     */
    public Output<List<String>> dbNames() {
        return this.dbNames;
    }
    /**
     * The Id of instance in which account belongs.
     * 
     */
    @Export(name="instanceId", type=String.class, parameters={})
    private Output<String> instanceId;

    /**
     * @return The Id of instance in which account belongs.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * The privilege of one account access database. Valid values:
     * - ReadOnly: This value is only for MySQL, MariaDB and SQL Server
     * - ReadWrite: This value is only for MySQL, MariaDB and SQL Server
     * - DDLOnly: (Available in 1.64.0+) This value is only for MySQL and MariaDB
     * - DMLOnly: (Available in 1.64.0+) This value is only for MySQL and MariaDB
     * - DBOwner: (Available in 1.64.0+) This value is only for SQL Server and PostgreSQL.
     * 
     */
    @Export(name="privilege", type=String.class, parameters={})
    private Output</* @Nullable */ String> privilege;

    /**
     * @return The privilege of one account access database. Valid values:
     * - ReadOnly: This value is only for MySQL, MariaDB and SQL Server
     * - ReadWrite: This value is only for MySQL, MariaDB and SQL Server
     * - DDLOnly: (Available in 1.64.0+) This value is only for MySQL and MariaDB
     * - DMLOnly: (Available in 1.64.0+) This value is only for MySQL and MariaDB
     * - DBOwner: (Available in 1.64.0+) This value is only for SQL Server and PostgreSQL.
     * 
     */
    public Output<Optional<String>> privilege() {
        return Codegen.optional(this.privilege);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AccountPrivilege(String name) {
        this(name, AccountPrivilegeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AccountPrivilege(String name, AccountPrivilegeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AccountPrivilege(String name, AccountPrivilegeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:rds/accountPrivilege:AccountPrivilege", name, args == null ? AccountPrivilegeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AccountPrivilege(String name, Output<String> id, @Nullable AccountPrivilegeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:rds/accountPrivilege:AccountPrivilege", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AccountPrivilege get(String name, Output<String> id, @Nullable AccountPrivilegeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AccountPrivilege(name, id, state, options);
    }
}
