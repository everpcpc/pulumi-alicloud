// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms.outputs;

import com.pulumi.alicloud.arms.outputs.GetPrometheusAlertRulesRuleAnnotation;
import com.pulumi.alicloud.arms.outputs.GetPrometheusAlertRulesRuleLabel;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPrometheusAlertRulesRule {
    /**
     * @return The annotations of the alert rule.
     * 
     */
    private final List<GetPrometheusAlertRulesRuleAnnotation> annotations;
    /**
     * @return The ID of the cluster.
     * 
     */
    private final String clusterId;
    /**
     * @return The ID of the notification policy. This parameter is required when the `notify_type` parameter is set to `DISPATCH_RULE`.
     * 
     */
    private final String dispatchRuleId;
    /**
     * @return -The duration of the alert.
     * 
     */
    private final String duration;
    /**
     * @return The alert rule expression that follows the PromQL syntax..
     * 
     */
    private final String expression;
    /**
     * @return The ID of the Prometheus Alert Rule.
     * 
     */
    private final String id;
    /**
     * @return -The labels of the resource.
     * 
     */
    private final List<GetPrometheusAlertRulesRuleLabel> labels;
    /**
     * @return The message of the alert notification.
     * 
     */
    private final String message;
    /**
     * @return The method of sending the alert notification. Valid values: `ALERT_MANAGER`, `DISPATCH_RULE`.
     * 
     */
    private final String notifyType;
    /**
     * @return The first ID of the resource.
     * 
     */
    private final String prometheusAlertRuleId;
    /**
     * @return The name of the resource.
     * 
     */
    private final String prometheusAlertRuleName;
    /**
     * @return The status of the resource. Valid values: `0`, `1`.
     * * `1`: open.
     * * `0`: off.
     * 
     */
    private final Integer status;
    /**
     * @return The type of the alert rule.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetPrometheusAlertRulesRule(
        @CustomType.Parameter("annotations") List<GetPrometheusAlertRulesRuleAnnotation> annotations,
        @CustomType.Parameter("clusterId") String clusterId,
        @CustomType.Parameter("dispatchRuleId") String dispatchRuleId,
        @CustomType.Parameter("duration") String duration,
        @CustomType.Parameter("expression") String expression,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("labels") List<GetPrometheusAlertRulesRuleLabel> labels,
        @CustomType.Parameter("message") String message,
        @CustomType.Parameter("notifyType") String notifyType,
        @CustomType.Parameter("prometheusAlertRuleId") String prometheusAlertRuleId,
        @CustomType.Parameter("prometheusAlertRuleName") String prometheusAlertRuleName,
        @CustomType.Parameter("status") Integer status,
        @CustomType.Parameter("type") String type) {
        this.annotations = annotations;
        this.clusterId = clusterId;
        this.dispatchRuleId = dispatchRuleId;
        this.duration = duration;
        this.expression = expression;
        this.id = id;
        this.labels = labels;
        this.message = message;
        this.notifyType = notifyType;
        this.prometheusAlertRuleId = prometheusAlertRuleId;
        this.prometheusAlertRuleName = prometheusAlertRuleName;
        this.status = status;
        this.type = type;
    }

    /**
     * @return The annotations of the alert rule.
     * 
     */
    public List<GetPrometheusAlertRulesRuleAnnotation> annotations() {
        return this.annotations;
    }
    /**
     * @return The ID of the cluster.
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return The ID of the notification policy. This parameter is required when the `notify_type` parameter is set to `DISPATCH_RULE`.
     * 
     */
    public String dispatchRuleId() {
        return this.dispatchRuleId;
    }
    /**
     * @return -The duration of the alert.
     * 
     */
    public String duration() {
        return this.duration;
    }
    /**
     * @return The alert rule expression that follows the PromQL syntax..
     * 
     */
    public String expression() {
        return this.expression;
    }
    /**
     * @return The ID of the Prometheus Alert Rule.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return -The labels of the resource.
     * 
     */
    public List<GetPrometheusAlertRulesRuleLabel> labels() {
        return this.labels;
    }
    /**
     * @return The message of the alert notification.
     * 
     */
    public String message() {
        return this.message;
    }
    /**
     * @return The method of sending the alert notification. Valid values: `ALERT_MANAGER`, `DISPATCH_RULE`.
     * 
     */
    public String notifyType() {
        return this.notifyType;
    }
    /**
     * @return The first ID of the resource.
     * 
     */
    public String prometheusAlertRuleId() {
        return this.prometheusAlertRuleId;
    }
    /**
     * @return The name of the resource.
     * 
     */
    public String prometheusAlertRuleName() {
        return this.prometheusAlertRuleName;
    }
    /**
     * @return The status of the resource. Valid values: `0`, `1`.
     * * `1`: open.
     * * `0`: off.
     * 
     */
    public Integer status() {
        return this.status;
    }
    /**
     * @return The type of the alert rule.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrometheusAlertRulesRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetPrometheusAlertRulesRuleAnnotation> annotations;
        private String clusterId;
        private String dispatchRuleId;
        private String duration;
        private String expression;
        private String id;
        private List<GetPrometheusAlertRulesRuleLabel> labels;
        private String message;
        private String notifyType;
        private String prometheusAlertRuleId;
        private String prometheusAlertRuleName;
        private Integer status;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPrometheusAlertRulesRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.clusterId = defaults.clusterId;
    	      this.dispatchRuleId = defaults.dispatchRuleId;
    	      this.duration = defaults.duration;
    	      this.expression = defaults.expression;
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.message = defaults.message;
    	      this.notifyType = defaults.notifyType;
    	      this.prometheusAlertRuleId = defaults.prometheusAlertRuleId;
    	      this.prometheusAlertRuleName = defaults.prometheusAlertRuleName;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
        }

        public Builder annotations(List<GetPrometheusAlertRulesRuleAnnotation> annotations) {
            this.annotations = Objects.requireNonNull(annotations);
            return this;
        }
        public Builder annotations(GetPrometheusAlertRulesRuleAnnotation... annotations) {
            return annotations(List.of(annotations));
        }
        public Builder clusterId(String clusterId) {
            this.clusterId = Objects.requireNonNull(clusterId);
            return this;
        }
        public Builder dispatchRuleId(String dispatchRuleId) {
            this.dispatchRuleId = Objects.requireNonNull(dispatchRuleId);
            return this;
        }
        public Builder duration(String duration) {
            this.duration = Objects.requireNonNull(duration);
            return this;
        }
        public Builder expression(String expression) {
            this.expression = Objects.requireNonNull(expression);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder labels(List<GetPrometheusAlertRulesRuleLabel> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        public Builder labels(GetPrometheusAlertRulesRuleLabel... labels) {
            return labels(List.of(labels));
        }
        public Builder message(String message) {
            this.message = Objects.requireNonNull(message);
            return this;
        }
        public Builder notifyType(String notifyType) {
            this.notifyType = Objects.requireNonNull(notifyType);
            return this;
        }
        public Builder prometheusAlertRuleId(String prometheusAlertRuleId) {
            this.prometheusAlertRuleId = Objects.requireNonNull(prometheusAlertRuleId);
            return this;
        }
        public Builder prometheusAlertRuleName(String prometheusAlertRuleName) {
            this.prometheusAlertRuleName = Objects.requireNonNull(prometheusAlertRuleName);
            return this;
        }
        public Builder status(Integer status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetPrometheusAlertRulesRule build() {
            return new GetPrometheusAlertRulesRule(annotations, clusterId, dispatchRuleId, duration, expression, id, labels, message, notifyType, prometheusAlertRuleId, prometheusAlertRuleName, status, type);
        }
    }
}
