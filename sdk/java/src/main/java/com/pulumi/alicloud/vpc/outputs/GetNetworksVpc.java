// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetNetworksVpc {
    /**
     * @return Filter results by a specific CIDR block. For example: &#34;172.16.0.0/12&#34;.
     * 
     */
    private final String cidrBlock;
    /**
     * @return Time of creation.
     * 
     */
    private final String creationTime;
    /**
     * @return Description of the VPC
     * 
     */
    private final String description;
    /**
     * @return ID of the VPC.
     * 
     */
    private final String id;
    /**
     * @return The IPv6 CIDR block of the VPC.
     * 
     */
    private final String ipv6CidrBlock;
    /**
     * @return Indicate whether the VPC is the default one in the specified region.
     * 
     */
    private final Boolean isDefault;
    /**
     * @return ID of the region where the VPC is located.
     * 
     */
    private final String regionId;
    /**
     * @return The Id of resource group which VPC belongs.
     * 
     */
    private final String resourceGroupId;
    /**
     * @return Route table ID of the VRouter.
     * 
     */
    private final String routeTableId;
    /**
     * @return The ID of the VRouter.
     * 
     */
    private final String routerId;
    /**
     * @return A list of secondary IPv4 CIDR blocks of the VPC.
     * 
     */
    private final List<String> secondaryCidrBlocks;
    /**
     * @return Filter results by a specific status. Valid value are `Pending` and `Available`.
     * 
     */
    private final String status;
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    private final Map<String,Object> tags;
    /**
     * @return A list of user CIDRs.
     * 
     */
    private final List<String> userCidrs;
    /**
     * @return ID of the VPC.
     * 
     */
    private final String vpcId;
    /**
     * @return The name of the VPC.
     * 
     */
    private final String vpcName;
    /**
     * @return ID of the VRouter.
     * 
     */
    private final String vrouterId;
    /**
     * @return List of VSwitch IDs in the specified VPC
     * 
     */
    private final List<String> vswitchIds;

    @CustomType.Constructor
    private GetNetworksVpc(
        @CustomType.Parameter("cidrBlock") String cidrBlock,
        @CustomType.Parameter("creationTime") String creationTime,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ipv6CidrBlock") String ipv6CidrBlock,
        @CustomType.Parameter("isDefault") Boolean isDefault,
        @CustomType.Parameter("regionId") String regionId,
        @CustomType.Parameter("resourceGroupId") String resourceGroupId,
        @CustomType.Parameter("routeTableId") String routeTableId,
        @CustomType.Parameter("routerId") String routerId,
        @CustomType.Parameter("secondaryCidrBlocks") List<String> secondaryCidrBlocks,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("tags") Map<String,Object> tags,
        @CustomType.Parameter("userCidrs") List<String> userCidrs,
        @CustomType.Parameter("vpcId") String vpcId,
        @CustomType.Parameter("vpcName") String vpcName,
        @CustomType.Parameter("vrouterId") String vrouterId,
        @CustomType.Parameter("vswitchIds") List<String> vswitchIds) {
        this.cidrBlock = cidrBlock;
        this.creationTime = creationTime;
        this.description = description;
        this.id = id;
        this.ipv6CidrBlock = ipv6CidrBlock;
        this.isDefault = isDefault;
        this.regionId = regionId;
        this.resourceGroupId = resourceGroupId;
        this.routeTableId = routeTableId;
        this.routerId = routerId;
        this.secondaryCidrBlocks = secondaryCidrBlocks;
        this.status = status;
        this.tags = tags;
        this.userCidrs = userCidrs;
        this.vpcId = vpcId;
        this.vpcName = vpcName;
        this.vrouterId = vrouterId;
        this.vswitchIds = vswitchIds;
    }

    /**
     * @return Filter results by a specific CIDR block. For example: &#34;172.16.0.0/12&#34;.
     * 
     */
    public String cidrBlock() {
        return this.cidrBlock;
    }
    /**
     * @return Time of creation.
     * 
     */
    public String creationTime() {
        return this.creationTime;
    }
    /**
     * @return Description of the VPC
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return ID of the VPC.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The IPv6 CIDR block of the VPC.
     * 
     */
    public String ipv6CidrBlock() {
        return this.ipv6CidrBlock;
    }
    /**
     * @return Indicate whether the VPC is the default one in the specified region.
     * 
     */
    public Boolean isDefault() {
        return this.isDefault;
    }
    /**
     * @return ID of the region where the VPC is located.
     * 
     */
    public String regionId() {
        return this.regionId;
    }
    /**
     * @return The Id of resource group which VPC belongs.
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return Route table ID of the VRouter.
     * 
     */
    public String routeTableId() {
        return this.routeTableId;
    }
    /**
     * @return The ID of the VRouter.
     * 
     */
    public String routerId() {
        return this.routerId;
    }
    /**
     * @return A list of secondary IPv4 CIDR blocks of the VPC.
     * 
     */
    public List<String> secondaryCidrBlocks() {
        return this.secondaryCidrBlocks;
    }
    /**
     * @return Filter results by a specific status. Valid value are `Pending` and `Available`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags;
    }
    /**
     * @return A list of user CIDRs.
     * 
     */
    public List<String> userCidrs() {
        return this.userCidrs;
    }
    /**
     * @return ID of the VPC.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    /**
     * @return The name of the VPC.
     * 
     */
    public String vpcName() {
        return this.vpcName;
    }
    /**
     * @return ID of the VRouter.
     * 
     */
    public String vrouterId() {
        return this.vrouterId;
    }
    /**
     * @return List of VSwitch IDs in the specified VPC
     * 
     */
    public List<String> vswitchIds() {
        return this.vswitchIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworksVpc defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String cidrBlock;
        private String creationTime;
        private String description;
        private String id;
        private String ipv6CidrBlock;
        private Boolean isDefault;
        private String regionId;
        private String resourceGroupId;
        private String routeTableId;
        private String routerId;
        private List<String> secondaryCidrBlocks;
        private String status;
        private Map<String,Object> tags;
        private List<String> userCidrs;
        private String vpcId;
        private String vpcName;
        private String vrouterId;
        private List<String> vswitchIds;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNetworksVpc defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidrBlock = defaults.cidrBlock;
    	      this.creationTime = defaults.creationTime;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.ipv6CidrBlock = defaults.ipv6CidrBlock;
    	      this.isDefault = defaults.isDefault;
    	      this.regionId = defaults.regionId;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.routeTableId = defaults.routeTableId;
    	      this.routerId = defaults.routerId;
    	      this.secondaryCidrBlocks = defaults.secondaryCidrBlocks;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.userCidrs = defaults.userCidrs;
    	      this.vpcId = defaults.vpcId;
    	      this.vpcName = defaults.vpcName;
    	      this.vrouterId = defaults.vrouterId;
    	      this.vswitchIds = defaults.vswitchIds;
        }

        public Builder cidrBlock(String cidrBlock) {
            this.cidrBlock = Objects.requireNonNull(cidrBlock);
            return this;
        }
        public Builder creationTime(String creationTime) {
            this.creationTime = Objects.requireNonNull(creationTime);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ipv6CidrBlock(String ipv6CidrBlock) {
            this.ipv6CidrBlock = Objects.requireNonNull(ipv6CidrBlock);
            return this;
        }
        public Builder isDefault(Boolean isDefault) {
            this.isDefault = Objects.requireNonNull(isDefault);
            return this;
        }
        public Builder regionId(String regionId) {
            this.regionId = Objects.requireNonNull(regionId);
            return this;
        }
        public Builder resourceGroupId(String resourceGroupId) {
            this.resourceGroupId = Objects.requireNonNull(resourceGroupId);
            return this;
        }
        public Builder routeTableId(String routeTableId) {
            this.routeTableId = Objects.requireNonNull(routeTableId);
            return this;
        }
        public Builder routerId(String routerId) {
            this.routerId = Objects.requireNonNull(routerId);
            return this;
        }
        public Builder secondaryCidrBlocks(List<String> secondaryCidrBlocks) {
            this.secondaryCidrBlocks = Objects.requireNonNull(secondaryCidrBlocks);
            return this;
        }
        public Builder secondaryCidrBlocks(String... secondaryCidrBlocks) {
            return secondaryCidrBlocks(List.of(secondaryCidrBlocks));
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder tags(Map<String,Object> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder userCidrs(List<String> userCidrs) {
            this.userCidrs = Objects.requireNonNull(userCidrs);
            return this;
        }
        public Builder userCidrs(String... userCidrs) {
            return userCidrs(List.of(userCidrs));
        }
        public Builder vpcId(String vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }
        public Builder vpcName(String vpcName) {
            this.vpcName = Objects.requireNonNull(vpcName);
            return this;
        }
        public Builder vrouterId(String vrouterId) {
            this.vrouterId = Objects.requireNonNull(vrouterId);
            return this;
        }
        public Builder vswitchIds(List<String> vswitchIds) {
            this.vswitchIds = Objects.requireNonNull(vswitchIds);
            return this;
        }
        public Builder vswitchIds(String... vswitchIds) {
            return vswitchIds(List.of(vswitchIds));
        }        public GetNetworksVpc build() {
            return new GetNetworksVpc(cidrBlock, creationTime, description, id, ipv6CidrBlock, isDefault, regionId, resourceGroupId, routeTableId, routerId, secondaryCidrBlocks, status, tags, userCidrs, vpcId, vpcName, vrouterId, vswitchIds);
        }
    }
}
