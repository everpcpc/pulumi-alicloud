// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.emrv2.outputs;

import com.pulumi.alicloud.emrv2.outputs.GetClustersCluster;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClustersResult {
    private @Nullable String clusterName;
    private @Nullable List<String> clusterStates;
    private @Nullable List<String> clusterTypes;
    private List<GetClustersCluster> clusters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private List<String> ids;
    private @Nullable Integer maxResults;
    private @Nullable String nameRegex;
    private List<String> names;
    private @Nullable String nextToken;
    private @Nullable String outputFile;
    private @Nullable List<String> paymentTypes;
    private @Nullable String resourceGroupId;
    private @Nullable Map<String,Object> tags;
    private Integer totalCount;

    private GetClustersResult() {}
    public Optional<String> clusterName() {
        return Optional.ofNullable(this.clusterName);
    }
    public List<String> clusterStates() {
        return this.clusterStates == null ? List.of() : this.clusterStates;
    }
    public List<String> clusterTypes() {
        return this.clusterTypes == null ? List.of() : this.clusterTypes;
    }
    public List<GetClustersCluster> clusters() {
        return this.clusters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public Optional<Integer> maxResults() {
        return Optional.ofNullable(this.maxResults);
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    public List<String> names() {
        return this.names;
    }
    public Optional<String> nextToken() {
        return Optional.ofNullable(this.nextToken);
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public List<String> paymentTypes() {
        return this.paymentTypes == null ? List.of() : this.paymentTypes;
    }
    public Optional<String> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }
    public Map<String,Object> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Integer totalCount() {
        return this.totalCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClustersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String clusterName;
        private @Nullable List<String> clusterStates;
        private @Nullable List<String> clusterTypes;
        private List<GetClustersCluster> clusters;
        private String id;
        private List<String> ids;
        private @Nullable Integer maxResults;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String nextToken;
        private @Nullable String outputFile;
        private @Nullable List<String> paymentTypes;
        private @Nullable String resourceGroupId;
        private @Nullable Map<String,Object> tags;
        private Integer totalCount;
        public Builder() {}
        public Builder(GetClustersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterName = defaults.clusterName;
    	      this.clusterStates = defaults.clusterStates;
    	      this.clusterTypes = defaults.clusterTypes;
    	      this.clusters = defaults.clusters;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.maxResults = defaults.maxResults;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.nextToken = defaults.nextToken;
    	      this.outputFile = defaults.outputFile;
    	      this.paymentTypes = defaults.paymentTypes;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.tags = defaults.tags;
    	      this.totalCount = defaults.totalCount;
        }

        @CustomType.Setter
        public Builder clusterName(@Nullable String clusterName) {
            this.clusterName = clusterName;
            return this;
        }
        @CustomType.Setter
        public Builder clusterStates(@Nullable List<String> clusterStates) {
            this.clusterStates = clusterStates;
            return this;
        }
        public Builder clusterStates(String... clusterStates) {
            return clusterStates(List.of(clusterStates));
        }
        @CustomType.Setter
        public Builder clusterTypes(@Nullable List<String> clusterTypes) {
            this.clusterTypes = clusterTypes;
            return this;
        }
        public Builder clusterTypes(String... clusterTypes) {
            return clusterTypes(List.of(clusterTypes));
        }
        @CustomType.Setter
        public Builder clusters(List<GetClustersCluster> clusters) {
            this.clusters = Objects.requireNonNull(clusters);
            return this;
        }
        public Builder clusters(GetClustersCluster... clusters) {
            return clusters(List.of(clusters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder maxResults(@Nullable Integer maxResults) {
            this.maxResults = maxResults;
            return this;
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder nextToken(@Nullable String nextToken) {
            this.nextToken = nextToken;
            return this;
        }
        @CustomType.Setter
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        @CustomType.Setter
        public Builder paymentTypes(@Nullable List<String> paymentTypes) {
            this.paymentTypes = paymentTypes;
            return this;
        }
        public Builder paymentTypes(String... paymentTypes) {
            return paymentTypes(List.of(paymentTypes));
        }
        @CustomType.Setter
        public Builder resourceGroupId(@Nullable String resourceGroupId) {
            this.resourceGroupId = resourceGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,Object> tags) {
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder totalCount(Integer totalCount) {
            this.totalCount = Objects.requireNonNull(totalCount);
            return this;
        }
        public GetClustersResult build() {
            final var o = new GetClustersResult();
            o.clusterName = clusterName;
            o.clusterStates = clusterStates;
            o.clusterTypes = clusterTypes;
            o.clusters = clusters;
            o.id = id;
            o.ids = ids;
            o.maxResults = maxResults;
            o.nameRegex = nameRegex;
            o.names = names;
            o.nextToken = nextToken;
            o.outputFile = outputFile;
            o.paymentTypes = paymentTypes;
            o.resourceGroupId = resourceGroupId;
            o.tags = tags;
            o.totalCount = totalCount;
            return o;
        }
    }
}
