// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.outputs;

import com.pulumi.alicloud.cms.outputs.MetricRuleTemplateAlertTemplateEscalations;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MetricRuleTemplateAlertTemplate {
    /**
     * @return The abbreviation of the service name. Valid values: `ecs`, `rds`, `ads`, `slb`, `vpc`, `apigateway`, `cdn`, `cs`, `dcdn`, `ddos`, `eip`, `elasticsearch`, `emr`, `ess`, `hbase`, `iot_edge`, `kvstore_sharding`, `kvstore_splitrw`, `kvstore_standard`, `memcache`, `mns`, `mongodb`, `mongodb_cluster`, `mongodb_sharding`, `mq_topic`, `ocs`, `opensearch`, `oss`, `polardb`, `petadata`, `scdn`, `sharebandwidthpackages`, `sls`, `vpn`.
     * 
     */
    private final String category;
    /**
     * @return The information about the trigger condition based on the alert level. See the following `Block escalations`.
     * 
     */
    private final @Nullable MetricRuleTemplateAlertTemplateEscalations escalations;
    /**
     * @return The name of the metric.
     * 
     */
    private final String metricName;
    /**
     * @return The namespace of the service.
     * 
     */
    private final String namespace;
    /**
     * @return The name of the alert rule.
     * 
     */
    private final String ruleName;
    /**
     * @return The callback URL to which a POST request is sent when an alert is triggered based on the alert rule.
     * 
     */
    private final @Nullable String webhook;

    @CustomType.Constructor
    private MetricRuleTemplateAlertTemplate(
        @CustomType.Parameter("category") String category,
        @CustomType.Parameter("escalations") @Nullable MetricRuleTemplateAlertTemplateEscalations escalations,
        @CustomType.Parameter("metricName") String metricName,
        @CustomType.Parameter("namespace") String namespace,
        @CustomType.Parameter("ruleName") String ruleName,
        @CustomType.Parameter("webhook") @Nullable String webhook) {
        this.category = category;
        this.escalations = escalations;
        this.metricName = metricName;
        this.namespace = namespace;
        this.ruleName = ruleName;
        this.webhook = webhook;
    }

    /**
     * @return The abbreviation of the service name. Valid values: `ecs`, `rds`, `ads`, `slb`, `vpc`, `apigateway`, `cdn`, `cs`, `dcdn`, `ddos`, `eip`, `elasticsearch`, `emr`, `ess`, `hbase`, `iot_edge`, `kvstore_sharding`, `kvstore_splitrw`, `kvstore_standard`, `memcache`, `mns`, `mongodb`, `mongodb_cluster`, `mongodb_sharding`, `mq_topic`, `ocs`, `opensearch`, `oss`, `polardb`, `petadata`, `scdn`, `sharebandwidthpackages`, `sls`, `vpn`.
     * 
     */
    public String category() {
        return this.category;
    }
    /**
     * @return The information about the trigger condition based on the alert level. See the following `Block escalations`.
     * 
     */
    public Optional<MetricRuleTemplateAlertTemplateEscalations> escalations() {
        return Optional.ofNullable(this.escalations);
    }
    /**
     * @return The name of the metric.
     * 
     */
    public String metricName() {
        return this.metricName;
    }
    /**
     * @return The namespace of the service.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return The name of the alert rule.
     * 
     */
    public String ruleName() {
        return this.ruleName;
    }
    /**
     * @return The callback URL to which a POST request is sent when an alert is triggered based on the alert rule.
     * 
     */
    public Optional<String> webhook() {
        return Optional.ofNullable(this.webhook);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricRuleTemplateAlertTemplate defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String category;
        private @Nullable MetricRuleTemplateAlertTemplateEscalations escalations;
        private String metricName;
        private String namespace;
        private String ruleName;
        private @Nullable String webhook;

        public Builder() {
    	      // Empty
        }

        public Builder(MetricRuleTemplateAlertTemplate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
    	      this.escalations = defaults.escalations;
    	      this.metricName = defaults.metricName;
    	      this.namespace = defaults.namespace;
    	      this.ruleName = defaults.ruleName;
    	      this.webhook = defaults.webhook;
        }

        public Builder category(String category) {
            this.category = Objects.requireNonNull(category);
            return this;
        }
        public Builder escalations(@Nullable MetricRuleTemplateAlertTemplateEscalations escalations) {
            this.escalations = escalations;
            return this;
        }
        public Builder metricName(String metricName) {
            this.metricName = Objects.requireNonNull(metricName);
            return this;
        }
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }
        public Builder ruleName(String ruleName) {
            this.ruleName = Objects.requireNonNull(ruleName);
            return this;
        }
        public Builder webhook(@Nullable String webhook) {
            this.webhook = webhook;
            return this;
        }        public MetricRuleTemplateAlertTemplate build() {
            return new MetricRuleTemplateAlertTemplate(category, escalations, metricName, namespace, ruleName, webhook);
        }
    }
}
