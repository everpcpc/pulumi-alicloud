// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudsso.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScimServerCredentialState extends com.pulumi.resources.ResourceArgs {

    public static final ScimServerCredentialState Empty = new ScimServerCredentialState();

    /**
     * The CredentialId of the resource.
     * 
     */
    @Import(name="credentialId")
    private @Nullable Output<String> credentialId;

    /**
     * @return The CredentialId of the resource.
     * 
     */
    public Optional<Output<String>> credentialId() {
        return Optional.ofNullable(this.credentialId);
    }

    /**
     * The ID of the Directory.
     * 
     */
    @Import(name="directoryId")
    private @Nullable Output<String> directoryId;

    /**
     * @return The ID of the Directory.
     * 
     */
    public Optional<Output<String>> directoryId() {
        return Optional.ofNullable(this.directoryId);
    }

    /**
     * The Status of the resource. Valid values: `Disabled`, `Enabled`.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The Status of the resource. Valid values: `Disabled`, `Enabled`.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private ScimServerCredentialState() {}

    private ScimServerCredentialState(ScimServerCredentialState $) {
        this.credentialId = $.credentialId;
        this.directoryId = $.directoryId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScimServerCredentialState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScimServerCredentialState $;

        public Builder() {
            $ = new ScimServerCredentialState();
        }

        public Builder(ScimServerCredentialState defaults) {
            $ = new ScimServerCredentialState(Objects.requireNonNull(defaults));
        }

        /**
         * @param credentialId The CredentialId of the resource.
         * 
         * @return builder
         * 
         */
        public Builder credentialId(@Nullable Output<String> credentialId) {
            $.credentialId = credentialId;
            return this;
        }

        /**
         * @param credentialId The CredentialId of the resource.
         * 
         * @return builder
         * 
         */
        public Builder credentialId(String credentialId) {
            return credentialId(Output.of(credentialId));
        }

        /**
         * @param directoryId The ID of the Directory.
         * 
         * @return builder
         * 
         */
        public Builder directoryId(@Nullable Output<String> directoryId) {
            $.directoryId = directoryId;
            return this;
        }

        /**
         * @param directoryId The ID of the Directory.
         * 
         * @return builder
         * 
         */
        public Builder directoryId(String directoryId) {
            return directoryId(Output.of(directoryId));
        }

        /**
         * @param status The Status of the resource. Valid values: `Disabled`, `Enabled`.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The Status of the resource. Valid values: `Disabled`, `Enabled`.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public ScimServerCredentialState build() {
            return $;
        }
    }

}
