// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.outputs;

import com.pulumi.alicloud.cms.outputs.MetricRuleTemplateAlertTemplateEscalationsCritical;
import com.pulumi.alicloud.cms.outputs.MetricRuleTemplateAlertTemplateEscalationsInfo;
import com.pulumi.alicloud.cms.outputs.MetricRuleTemplateAlertTemplateEscalationsWarn;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MetricRuleTemplateAlertTemplateEscalations {
    /**
     * @return The condition for triggering critical-level alerts. See the following `Block critical`.
     * 
     */
    private final @Nullable MetricRuleTemplateAlertTemplateEscalationsCritical critical;
    /**
     * @return The condition for triggering info-level alerts. See the following `Block info`.
     * 
     */
    private final @Nullable MetricRuleTemplateAlertTemplateEscalationsInfo info;
    /**
     * @return The condition for triggering warn-level alerts. See the following `Block warn`.
     * 
     */
    private final @Nullable MetricRuleTemplateAlertTemplateEscalationsWarn warn;

    @CustomType.Constructor
    private MetricRuleTemplateAlertTemplateEscalations(
        @CustomType.Parameter("critical") @Nullable MetricRuleTemplateAlertTemplateEscalationsCritical critical,
        @CustomType.Parameter("info") @Nullable MetricRuleTemplateAlertTemplateEscalationsInfo info,
        @CustomType.Parameter("warn") @Nullable MetricRuleTemplateAlertTemplateEscalationsWarn warn) {
        this.critical = critical;
        this.info = info;
        this.warn = warn;
    }

    /**
     * @return The condition for triggering critical-level alerts. See the following `Block critical`.
     * 
     */
    public Optional<MetricRuleTemplateAlertTemplateEscalationsCritical> critical() {
        return Optional.ofNullable(this.critical);
    }
    /**
     * @return The condition for triggering info-level alerts. See the following `Block info`.
     * 
     */
    public Optional<MetricRuleTemplateAlertTemplateEscalationsInfo> info() {
        return Optional.ofNullable(this.info);
    }
    /**
     * @return The condition for triggering warn-level alerts. See the following `Block warn`.
     * 
     */
    public Optional<MetricRuleTemplateAlertTemplateEscalationsWarn> warn() {
        return Optional.ofNullable(this.warn);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricRuleTemplateAlertTemplateEscalations defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable MetricRuleTemplateAlertTemplateEscalationsCritical critical;
        private @Nullable MetricRuleTemplateAlertTemplateEscalationsInfo info;
        private @Nullable MetricRuleTemplateAlertTemplateEscalationsWarn warn;

        public Builder() {
    	      // Empty
        }

        public Builder(MetricRuleTemplateAlertTemplateEscalations defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.critical = defaults.critical;
    	      this.info = defaults.info;
    	      this.warn = defaults.warn;
        }

        public Builder critical(@Nullable MetricRuleTemplateAlertTemplateEscalationsCritical critical) {
            this.critical = critical;
            return this;
        }
        public Builder info(@Nullable MetricRuleTemplateAlertTemplateEscalationsInfo info) {
            this.info = info;
            return this;
        }
        public Builder warn(@Nullable MetricRuleTemplateAlertTemplateEscalationsWarn warn) {
            this.warn = warn;
            return this;
        }        public MetricRuleTemplateAlertTemplateEscalations build() {
            return new MetricRuleTemplateAlertTemplateEscalations(critical, info, warn);
        }
    }
}
