// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.outputs;

import com.pulumi.alicloud.vpc.outputs.GetVpcFlowLogsLog;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVpcFlowLogsResult {
    private final @Nullable String description;
    private final @Nullable String flowLogName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<String> ids;
    private final @Nullable String logStoreName;
    private final List<GetVpcFlowLogsLog> logs;
    private final @Nullable String nameRegex;
    private final List<String> names;
    private final @Nullable String outputFile;
    private final @Nullable String projectName;
    private final @Nullable String resourceId;
    private final @Nullable String resourceType;
    private final @Nullable String status;
    private final @Nullable String trafficType;

    @CustomType.Constructor
    private GetVpcFlowLogsResult(
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("flowLogName") @Nullable String flowLogName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ids") List<String> ids,
        @CustomType.Parameter("logStoreName") @Nullable String logStoreName,
        @CustomType.Parameter("logs") List<GetVpcFlowLogsLog> logs,
        @CustomType.Parameter("nameRegex") @Nullable String nameRegex,
        @CustomType.Parameter("names") List<String> names,
        @CustomType.Parameter("outputFile") @Nullable String outputFile,
        @CustomType.Parameter("projectName") @Nullable String projectName,
        @CustomType.Parameter("resourceId") @Nullable String resourceId,
        @CustomType.Parameter("resourceType") @Nullable String resourceType,
        @CustomType.Parameter("status") @Nullable String status,
        @CustomType.Parameter("trafficType") @Nullable String trafficType) {
        this.description = description;
        this.flowLogName = flowLogName;
        this.id = id;
        this.ids = ids;
        this.logStoreName = logStoreName;
        this.logs = logs;
        this.nameRegex = nameRegex;
        this.names = names;
        this.outputFile = outputFile;
        this.projectName = projectName;
        this.resourceId = resourceId;
        this.resourceType = resourceType;
        this.status = status;
        this.trafficType = trafficType;
    }

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<String> flowLogName() {
        return Optional.ofNullable(this.flowLogName);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> logStoreName() {
        return Optional.ofNullable(this.logStoreName);
    }
    public List<GetVpcFlowLogsLog> logs() {
        return this.logs;
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Optional<String> projectName() {
        return Optional.ofNullable(this.projectName);
    }
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    public Optional<String> trafficType() {
        return Optional.ofNullable(this.trafficType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpcFlowLogsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String description;
        private @Nullable String flowLogName;
        private String id;
        private List<String> ids;
        private @Nullable String logStoreName;
        private List<GetVpcFlowLogsLog> logs;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        private @Nullable String projectName;
        private @Nullable String resourceId;
        private @Nullable String resourceType;
        private @Nullable String status;
        private @Nullable String trafficType;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVpcFlowLogsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.flowLogName = defaults.flowLogName;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.logStoreName = defaults.logStoreName;
    	      this.logs = defaults.logs;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
    	      this.projectName = defaults.projectName;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceType = defaults.resourceType;
    	      this.status = defaults.status;
    	      this.trafficType = defaults.trafficType;
        }

        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder flowLogName(@Nullable String flowLogName) {
            this.flowLogName = flowLogName;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public Builder logStoreName(@Nullable String logStoreName) {
            this.logStoreName = logStoreName;
            return this;
        }
        public Builder logs(List<GetVpcFlowLogsLog> logs) {
            this.logs = Objects.requireNonNull(logs);
            return this;
        }
        public Builder logs(GetVpcFlowLogsLog... logs) {
            return logs(List.of(logs));
        }
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        public Builder names(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        public Builder projectName(@Nullable String projectName) {
            this.projectName = projectName;
            return this;
        }
        public Builder resourceId(@Nullable String resourceId) {
            this.resourceId = resourceId;
            return this;
        }
        public Builder resourceType(@Nullable String resourceType) {
            this.resourceType = resourceType;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public Builder trafficType(@Nullable String trafficType) {
            this.trafficType = trafficType;
            return this;
        }        public GetVpcFlowLogsResult build() {
            return new GetVpcFlowLogsResult(description, flowLogName, id, ids, logStoreName, logs, nameRegex, names, outputFile, projectName, resourceId, resourceType, status, trafficType);
        }
    }
}
