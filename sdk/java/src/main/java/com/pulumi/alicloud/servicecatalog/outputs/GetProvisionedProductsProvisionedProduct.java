// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.servicecatalog.outputs;

import com.pulumi.alicloud.servicecatalog.outputs.GetProvisionedProductsProvisionedProductOutput;
import com.pulumi.alicloud.servicecatalog.outputs.GetProvisionedProductsProvisionedProductParameter;
import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetProvisionedProductsProvisionedProduct {
    /**
     * @return The creation time of the product instance
     * 
     */
    private final String createTime;
    private final String id;
    /**
     * @return The ID of the last instance operation task
     * 
     */
    private final String lastProvisioningTaskId;
    /**
     * @return The ID of the last successful instance operation task
     * 
     */
    private final String lastSuccessfulProvisioningTaskId;
    /**
     * @return The ID of the last task
     * 
     */
    private final String lastTaskId;
    private final List<GetProvisionedProductsProvisionedProductOutput> outputs;
    /**
     * @return The RAM entity ID of the owner
     * 
     */
    private final String ownerPrincipalId;
    /**
     * @return The RAM entity type of the owner
     * 
     */
    private final String ownerPrincipalType;
    private final List<GetProvisionedProductsProvisionedProductParameter> parameters;
    /**
     * @return Product mix ID.&gt; When there is a default Startup option, there is no need to fill in the portfolio. When there is no default Startup option, you must fill in the portfolio.
     * 
     */
    private final String portfolioId;
    /**
     * @return Product ID.
     * 
     */
    private final String productId;
    /**
     * @return The name of the product
     * 
     */
    private final String productName;
    /**
     * @return Product version ID.
     * 
     */
    private final String productVersionId;
    /**
     * @return The name of the product version
     * 
     */
    private final String productVersionName;
    /**
     * @return The ARN of the product instance
     * 
     */
    private final String provisionedProductArn;
    /**
     * @return The ID of the instance.
     * 
     */
    private final String provisionedProductId;
    /**
     * @return The name of the instance.The length is 1~128 characters.
     * 
     */
    private final String provisionedProductName;
    /**
     * @return Instance type.The value is RosStack, which indicates the stack of Alibaba Cloud resource orchestration service (ROS).
     * 
     */
    private final String provisionedProductType;
    /**
     * @return The ID of the ROS stack
     * 
     */
    private final String stackId;
    /**
     * @return The ID of the region to which the resource stack of the Alibaba Cloud resource orchestration service (ROS) belongs.
     * 
     */
    private final String stackRegionId;
    /**
     * @return Instance status
     * 
     */
    private final String status;
    /**
     * @return The status message of the product instance
     * 
     */
    private final String statusMessage;
    private final @Nullable Map<String,Object> tags;

    @CustomType.Constructor
    private GetProvisionedProductsProvisionedProduct(
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lastProvisioningTaskId") String lastProvisioningTaskId,
        @CustomType.Parameter("lastSuccessfulProvisioningTaskId") String lastSuccessfulProvisioningTaskId,
        @CustomType.Parameter("lastTaskId") String lastTaskId,
        @CustomType.Parameter("outputs") List<GetProvisionedProductsProvisionedProductOutput> outputs,
        @CustomType.Parameter("ownerPrincipalId") String ownerPrincipalId,
        @CustomType.Parameter("ownerPrincipalType") String ownerPrincipalType,
        @CustomType.Parameter("parameters") List<GetProvisionedProductsProvisionedProductParameter> parameters,
        @CustomType.Parameter("portfolioId") String portfolioId,
        @CustomType.Parameter("productId") String productId,
        @CustomType.Parameter("productName") String productName,
        @CustomType.Parameter("productVersionId") String productVersionId,
        @CustomType.Parameter("productVersionName") String productVersionName,
        @CustomType.Parameter("provisionedProductArn") String provisionedProductArn,
        @CustomType.Parameter("provisionedProductId") String provisionedProductId,
        @CustomType.Parameter("provisionedProductName") String provisionedProductName,
        @CustomType.Parameter("provisionedProductType") String provisionedProductType,
        @CustomType.Parameter("stackId") String stackId,
        @CustomType.Parameter("stackRegionId") String stackRegionId,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("statusMessage") String statusMessage,
        @CustomType.Parameter("tags") @Nullable Map<String,Object> tags) {
        this.createTime = createTime;
        this.id = id;
        this.lastProvisioningTaskId = lastProvisioningTaskId;
        this.lastSuccessfulProvisioningTaskId = lastSuccessfulProvisioningTaskId;
        this.lastTaskId = lastTaskId;
        this.outputs = outputs;
        this.ownerPrincipalId = ownerPrincipalId;
        this.ownerPrincipalType = ownerPrincipalType;
        this.parameters = parameters;
        this.portfolioId = portfolioId;
        this.productId = productId;
        this.productName = productName;
        this.productVersionId = productVersionId;
        this.productVersionName = productVersionName;
        this.provisionedProductArn = provisionedProductArn;
        this.provisionedProductId = provisionedProductId;
        this.provisionedProductName = provisionedProductName;
        this.provisionedProductType = provisionedProductType;
        this.stackId = stackId;
        this.stackRegionId = stackRegionId;
        this.status = status;
        this.statusMessage = statusMessage;
        this.tags = tags;
    }

    /**
     * @return The creation time of the product instance
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the last instance operation task
     * 
     */
    public String lastProvisioningTaskId() {
        return this.lastProvisioningTaskId;
    }
    /**
     * @return The ID of the last successful instance operation task
     * 
     */
    public String lastSuccessfulProvisioningTaskId() {
        return this.lastSuccessfulProvisioningTaskId;
    }
    /**
     * @return The ID of the last task
     * 
     */
    public String lastTaskId() {
        return this.lastTaskId;
    }
    public List<GetProvisionedProductsProvisionedProductOutput> outputs() {
        return this.outputs;
    }
    /**
     * @return The RAM entity ID of the owner
     * 
     */
    public String ownerPrincipalId() {
        return this.ownerPrincipalId;
    }
    /**
     * @return The RAM entity type of the owner
     * 
     */
    public String ownerPrincipalType() {
        return this.ownerPrincipalType;
    }
    public List<GetProvisionedProductsProvisionedProductParameter> parameters() {
        return this.parameters;
    }
    /**
     * @return Product mix ID.&gt; When there is a default Startup option, there is no need to fill in the portfolio. When there is no default Startup option, you must fill in the portfolio.
     * 
     */
    public String portfolioId() {
        return this.portfolioId;
    }
    /**
     * @return Product ID.
     * 
     */
    public String productId() {
        return this.productId;
    }
    /**
     * @return The name of the product
     * 
     */
    public String productName() {
        return this.productName;
    }
    /**
     * @return Product version ID.
     * 
     */
    public String productVersionId() {
        return this.productVersionId;
    }
    /**
     * @return The name of the product version
     * 
     */
    public String productVersionName() {
        return this.productVersionName;
    }
    /**
     * @return The ARN of the product instance
     * 
     */
    public String provisionedProductArn() {
        return this.provisionedProductArn;
    }
    /**
     * @return The ID of the instance.
     * 
     */
    public String provisionedProductId() {
        return this.provisionedProductId;
    }
    /**
     * @return The name of the instance.The length is 1~128 characters.
     * 
     */
    public String provisionedProductName() {
        return this.provisionedProductName;
    }
    /**
     * @return Instance type.The value is RosStack, which indicates the stack of Alibaba Cloud resource orchestration service (ROS).
     * 
     */
    public String provisionedProductType() {
        return this.provisionedProductType;
    }
    /**
     * @return The ID of the ROS stack
     * 
     */
    public String stackId() {
        return this.stackId;
    }
    /**
     * @return The ID of the region to which the resource stack of the Alibaba Cloud resource orchestration service (ROS) belongs.
     * 
     */
    public String stackRegionId() {
        return this.stackRegionId;
    }
    /**
     * @return Instance status
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The status message of the product instance
     * 
     */
    public String statusMessage() {
        return this.statusMessage;
    }
    public Map<String,Object> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProvisionedProductsProvisionedProduct defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String id;
        private String lastProvisioningTaskId;
        private String lastSuccessfulProvisioningTaskId;
        private String lastTaskId;
        private List<GetProvisionedProductsProvisionedProductOutput> outputs;
        private String ownerPrincipalId;
        private String ownerPrincipalType;
        private List<GetProvisionedProductsProvisionedProductParameter> parameters;
        private String portfolioId;
        private String productId;
        private String productName;
        private String productVersionId;
        private String productVersionName;
        private String provisionedProductArn;
        private String provisionedProductId;
        private String provisionedProductName;
        private String provisionedProductType;
        private String stackId;
        private String stackRegionId;
        private String status;
        private String statusMessage;
        private @Nullable Map<String,Object> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetProvisionedProductsProvisionedProduct defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.id = defaults.id;
    	      this.lastProvisioningTaskId = defaults.lastProvisioningTaskId;
    	      this.lastSuccessfulProvisioningTaskId = defaults.lastSuccessfulProvisioningTaskId;
    	      this.lastTaskId = defaults.lastTaskId;
    	      this.outputs = defaults.outputs;
    	      this.ownerPrincipalId = defaults.ownerPrincipalId;
    	      this.ownerPrincipalType = defaults.ownerPrincipalType;
    	      this.parameters = defaults.parameters;
    	      this.portfolioId = defaults.portfolioId;
    	      this.productId = defaults.productId;
    	      this.productName = defaults.productName;
    	      this.productVersionId = defaults.productVersionId;
    	      this.productVersionName = defaults.productVersionName;
    	      this.provisionedProductArn = defaults.provisionedProductArn;
    	      this.provisionedProductId = defaults.provisionedProductId;
    	      this.provisionedProductName = defaults.provisionedProductName;
    	      this.provisionedProductType = defaults.provisionedProductType;
    	      this.stackId = defaults.stackId;
    	      this.stackRegionId = defaults.stackRegionId;
    	      this.status = defaults.status;
    	      this.statusMessage = defaults.statusMessage;
    	      this.tags = defaults.tags;
        }

        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lastProvisioningTaskId(String lastProvisioningTaskId) {
            this.lastProvisioningTaskId = Objects.requireNonNull(lastProvisioningTaskId);
            return this;
        }
        public Builder lastSuccessfulProvisioningTaskId(String lastSuccessfulProvisioningTaskId) {
            this.lastSuccessfulProvisioningTaskId = Objects.requireNonNull(lastSuccessfulProvisioningTaskId);
            return this;
        }
        public Builder lastTaskId(String lastTaskId) {
            this.lastTaskId = Objects.requireNonNull(lastTaskId);
            return this;
        }
        public Builder outputs(List<GetProvisionedProductsProvisionedProductOutput> outputs) {
            this.outputs = Objects.requireNonNull(outputs);
            return this;
        }
        public Builder outputs(GetProvisionedProductsProvisionedProductOutput... outputs) {
            return outputs(List.of(outputs));
        }
        public Builder ownerPrincipalId(String ownerPrincipalId) {
            this.ownerPrincipalId = Objects.requireNonNull(ownerPrincipalId);
            return this;
        }
        public Builder ownerPrincipalType(String ownerPrincipalType) {
            this.ownerPrincipalType = Objects.requireNonNull(ownerPrincipalType);
            return this;
        }
        public Builder parameters(List<GetProvisionedProductsProvisionedProductParameter> parameters) {
            this.parameters = Objects.requireNonNull(parameters);
            return this;
        }
        public Builder parameters(GetProvisionedProductsProvisionedProductParameter... parameters) {
            return parameters(List.of(parameters));
        }
        public Builder portfolioId(String portfolioId) {
            this.portfolioId = Objects.requireNonNull(portfolioId);
            return this;
        }
        public Builder productId(String productId) {
            this.productId = Objects.requireNonNull(productId);
            return this;
        }
        public Builder productName(String productName) {
            this.productName = Objects.requireNonNull(productName);
            return this;
        }
        public Builder productVersionId(String productVersionId) {
            this.productVersionId = Objects.requireNonNull(productVersionId);
            return this;
        }
        public Builder productVersionName(String productVersionName) {
            this.productVersionName = Objects.requireNonNull(productVersionName);
            return this;
        }
        public Builder provisionedProductArn(String provisionedProductArn) {
            this.provisionedProductArn = Objects.requireNonNull(provisionedProductArn);
            return this;
        }
        public Builder provisionedProductId(String provisionedProductId) {
            this.provisionedProductId = Objects.requireNonNull(provisionedProductId);
            return this;
        }
        public Builder provisionedProductName(String provisionedProductName) {
            this.provisionedProductName = Objects.requireNonNull(provisionedProductName);
            return this;
        }
        public Builder provisionedProductType(String provisionedProductType) {
            this.provisionedProductType = Objects.requireNonNull(provisionedProductType);
            return this;
        }
        public Builder stackId(String stackId) {
            this.stackId = Objects.requireNonNull(stackId);
            return this;
        }
        public Builder stackRegionId(String stackRegionId) {
            this.stackRegionId = Objects.requireNonNull(stackRegionId);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder statusMessage(String statusMessage) {
            this.statusMessage = Objects.requireNonNull(statusMessage);
            return this;
        }
        public Builder tags(@Nullable Map<String,Object> tags) {
            this.tags = tags;
            return this;
        }        public GetProvisionedProductsProvisionedProduct build() {
            return new GetProvisionedProductsProvisionedProduct(createTime, id, lastProvisioningTaskId, lastSuccessfulProvisioningTaskId, lastTaskId, outputs, ownerPrincipalId, ownerPrincipalType, parameters, portfolioId, productId, productName, productVersionId, productVersionName, provisionedProductArn, provisionedProductId, provisionedProductName, provisionedProductType, stackId, stackRegionId, status, statusMessage, tags);
        }
    }
}
