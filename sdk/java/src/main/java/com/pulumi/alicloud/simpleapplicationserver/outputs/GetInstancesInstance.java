// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.simpleapplicationserver.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstancesInstance {
    /**
     * @return The billing status of the simple application server. Valid values: `Normal`, `Expired` and `Overdue`.
     * 
     */
    private final String businessStatus;
    /**
     * @return The time when the simple application server was created.
     * 
     */
    private final String createTime;
    /**
     * @return The DDoS protection status. Valid values: `Normal`, `BlackHole`, and `Defense`.
     * 
     */
    private final String ddosStatus;
    /**
     * @return The time when the simple application server expires.
     * 
     */
    private final String expiredTime;
    /**
     * @return The ID of the Instance.
     * 
     */
    private final String id;
    /**
     * @return The ID of the simple application server Image.
     * 
     */
    private final String imageId;
    /**
     * @return The internal IP address of the simple application server.
     * 
     */
    private final String innerIpAddress;
    /**
     * @return The ID of the simple application server.
     * 
     */
    private final String instanceId;
    /**
     * @return The name of the resource.
     * 
     */
    private final String instanceName;
    /**
     * @return The billing method of the simple application server.
     * 
     */
    private final String paymentType;
    /**
     * @return The ID of the simple application server plan.
     * 
     */
    private final String planId;
    /**
     * @return The public IP address of the simple application server.
     * 
     */
    private final String publicIpAddress;
    /**
     * @return The status of the resource.
     * 
     */
    private final String status;

    @CustomType.Constructor
    private GetInstancesInstance(
        @CustomType.Parameter("businessStatus") String businessStatus,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("ddosStatus") String ddosStatus,
        @CustomType.Parameter("expiredTime") String expiredTime,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("imageId") String imageId,
        @CustomType.Parameter("innerIpAddress") String innerIpAddress,
        @CustomType.Parameter("instanceId") String instanceId,
        @CustomType.Parameter("instanceName") String instanceName,
        @CustomType.Parameter("paymentType") String paymentType,
        @CustomType.Parameter("planId") String planId,
        @CustomType.Parameter("publicIpAddress") String publicIpAddress,
        @CustomType.Parameter("status") String status) {
        this.businessStatus = businessStatus;
        this.createTime = createTime;
        this.ddosStatus = ddosStatus;
        this.expiredTime = expiredTime;
        this.id = id;
        this.imageId = imageId;
        this.innerIpAddress = innerIpAddress;
        this.instanceId = instanceId;
        this.instanceName = instanceName;
        this.paymentType = paymentType;
        this.planId = planId;
        this.publicIpAddress = publicIpAddress;
        this.status = status;
    }

    /**
     * @return The billing status of the simple application server. Valid values: `Normal`, `Expired` and `Overdue`.
     * 
     */
    public String businessStatus() {
        return this.businessStatus;
    }
    /**
     * @return The time when the simple application server was created.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The DDoS protection status. Valid values: `Normal`, `BlackHole`, and `Defense`.
     * 
     */
    public String ddosStatus() {
        return this.ddosStatus;
    }
    /**
     * @return The time when the simple application server expires.
     * 
     */
    public String expiredTime() {
        return this.expiredTime;
    }
    /**
     * @return The ID of the Instance.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the simple application server Image.
     * 
     */
    public String imageId() {
        return this.imageId;
    }
    /**
     * @return The internal IP address of the simple application server.
     * 
     */
    public String innerIpAddress() {
        return this.innerIpAddress;
    }
    /**
     * @return The ID of the simple application server.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The name of the resource.
     * 
     */
    public String instanceName() {
        return this.instanceName;
    }
    /**
     * @return The billing method of the simple application server.
     * 
     */
    public String paymentType() {
        return this.paymentType;
    }
    /**
     * @return The ID of the simple application server plan.
     * 
     */
    public String planId() {
        return this.planId;
    }
    /**
     * @return The public IP address of the simple application server.
     * 
     */
    public String publicIpAddress() {
        return this.publicIpAddress;
    }
    /**
     * @return The status of the resource.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstance defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String businessStatus;
        private String createTime;
        private String ddosStatus;
        private String expiredTime;
        private String id;
        private String imageId;
        private String innerIpAddress;
        private String instanceId;
        private String instanceName;
        private String paymentType;
        private String planId;
        private String publicIpAddress;
        private String status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstancesInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.businessStatus = defaults.businessStatus;
    	      this.createTime = defaults.createTime;
    	      this.ddosStatus = defaults.ddosStatus;
    	      this.expiredTime = defaults.expiredTime;
    	      this.id = defaults.id;
    	      this.imageId = defaults.imageId;
    	      this.innerIpAddress = defaults.innerIpAddress;
    	      this.instanceId = defaults.instanceId;
    	      this.instanceName = defaults.instanceName;
    	      this.paymentType = defaults.paymentType;
    	      this.planId = defaults.planId;
    	      this.publicIpAddress = defaults.publicIpAddress;
    	      this.status = defaults.status;
        }

        public Builder businessStatus(String businessStatus) {
            this.businessStatus = Objects.requireNonNull(businessStatus);
            return this;
        }
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder ddosStatus(String ddosStatus) {
            this.ddosStatus = Objects.requireNonNull(ddosStatus);
            return this;
        }
        public Builder expiredTime(String expiredTime) {
            this.expiredTime = Objects.requireNonNull(expiredTime);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder imageId(String imageId) {
            this.imageId = Objects.requireNonNull(imageId);
            return this;
        }
        public Builder innerIpAddress(String innerIpAddress) {
            this.innerIpAddress = Objects.requireNonNull(innerIpAddress);
            return this;
        }
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        public Builder instanceName(String instanceName) {
            this.instanceName = Objects.requireNonNull(instanceName);
            return this;
        }
        public Builder paymentType(String paymentType) {
            this.paymentType = Objects.requireNonNull(paymentType);
            return this;
        }
        public Builder planId(String planId) {
            this.planId = Objects.requireNonNull(planId);
            return this;
        }
        public Builder publicIpAddress(String publicIpAddress) {
            this.publicIpAddress = Objects.requireNonNull(publicIpAddress);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }        public GetInstancesInstance build() {
            return new GetInstancesInstance(businessStatus, createTime, ddosStatus, expiredTime, id, imageId, innerIpAddress, instanceId, instanceName, paymentType, planId, publicIpAddress, status);
        }
    }
}
