// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ots.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TunnelChannel {
    /**
     * @return The id of the channel.
     * 
     */
    private final @Nullable String channelId;
    /**
     * @return The latest consumption time of the channel, unix time in nanosecond.
     * 
     */
    private final @Nullable Integer channelRpo;
    /**
     * @return The status of the channel, valid values: `WAIT`, `OPEN`, `CLOSING`, `CLOSE`, `TERMINATED`.
     * 
     */
    private final @Nullable String channelStatus;
    /**
     * @return The type of the channel, valid values: `BaseData`, `Stream`.
     * 
     */
    private final @Nullable String channelType;
    /**
     * @return The client id of the channel.
     * 
     */
    private final @Nullable String clientId;

    @CustomType.Constructor
    private TunnelChannel(
        @CustomType.Parameter("channelId") @Nullable String channelId,
        @CustomType.Parameter("channelRpo") @Nullable Integer channelRpo,
        @CustomType.Parameter("channelStatus") @Nullable String channelStatus,
        @CustomType.Parameter("channelType") @Nullable String channelType,
        @CustomType.Parameter("clientId") @Nullable String clientId) {
        this.channelId = channelId;
        this.channelRpo = channelRpo;
        this.channelStatus = channelStatus;
        this.channelType = channelType;
        this.clientId = clientId;
    }

    /**
     * @return The id of the channel.
     * 
     */
    public Optional<String> channelId() {
        return Optional.ofNullable(this.channelId);
    }
    /**
     * @return The latest consumption time of the channel, unix time in nanosecond.
     * 
     */
    public Optional<Integer> channelRpo() {
        return Optional.ofNullable(this.channelRpo);
    }
    /**
     * @return The status of the channel, valid values: `WAIT`, `OPEN`, `CLOSING`, `CLOSE`, `TERMINATED`.
     * 
     */
    public Optional<String> channelStatus() {
        return Optional.ofNullable(this.channelStatus);
    }
    /**
     * @return The type of the channel, valid values: `BaseData`, `Stream`.
     * 
     */
    public Optional<String> channelType() {
        return Optional.ofNullable(this.channelType);
    }
    /**
     * @return The client id of the channel.
     * 
     */
    public Optional<String> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TunnelChannel defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String channelId;
        private @Nullable Integer channelRpo;
        private @Nullable String channelStatus;
        private @Nullable String channelType;
        private @Nullable String clientId;

        public Builder() {
    	      // Empty
        }

        public Builder(TunnelChannel defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.channelId = defaults.channelId;
    	      this.channelRpo = defaults.channelRpo;
    	      this.channelStatus = defaults.channelStatus;
    	      this.channelType = defaults.channelType;
    	      this.clientId = defaults.clientId;
        }

        public Builder channelId(@Nullable String channelId) {
            this.channelId = channelId;
            return this;
        }
        public Builder channelRpo(@Nullable Integer channelRpo) {
            this.channelRpo = channelRpo;
            return this;
        }
        public Builder channelStatus(@Nullable String channelStatus) {
            this.channelStatus = channelStatus;
            return this;
        }
        public Builder channelType(@Nullable String channelType) {
            this.channelType = channelType;
            return this;
        }
        public Builder clientId(@Nullable String clientId) {
            this.clientId = clientId;
            return this;
        }        public TunnelChannel build() {
            return new TunnelChannel(channelId, channelRpo, channelStatus, channelType, clientId);
        }
    }
}
