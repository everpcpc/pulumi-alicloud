// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.privatelink;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpcEndpointArgs Empty = new VpcEndpointArgs();

    /**
     * The dry run. Default to: `false`.
     * 
     */
    @Import(name="dryRun")
    private @Nullable Output<Boolean> dryRun;

    /**
     * @return The dry run. Default to: `false`.
     * 
     */
    public Optional<Output<Boolean>> dryRun() {
        return Optional.ofNullable(this.dryRun);
    }

    /**
     * The description of Vpc Endpoint. The length is 2~256 characters and cannot start with `http://` and `https://`.
     * 
     */
    @Import(name="endpointDescription")
    private @Nullable Output<String> endpointDescription;

    /**
     * @return The description of Vpc Endpoint. The length is 2~256 characters and cannot start with `http://` and `https://`.
     * 
     */
    public Optional<Output<String>> endpointDescription() {
        return Optional.ofNullable(this.endpointDescription);
    }

    /**
     * The security group associated with the terminal node network card.
     * 
     */
    @Import(name="securityGroupIds", required=true)
    private Output<List<String>> securityGroupIds;

    /**
     * @return The security group associated with the terminal node network card.
     * 
     */
    public Output<List<String>> securityGroupIds() {
        return this.securityGroupIds;
    }

    /**
     * The terminal node service associated with the terminal node.
     * 
     */
    @Import(name="serviceId")
    private @Nullable Output<String> serviceId;

    /**
     * @return The terminal node service associated with the terminal node.
     * 
     */
    public Optional<Output<String>> serviceId() {
        return Optional.ofNullable(this.serviceId);
    }

    /**
     * The name of the terminal node service associated with the terminal node.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The name of the terminal node service associated with the terminal node.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * The name of Vpc Endpoint. The length is between 2 and 128 characters, starting with English letters or Chinese, and can include numbers, hyphens (-) and underscores (_).
     * 
     */
    @Import(name="vpcEndpointName")
    private @Nullable Output<String> vpcEndpointName;

    /**
     * @return The name of Vpc Endpoint. The length is between 2 and 128 characters, starting with English letters or Chinese, and can include numbers, hyphens (-) and underscores (_).
     * 
     */
    public Optional<Output<String>> vpcEndpointName() {
        return Optional.ofNullable(this.vpcEndpointName);
    }

    /**
     * The private network to which the terminal node belongs.
     * 
     */
    @Import(name="vpcId", required=true)
    private Output<String> vpcId;

    /**
     * @return The private network to which the terminal node belongs.
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }

    private VpcEndpointArgs() {}

    private VpcEndpointArgs(VpcEndpointArgs $) {
        this.dryRun = $.dryRun;
        this.endpointDescription = $.endpointDescription;
        this.securityGroupIds = $.securityGroupIds;
        this.serviceId = $.serviceId;
        this.serviceName = $.serviceName;
        this.vpcEndpointName = $.vpcEndpointName;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcEndpointArgs $;

        public Builder() {
            $ = new VpcEndpointArgs();
        }

        public Builder(VpcEndpointArgs defaults) {
            $ = new VpcEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dryRun The dry run. Default to: `false`.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(@Nullable Output<Boolean> dryRun) {
            $.dryRun = dryRun;
            return this;
        }

        /**
         * @param dryRun The dry run. Default to: `false`.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(Boolean dryRun) {
            return dryRun(Output.of(dryRun));
        }

        /**
         * @param endpointDescription The description of Vpc Endpoint. The length is 2~256 characters and cannot start with `http://` and `https://`.
         * 
         * @return builder
         * 
         */
        public Builder endpointDescription(@Nullable Output<String> endpointDescription) {
            $.endpointDescription = endpointDescription;
            return this;
        }

        /**
         * @param endpointDescription The description of Vpc Endpoint. The length is 2~256 characters and cannot start with `http://` and `https://`.
         * 
         * @return builder
         * 
         */
        public Builder endpointDescription(String endpointDescription) {
            return endpointDescription(Output.of(endpointDescription));
        }

        /**
         * @param securityGroupIds The security group associated with the terminal node network card.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        /**
         * @param securityGroupIds The security group associated with the terminal node network card.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        /**
         * @param securityGroupIds The security group associated with the terminal node network card.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        /**
         * @param serviceId The terminal node service associated with the terminal node.
         * 
         * @return builder
         * 
         */
        public Builder serviceId(@Nullable Output<String> serviceId) {
            $.serviceId = serviceId;
            return this;
        }

        /**
         * @param serviceId The terminal node service associated with the terminal node.
         * 
         * @return builder
         * 
         */
        public Builder serviceId(String serviceId) {
            return serviceId(Output.of(serviceId));
        }

        /**
         * @param serviceName The name of the terminal node service associated with the terminal node.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the terminal node service associated with the terminal node.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param vpcEndpointName The name of Vpc Endpoint. The length is between 2 and 128 characters, starting with English letters or Chinese, and can include numbers, hyphens (-) and underscores (_).
         * 
         * @return builder
         * 
         */
        public Builder vpcEndpointName(@Nullable Output<String> vpcEndpointName) {
            $.vpcEndpointName = vpcEndpointName;
            return this;
        }

        /**
         * @param vpcEndpointName The name of Vpc Endpoint. The length is between 2 and 128 characters, starting with English letters or Chinese, and can include numbers, hyphens (-) and underscores (_).
         * 
         * @return builder
         * 
         */
        public Builder vpcEndpointName(String vpcEndpointName) {
            return vpcEndpointName(Output.of(vpcEndpointName));
        }

        /**
         * @param vpcId The private network to which the terminal node belongs.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId The private network to which the terminal node belongs.
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public VpcEndpointArgs build() {
            $.securityGroupIds = Objects.requireNonNull($.securityGroupIds, "expected parameter 'securityGroupIds' to be non-null");
            $.vpcId = Objects.requireNonNull($.vpcId, "expected parameter 'vpcId' to be non-null");
            return $;
        }
    }

}
