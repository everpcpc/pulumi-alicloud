// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ga.outputs;

import com.pulumi.alicloud.ga.outputs.GetBasicAccelerateIpsIp;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBasicAccelerateIpsResult {
    /**
     * @return The address of the Basic Accelerate IP.
     * 
     */
    private final @Nullable String accelerateIpAddress;
    /**
     * @return The id of the Basic Accelerate IP.
     * 
     */
    private final @Nullable String accelerateIpId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<String> ids;
    /**
     * @return The ID of the Basic Ip Set.
     * 
     */
    private final String ipSetId;
    /**
     * @return A list of Global Accelerator Basic Accelerate IPs. Each element contains the following attributes:
     * 
     */
    private final List<GetBasicAccelerateIpsIp> ips;
    private final @Nullable String outputFile;
    /**
     * @return The status of the Basic Accelerate IP instance.
     * 
     */
    private final @Nullable String status;

    @CustomType.Constructor
    private GetBasicAccelerateIpsResult(
        @CustomType.Parameter("accelerateIpAddress") @Nullable String accelerateIpAddress,
        @CustomType.Parameter("accelerateIpId") @Nullable String accelerateIpId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ids") List<String> ids,
        @CustomType.Parameter("ipSetId") String ipSetId,
        @CustomType.Parameter("ips") List<GetBasicAccelerateIpsIp> ips,
        @CustomType.Parameter("outputFile") @Nullable String outputFile,
        @CustomType.Parameter("status") @Nullable String status) {
        this.accelerateIpAddress = accelerateIpAddress;
        this.accelerateIpId = accelerateIpId;
        this.id = id;
        this.ids = ids;
        this.ipSetId = ipSetId;
        this.ips = ips;
        this.outputFile = outputFile;
        this.status = status;
    }

    /**
     * @return The address of the Basic Accelerate IP.
     * 
     */
    public Optional<String> accelerateIpAddress() {
        return Optional.ofNullable(this.accelerateIpAddress);
    }
    /**
     * @return The id of the Basic Accelerate IP.
     * 
     */
    public Optional<String> accelerateIpId() {
        return Optional.ofNullable(this.accelerateIpId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    /**
     * @return The ID of the Basic Ip Set.
     * 
     */
    public String ipSetId() {
        return this.ipSetId;
    }
    /**
     * @return A list of Global Accelerator Basic Accelerate IPs. Each element contains the following attributes:
     * 
     */
    public List<GetBasicAccelerateIpsIp> ips() {
        return this.ips;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return The status of the Basic Accelerate IP instance.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBasicAccelerateIpsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String accelerateIpAddress;
        private @Nullable String accelerateIpId;
        private String id;
        private List<String> ids;
        private String ipSetId;
        private List<GetBasicAccelerateIpsIp> ips;
        private @Nullable String outputFile;
        private @Nullable String status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBasicAccelerateIpsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accelerateIpAddress = defaults.accelerateIpAddress;
    	      this.accelerateIpId = defaults.accelerateIpId;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.ipSetId = defaults.ipSetId;
    	      this.ips = defaults.ips;
    	      this.outputFile = defaults.outputFile;
    	      this.status = defaults.status;
        }

        public Builder accelerateIpAddress(@Nullable String accelerateIpAddress) {
            this.accelerateIpAddress = accelerateIpAddress;
            return this;
        }
        public Builder accelerateIpId(@Nullable String accelerateIpId) {
            this.accelerateIpId = accelerateIpId;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public Builder ipSetId(String ipSetId) {
            this.ipSetId = Objects.requireNonNull(ipSetId);
            return this;
        }
        public Builder ips(List<GetBasicAccelerateIpsIp> ips) {
            this.ips = Objects.requireNonNull(ips);
            return this;
        }
        public Builder ips(GetBasicAccelerateIpsIp... ips) {
            return ips(List.of(ips));
        }
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }        public GetBasicAccelerateIpsResult build() {
            return new GetBasicAccelerateIpsResult(accelerateIpAddress, accelerateIpId, id, ids, ipSetId, ips, outputFile, status);
        }
    }
}
