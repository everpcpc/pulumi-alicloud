// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.hbr.inputs;

import com.pulumi.alicloud.hbr.inputs.ServerBackupPlanDetailArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServerBackupPlanState extends com.pulumi.resources.ResourceArgs {

    public static final ServerBackupPlanState Empty = new ServerBackupPlanState();

    /**
     * ECS server backup plan details.
     * 
     */
    @Import(name="details")
    private @Nullable Output<List<ServerBackupPlanDetailArgs>> details;

    /**
     * @return ECS server backup plan details.
     * 
     */
    public Optional<Output<List<ServerBackupPlanDetailArgs>>> details() {
        return Optional.ofNullable(this.details);
    }

    /**
     * Whether to disable the backup task. Valid values: `true`, `false`.
     * 
     */
    @Import(name="disabled")
    private @Nullable Output<Boolean> disabled;

    /**
     * @return Whether to disable the backup task. Valid values: `true`, `false`.
     * 
     */
    public Optional<Output<Boolean>> disabled() {
        return Optional.ofNullable(this.disabled);
    }

    /**
     * The name of the backup plan. 1~64 characters, the backup plan name of each data source type in a single warehouse required to be unique.
     * 
     */
    @Import(name="ecsServerBackupPlanName")
    private @Nullable Output<String> ecsServerBackupPlanName;

    /**
     * @return The name of the backup plan. 1~64 characters, the backup plan name of each data source type in a single warehouse required to be unique.
     * 
     */
    public Optional<Output<String>> ecsServerBackupPlanName() {
        return Optional.ofNullable(this.ecsServerBackupPlanName);
    }

    /**
     * The ID of ECS instance.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return The ID of ECS instance.
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * Backup retention days, the minimum is 1.
     * 
     */
    @Import(name="retention")
    private @Nullable Output<Integer> retention;

    /**
     * @return Backup retention days, the minimum is 1.
     * 
     */
    public Optional<Output<Integer>> retention() {
        return Optional.ofNullable(this.retention);
    }

    /**
     * Backup strategy. Optional format: `I|{startTime}|{interval}`
     * 
     */
    @Import(name="schedule")
    private @Nullable Output<String> schedule;

    /**
     * @return Backup strategy. Optional format: `I|{startTime}|{interval}`
     * 
     */
    public Optional<Output<String>> schedule() {
        return Optional.ofNullable(this.schedule);
    }

    private ServerBackupPlanState() {}

    private ServerBackupPlanState(ServerBackupPlanState $) {
        this.details = $.details;
        this.disabled = $.disabled;
        this.ecsServerBackupPlanName = $.ecsServerBackupPlanName;
        this.instanceId = $.instanceId;
        this.retention = $.retention;
        this.schedule = $.schedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerBackupPlanState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerBackupPlanState $;

        public Builder() {
            $ = new ServerBackupPlanState();
        }

        public Builder(ServerBackupPlanState defaults) {
            $ = new ServerBackupPlanState(Objects.requireNonNull(defaults));
        }

        /**
         * @param details ECS server backup plan details.
         * 
         * @return builder
         * 
         */
        public Builder details(@Nullable Output<List<ServerBackupPlanDetailArgs>> details) {
            $.details = details;
            return this;
        }

        /**
         * @param details ECS server backup plan details.
         * 
         * @return builder
         * 
         */
        public Builder details(List<ServerBackupPlanDetailArgs> details) {
            return details(Output.of(details));
        }

        /**
         * @param details ECS server backup plan details.
         * 
         * @return builder
         * 
         */
        public Builder details(ServerBackupPlanDetailArgs... details) {
            return details(List.of(details));
        }

        /**
         * @param disabled Whether to disable the backup task. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder disabled(@Nullable Output<Boolean> disabled) {
            $.disabled = disabled;
            return this;
        }

        /**
         * @param disabled Whether to disable the backup task. Valid values: `true`, `false`.
         * 
         * @return builder
         * 
         */
        public Builder disabled(Boolean disabled) {
            return disabled(Output.of(disabled));
        }

        /**
         * @param ecsServerBackupPlanName The name of the backup plan. 1~64 characters, the backup plan name of each data source type in a single warehouse required to be unique.
         * 
         * @return builder
         * 
         */
        public Builder ecsServerBackupPlanName(@Nullable Output<String> ecsServerBackupPlanName) {
            $.ecsServerBackupPlanName = ecsServerBackupPlanName;
            return this;
        }

        /**
         * @param ecsServerBackupPlanName The name of the backup plan. 1~64 characters, the backup plan name of each data source type in a single warehouse required to be unique.
         * 
         * @return builder
         * 
         */
        public Builder ecsServerBackupPlanName(String ecsServerBackupPlanName) {
            return ecsServerBackupPlanName(Output.of(ecsServerBackupPlanName));
        }

        /**
         * @param instanceId The ID of ECS instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The ID of ECS instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param retention Backup retention days, the minimum is 1.
         * 
         * @return builder
         * 
         */
        public Builder retention(@Nullable Output<Integer> retention) {
            $.retention = retention;
            return this;
        }

        /**
         * @param retention Backup retention days, the minimum is 1.
         * 
         * @return builder
         * 
         */
        public Builder retention(Integer retention) {
            return retention(Output.of(retention));
        }

        /**
         * @param schedule Backup strategy. Optional format: `I|{startTime}|{interval}`
         * 
         * @return builder
         * 
         */
        public Builder schedule(@Nullable Output<String> schedule) {
            $.schedule = schedule;
            return this;
        }

        /**
         * @param schedule Backup strategy. Optional format: `I|{startTime}|{interval}`
         * 
         * @return builder
         * 
         */
        public Builder schedule(String schedule) {
            return schedule(Output.of(schedule));
        }

        public ServerBackupPlanState build() {
            return $;
        }
    }

}
