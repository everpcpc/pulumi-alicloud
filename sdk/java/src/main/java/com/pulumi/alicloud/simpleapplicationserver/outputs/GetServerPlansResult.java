// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.simpleapplicationserver.outputs;

import com.pulumi.alicloud.simpleapplicationserver.outputs.GetServerPlansPlan;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetServerPlansResult {
    private final @Nullable Integer bandwidth;
    private final @Nullable Integer core;
    private final @Nullable Integer diskSize;
    private final @Nullable Integer flow;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<String> ids;
    private final @Nullable Integer memory;
    private final @Nullable String outputFile;
    private final List<GetServerPlansPlan> plans;
    private final @Nullable String platform;

    @CustomType.Constructor
    private GetServerPlansResult(
        @CustomType.Parameter("bandwidth") @Nullable Integer bandwidth,
        @CustomType.Parameter("core") @Nullable Integer core,
        @CustomType.Parameter("diskSize") @Nullable Integer diskSize,
        @CustomType.Parameter("flow") @Nullable Integer flow,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ids") List<String> ids,
        @CustomType.Parameter("memory") @Nullable Integer memory,
        @CustomType.Parameter("outputFile") @Nullable String outputFile,
        @CustomType.Parameter("plans") List<GetServerPlansPlan> plans,
        @CustomType.Parameter("platform") @Nullable String platform) {
        this.bandwidth = bandwidth;
        this.core = core;
        this.diskSize = diskSize;
        this.flow = flow;
        this.id = id;
        this.ids = ids;
        this.memory = memory;
        this.outputFile = outputFile;
        this.plans = plans;
        this.platform = platform;
    }

    public Optional<Integer> bandwidth() {
        return Optional.ofNullable(this.bandwidth);
    }
    public Optional<Integer> core() {
        return Optional.ofNullable(this.core);
    }
    public Optional<Integer> diskSize() {
        return Optional.ofNullable(this.diskSize);
    }
    public Optional<Integer> flow() {
        return Optional.ofNullable(this.flow);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public Optional<Integer> memory() {
        return Optional.ofNullable(this.memory);
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public List<GetServerPlansPlan> plans() {
        return this.plans;
    }
    public Optional<String> platform() {
        return Optional.ofNullable(this.platform);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServerPlansResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer bandwidth;
        private @Nullable Integer core;
        private @Nullable Integer diskSize;
        private @Nullable Integer flow;
        private String id;
        private List<String> ids;
        private @Nullable Integer memory;
        private @Nullable String outputFile;
        private List<GetServerPlansPlan> plans;
        private @Nullable String platform;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServerPlansResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidth = defaults.bandwidth;
    	      this.core = defaults.core;
    	      this.diskSize = defaults.diskSize;
    	      this.flow = defaults.flow;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.memory = defaults.memory;
    	      this.outputFile = defaults.outputFile;
    	      this.plans = defaults.plans;
    	      this.platform = defaults.platform;
        }

        public Builder bandwidth(@Nullable Integer bandwidth) {
            this.bandwidth = bandwidth;
            return this;
        }
        public Builder core(@Nullable Integer core) {
            this.core = core;
            return this;
        }
        public Builder diskSize(@Nullable Integer diskSize) {
            this.diskSize = diskSize;
            return this;
        }
        public Builder flow(@Nullable Integer flow) {
            this.flow = flow;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public Builder memory(@Nullable Integer memory) {
            this.memory = memory;
            return this;
        }
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        public Builder plans(List<GetServerPlansPlan> plans) {
            this.plans = Objects.requireNonNull(plans);
            return this;
        }
        public Builder plans(GetServerPlansPlan... plans) {
            return plans(List.of(plans));
        }
        public Builder platform(@Nullable String platform) {
            this.platform = platform;
            return this;
        }        public GetServerPlansResult build() {
            return new GetServerPlansResult(bandwidth, core, diskSize, flow, id, ids, memory, outputFile, plans, platform);
        }
    }
}
