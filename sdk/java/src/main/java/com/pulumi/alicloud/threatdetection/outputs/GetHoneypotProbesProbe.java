// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection.outputs;

import com.pulumi.alicloud.threatdetection.outputs.GetHoneypotProbesProbeHoneypotBindList;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetHoneypotProbesProbe {
    /**
     * @return ARP spoofing detection.-**true**: Enable-**false**: Disabled. Available when `enable_details` is on.
     * 
     */
    private final Boolean arp;
    /**
     * @return The ID of the management node.
     * 
     */
    private final String controlNodeId;
    /**
     * @return Probe name
     * 
     */
    private final String displayName;
    private final List<GetHoneypotProbesProbeHoneypotBindList> honeypotBindLists;
    /**
     * @return The first ID of the resource
     * 
     */
    private final String honeypotProbeId;
    /**
     * @return The ID of the honeypot probe. Its value is the same as `honeypot_probe_id`.
     * 
     */
    private final String id;
    /**
     * @return Ping scan detection. Value:**true**: Enable **false**: Disabled. Available when `enable_details` is on.
     * 
     */
    private final Boolean ping;
    /**
     * @return Probe type
     * 
     */
    private final String probeType;
    /**
     * @return Listen to the IP address list. Available when `enable_details` is on.
     * 
     */
    private final List<String> serviceIpLists;
    /**
     * @return The status of the resource.
     * 
     */
    private final String status;
    /**
     * @return Machine uuid. Has a value when the type is `host_probe`.
     * 
     */
    private final String uuid;
    /**
     * @return The ID of the VPC. Has a value when the type is `vpc_black_hole_probe`.
     * 
     */
    private final String vpcId;

    @CustomType.Constructor
    private GetHoneypotProbesProbe(
        @CustomType.Parameter("arp") Boolean arp,
        @CustomType.Parameter("controlNodeId") String controlNodeId,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("honeypotBindLists") List<GetHoneypotProbesProbeHoneypotBindList> honeypotBindLists,
        @CustomType.Parameter("honeypotProbeId") String honeypotProbeId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ping") Boolean ping,
        @CustomType.Parameter("probeType") String probeType,
        @CustomType.Parameter("serviceIpLists") List<String> serviceIpLists,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("uuid") String uuid,
        @CustomType.Parameter("vpcId") String vpcId) {
        this.arp = arp;
        this.controlNodeId = controlNodeId;
        this.displayName = displayName;
        this.honeypotBindLists = honeypotBindLists;
        this.honeypotProbeId = honeypotProbeId;
        this.id = id;
        this.ping = ping;
        this.probeType = probeType;
        this.serviceIpLists = serviceIpLists;
        this.status = status;
        this.uuid = uuid;
        this.vpcId = vpcId;
    }

    /**
     * @return ARP spoofing detection.-**true**: Enable-**false**: Disabled. Available when `enable_details` is on.
     * 
     */
    public Boolean arp() {
        return this.arp;
    }
    /**
     * @return The ID of the management node.
     * 
     */
    public String controlNodeId() {
        return this.controlNodeId;
    }
    /**
     * @return Probe name
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    public List<GetHoneypotProbesProbeHoneypotBindList> honeypotBindLists() {
        return this.honeypotBindLists;
    }
    /**
     * @return The first ID of the resource
     * 
     */
    public String honeypotProbeId() {
        return this.honeypotProbeId;
    }
    /**
     * @return The ID of the honeypot probe. Its value is the same as `honeypot_probe_id`.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Ping scan detection. Value:**true**: Enable **false**: Disabled. Available when `enable_details` is on.
     * 
     */
    public Boolean ping() {
        return this.ping;
    }
    /**
     * @return Probe type
     * 
     */
    public String probeType() {
        return this.probeType;
    }
    /**
     * @return Listen to the IP address list. Available when `enable_details` is on.
     * 
     */
    public List<String> serviceIpLists() {
        return this.serviceIpLists;
    }
    /**
     * @return The status of the resource.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Machine uuid. Has a value when the type is `host_probe`.
     * 
     */
    public String uuid() {
        return this.uuid;
    }
    /**
     * @return The ID of the VPC. Has a value when the type is `vpc_black_hole_probe`.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHoneypotProbesProbe defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean arp;
        private String controlNodeId;
        private String displayName;
        private List<GetHoneypotProbesProbeHoneypotBindList> honeypotBindLists;
        private String honeypotProbeId;
        private String id;
        private Boolean ping;
        private String probeType;
        private List<String> serviceIpLists;
        private String status;
        private String uuid;
        private String vpcId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetHoneypotProbesProbe defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arp = defaults.arp;
    	      this.controlNodeId = defaults.controlNodeId;
    	      this.displayName = defaults.displayName;
    	      this.honeypotBindLists = defaults.honeypotBindLists;
    	      this.honeypotProbeId = defaults.honeypotProbeId;
    	      this.id = defaults.id;
    	      this.ping = defaults.ping;
    	      this.probeType = defaults.probeType;
    	      this.serviceIpLists = defaults.serviceIpLists;
    	      this.status = defaults.status;
    	      this.uuid = defaults.uuid;
    	      this.vpcId = defaults.vpcId;
        }

        public Builder arp(Boolean arp) {
            this.arp = Objects.requireNonNull(arp);
            return this;
        }
        public Builder controlNodeId(String controlNodeId) {
            this.controlNodeId = Objects.requireNonNull(controlNodeId);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder honeypotBindLists(List<GetHoneypotProbesProbeHoneypotBindList> honeypotBindLists) {
            this.honeypotBindLists = Objects.requireNonNull(honeypotBindLists);
            return this;
        }
        public Builder honeypotBindLists(GetHoneypotProbesProbeHoneypotBindList... honeypotBindLists) {
            return honeypotBindLists(List.of(honeypotBindLists));
        }
        public Builder honeypotProbeId(String honeypotProbeId) {
            this.honeypotProbeId = Objects.requireNonNull(honeypotProbeId);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ping(Boolean ping) {
            this.ping = Objects.requireNonNull(ping);
            return this;
        }
        public Builder probeType(String probeType) {
            this.probeType = Objects.requireNonNull(probeType);
            return this;
        }
        public Builder serviceIpLists(List<String> serviceIpLists) {
            this.serviceIpLists = Objects.requireNonNull(serviceIpLists);
            return this;
        }
        public Builder serviceIpLists(String... serviceIpLists) {
            return serviceIpLists(List.of(serviceIpLists));
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder uuid(String uuid) {
            this.uuid = Objects.requireNonNull(uuid);
            return this;
        }
        public Builder vpcId(String vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }        public GetHoneypotProbesProbe build() {
            return new GetHoneypotProbesProbe(arp, controlNodeId, displayName, honeypotBindLists, honeypotProbeId, id, ping, probeType, serviceIpLists, status, uuid, vpcId);
        }
    }
}
