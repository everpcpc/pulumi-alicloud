// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.servicecatalog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetProvisionedProductsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetProvisionedProductsArgs Empty = new GetProvisionedProductsArgs();

    @Import(name="accessLevelFilter")
    private @Nullable Output<String> accessLevelFilter;

    public Optional<Output<String>> accessLevelFilter() {
        return Optional.ofNullable(this.accessLevelFilter);
    }

    @Import(name="enableDetails")
    private @Nullable Output<Boolean> enableDetails;

    public Optional<Output<Boolean>> enableDetails() {
        return Optional.ofNullable(this.enableDetails);
    }

    /**
     * A list of Provisioned Product IDs.
     * 
     */
    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    /**
     * @return A list of Provisioned Product IDs.
     * 
     */
    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    /**
     * A regex string to filter results by Product name.
     * 
     */
    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    /**
     * @return A regex string to filter results by Product name.
     * 
     */
    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    @Import(name="pageNumber")
    private @Nullable Output<Integer> pageNumber;

    public Optional<Output<Integer>> pageNumber() {
        return Optional.ofNullable(this.pageNumber);
    }

    @Import(name="pageSize")
    private @Nullable Output<Integer> pageSize;

    public Optional<Output<Integer>> pageSize() {
        return Optional.ofNullable(this.pageSize);
    }

    @Import(name="sortBy")
    private @Nullable Output<String> sortBy;

    public Optional<Output<String>> sortBy() {
        return Optional.ofNullable(this.sortBy);
    }

    @Import(name="sortOrder")
    private @Nullable Output<String> sortOrder;

    public Optional<Output<String>> sortOrder() {
        return Optional.ofNullable(this.sortOrder);
    }

    private GetProvisionedProductsArgs() {}

    private GetProvisionedProductsArgs(GetProvisionedProductsArgs $) {
        this.accessLevelFilter = $.accessLevelFilter;
        this.enableDetails = $.enableDetails;
        this.ids = $.ids;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.pageNumber = $.pageNumber;
        this.pageSize = $.pageSize;
        this.sortBy = $.sortBy;
        this.sortOrder = $.sortOrder;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetProvisionedProductsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetProvisionedProductsArgs $;

        public Builder() {
            $ = new GetProvisionedProductsArgs();
        }

        public Builder(GetProvisionedProductsArgs defaults) {
            $ = new GetProvisionedProductsArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessLevelFilter(@Nullable Output<String> accessLevelFilter) {
            $.accessLevelFilter = accessLevelFilter;
            return this;
        }

        public Builder accessLevelFilter(String accessLevelFilter) {
            return accessLevelFilter(Output.of(accessLevelFilter));
        }

        public Builder enableDetails(@Nullable Output<Boolean> enableDetails) {
            $.enableDetails = enableDetails;
            return this;
        }

        public Builder enableDetails(Boolean enableDetails) {
            return enableDetails(Output.of(enableDetails));
        }

        /**
         * @param ids A list of Provisioned Product IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        /**
         * @param ids A list of Provisioned Product IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        /**
         * @param ids A list of Provisioned Product IDs.
         * 
         * @return builder
         * 
         */
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        /**
         * @param nameRegex A regex string to filter results by Product name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        /**
         * @param nameRegex A regex string to filter results by Product name.
         * 
         * @return builder
         * 
         */
        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        public Builder pageNumber(@Nullable Output<Integer> pageNumber) {
            $.pageNumber = pageNumber;
            return this;
        }

        public Builder pageNumber(Integer pageNumber) {
            return pageNumber(Output.of(pageNumber));
        }

        public Builder pageSize(@Nullable Output<Integer> pageSize) {
            $.pageSize = pageSize;
            return this;
        }

        public Builder pageSize(Integer pageSize) {
            return pageSize(Output.of(pageSize));
        }

        public Builder sortBy(@Nullable Output<String> sortBy) {
            $.sortBy = sortBy;
            return this;
        }

        public Builder sortBy(String sortBy) {
            return sortBy(Output.of(sortBy));
        }

        public Builder sortOrder(@Nullable Output<String> sortOrder) {
            $.sortOrder = sortOrder;
            return this;
        }

        public Builder sortOrder(String sortOrder) {
            return sortOrder(Output.of(sortOrder));
        }

        public GetProvisionedProductsArgs build() {
            return $;
        }
    }

}
