// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkAclIngressAclEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkAclIngressAclEntryArgs Empty = new NetworkAclIngressAclEntryArgs();

    /**
     * The description of egress entries.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of egress entries.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The entry name of egress entries.
     * 
     */
    @Import(name="networkAclEntryName")
    private @Nullable Output<String> networkAclEntryName;

    /**
     * @return The entry name of egress entries.
     * 
     */
    public Optional<Output<String>> networkAclEntryName() {
        return Optional.ofNullable(this.networkAclEntryName);
    }

    /**
     * The policy of egress entries. Valid values `accept` and `drop`.
     * 
     */
    @Import(name="policy")
    private @Nullable Output<String> policy;

    /**
     * @return The policy of egress entries. Valid values `accept` and `drop`.
     * 
     */
    public Optional<Output<String>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * The port of egress entries.
     * 
     */
    @Import(name="port")
    private @Nullable Output<String> port;

    /**
     * @return The port of egress entries.
     * 
     */
    public Optional<Output<String>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * The protocol of egress entries. Valid values `icmp`,`gre`,`tcp`,`udp`, and `all`.
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return The protocol of egress entries. Valid values `icmp`,`gre`,`tcp`,`udp`, and `all`.
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * The source cidr ip of ingress entries.
     * 
     */
    @Import(name="sourceCidrIp")
    private @Nullable Output<String> sourceCidrIp;

    /**
     * @return The source cidr ip of ingress entries.
     * 
     */
    public Optional<Output<String>> sourceCidrIp() {
        return Optional.ofNullable(this.sourceCidrIp);
    }

    private NetworkAclIngressAclEntryArgs() {}

    private NetworkAclIngressAclEntryArgs(NetworkAclIngressAclEntryArgs $) {
        this.description = $.description;
        this.networkAclEntryName = $.networkAclEntryName;
        this.policy = $.policy;
        this.port = $.port;
        this.protocol = $.protocol;
        this.sourceCidrIp = $.sourceCidrIp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkAclIngressAclEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkAclIngressAclEntryArgs $;

        public Builder() {
            $ = new NetworkAclIngressAclEntryArgs();
        }

        public Builder(NetworkAclIngressAclEntryArgs defaults) {
            $ = new NetworkAclIngressAclEntryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of egress entries.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of egress entries.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param networkAclEntryName The entry name of egress entries.
         * 
         * @return builder
         * 
         */
        public Builder networkAclEntryName(@Nullable Output<String> networkAclEntryName) {
            $.networkAclEntryName = networkAclEntryName;
            return this;
        }

        /**
         * @param networkAclEntryName The entry name of egress entries.
         * 
         * @return builder
         * 
         */
        public Builder networkAclEntryName(String networkAclEntryName) {
            return networkAclEntryName(Output.of(networkAclEntryName));
        }

        /**
         * @param policy The policy of egress entries. Valid values `accept` and `drop`.
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable Output<String> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy The policy of egress entries. Valid values `accept` and `drop`.
         * 
         * @return builder
         * 
         */
        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param port The port of egress entries.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<String> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port The port of egress entries.
         * 
         * @return builder
         * 
         */
        public Builder port(String port) {
            return port(Output.of(port));
        }

        /**
         * @param protocol The protocol of egress entries. Valid values `icmp`,`gre`,`tcp`,`udp`, and `all`.
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol The protocol of egress entries. Valid values `icmp`,`gre`,`tcp`,`udp`, and `all`.
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param sourceCidrIp The source cidr ip of ingress entries.
         * 
         * @return builder
         * 
         */
        public Builder sourceCidrIp(@Nullable Output<String> sourceCidrIp) {
            $.sourceCidrIp = sourceCidrIp;
            return this;
        }

        /**
         * @param sourceCidrIp The source cidr ip of ingress entries.
         * 
         * @return builder
         * 
         */
        public Builder sourceCidrIp(String sourceCidrIp) {
            return sourceCidrIp(Output.of(sourceCidrIp));
        }

        public NetworkAclIngressAclEntryArgs build() {
            return $;
        }
    }

}
