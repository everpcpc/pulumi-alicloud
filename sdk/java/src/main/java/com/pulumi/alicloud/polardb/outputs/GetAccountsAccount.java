// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.polardb.outputs;

import com.pulumi.alicloud.polardb.outputs.GetAccountsAccountDatabasePrivilege;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAccountsAccount {
    /**
     * @return Account description.
     * 
     */
    private final String accountDescription;
    /**
     * @return Account lock state, Valid values are `Lock`, `UnLock`.
     * 
     */
    private final String accountLockState;
    /**
     * @return Account name.
     * 
     */
    private final String accountName;
    /**
     * @return Cluster address type.`Cluster`: the default address of the Cluster.`Primary`: Primary address.`Custom`: Custom cluster addresses.
     * 
     */
    private final String accountStatus;
    /**
     * @return Account type, Valid values are `Normal`, `Super`.
     * 
     */
    private final String accountType;
    /**
     * @return A list of database privilege. Each element contains the following attributes.
     * 
     */
    private final List<GetAccountsAccountDatabasePrivilege> databasePrivileges;

    @CustomType.Constructor
    private GetAccountsAccount(
        @CustomType.Parameter("accountDescription") String accountDescription,
        @CustomType.Parameter("accountLockState") String accountLockState,
        @CustomType.Parameter("accountName") String accountName,
        @CustomType.Parameter("accountStatus") String accountStatus,
        @CustomType.Parameter("accountType") String accountType,
        @CustomType.Parameter("databasePrivileges") List<GetAccountsAccountDatabasePrivilege> databasePrivileges) {
        this.accountDescription = accountDescription;
        this.accountLockState = accountLockState;
        this.accountName = accountName;
        this.accountStatus = accountStatus;
        this.accountType = accountType;
        this.databasePrivileges = databasePrivileges;
    }

    /**
     * @return Account description.
     * 
     */
    public String accountDescription() {
        return this.accountDescription;
    }
    /**
     * @return Account lock state, Valid values are `Lock`, `UnLock`.
     * 
     */
    public String accountLockState() {
        return this.accountLockState;
    }
    /**
     * @return Account name.
     * 
     */
    public String accountName() {
        return this.accountName;
    }
    /**
     * @return Cluster address type.`Cluster`: the default address of the Cluster.`Primary`: Primary address.`Custom`: Custom cluster addresses.
     * 
     */
    public String accountStatus() {
        return this.accountStatus;
    }
    /**
     * @return Account type, Valid values are `Normal`, `Super`.
     * 
     */
    public String accountType() {
        return this.accountType;
    }
    /**
     * @return A list of database privilege. Each element contains the following attributes.
     * 
     */
    public List<GetAccountsAccountDatabasePrivilege> databasePrivileges() {
        return this.databasePrivileges;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountsAccount defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String accountDescription;
        private String accountLockState;
        private String accountName;
        private String accountStatus;
        private String accountType;
        private List<GetAccountsAccountDatabasePrivilege> databasePrivileges;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAccountsAccount defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountDescription = defaults.accountDescription;
    	      this.accountLockState = defaults.accountLockState;
    	      this.accountName = defaults.accountName;
    	      this.accountStatus = defaults.accountStatus;
    	      this.accountType = defaults.accountType;
    	      this.databasePrivileges = defaults.databasePrivileges;
        }

        public Builder accountDescription(String accountDescription) {
            this.accountDescription = Objects.requireNonNull(accountDescription);
            return this;
        }
        public Builder accountLockState(String accountLockState) {
            this.accountLockState = Objects.requireNonNull(accountLockState);
            return this;
        }
        public Builder accountName(String accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }
        public Builder accountStatus(String accountStatus) {
            this.accountStatus = Objects.requireNonNull(accountStatus);
            return this;
        }
        public Builder accountType(String accountType) {
            this.accountType = Objects.requireNonNull(accountType);
            return this;
        }
        public Builder databasePrivileges(List<GetAccountsAccountDatabasePrivilege> databasePrivileges) {
            this.databasePrivileges = Objects.requireNonNull(databasePrivileges);
            return this;
        }
        public Builder databasePrivileges(GetAccountsAccountDatabasePrivilege... databasePrivileges) {
            return databasePrivileges(List.of(databasePrivileges));
        }        public GetAccountsAccount build() {
            return new GetAccountsAccount(accountDescription, accountLockState, accountName, accountStatus, accountType, databasePrivileges);
        }
    }
}
