// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.servicecatalog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetEndUserProductsEndUserProduct {
    /**
     * @return Product creation time.According to ISO8601 standard, UTC time is used in the format: YYYY-MM-DDThh:mm:ssZ.
     * 
     */
    private final String createTime;
    /**
     * @return Product description.
     * 
     */
    private final String description;
    /**
     * @return Whether there is a default Startup option. Value:-true: There is a default Startup option, and there is no need to fill in the portfolio when starting the product or updating the instance.-false: there is no default Startup option. You must fill in the portfolio when starting the product or updating the instance. For more information about how to obtain the portfolio, see ListLaunchOptions.&gt; If the product is added to only one product portfolio, there will be a default Startup option. If the product is added to multiple product combinations, there will be multiple startup options at the same time, but there is no default Startup option at this time.
     * 
     */
    private final Boolean hasDefaultLaunchOption;
    /**
     * @return ID of product, Its value is the same as `product_id`.
     * 
     */
    private final String id;
    /**
     * @return Product ARN.
     * 
     */
    private final String productArn;
    /**
     * @return Product ID.
     * 
     */
    private final String productId;
    /**
     * @return Product name.
     * 
     */
    private final String productName;
    /**
     * @return Type of product.The value is Ros, which indicates the resource orchestration service (ROS).
     * 
     */
    private final String productType;
    /**
     * @return Product provider.
     * 
     */
    private final String providerName;

    @CustomType.Constructor
    private GetEndUserProductsEndUserProduct(
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("hasDefaultLaunchOption") Boolean hasDefaultLaunchOption,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("productArn") String productArn,
        @CustomType.Parameter("productId") String productId,
        @CustomType.Parameter("productName") String productName,
        @CustomType.Parameter("productType") String productType,
        @CustomType.Parameter("providerName") String providerName) {
        this.createTime = createTime;
        this.description = description;
        this.hasDefaultLaunchOption = hasDefaultLaunchOption;
        this.id = id;
        this.productArn = productArn;
        this.productId = productId;
        this.productName = productName;
        this.productType = productType;
        this.providerName = providerName;
    }

    /**
     * @return Product creation time.According to ISO8601 standard, UTC time is used in the format: YYYY-MM-DDThh:mm:ssZ.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return Product description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Whether there is a default Startup option. Value:-true: There is a default Startup option, and there is no need to fill in the portfolio when starting the product or updating the instance.-false: there is no default Startup option. You must fill in the portfolio when starting the product or updating the instance. For more information about how to obtain the portfolio, see ListLaunchOptions.&gt; If the product is added to only one product portfolio, there will be a default Startup option. If the product is added to multiple product combinations, there will be multiple startup options at the same time, but there is no default Startup option at this time.
     * 
     */
    public Boolean hasDefaultLaunchOption() {
        return this.hasDefaultLaunchOption;
    }
    /**
     * @return ID of product, Its value is the same as `product_id`.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Product ARN.
     * 
     */
    public String productArn() {
        return this.productArn;
    }
    /**
     * @return Product ID.
     * 
     */
    public String productId() {
        return this.productId;
    }
    /**
     * @return Product name.
     * 
     */
    public String productName() {
        return this.productName;
    }
    /**
     * @return Type of product.The value is Ros, which indicates the resource orchestration service (ROS).
     * 
     */
    public String productType() {
        return this.productType;
    }
    /**
     * @return Product provider.
     * 
     */
    public String providerName() {
        return this.providerName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEndUserProductsEndUserProduct defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String description;
        private Boolean hasDefaultLaunchOption;
        private String id;
        private String productArn;
        private String productId;
        private String productName;
        private String productType;
        private String providerName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEndUserProductsEndUserProduct defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.hasDefaultLaunchOption = defaults.hasDefaultLaunchOption;
    	      this.id = defaults.id;
    	      this.productArn = defaults.productArn;
    	      this.productId = defaults.productId;
    	      this.productName = defaults.productName;
    	      this.productType = defaults.productType;
    	      this.providerName = defaults.providerName;
        }

        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder hasDefaultLaunchOption(Boolean hasDefaultLaunchOption) {
            this.hasDefaultLaunchOption = Objects.requireNonNull(hasDefaultLaunchOption);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder productArn(String productArn) {
            this.productArn = Objects.requireNonNull(productArn);
            return this;
        }
        public Builder productId(String productId) {
            this.productId = Objects.requireNonNull(productId);
            return this;
        }
        public Builder productName(String productName) {
            this.productName = Objects.requireNonNull(productName);
            return this;
        }
        public Builder productType(String productType) {
            this.productType = Objects.requireNonNull(productType);
            return this;
        }
        public Builder providerName(String providerName) {
            this.providerName = Objects.requireNonNull(providerName);
            return this;
        }        public GetEndUserProductsEndUserProduct build() {
            return new GetEndUserProductsEndUserProduct(createTime, description, hasDefaultLaunchOption, id, productArn, productId, productName, productType, providerName);
        }
    }
}
