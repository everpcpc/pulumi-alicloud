// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.adb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDBClusterLakeVersionsVersion {
    /**
     * @return The name of the service.
     * 
     */
    private final String commodityCode;
    /**
     * @return The specifications of computing resources in elastic mode. The increase of resources can speed up queries.
     * 
     */
    private final String computeResource;
    /**
     * @return The endpoint of the cluster.
     * 
     */
    private final String connectionString;
    /**
     * @return The CreateTime of the ADB cluster.
     * 
     */
    private final String createTime;
    /**
     * @return The ID of the DBCluster.
     * 
     */
    private final String dbClusterId;
    /**
     * @return The db cluster version.
     * 
     */
    private final String dbClusterVersion;
    /**
     * @return The engine of the database.
     * 
     */
    private final String engine;
    /**
     * @return The engine version of the database.
     * 
     */
    private final String engineVersion;
    /**
     * @return The time when the cluster expires.
     * 
     */
    private final String expireTime;
    /**
     * @return Indicates whether the cluster has expired.
     * 
     */
    private final String expired;
    /**
     * @return The ID of the DBCluster.
     * 
     */
    private final String id;
    /**
     * @return The lock mode of the cluster.
     * 
     */
    private final String lockMode;
    /**
     * @return The reason why the cluster is locked.
     * 
     */
    private final String lockReason;
    /**
     * @return The payment type of the resource.
     * 
     */
    private final String paymentType;
    /**
     * @return The port that is used to access the cluster.
     * 
     */
    private final String port;
    /**
     * @return The ID of the resource group.
     * 
     */
    private final String resourceGroupId;
    /**
     * @return The status of the resource.
     * 
     */
    private final String status;
    /**
     * @return The specifications of storage resources in elastic mode. The resources are used for data read and write operations.
     * 
     */
    private final String storageResource;
    /**
     * @return The vpc id.
     * 
     */
    private final String vpcId;
    /**
     * @return The vswitch id.
     * 
     */
    private final String vswitchId;
    /**
     * @return The zone ID  of the resource.
     * 
     */
    private final String zoneId;

    @CustomType.Constructor
    private GetDBClusterLakeVersionsVersion(
        @CustomType.Parameter("commodityCode") String commodityCode,
        @CustomType.Parameter("computeResource") String computeResource,
        @CustomType.Parameter("connectionString") String connectionString,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("dbClusterId") String dbClusterId,
        @CustomType.Parameter("dbClusterVersion") String dbClusterVersion,
        @CustomType.Parameter("engine") String engine,
        @CustomType.Parameter("engineVersion") String engineVersion,
        @CustomType.Parameter("expireTime") String expireTime,
        @CustomType.Parameter("expired") String expired,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lockMode") String lockMode,
        @CustomType.Parameter("lockReason") String lockReason,
        @CustomType.Parameter("paymentType") String paymentType,
        @CustomType.Parameter("port") String port,
        @CustomType.Parameter("resourceGroupId") String resourceGroupId,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("storageResource") String storageResource,
        @CustomType.Parameter("vpcId") String vpcId,
        @CustomType.Parameter("vswitchId") String vswitchId,
        @CustomType.Parameter("zoneId") String zoneId) {
        this.commodityCode = commodityCode;
        this.computeResource = computeResource;
        this.connectionString = connectionString;
        this.createTime = createTime;
        this.dbClusterId = dbClusterId;
        this.dbClusterVersion = dbClusterVersion;
        this.engine = engine;
        this.engineVersion = engineVersion;
        this.expireTime = expireTime;
        this.expired = expired;
        this.id = id;
        this.lockMode = lockMode;
        this.lockReason = lockReason;
        this.paymentType = paymentType;
        this.port = port;
        this.resourceGroupId = resourceGroupId;
        this.status = status;
        this.storageResource = storageResource;
        this.vpcId = vpcId;
        this.vswitchId = vswitchId;
        this.zoneId = zoneId;
    }

    /**
     * @return The name of the service.
     * 
     */
    public String commodityCode() {
        return this.commodityCode;
    }
    /**
     * @return The specifications of computing resources in elastic mode. The increase of resources can speed up queries.
     * 
     */
    public String computeResource() {
        return this.computeResource;
    }
    /**
     * @return The endpoint of the cluster.
     * 
     */
    public String connectionString() {
        return this.connectionString;
    }
    /**
     * @return The CreateTime of the ADB cluster.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The ID of the DBCluster.
     * 
     */
    public String dbClusterId() {
        return this.dbClusterId;
    }
    /**
     * @return The db cluster version.
     * 
     */
    public String dbClusterVersion() {
        return this.dbClusterVersion;
    }
    /**
     * @return The engine of the database.
     * 
     */
    public String engine() {
        return this.engine;
    }
    /**
     * @return The engine version of the database.
     * 
     */
    public String engineVersion() {
        return this.engineVersion;
    }
    /**
     * @return The time when the cluster expires.
     * 
     */
    public String expireTime() {
        return this.expireTime;
    }
    /**
     * @return Indicates whether the cluster has expired.
     * 
     */
    public String expired() {
        return this.expired;
    }
    /**
     * @return The ID of the DBCluster.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The lock mode of the cluster.
     * 
     */
    public String lockMode() {
        return this.lockMode;
    }
    /**
     * @return The reason why the cluster is locked.
     * 
     */
    public String lockReason() {
        return this.lockReason;
    }
    /**
     * @return The payment type of the resource.
     * 
     */
    public String paymentType() {
        return this.paymentType;
    }
    /**
     * @return The port that is used to access the cluster.
     * 
     */
    public String port() {
        return this.port;
    }
    /**
     * @return The ID of the resource group.
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return The status of the resource.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The specifications of storage resources in elastic mode. The resources are used for data read and write operations.
     * 
     */
    public String storageResource() {
        return this.storageResource;
    }
    /**
     * @return The vpc id.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    /**
     * @return The vswitch id.
     * 
     */
    public String vswitchId() {
        return this.vswitchId;
    }
    /**
     * @return The zone ID  of the resource.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDBClusterLakeVersionsVersion defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String commodityCode;
        private String computeResource;
        private String connectionString;
        private String createTime;
        private String dbClusterId;
        private String dbClusterVersion;
        private String engine;
        private String engineVersion;
        private String expireTime;
        private String expired;
        private String id;
        private String lockMode;
        private String lockReason;
        private String paymentType;
        private String port;
        private String resourceGroupId;
        private String status;
        private String storageResource;
        private String vpcId;
        private String vswitchId;
        private String zoneId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDBClusterLakeVersionsVersion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commodityCode = defaults.commodityCode;
    	      this.computeResource = defaults.computeResource;
    	      this.connectionString = defaults.connectionString;
    	      this.createTime = defaults.createTime;
    	      this.dbClusterId = defaults.dbClusterId;
    	      this.dbClusterVersion = defaults.dbClusterVersion;
    	      this.engine = defaults.engine;
    	      this.engineVersion = defaults.engineVersion;
    	      this.expireTime = defaults.expireTime;
    	      this.expired = defaults.expired;
    	      this.id = defaults.id;
    	      this.lockMode = defaults.lockMode;
    	      this.lockReason = defaults.lockReason;
    	      this.paymentType = defaults.paymentType;
    	      this.port = defaults.port;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.status = defaults.status;
    	      this.storageResource = defaults.storageResource;
    	      this.vpcId = defaults.vpcId;
    	      this.vswitchId = defaults.vswitchId;
    	      this.zoneId = defaults.zoneId;
        }

        public Builder commodityCode(String commodityCode) {
            this.commodityCode = Objects.requireNonNull(commodityCode);
            return this;
        }
        public Builder computeResource(String computeResource) {
            this.computeResource = Objects.requireNonNull(computeResource);
            return this;
        }
        public Builder connectionString(String connectionString) {
            this.connectionString = Objects.requireNonNull(connectionString);
            return this;
        }
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder dbClusterId(String dbClusterId) {
            this.dbClusterId = Objects.requireNonNull(dbClusterId);
            return this;
        }
        public Builder dbClusterVersion(String dbClusterVersion) {
            this.dbClusterVersion = Objects.requireNonNull(dbClusterVersion);
            return this;
        }
        public Builder engine(String engine) {
            this.engine = Objects.requireNonNull(engine);
            return this;
        }
        public Builder engineVersion(String engineVersion) {
            this.engineVersion = Objects.requireNonNull(engineVersion);
            return this;
        }
        public Builder expireTime(String expireTime) {
            this.expireTime = Objects.requireNonNull(expireTime);
            return this;
        }
        public Builder expired(String expired) {
            this.expired = Objects.requireNonNull(expired);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lockMode(String lockMode) {
            this.lockMode = Objects.requireNonNull(lockMode);
            return this;
        }
        public Builder lockReason(String lockReason) {
            this.lockReason = Objects.requireNonNull(lockReason);
            return this;
        }
        public Builder paymentType(String paymentType) {
            this.paymentType = Objects.requireNonNull(paymentType);
            return this;
        }
        public Builder port(String port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        public Builder resourceGroupId(String resourceGroupId) {
            this.resourceGroupId = Objects.requireNonNull(resourceGroupId);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder storageResource(String storageResource) {
            this.storageResource = Objects.requireNonNull(storageResource);
            return this;
        }
        public Builder vpcId(String vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }
        public Builder vswitchId(String vswitchId) {
            this.vswitchId = Objects.requireNonNull(vswitchId);
            return this;
        }
        public Builder zoneId(String zoneId) {
            this.zoneId = Objects.requireNonNull(zoneId);
            return this;
        }        public GetDBClusterLakeVersionsVersion build() {
            return new GetDBClusterLakeVersionsVersion(commodityCode, computeResource, connectionString, createTime, dbClusterId, dbClusterVersion, engine, engineVersion, expireTime, expired, id, lockMode, lockReason, paymentType, port, resourceGroupId, status, storageResource, vpcId, vswitchId, zoneId);
        }
    }
}
