// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.adb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDBClustersCluster {
    /**
     * @return Auto-renewal period of an cluster, in the unit of the month.
     * 
     */
    private final Integer autoRenewPeriod;
    /**
     * @return The payment type of the resource.
     * 
     */
    private final String chargeType;
    /**
     * @return The name of the service.
     * 
     */
    private final String commodityCode;
    /**
     * @return The specifications of computing resources in elastic mode. The increase of resources can speed up queries. AnalyticDB for MySQL automatically scales computing resources. For more information, see [Specifications](https://www.alibabacloud.com/help/en/doc-detail/144851.htm).
     * 
     */
    private final String computeResource;
    /**
     * @return The endpoint of the cluster.
     * 
     */
    private final String connectionString;
    /**
     * @return The CreateTime of the ADB cluster.
     * 
     */
    private final String createTime;
    /**
     * @return The db cluster category.
     * 
     */
    private final String dbClusterCategory;
    /**
     * @return The db cluster id.
     * 
     */
    private final String dbClusterId;
    /**
     * @return The db cluster network type.
     * 
     */
    private final String dbClusterNetworkType;
    /**
     * @return The db cluster type.
     * 
     */
    private final String dbClusterType;
    /**
     * @return The db cluster version.
     * 
     */
    private final String dbClusterVersion;
    /**
     * @return The db node class.
     * 
     */
    private final String dbNodeClass;
    /**
     * @return The db node count.
     * 
     */
    private final Integer dbNodeCount;
    /**
     * @return The db node storage.
     * 
     */
    private final Integer dbNodeStorage;
    /**
     * @return The description of DBCluster.
     * 
     */
    private final String description;
    /**
     * @return The type of the disk.
     * 
     */
    private final String diskType;
    /**
     * @return The ID of the data synchronization task in Data Transmission Service (DTS). This parameter is valid only for analytic instances.
     * 
     */
    private final String dtsJobId;
    /**
     * @return The elastic io resource.
     * 
     */
    private final Integer elasticIoResource;
    /**
     * @return The engine of the database.
     * 
     */
    private final String engine;
    /**
     * @return The engine version of the database.
     * 
     */
    private final String engineVersion;
    /**
     * @return The number of nodes. The node resources are used for data computing in elastic mode.
     * 
     */
    private final String executorCount;
    /**
     * @return The time when the cluster expires.
     * 
     */
    private final String expireTime;
    /**
     * @return Indicates whether the cluster has expired.
     * 
     */
    private final String expired;
    /**
     * @return The ID of the DBCluster.
     * 
     */
    private final String id;
    /**
     * @return The lock mode of the cluster.
     * 
     */
    private final String lockMode;
    /**
     * @return The reason why the cluster is locked.
     * 
     */
    private final String lockReason;
    /**
     * @return The maintenance window of the cluster.
     * 
     */
    private final String maintainTime;
    /**
     * @return The lock mode of the cluster.
     * 
     */
    private final String mode;
    private final String networkType;
    /**
     * @return The payment type of the resource.
     * 
     */
    private final String paymentType;
    /**
     * @return The port that is used to access the cluster.
     * 
     */
    private final Integer port;
    /**
     * @return The ID of the ApsaraDB RDS instance from which data is synchronized to the cluster. This parameter is valid only for analytic instances.
     * 
     */
    private final String rdsInstanceId;
    private final String regionId;
    /**
     * @return The status of renewal.
     * 
     */
    private final String renewalStatus;
    /**
     * @return The ID of the resource group.
     * 
     */
    private final String resourceGroupId;
    /**
     * @return List of IP addresses allowed to access all databases of an cluster.
     * 
     */
    private final List<String> securityIps;
    /**
     * @return The status of the resource.
     * 
     */
    private final String status;
    /**
     * @return The specifications of storage resources in elastic mode. The resources are used for data read and write operations. The increase of resources can improve the read and write performance of your cluster. For more information, see [Specifications](https://www.alibabacloud.com/help/en/doc-detail/144851.htm).
     * 
     */
    private final String storageResource;
    /**
     * @return The tag of the resource.
     * 
     */
    private final Map<String,Object> tags;
    /**
     * @return The vpc cloud instance id.
     * 
     */
    private final String vpcCloudInstanceId;
    /**
     * @return The vpc id.
     * 
     */
    private final String vpcId;
    /**
     * @return The vswitch id.
     * 
     */
    private final String vswitchId;
    /**
     * @return The zone ID  of the resource.
     * 
     */
    private final String zoneId;

    @CustomType.Constructor
    private GetDBClustersCluster(
        @CustomType.Parameter("autoRenewPeriod") Integer autoRenewPeriod,
        @CustomType.Parameter("chargeType") String chargeType,
        @CustomType.Parameter("commodityCode") String commodityCode,
        @CustomType.Parameter("computeResource") String computeResource,
        @CustomType.Parameter("connectionString") String connectionString,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("dbClusterCategory") String dbClusterCategory,
        @CustomType.Parameter("dbClusterId") String dbClusterId,
        @CustomType.Parameter("dbClusterNetworkType") String dbClusterNetworkType,
        @CustomType.Parameter("dbClusterType") String dbClusterType,
        @CustomType.Parameter("dbClusterVersion") String dbClusterVersion,
        @CustomType.Parameter("dbNodeClass") String dbNodeClass,
        @CustomType.Parameter("dbNodeCount") Integer dbNodeCount,
        @CustomType.Parameter("dbNodeStorage") Integer dbNodeStorage,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("diskType") String diskType,
        @CustomType.Parameter("dtsJobId") String dtsJobId,
        @CustomType.Parameter("elasticIoResource") Integer elasticIoResource,
        @CustomType.Parameter("engine") String engine,
        @CustomType.Parameter("engineVersion") String engineVersion,
        @CustomType.Parameter("executorCount") String executorCount,
        @CustomType.Parameter("expireTime") String expireTime,
        @CustomType.Parameter("expired") String expired,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lockMode") String lockMode,
        @CustomType.Parameter("lockReason") String lockReason,
        @CustomType.Parameter("maintainTime") String maintainTime,
        @CustomType.Parameter("mode") String mode,
        @CustomType.Parameter("networkType") String networkType,
        @CustomType.Parameter("paymentType") String paymentType,
        @CustomType.Parameter("port") Integer port,
        @CustomType.Parameter("rdsInstanceId") String rdsInstanceId,
        @CustomType.Parameter("regionId") String regionId,
        @CustomType.Parameter("renewalStatus") String renewalStatus,
        @CustomType.Parameter("resourceGroupId") String resourceGroupId,
        @CustomType.Parameter("securityIps") List<String> securityIps,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("storageResource") String storageResource,
        @CustomType.Parameter("tags") Map<String,Object> tags,
        @CustomType.Parameter("vpcCloudInstanceId") String vpcCloudInstanceId,
        @CustomType.Parameter("vpcId") String vpcId,
        @CustomType.Parameter("vswitchId") String vswitchId,
        @CustomType.Parameter("zoneId") String zoneId) {
        this.autoRenewPeriod = autoRenewPeriod;
        this.chargeType = chargeType;
        this.commodityCode = commodityCode;
        this.computeResource = computeResource;
        this.connectionString = connectionString;
        this.createTime = createTime;
        this.dbClusterCategory = dbClusterCategory;
        this.dbClusterId = dbClusterId;
        this.dbClusterNetworkType = dbClusterNetworkType;
        this.dbClusterType = dbClusterType;
        this.dbClusterVersion = dbClusterVersion;
        this.dbNodeClass = dbNodeClass;
        this.dbNodeCount = dbNodeCount;
        this.dbNodeStorage = dbNodeStorage;
        this.description = description;
        this.diskType = diskType;
        this.dtsJobId = dtsJobId;
        this.elasticIoResource = elasticIoResource;
        this.engine = engine;
        this.engineVersion = engineVersion;
        this.executorCount = executorCount;
        this.expireTime = expireTime;
        this.expired = expired;
        this.id = id;
        this.lockMode = lockMode;
        this.lockReason = lockReason;
        this.maintainTime = maintainTime;
        this.mode = mode;
        this.networkType = networkType;
        this.paymentType = paymentType;
        this.port = port;
        this.rdsInstanceId = rdsInstanceId;
        this.regionId = regionId;
        this.renewalStatus = renewalStatus;
        this.resourceGroupId = resourceGroupId;
        this.securityIps = securityIps;
        this.status = status;
        this.storageResource = storageResource;
        this.tags = tags;
        this.vpcCloudInstanceId = vpcCloudInstanceId;
        this.vpcId = vpcId;
        this.vswitchId = vswitchId;
        this.zoneId = zoneId;
    }

    /**
     * @return Auto-renewal period of an cluster, in the unit of the month.
     * 
     */
    public Integer autoRenewPeriod() {
        return this.autoRenewPeriod;
    }
    /**
     * @return The payment type of the resource.
     * 
     */
    public String chargeType() {
        return this.chargeType;
    }
    /**
     * @return The name of the service.
     * 
     */
    public String commodityCode() {
        return this.commodityCode;
    }
    /**
     * @return The specifications of computing resources in elastic mode. The increase of resources can speed up queries. AnalyticDB for MySQL automatically scales computing resources. For more information, see [Specifications](https://www.alibabacloud.com/help/en/doc-detail/144851.htm).
     * 
     */
    public String computeResource() {
        return this.computeResource;
    }
    /**
     * @return The endpoint of the cluster.
     * 
     */
    public String connectionString() {
        return this.connectionString;
    }
    /**
     * @return The CreateTime of the ADB cluster.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The db cluster category.
     * 
     */
    public String dbClusterCategory() {
        return this.dbClusterCategory;
    }
    /**
     * @return The db cluster id.
     * 
     */
    public String dbClusterId() {
        return this.dbClusterId;
    }
    /**
     * @return The db cluster network type.
     * 
     */
    public String dbClusterNetworkType() {
        return this.dbClusterNetworkType;
    }
    /**
     * @return The db cluster type.
     * 
     */
    public String dbClusterType() {
        return this.dbClusterType;
    }
    /**
     * @return The db cluster version.
     * 
     */
    public String dbClusterVersion() {
        return this.dbClusterVersion;
    }
    /**
     * @return The db node class.
     * 
     */
    public String dbNodeClass() {
        return this.dbNodeClass;
    }
    /**
     * @return The db node count.
     * 
     */
    public Integer dbNodeCount() {
        return this.dbNodeCount;
    }
    /**
     * @return The db node storage.
     * 
     */
    public Integer dbNodeStorage() {
        return this.dbNodeStorage;
    }
    /**
     * @return The description of DBCluster.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The type of the disk.
     * 
     */
    public String diskType() {
        return this.diskType;
    }
    /**
     * @return The ID of the data synchronization task in Data Transmission Service (DTS). This parameter is valid only for analytic instances.
     * 
     */
    public String dtsJobId() {
        return this.dtsJobId;
    }
    /**
     * @return The elastic io resource.
     * 
     */
    public Integer elasticIoResource() {
        return this.elasticIoResource;
    }
    /**
     * @return The engine of the database.
     * 
     */
    public String engine() {
        return this.engine;
    }
    /**
     * @return The engine version of the database.
     * 
     */
    public String engineVersion() {
        return this.engineVersion;
    }
    /**
     * @return The number of nodes. The node resources are used for data computing in elastic mode.
     * 
     */
    public String executorCount() {
        return this.executorCount;
    }
    /**
     * @return The time when the cluster expires.
     * 
     */
    public String expireTime() {
        return this.expireTime;
    }
    /**
     * @return Indicates whether the cluster has expired.
     * 
     */
    public String expired() {
        return this.expired;
    }
    /**
     * @return The ID of the DBCluster.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The lock mode of the cluster.
     * 
     */
    public String lockMode() {
        return this.lockMode;
    }
    /**
     * @return The reason why the cluster is locked.
     * 
     */
    public String lockReason() {
        return this.lockReason;
    }
    /**
     * @return The maintenance window of the cluster.
     * 
     */
    public String maintainTime() {
        return this.maintainTime;
    }
    /**
     * @return The lock mode of the cluster.
     * 
     */
    public String mode() {
        return this.mode;
    }
    public String networkType() {
        return this.networkType;
    }
    /**
     * @return The payment type of the resource.
     * 
     */
    public String paymentType() {
        return this.paymentType;
    }
    /**
     * @return The port that is used to access the cluster.
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return The ID of the ApsaraDB RDS instance from which data is synchronized to the cluster. This parameter is valid only for analytic instances.
     * 
     */
    public String rdsInstanceId() {
        return this.rdsInstanceId;
    }
    public String regionId() {
        return this.regionId;
    }
    /**
     * @return The status of renewal.
     * 
     */
    public String renewalStatus() {
        return this.renewalStatus;
    }
    /**
     * @return The ID of the resource group.
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return List of IP addresses allowed to access all databases of an cluster.
     * 
     */
    public List<String> securityIps() {
        return this.securityIps;
    }
    /**
     * @return The status of the resource.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The specifications of storage resources in elastic mode. The resources are used for data read and write operations. The increase of resources can improve the read and write performance of your cluster. For more information, see [Specifications](https://www.alibabacloud.com/help/en/doc-detail/144851.htm).
     * 
     */
    public String storageResource() {
        return this.storageResource;
    }
    /**
     * @return The tag of the resource.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags;
    }
    /**
     * @return The vpc cloud instance id.
     * 
     */
    public String vpcCloudInstanceId() {
        return this.vpcCloudInstanceId;
    }
    /**
     * @return The vpc id.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    /**
     * @return The vswitch id.
     * 
     */
    public String vswitchId() {
        return this.vswitchId;
    }
    /**
     * @return The zone ID  of the resource.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDBClustersCluster defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer autoRenewPeriod;
        private String chargeType;
        private String commodityCode;
        private String computeResource;
        private String connectionString;
        private String createTime;
        private String dbClusterCategory;
        private String dbClusterId;
        private String dbClusterNetworkType;
        private String dbClusterType;
        private String dbClusterVersion;
        private String dbNodeClass;
        private Integer dbNodeCount;
        private Integer dbNodeStorage;
        private String description;
        private String diskType;
        private String dtsJobId;
        private Integer elasticIoResource;
        private String engine;
        private String engineVersion;
        private String executorCount;
        private String expireTime;
        private String expired;
        private String id;
        private String lockMode;
        private String lockReason;
        private String maintainTime;
        private String mode;
        private String networkType;
        private String paymentType;
        private Integer port;
        private String rdsInstanceId;
        private String regionId;
        private String renewalStatus;
        private String resourceGroupId;
        private List<String> securityIps;
        private String status;
        private String storageResource;
        private Map<String,Object> tags;
        private String vpcCloudInstanceId;
        private String vpcId;
        private String vswitchId;
        private String zoneId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDBClustersCluster defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoRenewPeriod = defaults.autoRenewPeriod;
    	      this.chargeType = defaults.chargeType;
    	      this.commodityCode = defaults.commodityCode;
    	      this.computeResource = defaults.computeResource;
    	      this.connectionString = defaults.connectionString;
    	      this.createTime = defaults.createTime;
    	      this.dbClusterCategory = defaults.dbClusterCategory;
    	      this.dbClusterId = defaults.dbClusterId;
    	      this.dbClusterNetworkType = defaults.dbClusterNetworkType;
    	      this.dbClusterType = defaults.dbClusterType;
    	      this.dbClusterVersion = defaults.dbClusterVersion;
    	      this.dbNodeClass = defaults.dbNodeClass;
    	      this.dbNodeCount = defaults.dbNodeCount;
    	      this.dbNodeStorage = defaults.dbNodeStorage;
    	      this.description = defaults.description;
    	      this.diskType = defaults.diskType;
    	      this.dtsJobId = defaults.dtsJobId;
    	      this.elasticIoResource = defaults.elasticIoResource;
    	      this.engine = defaults.engine;
    	      this.engineVersion = defaults.engineVersion;
    	      this.executorCount = defaults.executorCount;
    	      this.expireTime = defaults.expireTime;
    	      this.expired = defaults.expired;
    	      this.id = defaults.id;
    	      this.lockMode = defaults.lockMode;
    	      this.lockReason = defaults.lockReason;
    	      this.maintainTime = defaults.maintainTime;
    	      this.mode = defaults.mode;
    	      this.networkType = defaults.networkType;
    	      this.paymentType = defaults.paymentType;
    	      this.port = defaults.port;
    	      this.rdsInstanceId = defaults.rdsInstanceId;
    	      this.regionId = defaults.regionId;
    	      this.renewalStatus = defaults.renewalStatus;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.securityIps = defaults.securityIps;
    	      this.status = defaults.status;
    	      this.storageResource = defaults.storageResource;
    	      this.tags = defaults.tags;
    	      this.vpcCloudInstanceId = defaults.vpcCloudInstanceId;
    	      this.vpcId = defaults.vpcId;
    	      this.vswitchId = defaults.vswitchId;
    	      this.zoneId = defaults.zoneId;
        }

        public Builder autoRenewPeriod(Integer autoRenewPeriod) {
            this.autoRenewPeriod = Objects.requireNonNull(autoRenewPeriod);
            return this;
        }
        public Builder chargeType(String chargeType) {
            this.chargeType = Objects.requireNonNull(chargeType);
            return this;
        }
        public Builder commodityCode(String commodityCode) {
            this.commodityCode = Objects.requireNonNull(commodityCode);
            return this;
        }
        public Builder computeResource(String computeResource) {
            this.computeResource = Objects.requireNonNull(computeResource);
            return this;
        }
        public Builder connectionString(String connectionString) {
            this.connectionString = Objects.requireNonNull(connectionString);
            return this;
        }
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder dbClusterCategory(String dbClusterCategory) {
            this.dbClusterCategory = Objects.requireNonNull(dbClusterCategory);
            return this;
        }
        public Builder dbClusterId(String dbClusterId) {
            this.dbClusterId = Objects.requireNonNull(dbClusterId);
            return this;
        }
        public Builder dbClusterNetworkType(String dbClusterNetworkType) {
            this.dbClusterNetworkType = Objects.requireNonNull(dbClusterNetworkType);
            return this;
        }
        public Builder dbClusterType(String dbClusterType) {
            this.dbClusterType = Objects.requireNonNull(dbClusterType);
            return this;
        }
        public Builder dbClusterVersion(String dbClusterVersion) {
            this.dbClusterVersion = Objects.requireNonNull(dbClusterVersion);
            return this;
        }
        public Builder dbNodeClass(String dbNodeClass) {
            this.dbNodeClass = Objects.requireNonNull(dbNodeClass);
            return this;
        }
        public Builder dbNodeCount(Integer dbNodeCount) {
            this.dbNodeCount = Objects.requireNonNull(dbNodeCount);
            return this;
        }
        public Builder dbNodeStorage(Integer dbNodeStorage) {
            this.dbNodeStorage = Objects.requireNonNull(dbNodeStorage);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder diskType(String diskType) {
            this.diskType = Objects.requireNonNull(diskType);
            return this;
        }
        public Builder dtsJobId(String dtsJobId) {
            this.dtsJobId = Objects.requireNonNull(dtsJobId);
            return this;
        }
        public Builder elasticIoResource(Integer elasticIoResource) {
            this.elasticIoResource = Objects.requireNonNull(elasticIoResource);
            return this;
        }
        public Builder engine(String engine) {
            this.engine = Objects.requireNonNull(engine);
            return this;
        }
        public Builder engineVersion(String engineVersion) {
            this.engineVersion = Objects.requireNonNull(engineVersion);
            return this;
        }
        public Builder executorCount(String executorCount) {
            this.executorCount = Objects.requireNonNull(executorCount);
            return this;
        }
        public Builder expireTime(String expireTime) {
            this.expireTime = Objects.requireNonNull(expireTime);
            return this;
        }
        public Builder expired(String expired) {
            this.expired = Objects.requireNonNull(expired);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lockMode(String lockMode) {
            this.lockMode = Objects.requireNonNull(lockMode);
            return this;
        }
        public Builder lockReason(String lockReason) {
            this.lockReason = Objects.requireNonNull(lockReason);
            return this;
        }
        public Builder maintainTime(String maintainTime) {
            this.maintainTime = Objects.requireNonNull(maintainTime);
            return this;
        }
        public Builder mode(String mode) {
            this.mode = Objects.requireNonNull(mode);
            return this;
        }
        public Builder networkType(String networkType) {
            this.networkType = Objects.requireNonNull(networkType);
            return this;
        }
        public Builder paymentType(String paymentType) {
            this.paymentType = Objects.requireNonNull(paymentType);
            return this;
        }
        public Builder port(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        public Builder rdsInstanceId(String rdsInstanceId) {
            this.rdsInstanceId = Objects.requireNonNull(rdsInstanceId);
            return this;
        }
        public Builder regionId(String regionId) {
            this.regionId = Objects.requireNonNull(regionId);
            return this;
        }
        public Builder renewalStatus(String renewalStatus) {
            this.renewalStatus = Objects.requireNonNull(renewalStatus);
            return this;
        }
        public Builder resourceGroupId(String resourceGroupId) {
            this.resourceGroupId = Objects.requireNonNull(resourceGroupId);
            return this;
        }
        public Builder securityIps(List<String> securityIps) {
            this.securityIps = Objects.requireNonNull(securityIps);
            return this;
        }
        public Builder securityIps(String... securityIps) {
            return securityIps(List.of(securityIps));
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder storageResource(String storageResource) {
            this.storageResource = Objects.requireNonNull(storageResource);
            return this;
        }
        public Builder tags(Map<String,Object> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder vpcCloudInstanceId(String vpcCloudInstanceId) {
            this.vpcCloudInstanceId = Objects.requireNonNull(vpcCloudInstanceId);
            return this;
        }
        public Builder vpcId(String vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }
        public Builder vswitchId(String vswitchId) {
            this.vswitchId = Objects.requireNonNull(vswitchId);
            return this;
        }
        public Builder zoneId(String zoneId) {
            this.zoneId = Objects.requireNonNull(zoneId);
            return this;
        }        public GetDBClustersCluster build() {
            return new GetDBClustersCluster(autoRenewPeriod, chargeType, commodityCode, computeResource, connectionString, createTime, dbClusterCategory, dbClusterId, dbClusterNetworkType, dbClusterType, dbClusterVersion, dbNodeClass, dbNodeCount, dbNodeStorage, description, diskType, dtsJobId, elasticIoResource, engine, engineVersion, executorCount, expireTime, expired, id, lockMode, lockReason, maintainTime, mode, networkType, paymentType, port, rdsInstanceId, regionId, renewalStatus, resourceGroupId, securityIps, status, storageResource, tags, vpcCloudInstanceId, vpcId, vswitchId, zoneId);
        }
    }
}
