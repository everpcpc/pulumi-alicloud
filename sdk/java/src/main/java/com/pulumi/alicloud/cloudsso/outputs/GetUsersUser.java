// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cloudsso.outputs;

import com.pulumi.alicloud.cloudsso.outputs.GetUsersUserMfaDevice;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetUsersUser {
    /**
     * @return The create time of the user.
     * 
     */
    private final String createTime;
    /**
     * @return The description of user.
     * 
     */
    private final String description;
    /**
     * @return The ID of the Directory.
     * 
     */
    private final String directoryId;
    /**
     * @return The display name of user.
     * 
     */
    private final String displayName;
    /**
     * @return The User&#39;s Contact Email Address.
     * 
     */
    private final String email;
    /**
     * @return The first name of user.
     * 
     */
    private final String firstName;
    /**
     * @return The ID of the User.
     * 
     */
    private final String id;
    /**
     * @return The last name of user.
     * 
     */
    private final String lastName;
    /**
     * @return The List of MFA Device for User.
     * 
     */
    private final List<GetUsersUserMfaDevice> mfaDevices;
    /**
     * @return ProvisionType.
     * 
     */
    private final String provisionType;
    /**
     * @return User status. Valid values: `Enabled` and `Disabled`.
     * 
     */
    private final String status;
    /**
     * @return The User ID of the group.
     * 
     */
    private final String userId;
    /**
     * @return The name of user.
     * 
     */
    private final String userName;

    @CustomType.Constructor
    private GetUsersUser(
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("directoryId") String directoryId,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("email") String email,
        @CustomType.Parameter("firstName") String firstName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lastName") String lastName,
        @CustomType.Parameter("mfaDevices") List<GetUsersUserMfaDevice> mfaDevices,
        @CustomType.Parameter("provisionType") String provisionType,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("userId") String userId,
        @CustomType.Parameter("userName") String userName) {
        this.createTime = createTime;
        this.description = description;
        this.directoryId = directoryId;
        this.displayName = displayName;
        this.email = email;
        this.firstName = firstName;
        this.id = id;
        this.lastName = lastName;
        this.mfaDevices = mfaDevices;
        this.provisionType = provisionType;
        this.status = status;
        this.userId = userId;
        this.userName = userName;
    }

    /**
     * @return The create time of the user.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The description of user.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The ID of the Directory.
     * 
     */
    public String directoryId() {
        return this.directoryId;
    }
    /**
     * @return The display name of user.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The User&#39;s Contact Email Address.
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return The first name of user.
     * 
     */
    public String firstName() {
        return this.firstName;
    }
    /**
     * @return The ID of the User.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The last name of user.
     * 
     */
    public String lastName() {
        return this.lastName;
    }
    /**
     * @return The List of MFA Device for User.
     * 
     */
    public List<GetUsersUserMfaDevice> mfaDevices() {
        return this.mfaDevices;
    }
    /**
     * @return ProvisionType.
     * 
     */
    public String provisionType() {
        return this.provisionType;
    }
    /**
     * @return User status. Valid values: `Enabled` and `Disabled`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The User ID of the group.
     * 
     */
    public String userId() {
        return this.userId;
    }
    /**
     * @return The name of user.
     * 
     */
    public String userName() {
        return this.userName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUsersUser defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String description;
        private String directoryId;
        private String displayName;
        private String email;
        private String firstName;
        private String id;
        private String lastName;
        private List<GetUsersUserMfaDevice> mfaDevices;
        private String provisionType;
        private String status;
        private String userId;
        private String userName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetUsersUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.directoryId = defaults.directoryId;
    	      this.displayName = defaults.displayName;
    	      this.email = defaults.email;
    	      this.firstName = defaults.firstName;
    	      this.id = defaults.id;
    	      this.lastName = defaults.lastName;
    	      this.mfaDevices = defaults.mfaDevices;
    	      this.provisionType = defaults.provisionType;
    	      this.status = defaults.status;
    	      this.userId = defaults.userId;
    	      this.userName = defaults.userName;
        }

        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder directoryId(String directoryId) {
            this.directoryId = Objects.requireNonNull(directoryId);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder email(String email) {
            this.email = Objects.requireNonNull(email);
            return this;
        }
        public Builder firstName(String firstName) {
            this.firstName = Objects.requireNonNull(firstName);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lastName(String lastName) {
            this.lastName = Objects.requireNonNull(lastName);
            return this;
        }
        public Builder mfaDevices(List<GetUsersUserMfaDevice> mfaDevices) {
            this.mfaDevices = Objects.requireNonNull(mfaDevices);
            return this;
        }
        public Builder mfaDevices(GetUsersUserMfaDevice... mfaDevices) {
            return mfaDevices(List.of(mfaDevices));
        }
        public Builder provisionType(String provisionType) {
            this.provisionType = Objects.requireNonNull(provisionType);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder userId(String userId) {
            this.userId = Objects.requireNonNull(userId);
            return this;
        }
        public Builder userName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }        public GetUsersUser build() {
            return new GetUsersUser(createTime, description, directoryId, displayName, email, firstName, id, lastName, mfaDevices, provisionType, status, userId, userName);
        }
    }
}
