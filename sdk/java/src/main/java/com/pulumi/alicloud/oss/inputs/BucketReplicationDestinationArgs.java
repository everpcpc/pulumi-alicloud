// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketReplicationDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketReplicationDestinationArgs Empty = new BucketReplicationDestinationArgs();

    /**
     * The destination bucket to which the data is replicated.
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return The destination bucket to which the data is replicated.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    @Import(name="location", required=true)
    private Output<String> location;

    public Output<String> location() {
        return this.location;
    }

    /**
     * The link used to transfer data in data replication.. Can be `internal` or `oss_acc`. Defaults to `internal`.
     * 
     */
    @Import(name="transferType")
    private @Nullable Output<String> transferType;

    /**
     * @return The link used to transfer data in data replication.. Can be `internal` or `oss_acc`. Defaults to `internal`.
     * 
     */
    public Optional<Output<String>> transferType() {
        return Optional.ofNullable(this.transferType);
    }

    private BucketReplicationDestinationArgs() {}

    private BucketReplicationDestinationArgs(BucketReplicationDestinationArgs $) {
        this.bucket = $.bucket;
        this.location = $.location;
        this.transferType = $.transferType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketReplicationDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketReplicationDestinationArgs $;

        public Builder() {
            $ = new BucketReplicationDestinationArgs();
        }

        public Builder(BucketReplicationDestinationArgs defaults) {
            $ = new BucketReplicationDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket The destination bucket to which the data is replicated.
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket The destination bucket to which the data is replicated.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param transferType The link used to transfer data in data replication.. Can be `internal` or `oss_acc`. Defaults to `internal`.
         * 
         * @return builder
         * 
         */
        public Builder transferType(@Nullable Output<String> transferType) {
            $.transferType = transferType;
            return this;
        }

        /**
         * @param transferType The link used to transfer data in data replication.. Can be `internal` or `oss_acc`. Defaults to `internal`.
         * 
         * @return builder
         * 
         */
        public Builder transferType(String transferType) {
            return transferType(Output.of(transferType));
        }

        public BucketReplicationDestinationArgs build() {
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            $.location = Objects.requireNonNull($.location, "expected parameter 'location' to be non-null");
            return $;
        }
    }

}
