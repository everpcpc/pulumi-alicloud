// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.mongodb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetShardingNetworkPublicAddressesAddress {
    /**
     * @return The db instance id.
     * 
     */
    private final String dbInstanceId;
    /**
     * @return The remaining duration of the classic network address. Unit: `seconds`.
     * 
     */
    private final String expiredTime;
    /**
     * @return The IP address of the instance.
     * 
     */
    private final String ipAddress;
    /**
     * @return The endpoint of the instance.
     * 
     */
    private final String networkAddress;
    /**
     * @return The network type.
     * 
     */
    private final String networkType;
    /**
     * @return The ID of the `mongos`, `shard`, or `Configserver` node in the sharded cluster instance.
     * 
     */
    private final String nodeId;
    /**
     * @return The type of the node.
     * 
     */
    private final String nodeType;
    /**
     * @return The port number.
     * 
     */
    private final String port;
    /**
     * @return The role of the node.
     * 
     */
    private final String role;
    /**
     * @return The ID of the VPC.
     * 
     */
    private final String vpcId;
    /**
     * @return The vSwitch ID of the VPC.
     * 
     */
    private final String vswitchId;

    @CustomType.Constructor
    private GetShardingNetworkPublicAddressesAddress(
        @CustomType.Parameter("dbInstanceId") String dbInstanceId,
        @CustomType.Parameter("expiredTime") String expiredTime,
        @CustomType.Parameter("ipAddress") String ipAddress,
        @CustomType.Parameter("networkAddress") String networkAddress,
        @CustomType.Parameter("networkType") String networkType,
        @CustomType.Parameter("nodeId") String nodeId,
        @CustomType.Parameter("nodeType") String nodeType,
        @CustomType.Parameter("port") String port,
        @CustomType.Parameter("role") String role,
        @CustomType.Parameter("vpcId") String vpcId,
        @CustomType.Parameter("vswitchId") String vswitchId) {
        this.dbInstanceId = dbInstanceId;
        this.expiredTime = expiredTime;
        this.ipAddress = ipAddress;
        this.networkAddress = networkAddress;
        this.networkType = networkType;
        this.nodeId = nodeId;
        this.nodeType = nodeType;
        this.port = port;
        this.role = role;
        this.vpcId = vpcId;
        this.vswitchId = vswitchId;
    }

    /**
     * @return The db instance id.
     * 
     */
    public String dbInstanceId() {
        return this.dbInstanceId;
    }
    /**
     * @return The remaining duration of the classic network address. Unit: `seconds`.
     * 
     */
    public String expiredTime() {
        return this.expiredTime;
    }
    /**
     * @return The IP address of the instance.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return The endpoint of the instance.
     * 
     */
    public String networkAddress() {
        return this.networkAddress;
    }
    /**
     * @return The network type.
     * 
     */
    public String networkType() {
        return this.networkType;
    }
    /**
     * @return The ID of the `mongos`, `shard`, or `Configserver` node in the sharded cluster instance.
     * 
     */
    public String nodeId() {
        return this.nodeId;
    }
    /**
     * @return The type of the node.
     * 
     */
    public String nodeType() {
        return this.nodeType;
    }
    /**
     * @return The port number.
     * 
     */
    public String port() {
        return this.port;
    }
    /**
     * @return The role of the node.
     * 
     */
    public String role() {
        return this.role;
    }
    /**
     * @return The ID of the VPC.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    /**
     * @return The vSwitch ID of the VPC.
     * 
     */
    public String vswitchId() {
        return this.vswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetShardingNetworkPublicAddressesAddress defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String dbInstanceId;
        private String expiredTime;
        private String ipAddress;
        private String networkAddress;
        private String networkType;
        private String nodeId;
        private String nodeType;
        private String port;
        private String role;
        private String vpcId;
        private String vswitchId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetShardingNetworkPublicAddressesAddress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbInstanceId = defaults.dbInstanceId;
    	      this.expiredTime = defaults.expiredTime;
    	      this.ipAddress = defaults.ipAddress;
    	      this.networkAddress = defaults.networkAddress;
    	      this.networkType = defaults.networkType;
    	      this.nodeId = defaults.nodeId;
    	      this.nodeType = defaults.nodeType;
    	      this.port = defaults.port;
    	      this.role = defaults.role;
    	      this.vpcId = defaults.vpcId;
    	      this.vswitchId = defaults.vswitchId;
        }

        public Builder dbInstanceId(String dbInstanceId) {
            this.dbInstanceId = Objects.requireNonNull(dbInstanceId);
            return this;
        }
        public Builder expiredTime(String expiredTime) {
            this.expiredTime = Objects.requireNonNull(expiredTime);
            return this;
        }
        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }
        public Builder networkAddress(String networkAddress) {
            this.networkAddress = Objects.requireNonNull(networkAddress);
            return this;
        }
        public Builder networkType(String networkType) {
            this.networkType = Objects.requireNonNull(networkType);
            return this;
        }
        public Builder nodeId(String nodeId) {
            this.nodeId = Objects.requireNonNull(nodeId);
            return this;
        }
        public Builder nodeType(String nodeType) {
            this.nodeType = Objects.requireNonNull(nodeType);
            return this;
        }
        public Builder port(String port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        public Builder role(String role) {
            this.role = Objects.requireNonNull(role);
            return this;
        }
        public Builder vpcId(String vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }
        public Builder vswitchId(String vswitchId) {
            this.vswitchId = Objects.requireNonNull(vswitchId);
            return this;
        }        public GetShardingNetworkPublicAddressesAddress build() {
            return new GetShardingNetworkPublicAddressesAddress(dbInstanceId, expiredTime, ipAddress, networkAddress, networkType, nodeId, nodeType, port, role, vpcId, vswitchId);
        }
    }
}
