// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetHoneypotNodesNode {
    /**
     * @return Whether to allow honeypot access to the external network. Value:-**true**: Allow-**false**: Disabled
     * 
     */
    private final Boolean allowHoneypotAccessInternet;
    /**
     * @return Number of probes available.
     * 
     */
    private final Integer availableProbeNum;
    private final String createTime;
    /**
     * @return The ID of the Honeypot management node.
     * 
     */
    private final String id;
    /**
     * @return Honeypot management node id.
     * 
     */
    private final String nodeId;
    /**
     * @return The name of the management node.
     * 
     */
    private final String nodeName;
    /**
     * @return Release the collection of network segments.
     * 
     */
    private final List<String> securityGroupProbeIpLists;
    private final Integer status;

    @CustomType.Constructor
    private GetHoneypotNodesNode(
        @CustomType.Parameter("allowHoneypotAccessInternet") Boolean allowHoneypotAccessInternet,
        @CustomType.Parameter("availableProbeNum") Integer availableProbeNum,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("nodeId") String nodeId,
        @CustomType.Parameter("nodeName") String nodeName,
        @CustomType.Parameter("securityGroupProbeIpLists") List<String> securityGroupProbeIpLists,
        @CustomType.Parameter("status") Integer status) {
        this.allowHoneypotAccessInternet = allowHoneypotAccessInternet;
        this.availableProbeNum = availableProbeNum;
        this.createTime = createTime;
        this.id = id;
        this.nodeId = nodeId;
        this.nodeName = nodeName;
        this.securityGroupProbeIpLists = securityGroupProbeIpLists;
        this.status = status;
    }

    /**
     * @return Whether to allow honeypot access to the external network. Value:-**true**: Allow-**false**: Disabled
     * 
     */
    public Boolean allowHoneypotAccessInternet() {
        return this.allowHoneypotAccessInternet;
    }
    /**
     * @return Number of probes available.
     * 
     */
    public Integer availableProbeNum() {
        return this.availableProbeNum;
    }
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The ID of the Honeypot management node.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Honeypot management node id.
     * 
     */
    public String nodeId() {
        return this.nodeId;
    }
    /**
     * @return The name of the management node.
     * 
     */
    public String nodeName() {
        return this.nodeName;
    }
    /**
     * @return Release the collection of network segments.
     * 
     */
    public List<String> securityGroupProbeIpLists() {
        return this.securityGroupProbeIpLists;
    }
    public Integer status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHoneypotNodesNode defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean allowHoneypotAccessInternet;
        private Integer availableProbeNum;
        private String createTime;
        private String id;
        private String nodeId;
        private String nodeName;
        private List<String> securityGroupProbeIpLists;
        private Integer status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetHoneypotNodesNode defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowHoneypotAccessInternet = defaults.allowHoneypotAccessInternet;
    	      this.availableProbeNum = defaults.availableProbeNum;
    	      this.createTime = defaults.createTime;
    	      this.id = defaults.id;
    	      this.nodeId = defaults.nodeId;
    	      this.nodeName = defaults.nodeName;
    	      this.securityGroupProbeIpLists = defaults.securityGroupProbeIpLists;
    	      this.status = defaults.status;
        }

        public Builder allowHoneypotAccessInternet(Boolean allowHoneypotAccessInternet) {
            this.allowHoneypotAccessInternet = Objects.requireNonNull(allowHoneypotAccessInternet);
            return this;
        }
        public Builder availableProbeNum(Integer availableProbeNum) {
            this.availableProbeNum = Objects.requireNonNull(availableProbeNum);
            return this;
        }
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder nodeId(String nodeId) {
            this.nodeId = Objects.requireNonNull(nodeId);
            return this;
        }
        public Builder nodeName(String nodeName) {
            this.nodeName = Objects.requireNonNull(nodeName);
            return this;
        }
        public Builder securityGroupProbeIpLists(List<String> securityGroupProbeIpLists) {
            this.securityGroupProbeIpLists = Objects.requireNonNull(securityGroupProbeIpLists);
            return this;
        }
        public Builder securityGroupProbeIpLists(String... securityGroupProbeIpLists) {
            return securityGroupProbeIpLists(List.of(securityGroupProbeIpLists));
        }
        public Builder status(Integer status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }        public GetHoneypotNodesNode build() {
            return new GetHoneypotNodesNode(allowHoneypotAccessInternet, availableProbeNum, createTime, id, nodeId, nodeName, securityGroupProbeIpLists, status);
        }
    }
}
