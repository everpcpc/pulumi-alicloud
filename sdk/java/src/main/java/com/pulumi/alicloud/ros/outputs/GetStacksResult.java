// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ros.outputs;

import com.pulumi.alicloud.ros.outputs.GetStacksStack;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetStacksResult {
    private final @Nullable Boolean enableDetails;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<String> ids;
    private final @Nullable String nameRegex;
    private final List<String> names;
    private final @Nullable String outputFile;
    private final @Nullable String parentStackId;
    private final @Nullable Boolean showNestedStack;
    private final @Nullable String stackName;
    private final List<GetStacksStack> stacks;
    private final @Nullable String status;
    private final @Nullable Map<String,Object> tags;

    @CustomType.Constructor
    private GetStacksResult(
        @CustomType.Parameter("enableDetails") @Nullable Boolean enableDetails,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ids") List<String> ids,
        @CustomType.Parameter("nameRegex") @Nullable String nameRegex,
        @CustomType.Parameter("names") List<String> names,
        @CustomType.Parameter("outputFile") @Nullable String outputFile,
        @CustomType.Parameter("parentStackId") @Nullable String parentStackId,
        @CustomType.Parameter("showNestedStack") @Nullable Boolean showNestedStack,
        @CustomType.Parameter("stackName") @Nullable String stackName,
        @CustomType.Parameter("stacks") List<GetStacksStack> stacks,
        @CustomType.Parameter("status") @Nullable String status,
        @CustomType.Parameter("tags") @Nullable Map<String,Object> tags) {
        this.enableDetails = enableDetails;
        this.id = id;
        this.ids = ids;
        this.nameRegex = nameRegex;
        this.names = names;
        this.outputFile = outputFile;
        this.parentStackId = parentStackId;
        this.showNestedStack = showNestedStack;
        this.stackName = stackName;
        this.stacks = stacks;
        this.status = status;
        this.tags = tags;
    }

    public Optional<Boolean> enableDetails() {
        return Optional.ofNullable(this.enableDetails);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Optional<String> parentStackId() {
        return Optional.ofNullable(this.parentStackId);
    }
    public Optional<Boolean> showNestedStack() {
        return Optional.ofNullable(this.showNestedStack);
    }
    public Optional<String> stackName() {
        return Optional.ofNullable(this.stackName);
    }
    public List<GetStacksStack> stacks() {
        return this.stacks;
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    public Map<String,Object> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStacksResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean enableDetails;
        private String id;
        private List<String> ids;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        private @Nullable String parentStackId;
        private @Nullable Boolean showNestedStack;
        private @Nullable String stackName;
        private List<GetStacksStack> stacks;
        private @Nullable String status;
        private @Nullable Map<String,Object> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetStacksResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableDetails = defaults.enableDetails;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
    	      this.parentStackId = defaults.parentStackId;
    	      this.showNestedStack = defaults.showNestedStack;
    	      this.stackName = defaults.stackName;
    	      this.stacks = defaults.stacks;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
        }

        public Builder enableDetails(@Nullable Boolean enableDetails) {
            this.enableDetails = enableDetails;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        public Builder names(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        public Builder parentStackId(@Nullable String parentStackId) {
            this.parentStackId = parentStackId;
            return this;
        }
        public Builder showNestedStack(@Nullable Boolean showNestedStack) {
            this.showNestedStack = showNestedStack;
            return this;
        }
        public Builder stackName(@Nullable String stackName) {
            this.stackName = stackName;
            return this;
        }
        public Builder stacks(List<GetStacksStack> stacks) {
            this.stacks = Objects.requireNonNull(stacks);
            return this;
        }
        public Builder stacks(GetStacksStack... stacks) {
            return stacks(List.of(stacks));
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public Builder tags(@Nullable Map<String,Object> tags) {
            this.tags = tags;
            return this;
        }        public GetStacksResult build() {
            return new GetStacksResult(enableDetails, id, ids, nameRegex, names, outputFile, parentStackId, showNestedStack, stackName, stacks, status, tags);
        }
    }
}
