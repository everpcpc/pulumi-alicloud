// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oos.outputs;

import com.pulumi.alicloud.oos.outputs.GetExecutionsExecution;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExecutionsResult {
    private final @Nullable String category;
    private final @Nullable String endDate;
    private final @Nullable String endDateAfter;
    private final @Nullable String executedBy;
    /**
     * @return A list of OOS Executions. Each element contains the following attributes:
     * 
     */
    private final List<GetExecutionsExecution> executions;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return A list of OOS Execution ids.
     * 
     */
    private final List<String> ids;
    private final @Nullable Boolean includeChildExecution;
    private final @Nullable String mode;
    private final @Nullable String outputFile;
    private final @Nullable String parentExecutionId;
    private final @Nullable String ramRole;
    private final @Nullable String sortField;
    private final @Nullable String sortOrder;
    private final @Nullable String startDateAfter;
    private final @Nullable String startDateBefore;
    private final @Nullable String status;
    private final @Nullable Map<String,Object> tags;
    private final @Nullable String templateName;

    @CustomType.Constructor
    private GetExecutionsResult(
        @CustomType.Parameter("category") @Nullable String category,
        @CustomType.Parameter("endDate") @Nullable String endDate,
        @CustomType.Parameter("endDateAfter") @Nullable String endDateAfter,
        @CustomType.Parameter("executedBy") @Nullable String executedBy,
        @CustomType.Parameter("executions") List<GetExecutionsExecution> executions,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ids") List<String> ids,
        @CustomType.Parameter("includeChildExecution") @Nullable Boolean includeChildExecution,
        @CustomType.Parameter("mode") @Nullable String mode,
        @CustomType.Parameter("outputFile") @Nullable String outputFile,
        @CustomType.Parameter("parentExecutionId") @Nullable String parentExecutionId,
        @CustomType.Parameter("ramRole") @Nullable String ramRole,
        @CustomType.Parameter("sortField") @Nullable String sortField,
        @CustomType.Parameter("sortOrder") @Nullable String sortOrder,
        @CustomType.Parameter("startDateAfter") @Nullable String startDateAfter,
        @CustomType.Parameter("startDateBefore") @Nullable String startDateBefore,
        @CustomType.Parameter("status") @Nullable String status,
        @CustomType.Parameter("tags") @Nullable Map<String,Object> tags,
        @CustomType.Parameter("templateName") @Nullable String templateName) {
        this.category = category;
        this.endDate = endDate;
        this.endDateAfter = endDateAfter;
        this.executedBy = executedBy;
        this.executions = executions;
        this.id = id;
        this.ids = ids;
        this.includeChildExecution = includeChildExecution;
        this.mode = mode;
        this.outputFile = outputFile;
        this.parentExecutionId = parentExecutionId;
        this.ramRole = ramRole;
        this.sortField = sortField;
        this.sortOrder = sortOrder;
        this.startDateAfter = startDateAfter;
        this.startDateBefore = startDateBefore;
        this.status = status;
        this.tags = tags;
        this.templateName = templateName;
    }

    public Optional<String> category() {
        return Optional.ofNullable(this.category);
    }
    public Optional<String> endDate() {
        return Optional.ofNullable(this.endDate);
    }
    public Optional<String> endDateAfter() {
        return Optional.ofNullable(this.endDateAfter);
    }
    public Optional<String> executedBy() {
        return Optional.ofNullable(this.executedBy);
    }
    /**
     * @return A list of OOS Executions. Each element contains the following attributes:
     * 
     */
    public List<GetExecutionsExecution> executions() {
        return this.executions;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of OOS Execution ids.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    public Optional<Boolean> includeChildExecution() {
        return Optional.ofNullable(this.includeChildExecution);
    }
    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Optional<String> parentExecutionId() {
        return Optional.ofNullable(this.parentExecutionId);
    }
    public Optional<String> ramRole() {
        return Optional.ofNullable(this.ramRole);
    }
    public Optional<String> sortField() {
        return Optional.ofNullable(this.sortField);
    }
    public Optional<String> sortOrder() {
        return Optional.ofNullable(this.sortOrder);
    }
    public Optional<String> startDateAfter() {
        return Optional.ofNullable(this.startDateAfter);
    }
    public Optional<String> startDateBefore() {
        return Optional.ofNullable(this.startDateBefore);
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    public Map<String,Object> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<String> templateName() {
        return Optional.ofNullable(this.templateName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExecutionsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String category;
        private @Nullable String endDate;
        private @Nullable String endDateAfter;
        private @Nullable String executedBy;
        private List<GetExecutionsExecution> executions;
        private String id;
        private List<String> ids;
        private @Nullable Boolean includeChildExecution;
        private @Nullable String mode;
        private @Nullable String outputFile;
        private @Nullable String parentExecutionId;
        private @Nullable String ramRole;
        private @Nullable String sortField;
        private @Nullable String sortOrder;
        private @Nullable String startDateAfter;
        private @Nullable String startDateBefore;
        private @Nullable String status;
        private @Nullable Map<String,Object> tags;
        private @Nullable String templateName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetExecutionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
    	      this.endDate = defaults.endDate;
    	      this.endDateAfter = defaults.endDateAfter;
    	      this.executedBy = defaults.executedBy;
    	      this.executions = defaults.executions;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.includeChildExecution = defaults.includeChildExecution;
    	      this.mode = defaults.mode;
    	      this.outputFile = defaults.outputFile;
    	      this.parentExecutionId = defaults.parentExecutionId;
    	      this.ramRole = defaults.ramRole;
    	      this.sortField = defaults.sortField;
    	      this.sortOrder = defaults.sortOrder;
    	      this.startDateAfter = defaults.startDateAfter;
    	      this.startDateBefore = defaults.startDateBefore;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.templateName = defaults.templateName;
        }

        public Builder category(@Nullable String category) {
            this.category = category;
            return this;
        }
        public Builder endDate(@Nullable String endDate) {
            this.endDate = endDate;
            return this;
        }
        public Builder endDateAfter(@Nullable String endDateAfter) {
            this.endDateAfter = endDateAfter;
            return this;
        }
        public Builder executedBy(@Nullable String executedBy) {
            this.executedBy = executedBy;
            return this;
        }
        public Builder executions(List<GetExecutionsExecution> executions) {
            this.executions = Objects.requireNonNull(executions);
            return this;
        }
        public Builder executions(GetExecutionsExecution... executions) {
            return executions(List.of(executions));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public Builder includeChildExecution(@Nullable Boolean includeChildExecution) {
            this.includeChildExecution = includeChildExecution;
            return this;
        }
        public Builder mode(@Nullable String mode) {
            this.mode = mode;
            return this;
        }
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        public Builder parentExecutionId(@Nullable String parentExecutionId) {
            this.parentExecutionId = parentExecutionId;
            return this;
        }
        public Builder ramRole(@Nullable String ramRole) {
            this.ramRole = ramRole;
            return this;
        }
        public Builder sortField(@Nullable String sortField) {
            this.sortField = sortField;
            return this;
        }
        public Builder sortOrder(@Nullable String sortOrder) {
            this.sortOrder = sortOrder;
            return this;
        }
        public Builder startDateAfter(@Nullable String startDateAfter) {
            this.startDateAfter = startDateAfter;
            return this;
        }
        public Builder startDateBefore(@Nullable String startDateBefore) {
            this.startDateBefore = startDateBefore;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public Builder tags(@Nullable Map<String,Object> tags) {
            this.tags = tags;
            return this;
        }
        public Builder templateName(@Nullable String templateName) {
            this.templateName = templateName;
            return this;
        }        public GetExecutionsResult build() {
            return new GetExecutionsResult(category, endDate, endDateAfter, executedBy, executions, id, ids, includeChildExecution, mode, outputFile, parentExecutionId, ramRole, sortField, sortOrder, startDateAfter, startDateBefore, status, tags, templateName);
        }
    }
}
