// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ros.outputs;

import com.pulumi.alicloud.ros.outputs.GetTemplatesTemplate;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTemplatesResult {
    private final @Nullable Boolean enableDetails;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<String> ids;
    private final @Nullable String nameRegex;
    private final List<String> names;
    private final @Nullable String outputFile;
    private final @Nullable String shareType;
    private final @Nullable Map<String,Object> tags;
    private final @Nullable String templateName;
    private final List<GetTemplatesTemplate> templates;

    @CustomType.Constructor
    private GetTemplatesResult(
        @CustomType.Parameter("enableDetails") @Nullable Boolean enableDetails,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ids") List<String> ids,
        @CustomType.Parameter("nameRegex") @Nullable String nameRegex,
        @CustomType.Parameter("names") List<String> names,
        @CustomType.Parameter("outputFile") @Nullable String outputFile,
        @CustomType.Parameter("shareType") @Nullable String shareType,
        @CustomType.Parameter("tags") @Nullable Map<String,Object> tags,
        @CustomType.Parameter("templateName") @Nullable String templateName,
        @CustomType.Parameter("templates") List<GetTemplatesTemplate> templates) {
        this.enableDetails = enableDetails;
        this.id = id;
        this.ids = ids;
        this.nameRegex = nameRegex;
        this.names = names;
        this.outputFile = outputFile;
        this.shareType = shareType;
        this.tags = tags;
        this.templateName = templateName;
        this.templates = templates;
    }

    public Optional<Boolean> enableDetails() {
        return Optional.ofNullable(this.enableDetails);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Optional<String> shareType() {
        return Optional.ofNullable(this.shareType);
    }
    public Map<String,Object> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<String> templateName() {
        return Optional.ofNullable(this.templateName);
    }
    public List<GetTemplatesTemplate> templates() {
        return this.templates;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTemplatesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean enableDetails;
        private String id;
        private List<String> ids;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        private @Nullable String shareType;
        private @Nullable Map<String,Object> tags;
        private @Nullable String templateName;
        private List<GetTemplatesTemplate> templates;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTemplatesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableDetails = defaults.enableDetails;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
    	      this.shareType = defaults.shareType;
    	      this.tags = defaults.tags;
    	      this.templateName = defaults.templateName;
    	      this.templates = defaults.templates;
        }

        public Builder enableDetails(@Nullable Boolean enableDetails) {
            this.enableDetails = enableDetails;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        public Builder names(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        public Builder shareType(@Nullable String shareType) {
            this.shareType = shareType;
            return this;
        }
        public Builder tags(@Nullable Map<String,Object> tags) {
            this.tags = tags;
            return this;
        }
        public Builder templateName(@Nullable String templateName) {
            this.templateName = templateName;
            return this;
        }
        public Builder templates(List<GetTemplatesTemplate> templates) {
            this.templates = Objects.requireNonNull(templates);
            return this;
        }
        public Builder templates(GetTemplatesTemplate... templates) {
            return templates(List.of(templates));
        }        public GetTemplatesResult build() {
            return new GetTemplatesResult(enableDetails, id, ids, nameRegex, names, outputFile, shareType, tags, templateName, templates);
        }
    }
}
