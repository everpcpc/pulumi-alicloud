// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.databasefilesystem.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAutoSnapShotPoliciesAutoSnapShotPolicy {
    /**
     * @return The number of database file systems set by the automatic snapshot policy.
     * 
     */
    private final Integer appliedDbfsNumber;
    /**
     * @return The creation time of the resource
     * 
     */
    private final String createTime;
    /**
     * @return The ID of the policy.
     * 
     */
    private final String id;
    /**
     * @return Last modification time of automatic snapshot policy
     * 
     */
    private final String lastModified;
    /**
     * @return Automatic snapshot policy ID
     * 
     */
    private final String policyId;
    /**
     * @return Automatic snapshot policy name
     * 
     */
    private final String policyName;
    /**
     * @return A collection of automatic snapshots performed on several days of the week.
     * 
     */
    private final List<String> repeatWeekdays;
    /**
     * @return Automatic snapshot retention days
     * 
     */
    private final Integer retentionDays;
    /**
     * @return Automatic snapshot policy status
     * 
     */
    private final String status;
    /**
     * @return Automatic snapshot policy status details
     * 
     */
    private final String statusDetail;
    /**
     * @return The set of times at which the snapshot is taken on the day the automatic snapshot is executed.
     * 
     */
    private final List<String> timePoints;

    @CustomType.Constructor
    private GetAutoSnapShotPoliciesAutoSnapShotPolicy(
        @CustomType.Parameter("appliedDbfsNumber") Integer appliedDbfsNumber,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lastModified") String lastModified,
        @CustomType.Parameter("policyId") String policyId,
        @CustomType.Parameter("policyName") String policyName,
        @CustomType.Parameter("repeatWeekdays") List<String> repeatWeekdays,
        @CustomType.Parameter("retentionDays") Integer retentionDays,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("statusDetail") String statusDetail,
        @CustomType.Parameter("timePoints") List<String> timePoints) {
        this.appliedDbfsNumber = appliedDbfsNumber;
        this.createTime = createTime;
        this.id = id;
        this.lastModified = lastModified;
        this.policyId = policyId;
        this.policyName = policyName;
        this.repeatWeekdays = repeatWeekdays;
        this.retentionDays = retentionDays;
        this.status = status;
        this.statusDetail = statusDetail;
        this.timePoints = timePoints;
    }

    /**
     * @return The number of database file systems set by the automatic snapshot policy.
     * 
     */
    public Integer appliedDbfsNumber() {
        return this.appliedDbfsNumber;
    }
    /**
     * @return The creation time of the resource
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The ID of the policy.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Last modification time of automatic snapshot policy
     * 
     */
    public String lastModified() {
        return this.lastModified;
    }
    /**
     * @return Automatic snapshot policy ID
     * 
     */
    public String policyId() {
        return this.policyId;
    }
    /**
     * @return Automatic snapshot policy name
     * 
     */
    public String policyName() {
        return this.policyName;
    }
    /**
     * @return A collection of automatic snapshots performed on several days of the week.
     * 
     */
    public List<String> repeatWeekdays() {
        return this.repeatWeekdays;
    }
    /**
     * @return Automatic snapshot retention days
     * 
     */
    public Integer retentionDays() {
        return this.retentionDays;
    }
    /**
     * @return Automatic snapshot policy status
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Automatic snapshot policy status details
     * 
     */
    public String statusDetail() {
        return this.statusDetail;
    }
    /**
     * @return The set of times at which the snapshot is taken on the day the automatic snapshot is executed.
     * 
     */
    public List<String> timePoints() {
        return this.timePoints;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutoSnapShotPoliciesAutoSnapShotPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer appliedDbfsNumber;
        private String createTime;
        private String id;
        private String lastModified;
        private String policyId;
        private String policyName;
        private List<String> repeatWeekdays;
        private Integer retentionDays;
        private String status;
        private String statusDetail;
        private List<String> timePoints;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAutoSnapShotPoliciesAutoSnapShotPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appliedDbfsNumber = defaults.appliedDbfsNumber;
    	      this.createTime = defaults.createTime;
    	      this.id = defaults.id;
    	      this.lastModified = defaults.lastModified;
    	      this.policyId = defaults.policyId;
    	      this.policyName = defaults.policyName;
    	      this.repeatWeekdays = defaults.repeatWeekdays;
    	      this.retentionDays = defaults.retentionDays;
    	      this.status = defaults.status;
    	      this.statusDetail = defaults.statusDetail;
    	      this.timePoints = defaults.timePoints;
        }

        public Builder appliedDbfsNumber(Integer appliedDbfsNumber) {
            this.appliedDbfsNumber = Objects.requireNonNull(appliedDbfsNumber);
            return this;
        }
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lastModified(String lastModified) {
            this.lastModified = Objects.requireNonNull(lastModified);
            return this;
        }
        public Builder policyId(String policyId) {
            this.policyId = Objects.requireNonNull(policyId);
            return this;
        }
        public Builder policyName(String policyName) {
            this.policyName = Objects.requireNonNull(policyName);
            return this;
        }
        public Builder repeatWeekdays(List<String> repeatWeekdays) {
            this.repeatWeekdays = Objects.requireNonNull(repeatWeekdays);
            return this;
        }
        public Builder repeatWeekdays(String... repeatWeekdays) {
            return repeatWeekdays(List.of(repeatWeekdays));
        }
        public Builder retentionDays(Integer retentionDays) {
            this.retentionDays = Objects.requireNonNull(retentionDays);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder statusDetail(String statusDetail) {
            this.statusDetail = Objects.requireNonNull(statusDetail);
            return this;
        }
        public Builder timePoints(List<String> timePoints) {
            this.timePoints = Objects.requireNonNull(timePoints);
            return this;
        }
        public Builder timePoints(String... timePoints) {
            return timePoints(List.of(timePoints));
        }        public GetAutoSnapShotPoliciesAutoSnapShotPolicy build() {
            return new GetAutoSnapShotPoliciesAutoSnapShotPolicy(appliedDbfsNumber, createTime, id, lastModified, policyId, policyName, repeatWeekdays, retentionDays, status, statusDetail, timePoints);
        }
    }
}
