// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.outputs;

import com.pulumi.alicloud.ecs.outputs.GetElasticityAssurancesAssuranceAllocatedResource;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetElasticityAssurancesAssurance {
    /**
     * @return Details of resource allocation.
     * 
     */
    private final List<GetElasticityAssurancesAssuranceAllocatedResource> allocatedResources;
    /**
     * @return Description of flexible guarantee service.
     * 
     */
    private final String description;
    /**
     * @return The first ID of the resource
     * 
     */
    private final String elasticityAssuranceId;
    /**
     * @return Flexible guarantee service failure time.
     * 
     */
    private final String endTime;
    /**
     * @return ID of flexible guarantee service.
     * 
     */
    private final String id;
    /**
     * @return The billing method of the instance. Possible value: PostPaid. Currently, only pay-as-you-go is supported.
     * 
     */
    private final String instanceChargeType;
    /**
     * @return The ID of the elasticity assurance.
     * 
     */
    private final String privatePoolOptionsId;
    /**
     * @return The matching mode of flexible guarantee service. Possible values:-Open: flexible guarantee service for Open mode.-Target: specifies the flexible guarantee service of the mode.
     * 
     */
    private final String privatePoolOptionsMatchCriteria;
    /**
     * @return The name of the elasticity assurance.
     * 
     */
    private final String privatePoolOptionsName;
    /**
     * @return The ID of the resource group.
     * 
     */
    private final String resourceGroupId;
    /**
     * @return Flexible guarantee service effective time.
     * 
     */
    private final String startTime;
    /**
     * @return Flexible guarantee effective way. Possible values:-Now: Effective immediately.-Later: the specified time takes effect.
     * 
     */
    private final String startTimeType;
    /**
     * @return The status of flexible guarantee services. Possible values: `All`, `Preparing`, `Prepared`, `Active`, `Released`.
     * 
     */
    private final String status;
    /**
     * @return The tag key-value pair information bound by the elastic guarantee service.
     * 
     */
    private final @Nullable Map<String,Object> tags;
    /**
     * @return The total number of flexible guarantee services.
     * 
     */
    private final String totalAssuranceTimes;
    /**
     * @return This parameter is not yet available.
     * 
     */
    private final Integer usedAssuranceTimes;

    @CustomType.Constructor
    private GetElasticityAssurancesAssurance(
        @CustomType.Parameter("allocatedResources") List<GetElasticityAssurancesAssuranceAllocatedResource> allocatedResources,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("elasticityAssuranceId") String elasticityAssuranceId,
        @CustomType.Parameter("endTime") String endTime,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceChargeType") String instanceChargeType,
        @CustomType.Parameter("privatePoolOptionsId") String privatePoolOptionsId,
        @CustomType.Parameter("privatePoolOptionsMatchCriteria") String privatePoolOptionsMatchCriteria,
        @CustomType.Parameter("privatePoolOptionsName") String privatePoolOptionsName,
        @CustomType.Parameter("resourceGroupId") String resourceGroupId,
        @CustomType.Parameter("startTime") String startTime,
        @CustomType.Parameter("startTimeType") String startTimeType,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("tags") @Nullable Map<String,Object> tags,
        @CustomType.Parameter("totalAssuranceTimes") String totalAssuranceTimes,
        @CustomType.Parameter("usedAssuranceTimes") Integer usedAssuranceTimes) {
        this.allocatedResources = allocatedResources;
        this.description = description;
        this.elasticityAssuranceId = elasticityAssuranceId;
        this.endTime = endTime;
        this.id = id;
        this.instanceChargeType = instanceChargeType;
        this.privatePoolOptionsId = privatePoolOptionsId;
        this.privatePoolOptionsMatchCriteria = privatePoolOptionsMatchCriteria;
        this.privatePoolOptionsName = privatePoolOptionsName;
        this.resourceGroupId = resourceGroupId;
        this.startTime = startTime;
        this.startTimeType = startTimeType;
        this.status = status;
        this.tags = tags;
        this.totalAssuranceTimes = totalAssuranceTimes;
        this.usedAssuranceTimes = usedAssuranceTimes;
    }

    /**
     * @return Details of resource allocation.
     * 
     */
    public List<GetElasticityAssurancesAssuranceAllocatedResource> allocatedResources() {
        return this.allocatedResources;
    }
    /**
     * @return Description of flexible guarantee service.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The first ID of the resource
     * 
     */
    public String elasticityAssuranceId() {
        return this.elasticityAssuranceId;
    }
    /**
     * @return Flexible guarantee service failure time.
     * 
     */
    public String endTime() {
        return this.endTime;
    }
    /**
     * @return ID of flexible guarantee service.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The billing method of the instance. Possible value: PostPaid. Currently, only pay-as-you-go is supported.
     * 
     */
    public String instanceChargeType() {
        return this.instanceChargeType;
    }
    /**
     * @return The ID of the elasticity assurance.
     * 
     */
    public String privatePoolOptionsId() {
        return this.privatePoolOptionsId;
    }
    /**
     * @return The matching mode of flexible guarantee service. Possible values:-Open: flexible guarantee service for Open mode.-Target: specifies the flexible guarantee service of the mode.
     * 
     */
    public String privatePoolOptionsMatchCriteria() {
        return this.privatePoolOptionsMatchCriteria;
    }
    /**
     * @return The name of the elasticity assurance.
     * 
     */
    public String privatePoolOptionsName() {
        return this.privatePoolOptionsName;
    }
    /**
     * @return The ID of the resource group.
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return Flexible guarantee service effective time.
     * 
     */
    public String startTime() {
        return this.startTime;
    }
    /**
     * @return Flexible guarantee effective way. Possible values:-Now: Effective immediately.-Later: the specified time takes effect.
     * 
     */
    public String startTimeType() {
        return this.startTimeType;
    }
    /**
     * @return The status of flexible guarantee services. Possible values: `All`, `Preparing`, `Prepared`, `Active`, `Released`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The tag key-value pair information bound by the elastic guarantee service.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The total number of flexible guarantee services.
     * 
     */
    public String totalAssuranceTimes() {
        return this.totalAssuranceTimes;
    }
    /**
     * @return This parameter is not yet available.
     * 
     */
    public Integer usedAssuranceTimes() {
        return this.usedAssuranceTimes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetElasticityAssurancesAssurance defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetElasticityAssurancesAssuranceAllocatedResource> allocatedResources;
        private String description;
        private String elasticityAssuranceId;
        private String endTime;
        private String id;
        private String instanceChargeType;
        private String privatePoolOptionsId;
        private String privatePoolOptionsMatchCriteria;
        private String privatePoolOptionsName;
        private String resourceGroupId;
        private String startTime;
        private String startTimeType;
        private String status;
        private @Nullable Map<String,Object> tags;
        private String totalAssuranceTimes;
        private Integer usedAssuranceTimes;

        public Builder() {
    	      // Empty
        }

        public Builder(GetElasticityAssurancesAssurance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocatedResources = defaults.allocatedResources;
    	      this.description = defaults.description;
    	      this.elasticityAssuranceId = defaults.elasticityAssuranceId;
    	      this.endTime = defaults.endTime;
    	      this.id = defaults.id;
    	      this.instanceChargeType = defaults.instanceChargeType;
    	      this.privatePoolOptionsId = defaults.privatePoolOptionsId;
    	      this.privatePoolOptionsMatchCriteria = defaults.privatePoolOptionsMatchCriteria;
    	      this.privatePoolOptionsName = defaults.privatePoolOptionsName;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.startTime = defaults.startTime;
    	      this.startTimeType = defaults.startTimeType;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.totalAssuranceTimes = defaults.totalAssuranceTimes;
    	      this.usedAssuranceTimes = defaults.usedAssuranceTimes;
        }

        public Builder allocatedResources(List<GetElasticityAssurancesAssuranceAllocatedResource> allocatedResources) {
            this.allocatedResources = Objects.requireNonNull(allocatedResources);
            return this;
        }
        public Builder allocatedResources(GetElasticityAssurancesAssuranceAllocatedResource... allocatedResources) {
            return allocatedResources(List.of(allocatedResources));
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder elasticityAssuranceId(String elasticityAssuranceId) {
            this.elasticityAssuranceId = Objects.requireNonNull(elasticityAssuranceId);
            return this;
        }
        public Builder endTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instanceChargeType(String instanceChargeType) {
            this.instanceChargeType = Objects.requireNonNull(instanceChargeType);
            return this;
        }
        public Builder privatePoolOptionsId(String privatePoolOptionsId) {
            this.privatePoolOptionsId = Objects.requireNonNull(privatePoolOptionsId);
            return this;
        }
        public Builder privatePoolOptionsMatchCriteria(String privatePoolOptionsMatchCriteria) {
            this.privatePoolOptionsMatchCriteria = Objects.requireNonNull(privatePoolOptionsMatchCriteria);
            return this;
        }
        public Builder privatePoolOptionsName(String privatePoolOptionsName) {
            this.privatePoolOptionsName = Objects.requireNonNull(privatePoolOptionsName);
            return this;
        }
        public Builder resourceGroupId(String resourceGroupId) {
            this.resourceGroupId = Objects.requireNonNull(resourceGroupId);
            return this;
        }
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        public Builder startTimeType(String startTimeType) {
            this.startTimeType = Objects.requireNonNull(startTimeType);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder tags(@Nullable Map<String,Object> tags) {
            this.tags = tags;
            return this;
        }
        public Builder totalAssuranceTimes(String totalAssuranceTimes) {
            this.totalAssuranceTimes = Objects.requireNonNull(totalAssuranceTimes);
            return this;
        }
        public Builder usedAssuranceTimes(Integer usedAssuranceTimes) {
            this.usedAssuranceTimes = Objects.requireNonNull(usedAssuranceTimes);
            return this;
        }        public GetElasticityAssurancesAssurance build() {
            return new GetElasticityAssurancesAssurance(allocatedResources, description, elasticityAssuranceId, endTime, id, instanceChargeType, privatePoolOptionsId, privatePoolOptionsMatchCriteria, privatePoolOptionsName, resourceGroupId, startTime, startTimeType, status, tags, totalAssuranceTimes, usedAssuranceTimes);
        }
    }
}
