// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ram.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class PolicyStatement {
    /**
     * @return (It has been deprecated from version 1.49.0, and use field &#39;document&#39; to replace.) List of operations for the `resource`. The format of each item in this list is `${service}:${action_name}`, such as `oss:ListBuckets` and `ecs:Describe*`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${action_name}` refers to the name of an api interface which related to the `${service}`.
     * 
     */
    private final List<String> actions;
    /**
     * @return (It has been deprecated from version 1.49.0, and use field &#39;document&#39; to replace.) This parameter indicates whether or not the `action` is allowed. Valid values are `Allow` and `Deny`.
     * 
     */
    private final String effect;
    /**
     * @return (It has been deprecated from version 1.49.0, and use field &#39;document&#39; to replace.) List of specific objects which will be authorized. The format of each item in this list is `acs:${service}:${region}:${account_id}:${relative_id}`, such as `acs:ecs:*:*:instance/inst-002` and `acs:oss:*:1234567890000:mybucket`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${region}` is the region info which can use `*` replace when it is not supplied, the `${account_id}` refers to someone&#39;s Alicloud account id or you can use `*` to replace, the `${relative_id}` is the resource description section which related to the `${service}`.
     * 
     */
    private final List<String> resources;

    @CustomType.Constructor
    private PolicyStatement(
        @CustomType.Parameter("actions") List<String> actions,
        @CustomType.Parameter("effect") String effect,
        @CustomType.Parameter("resources") List<String> resources) {
        this.actions = actions;
        this.effect = effect;
        this.resources = resources;
    }

    /**
     * @return (It has been deprecated from version 1.49.0, and use field &#39;document&#39; to replace.) List of operations for the `resource`. The format of each item in this list is `${service}:${action_name}`, such as `oss:ListBuckets` and `ecs:Describe*`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${action_name}` refers to the name of an api interface which related to the `${service}`.
     * 
     */
    public List<String> actions() {
        return this.actions;
    }
    /**
     * @return (It has been deprecated from version 1.49.0, and use field &#39;document&#39; to replace.) This parameter indicates whether or not the `action` is allowed. Valid values are `Allow` and `Deny`.
     * 
     */
    public String effect() {
        return this.effect;
    }
    /**
     * @return (It has been deprecated from version 1.49.0, and use field &#39;document&#39; to replace.) List of specific objects which will be authorized. The format of each item in this list is `acs:${service}:${region}:${account_id}:${relative_id}`, such as `acs:ecs:*:*:instance/inst-002` and `acs:oss:*:1234567890000:mybucket`. The `${service}` can be `ecs`, `oss`, `ots` and so on, the `${region}` is the region info which can use `*` replace when it is not supplied, the `${account_id}` refers to someone&#39;s Alicloud account id or you can use `*` to replace, the `${relative_id}` is the resource description section which related to the `${service}`.
     * 
     */
    public List<String> resources() {
        return this.resources;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyStatement defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> actions;
        private String effect;
        private List<String> resources;

        public Builder() {
    	      // Empty
        }

        public Builder(PolicyStatement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.effect = defaults.effect;
    	      this.resources = defaults.resources;
        }

        public Builder actions(List<String> actions) {
            this.actions = Objects.requireNonNull(actions);
            return this;
        }
        public Builder actions(String... actions) {
            return actions(List.of(actions));
        }
        public Builder effect(String effect) {
            this.effect = Objects.requireNonNull(effect);
            return this;
        }
        public Builder resources(List<String> resources) {
            this.resources = Objects.requireNonNull(resources);
            return this;
        }
        public Builder resources(String... resources) {
            return resources(List.of(resources));
        }        public PolicyStatement build() {
            return new PolicyStatement(actions, effect, resources);
        }
    }
}
