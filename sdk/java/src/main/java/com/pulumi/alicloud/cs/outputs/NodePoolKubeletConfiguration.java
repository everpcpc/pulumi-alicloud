// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NodePoolKubeletConfiguration {
    /**
     * @return Same as cpuManagerPolicy. The name of the policy to use. Requires the CPUManager feature gate to be enabled. Valid value is `none` or `static`.
     * 
     */
    private final @Nullable String cpuManagerPolicy;
    /**
     * @return Same as eventBurst. The maximum size of a burst of event creations, temporarily allows event creations to burst to this number, while still not exceeding `event_record_qps`. It is only used when `event_record_qps` is greater than 0. Valid value is `[0-100]`.
     * 
     */
    private final @Nullable String eventBurst;
    /**
     * @return Same as eventRecordQPS. The maximum event creations per second. If 0, there is no limit enforced. Valid value is `[0-50]`.
     * 
     */
    private final @Nullable String eventRecordQps;
    /**
     * @return Same as evictionHard. The map of signal names to quantities that defines hard eviction thresholds. For example: `{&#34;memory.available&#34; = &#34;300Mi&#34;}`.
     * 
     */
    private final @Nullable Map<String,Object> evictionHard;
    /**
     * @return Same as evictionSoft. The map of signal names to quantities that defines soft eviction thresholds. For example: `{&#34;memory.available&#34; = &#34;300Mi&#34;}`.
     * 
     */
    private final @Nullable Map<String,Object> evictionSoft;
    /**
     * @return Same as evictionSoftGracePeriod. The map of signal names to quantities that defines grace periods for each soft eviction signal. For example: `{&#34;memory.available&#34; = &#34;30s&#34;}`.
     * 
     */
    private final @Nullable Map<String,Object> evictionSoftGracePeriod;
    /**
     * @return Same as kubeAPIBurst. The burst to allow while talking with kubernetes api-server. Valid value is `[0-100]`.
     * 
     */
    private final @Nullable String kubeApiBurst;
    /**
     * @return Same as kubeAPIQPS. The QPS to use while talking with kubernetes api-server. Valid value is `[0-50]`.
     * 
     */
    private final @Nullable String kubeApiQps;
    /**
     * @return Same as kubeReserved. The set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=150G) pairs that describe resources reserved for kubernetes system components. Currently, cpu, memory and local storage for root file system are supported. See [compute resources](http://kubernetes.io/docs/user-guide/compute-resources) for more details.
     * 
     */
    private final @Nullable Map<String,Object> kubeReserved;
    /**
     * @return Same as registryBurst. The maximum size of burst pulls, temporarily allows pulls to burst to this number, while still not exceeding `registry_pull_qps`. Only used if `registry_pull_qps` is greater than 0. Valid value is `[0-100]`.
     * 
     */
    private final @Nullable String registryBurst;
    /**
     * @return Same as registryPullQPS. The limit of registry pulls per second. Setting it to `0` means no limit. Valid value is `[0-50]`.
     * 
     */
    private final @Nullable String registryPullQps;
    /**
     * @return Same as serializeImagePulls. When enabled, it tells the Kubelet to pull images one at a time. We recommend not changing the default value on nodes that run docker daemon with version &lt; 1.9 or an Aufs storage backend. Valid value is `true` or `false`.
     * 
     */
    private final @Nullable String serializeImagePulls;
    /**
     * @return Same as systemReserved. The set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=150G) pairs that describe resources reserved for non-kubernetes components. Currently, only cpu and memory are supported. See [compute resources](http://kubernetes.io/docs/user-guide/compute-resources) for more details.
     * 
     */
    private final @Nullable Map<String,Object> systemReserved;

    @CustomType.Constructor
    private NodePoolKubeletConfiguration(
        @CustomType.Parameter("cpuManagerPolicy") @Nullable String cpuManagerPolicy,
        @CustomType.Parameter("eventBurst") @Nullable String eventBurst,
        @CustomType.Parameter("eventRecordQps") @Nullable String eventRecordQps,
        @CustomType.Parameter("evictionHard") @Nullable Map<String,Object> evictionHard,
        @CustomType.Parameter("evictionSoft") @Nullable Map<String,Object> evictionSoft,
        @CustomType.Parameter("evictionSoftGracePeriod") @Nullable Map<String,Object> evictionSoftGracePeriod,
        @CustomType.Parameter("kubeApiBurst") @Nullable String kubeApiBurst,
        @CustomType.Parameter("kubeApiQps") @Nullable String kubeApiQps,
        @CustomType.Parameter("kubeReserved") @Nullable Map<String,Object> kubeReserved,
        @CustomType.Parameter("registryBurst") @Nullable String registryBurst,
        @CustomType.Parameter("registryPullQps") @Nullable String registryPullQps,
        @CustomType.Parameter("serializeImagePulls") @Nullable String serializeImagePulls,
        @CustomType.Parameter("systemReserved") @Nullable Map<String,Object> systemReserved) {
        this.cpuManagerPolicy = cpuManagerPolicy;
        this.eventBurst = eventBurst;
        this.eventRecordQps = eventRecordQps;
        this.evictionHard = evictionHard;
        this.evictionSoft = evictionSoft;
        this.evictionSoftGracePeriod = evictionSoftGracePeriod;
        this.kubeApiBurst = kubeApiBurst;
        this.kubeApiQps = kubeApiQps;
        this.kubeReserved = kubeReserved;
        this.registryBurst = registryBurst;
        this.registryPullQps = registryPullQps;
        this.serializeImagePulls = serializeImagePulls;
        this.systemReserved = systemReserved;
    }

    /**
     * @return Same as cpuManagerPolicy. The name of the policy to use. Requires the CPUManager feature gate to be enabled. Valid value is `none` or `static`.
     * 
     */
    public Optional<String> cpuManagerPolicy() {
        return Optional.ofNullable(this.cpuManagerPolicy);
    }
    /**
     * @return Same as eventBurst. The maximum size of a burst of event creations, temporarily allows event creations to burst to this number, while still not exceeding `event_record_qps`. It is only used when `event_record_qps` is greater than 0. Valid value is `[0-100]`.
     * 
     */
    public Optional<String> eventBurst() {
        return Optional.ofNullable(this.eventBurst);
    }
    /**
     * @return Same as eventRecordQPS. The maximum event creations per second. If 0, there is no limit enforced. Valid value is `[0-50]`.
     * 
     */
    public Optional<String> eventRecordQps() {
        return Optional.ofNullable(this.eventRecordQps);
    }
    /**
     * @return Same as evictionHard. The map of signal names to quantities that defines hard eviction thresholds. For example: `{&#34;memory.available&#34; = &#34;300Mi&#34;}`.
     * 
     */
    public Map<String,Object> evictionHard() {
        return this.evictionHard == null ? Map.of() : this.evictionHard;
    }
    /**
     * @return Same as evictionSoft. The map of signal names to quantities that defines soft eviction thresholds. For example: `{&#34;memory.available&#34; = &#34;300Mi&#34;}`.
     * 
     */
    public Map<String,Object> evictionSoft() {
        return this.evictionSoft == null ? Map.of() : this.evictionSoft;
    }
    /**
     * @return Same as evictionSoftGracePeriod. The map of signal names to quantities that defines grace periods for each soft eviction signal. For example: `{&#34;memory.available&#34; = &#34;30s&#34;}`.
     * 
     */
    public Map<String,Object> evictionSoftGracePeriod() {
        return this.evictionSoftGracePeriod == null ? Map.of() : this.evictionSoftGracePeriod;
    }
    /**
     * @return Same as kubeAPIBurst. The burst to allow while talking with kubernetes api-server. Valid value is `[0-100]`.
     * 
     */
    public Optional<String> kubeApiBurst() {
        return Optional.ofNullable(this.kubeApiBurst);
    }
    /**
     * @return Same as kubeAPIQPS. The QPS to use while talking with kubernetes api-server. Valid value is `[0-50]`.
     * 
     */
    public Optional<String> kubeApiQps() {
        return Optional.ofNullable(this.kubeApiQps);
    }
    /**
     * @return Same as kubeReserved. The set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=150G) pairs that describe resources reserved for kubernetes system components. Currently, cpu, memory and local storage for root file system are supported. See [compute resources](http://kubernetes.io/docs/user-guide/compute-resources) for more details.
     * 
     */
    public Map<String,Object> kubeReserved() {
        return this.kubeReserved == null ? Map.of() : this.kubeReserved;
    }
    /**
     * @return Same as registryBurst. The maximum size of burst pulls, temporarily allows pulls to burst to this number, while still not exceeding `registry_pull_qps`. Only used if `registry_pull_qps` is greater than 0. Valid value is `[0-100]`.
     * 
     */
    public Optional<String> registryBurst() {
        return Optional.ofNullable(this.registryBurst);
    }
    /**
     * @return Same as registryPullQPS. The limit of registry pulls per second. Setting it to `0` means no limit. Valid value is `[0-50]`.
     * 
     */
    public Optional<String> registryPullQps() {
        return Optional.ofNullable(this.registryPullQps);
    }
    /**
     * @return Same as serializeImagePulls. When enabled, it tells the Kubelet to pull images one at a time. We recommend not changing the default value on nodes that run docker daemon with version &lt; 1.9 or an Aufs storage backend. Valid value is `true` or `false`.
     * 
     */
    public Optional<String> serializeImagePulls() {
        return Optional.ofNullable(this.serializeImagePulls);
    }
    /**
     * @return Same as systemReserved. The set of ResourceName=ResourceQuantity (e.g. cpu=200m,memory=150G) pairs that describe resources reserved for non-kubernetes components. Currently, only cpu and memory are supported. See [compute resources](http://kubernetes.io/docs/user-guide/compute-resources) for more details.
     * 
     */
    public Map<String,Object> systemReserved() {
        return this.systemReserved == null ? Map.of() : this.systemReserved;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodePoolKubeletConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String cpuManagerPolicy;
        private @Nullable String eventBurst;
        private @Nullable String eventRecordQps;
        private @Nullable Map<String,Object> evictionHard;
        private @Nullable Map<String,Object> evictionSoft;
        private @Nullable Map<String,Object> evictionSoftGracePeriod;
        private @Nullable String kubeApiBurst;
        private @Nullable String kubeApiQps;
        private @Nullable Map<String,Object> kubeReserved;
        private @Nullable String registryBurst;
        private @Nullable String registryPullQps;
        private @Nullable String serializeImagePulls;
        private @Nullable Map<String,Object> systemReserved;

        public Builder() {
    	      // Empty
        }

        public Builder(NodePoolKubeletConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpuManagerPolicy = defaults.cpuManagerPolicy;
    	      this.eventBurst = defaults.eventBurst;
    	      this.eventRecordQps = defaults.eventRecordQps;
    	      this.evictionHard = defaults.evictionHard;
    	      this.evictionSoft = defaults.evictionSoft;
    	      this.evictionSoftGracePeriod = defaults.evictionSoftGracePeriod;
    	      this.kubeApiBurst = defaults.kubeApiBurst;
    	      this.kubeApiQps = defaults.kubeApiQps;
    	      this.kubeReserved = defaults.kubeReserved;
    	      this.registryBurst = defaults.registryBurst;
    	      this.registryPullQps = defaults.registryPullQps;
    	      this.serializeImagePulls = defaults.serializeImagePulls;
    	      this.systemReserved = defaults.systemReserved;
        }

        public Builder cpuManagerPolicy(@Nullable String cpuManagerPolicy) {
            this.cpuManagerPolicy = cpuManagerPolicy;
            return this;
        }
        public Builder eventBurst(@Nullable String eventBurst) {
            this.eventBurst = eventBurst;
            return this;
        }
        public Builder eventRecordQps(@Nullable String eventRecordQps) {
            this.eventRecordQps = eventRecordQps;
            return this;
        }
        public Builder evictionHard(@Nullable Map<String,Object> evictionHard) {
            this.evictionHard = evictionHard;
            return this;
        }
        public Builder evictionSoft(@Nullable Map<String,Object> evictionSoft) {
            this.evictionSoft = evictionSoft;
            return this;
        }
        public Builder evictionSoftGracePeriod(@Nullable Map<String,Object> evictionSoftGracePeriod) {
            this.evictionSoftGracePeriod = evictionSoftGracePeriod;
            return this;
        }
        public Builder kubeApiBurst(@Nullable String kubeApiBurst) {
            this.kubeApiBurst = kubeApiBurst;
            return this;
        }
        public Builder kubeApiQps(@Nullable String kubeApiQps) {
            this.kubeApiQps = kubeApiQps;
            return this;
        }
        public Builder kubeReserved(@Nullable Map<String,Object> kubeReserved) {
            this.kubeReserved = kubeReserved;
            return this;
        }
        public Builder registryBurst(@Nullable String registryBurst) {
            this.registryBurst = registryBurst;
            return this;
        }
        public Builder registryPullQps(@Nullable String registryPullQps) {
            this.registryPullQps = registryPullQps;
            return this;
        }
        public Builder serializeImagePulls(@Nullable String serializeImagePulls) {
            this.serializeImagePulls = serializeImagePulls;
            return this;
        }
        public Builder systemReserved(@Nullable Map<String,Object> systemReserved) {
            this.systemReserved = systemReserved;
            return this;
        }        public NodePoolKubeletConfiguration build() {
            return new NodePoolKubeletConfiguration(cpuManagerPolicy, eventBurst, eventRecordQps, evictionHard, evictionSoft, evictionSoftGracePeriod, kubeApiBurst, kubeApiQps, kubeReserved, registryBurst, registryPullQps, serializeImagePulls, systemReserved);
        }
    }
}
