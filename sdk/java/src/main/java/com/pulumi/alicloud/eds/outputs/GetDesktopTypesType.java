// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eds.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDesktopTypesType {
    /**
     * @return The CPU cores.
     * 
     */
    private final String cpuCount;
    /**
     * @return The size of the data disk. Unit: GiB.
     * 
     */
    private final String dataDiskSize;
    /**
     * @return Specification ID.
     * 
     */
    private final String desktopTypeId;
    /**
     * @return The GPU cores.
     * 
     */
    private final Double gpuCount;
    /**
     * @return The GPU video memory.
     * 
     */
    private final String gpuSpec;
    /**
     * @return The ID of the Desktop Type.
     * 
     */
    private final String id;
    /**
     * @return The Specification family.
     * 
     */
    private final String instanceTypeFamily;
    /**
     * @return The Memory size. Unit: MiB.
     * 
     */
    private final String memorySize;
    /**
     * @return The status of the resource.
     * 
     */
    private final String status;
    /**
     * @return The size of the system disk. Unit: GiB.
     * 
     */
    private final String systemDiskSize;

    @CustomType.Constructor
    private GetDesktopTypesType(
        @CustomType.Parameter("cpuCount") String cpuCount,
        @CustomType.Parameter("dataDiskSize") String dataDiskSize,
        @CustomType.Parameter("desktopTypeId") String desktopTypeId,
        @CustomType.Parameter("gpuCount") Double gpuCount,
        @CustomType.Parameter("gpuSpec") String gpuSpec,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceTypeFamily") String instanceTypeFamily,
        @CustomType.Parameter("memorySize") String memorySize,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("systemDiskSize") String systemDiskSize) {
        this.cpuCount = cpuCount;
        this.dataDiskSize = dataDiskSize;
        this.desktopTypeId = desktopTypeId;
        this.gpuCount = gpuCount;
        this.gpuSpec = gpuSpec;
        this.id = id;
        this.instanceTypeFamily = instanceTypeFamily;
        this.memorySize = memorySize;
        this.status = status;
        this.systemDiskSize = systemDiskSize;
    }

    /**
     * @return The CPU cores.
     * 
     */
    public String cpuCount() {
        return this.cpuCount;
    }
    /**
     * @return The size of the data disk. Unit: GiB.
     * 
     */
    public String dataDiskSize() {
        return this.dataDiskSize;
    }
    /**
     * @return Specification ID.
     * 
     */
    public String desktopTypeId() {
        return this.desktopTypeId;
    }
    /**
     * @return The GPU cores.
     * 
     */
    public Double gpuCount() {
        return this.gpuCount;
    }
    /**
     * @return The GPU video memory.
     * 
     */
    public String gpuSpec() {
        return this.gpuSpec;
    }
    /**
     * @return The ID of the Desktop Type.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Specification family.
     * 
     */
    public String instanceTypeFamily() {
        return this.instanceTypeFamily;
    }
    /**
     * @return The Memory size. Unit: MiB.
     * 
     */
    public String memorySize() {
        return this.memorySize;
    }
    /**
     * @return The status of the resource.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The size of the system disk. Unit: GiB.
     * 
     */
    public String systemDiskSize() {
        return this.systemDiskSize;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDesktopTypesType defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String cpuCount;
        private String dataDiskSize;
        private String desktopTypeId;
        private Double gpuCount;
        private String gpuSpec;
        private String id;
        private String instanceTypeFamily;
        private String memorySize;
        private String status;
        private String systemDiskSize;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDesktopTypesType defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpuCount = defaults.cpuCount;
    	      this.dataDiskSize = defaults.dataDiskSize;
    	      this.desktopTypeId = defaults.desktopTypeId;
    	      this.gpuCount = defaults.gpuCount;
    	      this.gpuSpec = defaults.gpuSpec;
    	      this.id = defaults.id;
    	      this.instanceTypeFamily = defaults.instanceTypeFamily;
    	      this.memorySize = defaults.memorySize;
    	      this.status = defaults.status;
    	      this.systemDiskSize = defaults.systemDiskSize;
        }

        public Builder cpuCount(String cpuCount) {
            this.cpuCount = Objects.requireNonNull(cpuCount);
            return this;
        }
        public Builder dataDiskSize(String dataDiskSize) {
            this.dataDiskSize = Objects.requireNonNull(dataDiskSize);
            return this;
        }
        public Builder desktopTypeId(String desktopTypeId) {
            this.desktopTypeId = Objects.requireNonNull(desktopTypeId);
            return this;
        }
        public Builder gpuCount(Double gpuCount) {
            this.gpuCount = Objects.requireNonNull(gpuCount);
            return this;
        }
        public Builder gpuSpec(String gpuSpec) {
            this.gpuSpec = Objects.requireNonNull(gpuSpec);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instanceTypeFamily(String instanceTypeFamily) {
            this.instanceTypeFamily = Objects.requireNonNull(instanceTypeFamily);
            return this;
        }
        public Builder memorySize(String memorySize) {
            this.memorySize = Objects.requireNonNull(memorySize);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder systemDiskSize(String systemDiskSize) {
            this.systemDiskSize = Objects.requireNonNull(systemDiskSize);
            return this;
        }        public GetDesktopTypesType build() {
            return new GetDesktopTypesType(cpuCount, dataDiskSize, desktopTypeId, gpuCount, gpuSpec, id, instanceTypeFamily, memorySize, status, systemDiskSize);
        }
    }
}
