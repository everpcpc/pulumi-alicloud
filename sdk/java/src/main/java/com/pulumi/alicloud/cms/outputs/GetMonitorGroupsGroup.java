// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetMonitorGroupsGroup {
    /**
     * @return The URL of the Kubernetes cluster from which the application group is synchronized.
     * 
     */
    private final String bindUrl;
    /**
     * @return The list of  alert groups that receive alert notifications for the application group.
     * 
     */
    private final List<String> contactGroups;
    /**
     * @return The ID of the tag rule.
     * 
     */
    private final String dynamicTagRuleId;
    /**
     * @return The time when the application group was created.
     * 
     */
    private final Integer gmtCreate;
    /**
     * @return The time when the application group was modified.
     * 
     */
    private final Integer gmtModified;
    /**
     * @return The ID of the application group.
     * 
     */
    private final String groupId;
    /**
     * @return The ID of the Monitor Group.
     * 
     */
    private final String id;
    /**
     * @return The name of the application group.
     * 
     */
    private final String monitorGroupName;
    /**
     * @return The ID of the Alibaba Cloud service.
     * 
     */
    private final String serviceId;
    /**
     * @return A map of tags assigned to the Cms Monitor Group.
     * 
     */
    private final Map<String,Object> tags;
    /**
     * @return The alert templates applied to the application group.
     * 
     */
    private final List<String> templateIds;
    /**
     * @return The type of the application group.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetMonitorGroupsGroup(
        @CustomType.Parameter("bindUrl") String bindUrl,
        @CustomType.Parameter("contactGroups") List<String> contactGroups,
        @CustomType.Parameter("dynamicTagRuleId") String dynamicTagRuleId,
        @CustomType.Parameter("gmtCreate") Integer gmtCreate,
        @CustomType.Parameter("gmtModified") Integer gmtModified,
        @CustomType.Parameter("groupId") String groupId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("monitorGroupName") String monitorGroupName,
        @CustomType.Parameter("serviceId") String serviceId,
        @CustomType.Parameter("tags") Map<String,Object> tags,
        @CustomType.Parameter("templateIds") List<String> templateIds,
        @CustomType.Parameter("type") String type) {
        this.bindUrl = bindUrl;
        this.contactGroups = contactGroups;
        this.dynamicTagRuleId = dynamicTagRuleId;
        this.gmtCreate = gmtCreate;
        this.gmtModified = gmtModified;
        this.groupId = groupId;
        this.id = id;
        this.monitorGroupName = monitorGroupName;
        this.serviceId = serviceId;
        this.tags = tags;
        this.templateIds = templateIds;
        this.type = type;
    }

    /**
     * @return The URL of the Kubernetes cluster from which the application group is synchronized.
     * 
     */
    public String bindUrl() {
        return this.bindUrl;
    }
    /**
     * @return The list of  alert groups that receive alert notifications for the application group.
     * 
     */
    public List<String> contactGroups() {
        return this.contactGroups;
    }
    /**
     * @return The ID of the tag rule.
     * 
     */
    public String dynamicTagRuleId() {
        return this.dynamicTagRuleId;
    }
    /**
     * @return The time when the application group was created.
     * 
     */
    public Integer gmtCreate() {
        return this.gmtCreate;
    }
    /**
     * @return The time when the application group was modified.
     * 
     */
    public Integer gmtModified() {
        return this.gmtModified;
    }
    /**
     * @return The ID of the application group.
     * 
     */
    public String groupId() {
        return this.groupId;
    }
    /**
     * @return The ID of the Monitor Group.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the application group.
     * 
     */
    public String monitorGroupName() {
        return this.monitorGroupName;
    }
    /**
     * @return The ID of the Alibaba Cloud service.
     * 
     */
    public String serviceId() {
        return this.serviceId;
    }
    /**
     * @return A map of tags assigned to the Cms Monitor Group.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags;
    }
    /**
     * @return The alert templates applied to the application group.
     * 
     */
    public List<String> templateIds() {
        return this.templateIds;
    }
    /**
     * @return The type of the application group.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMonitorGroupsGroup defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bindUrl;
        private List<String> contactGroups;
        private String dynamicTagRuleId;
        private Integer gmtCreate;
        private Integer gmtModified;
        private String groupId;
        private String id;
        private String monitorGroupName;
        private String serviceId;
        private Map<String,Object> tags;
        private List<String> templateIds;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMonitorGroupsGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bindUrl = defaults.bindUrl;
    	      this.contactGroups = defaults.contactGroups;
    	      this.dynamicTagRuleId = defaults.dynamicTagRuleId;
    	      this.gmtCreate = defaults.gmtCreate;
    	      this.gmtModified = defaults.gmtModified;
    	      this.groupId = defaults.groupId;
    	      this.id = defaults.id;
    	      this.monitorGroupName = defaults.monitorGroupName;
    	      this.serviceId = defaults.serviceId;
    	      this.tags = defaults.tags;
    	      this.templateIds = defaults.templateIds;
    	      this.type = defaults.type;
        }

        public Builder bindUrl(String bindUrl) {
            this.bindUrl = Objects.requireNonNull(bindUrl);
            return this;
        }
        public Builder contactGroups(List<String> contactGroups) {
            this.contactGroups = Objects.requireNonNull(contactGroups);
            return this;
        }
        public Builder contactGroups(String... contactGroups) {
            return contactGroups(List.of(contactGroups));
        }
        public Builder dynamicTagRuleId(String dynamicTagRuleId) {
            this.dynamicTagRuleId = Objects.requireNonNull(dynamicTagRuleId);
            return this;
        }
        public Builder gmtCreate(Integer gmtCreate) {
            this.gmtCreate = Objects.requireNonNull(gmtCreate);
            return this;
        }
        public Builder gmtModified(Integer gmtModified) {
            this.gmtModified = Objects.requireNonNull(gmtModified);
            return this;
        }
        public Builder groupId(String groupId) {
            this.groupId = Objects.requireNonNull(groupId);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder monitorGroupName(String monitorGroupName) {
            this.monitorGroupName = Objects.requireNonNull(monitorGroupName);
            return this;
        }
        public Builder serviceId(String serviceId) {
            this.serviceId = Objects.requireNonNull(serviceId);
            return this;
        }
        public Builder tags(Map<String,Object> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder templateIds(List<String> templateIds) {
            this.templateIds = Objects.requireNonNull(templateIds);
            return this;
        }
        public Builder templateIds(String... templateIds) {
            return templateIds(List.of(templateIds));
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetMonitorGroupsGroup build() {
            return new GetMonitorGroupsGroup(bindUrl, contactGroups, dynamicTagRuleId, gmtCreate, gmtModified, groupId, id, monitorGroupName, serviceId, tags, templateIds, type);
        }
    }
}
