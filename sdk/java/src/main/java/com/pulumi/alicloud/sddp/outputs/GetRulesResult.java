// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sddp.outputs;

import com.pulumi.alicloud.sddp.outputs.GetRulesRule;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRulesResult {
    private final @Nullable Integer category;
    private final @Nullable String contentCategory;
    private final @Nullable Integer customType;
    private final @Nullable Boolean enableDetails;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<String> ids;
    private final @Nullable String name;
    private final @Nullable String nameRegex;
    private final List<String> names;
    private final @Nullable String outputFile;
    private final @Nullable String productId;
    private final @Nullable String riskLevelId;
    private final @Nullable Integer ruleType;
    private final List<GetRulesRule> rules;
    private final @Nullable String status;
    private final @Nullable Integer warnLevel;

    @CustomType.Constructor
    private GetRulesResult(
        @CustomType.Parameter("category") @Nullable Integer category,
        @CustomType.Parameter("contentCategory") @Nullable String contentCategory,
        @CustomType.Parameter("customType") @Nullable Integer customType,
        @CustomType.Parameter("enableDetails") @Nullable Boolean enableDetails,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ids") List<String> ids,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("nameRegex") @Nullable String nameRegex,
        @CustomType.Parameter("names") List<String> names,
        @CustomType.Parameter("outputFile") @Nullable String outputFile,
        @CustomType.Parameter("productId") @Nullable String productId,
        @CustomType.Parameter("riskLevelId") @Nullable String riskLevelId,
        @CustomType.Parameter("ruleType") @Nullable Integer ruleType,
        @CustomType.Parameter("rules") List<GetRulesRule> rules,
        @CustomType.Parameter("status") @Nullable String status,
        @CustomType.Parameter("warnLevel") @Nullable Integer warnLevel) {
        this.category = category;
        this.contentCategory = contentCategory;
        this.customType = customType;
        this.enableDetails = enableDetails;
        this.id = id;
        this.ids = ids;
        this.name = name;
        this.nameRegex = nameRegex;
        this.names = names;
        this.outputFile = outputFile;
        this.productId = productId;
        this.riskLevelId = riskLevelId;
        this.ruleType = ruleType;
        this.rules = rules;
        this.status = status;
        this.warnLevel = warnLevel;
    }

    public Optional<Integer> category() {
        return Optional.ofNullable(this.category);
    }
    public Optional<String> contentCategory() {
        return Optional.ofNullable(this.contentCategory);
    }
    public Optional<Integer> customType() {
        return Optional.ofNullable(this.customType);
    }
    public Optional<Boolean> enableDetails() {
        return Optional.ofNullable(this.enableDetails);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Optional<String> productId() {
        return Optional.ofNullable(this.productId);
    }
    public Optional<String> riskLevelId() {
        return Optional.ofNullable(this.riskLevelId);
    }
    public Optional<Integer> ruleType() {
        return Optional.ofNullable(this.ruleType);
    }
    public List<GetRulesRule> rules() {
        return this.rules;
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    public Optional<Integer> warnLevel() {
        return Optional.ofNullable(this.warnLevel);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRulesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer category;
        private @Nullable String contentCategory;
        private @Nullable Integer customType;
        private @Nullable Boolean enableDetails;
        private String id;
        private List<String> ids;
        private @Nullable String name;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        private @Nullable String productId;
        private @Nullable String riskLevelId;
        private @Nullable Integer ruleType;
        private List<GetRulesRule> rules;
        private @Nullable String status;
        private @Nullable Integer warnLevel;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRulesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
    	      this.contentCategory = defaults.contentCategory;
    	      this.customType = defaults.customType;
    	      this.enableDetails = defaults.enableDetails;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.name = defaults.name;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
    	      this.productId = defaults.productId;
    	      this.riskLevelId = defaults.riskLevelId;
    	      this.ruleType = defaults.ruleType;
    	      this.rules = defaults.rules;
    	      this.status = defaults.status;
    	      this.warnLevel = defaults.warnLevel;
        }

        public Builder category(@Nullable Integer category) {
            this.category = category;
            return this;
        }
        public Builder contentCategory(@Nullable String contentCategory) {
            this.contentCategory = contentCategory;
            return this;
        }
        public Builder customType(@Nullable Integer customType) {
            this.customType = customType;
            return this;
        }
        public Builder enableDetails(@Nullable Boolean enableDetails) {
            this.enableDetails = enableDetails;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        public Builder names(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        public Builder productId(@Nullable String productId) {
            this.productId = productId;
            return this;
        }
        public Builder riskLevelId(@Nullable String riskLevelId) {
            this.riskLevelId = riskLevelId;
            return this;
        }
        public Builder ruleType(@Nullable Integer ruleType) {
            this.ruleType = ruleType;
            return this;
        }
        public Builder rules(List<GetRulesRule> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }
        public Builder rules(GetRulesRule... rules) {
            return rules(List.of(rules));
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public Builder warnLevel(@Nullable Integer warnLevel) {
            this.warnLevel = warnLevel;
            return this;
        }        public GetRulesResult build() {
            return new GetRulesResult(category, contentCategory, customType, enableDetails, id, ids, name, nameRegex, names, outputFile, productId, riskLevelId, ruleType, rules, status, warnLevel);
        }
    }
}
