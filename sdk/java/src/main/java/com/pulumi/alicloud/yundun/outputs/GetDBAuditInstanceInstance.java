// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.yundun.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetDBAuditInstanceInstance {
    private final String description;
    private final String id;
    private final String instanceStatus;
    private final String licenseCode;
    private final String privateDomain;
    private final String publicDomain;
    private final Boolean publicNetworkAccess;
    private final @Nullable Map<String,Object> tags;
    private final String userVswitchId;

    @CustomType.Constructor
    private GetDBAuditInstanceInstance(
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceStatus") String instanceStatus,
        @CustomType.Parameter("licenseCode") String licenseCode,
        @CustomType.Parameter("privateDomain") String privateDomain,
        @CustomType.Parameter("publicDomain") String publicDomain,
        @CustomType.Parameter("publicNetworkAccess") Boolean publicNetworkAccess,
        @CustomType.Parameter("tags") @Nullable Map<String,Object> tags,
        @CustomType.Parameter("userVswitchId") String userVswitchId) {
        this.description = description;
        this.id = id;
        this.instanceStatus = instanceStatus;
        this.licenseCode = licenseCode;
        this.privateDomain = privateDomain;
        this.publicDomain = publicDomain;
        this.publicNetworkAccess = publicNetworkAccess;
        this.tags = tags;
        this.userVswitchId = userVswitchId;
    }

    public String description() {
        return this.description;
    }
    public String id() {
        return this.id;
    }
    public String instanceStatus() {
        return this.instanceStatus;
    }
    public String licenseCode() {
        return this.licenseCode;
    }
    public String privateDomain() {
        return this.privateDomain;
    }
    public String publicDomain() {
        return this.publicDomain;
    }
    public Boolean publicNetworkAccess() {
        return this.publicNetworkAccess;
    }
    public Map<String,Object> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String userVswitchId() {
        return this.userVswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDBAuditInstanceInstance defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String description;
        private String id;
        private String instanceStatus;
        private String licenseCode;
        private String privateDomain;
        private String publicDomain;
        private Boolean publicNetworkAccess;
        private @Nullable Map<String,Object> tags;
        private String userVswitchId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDBAuditInstanceInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.instanceStatus = defaults.instanceStatus;
    	      this.licenseCode = defaults.licenseCode;
    	      this.privateDomain = defaults.privateDomain;
    	      this.publicDomain = defaults.publicDomain;
    	      this.publicNetworkAccess = defaults.publicNetworkAccess;
    	      this.tags = defaults.tags;
    	      this.userVswitchId = defaults.userVswitchId;
        }

        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instanceStatus(String instanceStatus) {
            this.instanceStatus = Objects.requireNonNull(instanceStatus);
            return this;
        }
        public Builder licenseCode(String licenseCode) {
            this.licenseCode = Objects.requireNonNull(licenseCode);
            return this;
        }
        public Builder privateDomain(String privateDomain) {
            this.privateDomain = Objects.requireNonNull(privateDomain);
            return this;
        }
        public Builder publicDomain(String publicDomain) {
            this.publicDomain = Objects.requireNonNull(publicDomain);
            return this;
        }
        public Builder publicNetworkAccess(Boolean publicNetworkAccess) {
            this.publicNetworkAccess = Objects.requireNonNull(publicNetworkAccess);
            return this;
        }
        public Builder tags(@Nullable Map<String,Object> tags) {
            this.tags = tags;
            return this;
        }
        public Builder userVswitchId(String userVswitchId) {
            this.userVswitchId = Objects.requireNonNull(userVswitchId);
            return this;
        }        public GetDBAuditInstanceInstance build() {
            return new GetDBAuditInstanceInstance(description, id, instanceStatus, licenseCode, privateDomain, publicDomain, publicNetworkAccess, tags, userVswitchId);
        }
    }
}
