// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ess.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetScheduledTasksTask {
    /**
     * @return Description of the scheduled task.
     * 
     */
    private final String description;
    /**
     * @return ID of the scheduled task id.
     * 
     */
    private final String id;
    /**
     * @return The time period during which a failed scheduled task is retried.
     * 
     */
    private final Integer launchExpirationTime;
    /**
     * @return The time at which the scheduled task is triggered.
     * 
     */
    private final String launchTime;
    private final Integer maxValue;
    private final Integer minValue;
    /**
     * @return Name of the scheduled task name.
     * 
     */
    private final String name;
    /**
     * @return Specifies the end time after which the scheduled task is no longer repeated.
     * 
     */
    private final String recurrenceEndTime;
    /**
     * @return Specifies the recurrence type of the scheduled task.
     * 
     */
    private final String recurrenceType;
    /**
     * @return Specifies how often a scheduled task recurs.
     * 
     */
    private final String recurrenceValue;
    /**
     * @return The operation to be performed when a scheduled task is triggered.
     * 
     */
    private final String scheduledAction;
    private final Boolean taskEnabled;

    @CustomType.Constructor
    private GetScheduledTasksTask(
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("launchExpirationTime") Integer launchExpirationTime,
        @CustomType.Parameter("launchTime") String launchTime,
        @CustomType.Parameter("maxValue") Integer maxValue,
        @CustomType.Parameter("minValue") Integer minValue,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("recurrenceEndTime") String recurrenceEndTime,
        @CustomType.Parameter("recurrenceType") String recurrenceType,
        @CustomType.Parameter("recurrenceValue") String recurrenceValue,
        @CustomType.Parameter("scheduledAction") String scheduledAction,
        @CustomType.Parameter("taskEnabled") Boolean taskEnabled) {
        this.description = description;
        this.id = id;
        this.launchExpirationTime = launchExpirationTime;
        this.launchTime = launchTime;
        this.maxValue = maxValue;
        this.minValue = minValue;
        this.name = name;
        this.recurrenceEndTime = recurrenceEndTime;
        this.recurrenceType = recurrenceType;
        this.recurrenceValue = recurrenceValue;
        this.scheduledAction = scheduledAction;
        this.taskEnabled = taskEnabled;
    }

    /**
     * @return Description of the scheduled task.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return ID of the scheduled task id.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The time period during which a failed scheduled task is retried.
     * 
     */
    public Integer launchExpirationTime() {
        return this.launchExpirationTime;
    }
    /**
     * @return The time at which the scheduled task is triggered.
     * 
     */
    public String launchTime() {
        return this.launchTime;
    }
    public Integer maxValue() {
        return this.maxValue;
    }
    public Integer minValue() {
        return this.minValue;
    }
    /**
     * @return Name of the scheduled task name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Specifies the end time after which the scheduled task is no longer repeated.
     * 
     */
    public String recurrenceEndTime() {
        return this.recurrenceEndTime;
    }
    /**
     * @return Specifies the recurrence type of the scheduled task.
     * 
     */
    public String recurrenceType() {
        return this.recurrenceType;
    }
    /**
     * @return Specifies how often a scheduled task recurs.
     * 
     */
    public String recurrenceValue() {
        return this.recurrenceValue;
    }
    /**
     * @return The operation to be performed when a scheduled task is triggered.
     * 
     */
    public String scheduledAction() {
        return this.scheduledAction;
    }
    public Boolean taskEnabled() {
        return this.taskEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScheduledTasksTask defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String description;
        private String id;
        private Integer launchExpirationTime;
        private String launchTime;
        private Integer maxValue;
        private Integer minValue;
        private String name;
        private String recurrenceEndTime;
        private String recurrenceType;
        private String recurrenceValue;
        private String scheduledAction;
        private Boolean taskEnabled;

        public Builder() {
    	      // Empty
        }

        public Builder(GetScheduledTasksTask defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.launchExpirationTime = defaults.launchExpirationTime;
    	      this.launchTime = defaults.launchTime;
    	      this.maxValue = defaults.maxValue;
    	      this.minValue = defaults.minValue;
    	      this.name = defaults.name;
    	      this.recurrenceEndTime = defaults.recurrenceEndTime;
    	      this.recurrenceType = defaults.recurrenceType;
    	      this.recurrenceValue = defaults.recurrenceValue;
    	      this.scheduledAction = defaults.scheduledAction;
    	      this.taskEnabled = defaults.taskEnabled;
        }

        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder launchExpirationTime(Integer launchExpirationTime) {
            this.launchExpirationTime = Objects.requireNonNull(launchExpirationTime);
            return this;
        }
        public Builder launchTime(String launchTime) {
            this.launchTime = Objects.requireNonNull(launchTime);
            return this;
        }
        public Builder maxValue(Integer maxValue) {
            this.maxValue = Objects.requireNonNull(maxValue);
            return this;
        }
        public Builder minValue(Integer minValue) {
            this.minValue = Objects.requireNonNull(minValue);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder recurrenceEndTime(String recurrenceEndTime) {
            this.recurrenceEndTime = Objects.requireNonNull(recurrenceEndTime);
            return this;
        }
        public Builder recurrenceType(String recurrenceType) {
            this.recurrenceType = Objects.requireNonNull(recurrenceType);
            return this;
        }
        public Builder recurrenceValue(String recurrenceValue) {
            this.recurrenceValue = Objects.requireNonNull(recurrenceValue);
            return this;
        }
        public Builder scheduledAction(String scheduledAction) {
            this.scheduledAction = Objects.requireNonNull(scheduledAction);
            return this;
        }
        public Builder taskEnabled(Boolean taskEnabled) {
            this.taskEnabled = Objects.requireNonNull(taskEnabled);
            return this;
        }        public GetScheduledTasksTask build() {
            return new GetScheduledTasksTask(description, id, launchExpirationTime, launchTime, maxValue, minValue, name, recurrenceEndTime, recurrenceType, recurrenceValue, scheduledAction, taskEnabled);
        }
    }
}
