// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetGatewayVpnAttachmentsAttachmentIkeConfig {
    /**
     * @return The IKE authentication algorithm.
     * 
     */
    private final String ikeAuthAlg;
    /**
     * @return The IKE encryption algorithm.
     * 
     */
    private final String ikeEncAlg;
    /**
     * @return The IKE lifetime. Unit: seconds.
     * 
     */
    private final String ikeLifetime;
    /**
     * @return The IKE negotiation mode.
     * 
     */
    private final String ikeMode;
    /**
     * @return The DH group.
     * 
     */
    private final String ikePfs;
    /**
     * @return The version of the IKE protocol.
     * 
     */
    private final String ikeVersion;
    /**
     * @return The local ID, which supports the FQDN and IP formats. The current VPN gateway IP address is selected by default.
     * 
     */
    private final String localId;
    /**
     * @return The pre-shared key.
     * 
     */
    private final String psk;
    /**
     * @return The identifier of the peer. The default value is the IP address of the VPN gateway. The value can be a fully qualified domain name (FQDN) or an IP address.
     * 
     */
    private final String remoteId;

    @CustomType.Constructor
    private GetGatewayVpnAttachmentsAttachmentIkeConfig(
        @CustomType.Parameter("ikeAuthAlg") String ikeAuthAlg,
        @CustomType.Parameter("ikeEncAlg") String ikeEncAlg,
        @CustomType.Parameter("ikeLifetime") String ikeLifetime,
        @CustomType.Parameter("ikeMode") String ikeMode,
        @CustomType.Parameter("ikePfs") String ikePfs,
        @CustomType.Parameter("ikeVersion") String ikeVersion,
        @CustomType.Parameter("localId") String localId,
        @CustomType.Parameter("psk") String psk,
        @CustomType.Parameter("remoteId") String remoteId) {
        this.ikeAuthAlg = ikeAuthAlg;
        this.ikeEncAlg = ikeEncAlg;
        this.ikeLifetime = ikeLifetime;
        this.ikeMode = ikeMode;
        this.ikePfs = ikePfs;
        this.ikeVersion = ikeVersion;
        this.localId = localId;
        this.psk = psk;
        this.remoteId = remoteId;
    }

    /**
     * @return The IKE authentication algorithm.
     * 
     */
    public String ikeAuthAlg() {
        return this.ikeAuthAlg;
    }
    /**
     * @return The IKE encryption algorithm.
     * 
     */
    public String ikeEncAlg() {
        return this.ikeEncAlg;
    }
    /**
     * @return The IKE lifetime. Unit: seconds.
     * 
     */
    public String ikeLifetime() {
        return this.ikeLifetime;
    }
    /**
     * @return The IKE negotiation mode.
     * 
     */
    public String ikeMode() {
        return this.ikeMode;
    }
    /**
     * @return The DH group.
     * 
     */
    public String ikePfs() {
        return this.ikePfs;
    }
    /**
     * @return The version of the IKE protocol.
     * 
     */
    public String ikeVersion() {
        return this.ikeVersion;
    }
    /**
     * @return The local ID, which supports the FQDN and IP formats. The current VPN gateway IP address is selected by default.
     * 
     */
    public String localId() {
        return this.localId;
    }
    /**
     * @return The pre-shared key.
     * 
     */
    public String psk() {
        return this.psk;
    }
    /**
     * @return The identifier of the peer. The default value is the IP address of the VPN gateway. The value can be a fully qualified domain name (FQDN) or an IP address.
     * 
     */
    public String remoteId() {
        return this.remoteId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGatewayVpnAttachmentsAttachmentIkeConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String ikeAuthAlg;
        private String ikeEncAlg;
        private String ikeLifetime;
        private String ikeMode;
        private String ikePfs;
        private String ikeVersion;
        private String localId;
        private String psk;
        private String remoteId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetGatewayVpnAttachmentsAttachmentIkeConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ikeAuthAlg = defaults.ikeAuthAlg;
    	      this.ikeEncAlg = defaults.ikeEncAlg;
    	      this.ikeLifetime = defaults.ikeLifetime;
    	      this.ikeMode = defaults.ikeMode;
    	      this.ikePfs = defaults.ikePfs;
    	      this.ikeVersion = defaults.ikeVersion;
    	      this.localId = defaults.localId;
    	      this.psk = defaults.psk;
    	      this.remoteId = defaults.remoteId;
        }

        public Builder ikeAuthAlg(String ikeAuthAlg) {
            this.ikeAuthAlg = Objects.requireNonNull(ikeAuthAlg);
            return this;
        }
        public Builder ikeEncAlg(String ikeEncAlg) {
            this.ikeEncAlg = Objects.requireNonNull(ikeEncAlg);
            return this;
        }
        public Builder ikeLifetime(String ikeLifetime) {
            this.ikeLifetime = Objects.requireNonNull(ikeLifetime);
            return this;
        }
        public Builder ikeMode(String ikeMode) {
            this.ikeMode = Objects.requireNonNull(ikeMode);
            return this;
        }
        public Builder ikePfs(String ikePfs) {
            this.ikePfs = Objects.requireNonNull(ikePfs);
            return this;
        }
        public Builder ikeVersion(String ikeVersion) {
            this.ikeVersion = Objects.requireNonNull(ikeVersion);
            return this;
        }
        public Builder localId(String localId) {
            this.localId = Objects.requireNonNull(localId);
            return this;
        }
        public Builder psk(String psk) {
            this.psk = Objects.requireNonNull(psk);
            return this;
        }
        public Builder remoteId(String remoteId) {
            this.remoteId = Objects.requireNonNull(remoteId);
            return this;
        }        public GetGatewayVpnAttachmentsAttachmentIkeConfig build() {
            return new GetGatewayVpnAttachmentsAttachmentIkeConfig(ikeAuthAlg, ikeEncAlg, ikeLifetime, ikeMode, ikePfs, ikeVersion, localId, psk, remoteId);
        }
    }
}
