// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cr.outputs;

import com.pulumi.alicloud.cr.outputs.GetReposRepoDomainList;
import com.pulumi.alicloud.cr.outputs.GetReposRepoTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetReposRepo {
    /**
     * @return The repository domain list.
     * 
     */
    private final GetReposRepoDomainList domainList;
    /**
     * @return Name of container registry namespace.
     * 
     */
    private final String name;
    /**
     * @return Name of container registry namespace where the repositories are located in.
     * 
     */
    private final String namespace;
    /**
     * @return `PUBLIC` or `PRIVATE`, repository&#39;s visibility.
     * 
     */
    private final String repoType;
    /**
     * @return The repository general information.
     * 
     */
    private final String summary;
    /**
     * @return A list of image tags belong to this repository. Each contains several attributes, see `Block Tag`.
     * 
     */
    private final List<GetReposRepoTag> tags;

    @CustomType.Constructor
    private GetReposRepo(
        @CustomType.Parameter("domainList") GetReposRepoDomainList domainList,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("namespace") String namespace,
        @CustomType.Parameter("repoType") String repoType,
        @CustomType.Parameter("summary") String summary,
        @CustomType.Parameter("tags") List<GetReposRepoTag> tags) {
        this.domainList = domainList;
        this.name = name;
        this.namespace = namespace;
        this.repoType = repoType;
        this.summary = summary;
        this.tags = tags;
    }

    /**
     * @return The repository domain list.
     * 
     */
    public GetReposRepoDomainList domainList() {
        return this.domainList;
    }
    /**
     * @return Name of container registry namespace.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Name of container registry namespace where the repositories are located in.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return `PUBLIC` or `PRIVATE`, repository&#39;s visibility.
     * 
     */
    public String repoType() {
        return this.repoType;
    }
    /**
     * @return The repository general information.
     * 
     */
    public String summary() {
        return this.summary;
    }
    /**
     * @return A list of image tags belong to this repository. Each contains several attributes, see `Block Tag`.
     * 
     */
    public List<GetReposRepoTag> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReposRepo defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetReposRepoDomainList domainList;
        private String name;
        private String namespace;
        private String repoType;
        private String summary;
        private List<GetReposRepoTag> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetReposRepo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domainList = defaults.domainList;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.repoType = defaults.repoType;
    	      this.summary = defaults.summary;
    	      this.tags = defaults.tags;
        }

        public Builder domainList(GetReposRepoDomainList domainList) {
            this.domainList = Objects.requireNonNull(domainList);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }
        public Builder repoType(String repoType) {
            this.repoType = Objects.requireNonNull(repoType);
            return this;
        }
        public Builder summary(String summary) {
            this.summary = Objects.requireNonNull(summary);
            return this;
        }
        public Builder tags(List<GetReposRepoTag> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(GetReposRepoTag... tags) {
            return tags(List.of(tags));
        }        public GetReposRepo build() {
            return new GetReposRepo(domainList, name, namespace, repoType, summary, tags);
        }
    }
}
