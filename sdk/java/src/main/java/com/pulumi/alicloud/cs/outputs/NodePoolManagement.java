// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NodePoolManagement {
    /**
     * @return Whether automatic repair, Default to `false`.
     * 
     */
    private final @Nullable Boolean autoRepair;
    /**
     * @return Whether auto upgrade, Default to `false`.
     * 
     */
    private final @Nullable Boolean autoUpgrade;
    /**
     * @return Max number of unavailable nodes. Default to `1`.
     * 
     */
    private final Integer maxUnavailable;
    /**
     * @return Number of additional nodes. You have to specify one of surge, surge_percentage.
     * 
     */
    private final @Nullable Integer surge;
    /**
     * @return Proportion of additional nodes. You have to specify one of surge, surge_percentage.
     * 
     */
    private final @Nullable Integer surgePercentage;

    @CustomType.Constructor
    private NodePoolManagement(
        @CustomType.Parameter("autoRepair") @Nullable Boolean autoRepair,
        @CustomType.Parameter("autoUpgrade") @Nullable Boolean autoUpgrade,
        @CustomType.Parameter("maxUnavailable") Integer maxUnavailable,
        @CustomType.Parameter("surge") @Nullable Integer surge,
        @CustomType.Parameter("surgePercentage") @Nullable Integer surgePercentage) {
        this.autoRepair = autoRepair;
        this.autoUpgrade = autoUpgrade;
        this.maxUnavailable = maxUnavailable;
        this.surge = surge;
        this.surgePercentage = surgePercentage;
    }

    /**
     * @return Whether automatic repair, Default to `false`.
     * 
     */
    public Optional<Boolean> autoRepair() {
        return Optional.ofNullable(this.autoRepair);
    }
    /**
     * @return Whether auto upgrade, Default to `false`.
     * 
     */
    public Optional<Boolean> autoUpgrade() {
        return Optional.ofNullable(this.autoUpgrade);
    }
    /**
     * @return Max number of unavailable nodes. Default to `1`.
     * 
     */
    public Integer maxUnavailable() {
        return this.maxUnavailable;
    }
    /**
     * @return Number of additional nodes. You have to specify one of surge, surge_percentage.
     * 
     */
    public Optional<Integer> surge() {
        return Optional.ofNullable(this.surge);
    }
    /**
     * @return Proportion of additional nodes. You have to specify one of surge, surge_percentage.
     * 
     */
    public Optional<Integer> surgePercentage() {
        return Optional.ofNullable(this.surgePercentage);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodePoolManagement defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean autoRepair;
        private @Nullable Boolean autoUpgrade;
        private Integer maxUnavailable;
        private @Nullable Integer surge;
        private @Nullable Integer surgePercentage;

        public Builder() {
    	      // Empty
        }

        public Builder(NodePoolManagement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoRepair = defaults.autoRepair;
    	      this.autoUpgrade = defaults.autoUpgrade;
    	      this.maxUnavailable = defaults.maxUnavailable;
    	      this.surge = defaults.surge;
    	      this.surgePercentage = defaults.surgePercentage;
        }

        public Builder autoRepair(@Nullable Boolean autoRepair) {
            this.autoRepair = autoRepair;
            return this;
        }
        public Builder autoUpgrade(@Nullable Boolean autoUpgrade) {
            this.autoUpgrade = autoUpgrade;
            return this;
        }
        public Builder maxUnavailable(Integer maxUnavailable) {
            this.maxUnavailable = Objects.requireNonNull(maxUnavailable);
            return this;
        }
        public Builder surge(@Nullable Integer surge) {
            this.surge = surge;
            return this;
        }
        public Builder surgePercentage(@Nullable Integer surgePercentage) {
            this.surgePercentage = surgePercentage;
            return this;
        }        public NodePoolManagement build() {
            return new NodePoolManagement(autoRepair, autoUpgrade, maxUnavailable, surge, surgePercentage);
        }
    }
}
