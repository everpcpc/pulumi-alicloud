// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.elasticsearch.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetInstancesInstance {
    private final String createdAt;
    private final Integer dataNodeAmount;
    private final Integer dataNodeDiskSize;
    private final String dataNodeDiskType;
    private final String dataNodeSpec;
    private final String description;
    private final String id;
    private final String instanceChargeType;
    private final String status;
    private final Map<String,Object> tags;
    private final String updatedAt;
    private final String version;
    private final String vswitchId;

    @CustomType.Constructor
    private GetInstancesInstance(
        @CustomType.Parameter("createdAt") String createdAt,
        @CustomType.Parameter("dataNodeAmount") Integer dataNodeAmount,
        @CustomType.Parameter("dataNodeDiskSize") Integer dataNodeDiskSize,
        @CustomType.Parameter("dataNodeDiskType") String dataNodeDiskType,
        @CustomType.Parameter("dataNodeSpec") String dataNodeSpec,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceChargeType") String instanceChargeType,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("tags") Map<String,Object> tags,
        @CustomType.Parameter("updatedAt") String updatedAt,
        @CustomType.Parameter("version") String version,
        @CustomType.Parameter("vswitchId") String vswitchId) {
        this.createdAt = createdAt;
        this.dataNodeAmount = dataNodeAmount;
        this.dataNodeDiskSize = dataNodeDiskSize;
        this.dataNodeDiskType = dataNodeDiskType;
        this.dataNodeSpec = dataNodeSpec;
        this.description = description;
        this.id = id;
        this.instanceChargeType = instanceChargeType;
        this.status = status;
        this.tags = tags;
        this.updatedAt = updatedAt;
        this.version = version;
        this.vswitchId = vswitchId;
    }

    public String createdAt() {
        return this.createdAt;
    }
    public Integer dataNodeAmount() {
        return this.dataNodeAmount;
    }
    public Integer dataNodeDiskSize() {
        return this.dataNodeDiskSize;
    }
    public String dataNodeDiskType() {
        return this.dataNodeDiskType;
    }
    public String dataNodeSpec() {
        return this.dataNodeSpec;
    }
    public String description() {
        return this.description;
    }
    public String id() {
        return this.id;
    }
    public String instanceChargeType() {
        return this.instanceChargeType;
    }
    public String status() {
        return this.status;
    }
    public Map<String,Object> tags() {
        return this.tags;
    }
    public String updatedAt() {
        return this.updatedAt;
    }
    public String version() {
        return this.version;
    }
    public String vswitchId() {
        return this.vswitchId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstance defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createdAt;
        private Integer dataNodeAmount;
        private Integer dataNodeDiskSize;
        private String dataNodeDiskType;
        private String dataNodeSpec;
        private String description;
        private String id;
        private String instanceChargeType;
        private String status;
        private Map<String,Object> tags;
        private String updatedAt;
        private String version;
        private String vswitchId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstancesInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAt = defaults.createdAt;
    	      this.dataNodeAmount = defaults.dataNodeAmount;
    	      this.dataNodeDiskSize = defaults.dataNodeDiskSize;
    	      this.dataNodeDiskType = defaults.dataNodeDiskType;
    	      this.dataNodeSpec = defaults.dataNodeSpec;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.instanceChargeType = defaults.instanceChargeType;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.updatedAt = defaults.updatedAt;
    	      this.version = defaults.version;
    	      this.vswitchId = defaults.vswitchId;
        }

        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        public Builder dataNodeAmount(Integer dataNodeAmount) {
            this.dataNodeAmount = Objects.requireNonNull(dataNodeAmount);
            return this;
        }
        public Builder dataNodeDiskSize(Integer dataNodeDiskSize) {
            this.dataNodeDiskSize = Objects.requireNonNull(dataNodeDiskSize);
            return this;
        }
        public Builder dataNodeDiskType(String dataNodeDiskType) {
            this.dataNodeDiskType = Objects.requireNonNull(dataNodeDiskType);
            return this;
        }
        public Builder dataNodeSpec(String dataNodeSpec) {
            this.dataNodeSpec = Objects.requireNonNull(dataNodeSpec);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instanceChargeType(String instanceChargeType) {
            this.instanceChargeType = Objects.requireNonNull(instanceChargeType);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder tags(Map<String,Object> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt);
            return this;
        }
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public Builder vswitchId(String vswitchId) {
            this.vswitchId = Objects.requireNonNull(vswitchId);
            return this;
        }        public GetInstancesInstance build() {
            return new GetInstancesInstance(createdAt, dataNodeAmount, dataNodeDiskSize, dataNodeDiskType, dataNodeSpec, description, id, instanceChargeType, status, tags, updatedAt, version, vswitchId);
        }
    }
}
