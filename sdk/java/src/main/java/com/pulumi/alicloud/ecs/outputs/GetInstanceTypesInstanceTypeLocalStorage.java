// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstanceTypesInstanceTypeLocalStorage {
    private final String amount;
    private final String capacity;
    private final String category;

    @CustomType.Constructor
    private GetInstanceTypesInstanceTypeLocalStorage(
        @CustomType.Parameter("amount") String amount,
        @CustomType.Parameter("capacity") String capacity,
        @CustomType.Parameter("category") String category) {
        this.amount = amount;
        this.capacity = capacity;
        this.category = category;
    }

    public String amount() {
        return this.amount;
    }
    public String capacity() {
        return this.capacity;
    }
    public String category() {
        return this.category;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceTypesInstanceTypeLocalStorage defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String amount;
        private String capacity;
        private String category;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstanceTypesInstanceTypeLocalStorage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.amount = defaults.amount;
    	      this.capacity = defaults.capacity;
    	      this.category = defaults.category;
        }

        public Builder amount(String amount) {
            this.amount = Objects.requireNonNull(amount);
            return this;
        }
        public Builder capacity(String capacity) {
            this.capacity = Objects.requireNonNull(capacity);
            return this;
        }
        public Builder category(String category) {
            this.category = Objects.requireNonNull(category);
            return this;
        }        public GetInstanceTypesInstanceTypeLocalStorage build() {
            return new GetInstanceTypesInstanceTypeLocalStorage(amount, capacity, category);
        }
    }
}
