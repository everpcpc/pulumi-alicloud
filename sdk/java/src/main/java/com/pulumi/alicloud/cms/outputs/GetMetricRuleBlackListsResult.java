// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cms.outputs;

import com.pulumi.alicloud.cms.outputs.GetMetricRuleBlackListsList;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMetricRuleBlackListsResult {
    /**
     * @return Cloud service classification. For example, Redis includes kvstore_standard, kvstore_sharding, and kvstore_splitrw.
     * 
     */
    private final @Nullable String category;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return A list of Metric Rule Black List IDs.
     * 
     */
    private final List<String> ids;
    /**
     * @return A list of Metric Rule Black List Entries. Each element contains the following attributes:
     * 
     */
    private final List<GetMetricRuleBlackListsList> lists;
    /**
     * @return The first ID of the resource
     * 
     */
    private final @Nullable String metricRuleBlackListId;
    private final @Nullable String nameRegex;
    /**
     * @return A list of name of Metric Rule Black Lists.
     * 
     */
    private final List<String> names;
    /**
     * @return The data namespace of the cloud service.
     * 
     */
    private final @Nullable String namespace;
    private final @Nullable Integer order;
    private final @Nullable String outputFile;
    private final @Nullable Integer pageNumber;
    private final @Nullable Integer pageSize;

    @CustomType.Constructor
    private GetMetricRuleBlackListsResult(
        @CustomType.Parameter("category") @Nullable String category,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ids") List<String> ids,
        @CustomType.Parameter("lists") List<GetMetricRuleBlackListsList> lists,
        @CustomType.Parameter("metricRuleBlackListId") @Nullable String metricRuleBlackListId,
        @CustomType.Parameter("nameRegex") @Nullable String nameRegex,
        @CustomType.Parameter("names") List<String> names,
        @CustomType.Parameter("namespace") @Nullable String namespace,
        @CustomType.Parameter("order") @Nullable Integer order,
        @CustomType.Parameter("outputFile") @Nullable String outputFile,
        @CustomType.Parameter("pageNumber") @Nullable Integer pageNumber,
        @CustomType.Parameter("pageSize") @Nullable Integer pageSize) {
        this.category = category;
        this.id = id;
        this.ids = ids;
        this.lists = lists;
        this.metricRuleBlackListId = metricRuleBlackListId;
        this.nameRegex = nameRegex;
        this.names = names;
        this.namespace = namespace;
        this.order = order;
        this.outputFile = outputFile;
        this.pageNumber = pageNumber;
        this.pageSize = pageSize;
    }

    /**
     * @return Cloud service classification. For example, Redis includes kvstore_standard, kvstore_sharding, and kvstore_splitrw.
     * 
     */
    public Optional<String> category() {
        return Optional.ofNullable(this.category);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of Metric Rule Black List IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    /**
     * @return A list of Metric Rule Black List Entries. Each element contains the following attributes:
     * 
     */
    public List<GetMetricRuleBlackListsList> lists() {
        return this.lists;
    }
    /**
     * @return The first ID of the resource
     * 
     */
    public Optional<String> metricRuleBlackListId() {
        return Optional.ofNullable(this.metricRuleBlackListId);
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    /**
     * @return A list of name of Metric Rule Black Lists.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    /**
     * @return The data namespace of the cloud service.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    public Optional<Integer> order() {
        return Optional.ofNullable(this.order);
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Optional<Integer> pageNumber() {
        return Optional.ofNullable(this.pageNumber);
    }
    public Optional<Integer> pageSize() {
        return Optional.ofNullable(this.pageSize);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMetricRuleBlackListsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String category;
        private String id;
        private List<String> ids;
        private List<GetMetricRuleBlackListsList> lists;
        private @Nullable String metricRuleBlackListId;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String namespace;
        private @Nullable Integer order;
        private @Nullable String outputFile;
        private @Nullable Integer pageNumber;
        private @Nullable Integer pageSize;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMetricRuleBlackListsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.lists = defaults.lists;
    	      this.metricRuleBlackListId = defaults.metricRuleBlackListId;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.namespace = defaults.namespace;
    	      this.order = defaults.order;
    	      this.outputFile = defaults.outputFile;
    	      this.pageNumber = defaults.pageNumber;
    	      this.pageSize = defaults.pageSize;
        }

        public Builder category(@Nullable String category) {
            this.category = category;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public Builder lists(List<GetMetricRuleBlackListsList> lists) {
            this.lists = Objects.requireNonNull(lists);
            return this;
        }
        public Builder lists(GetMetricRuleBlackListsList... lists) {
            return lists(List.of(lists));
        }
        public Builder metricRuleBlackListId(@Nullable String metricRuleBlackListId) {
            this.metricRuleBlackListId = metricRuleBlackListId;
            return this;
        }
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        public Builder names(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        public Builder namespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }
        public Builder order(@Nullable Integer order) {
            this.order = order;
            return this;
        }
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        public Builder pageNumber(@Nullable Integer pageNumber) {
            this.pageNumber = pageNumber;
            return this;
        }
        public Builder pageSize(@Nullable Integer pageSize) {
            this.pageSize = pageSize;
            return this;
        }        public GetMetricRuleBlackListsResult build() {
            return new GetMetricRuleBlackListsResult(category, id, ids, lists, metricRuleBlackListId, nameRegex, names, namespace, order, outputFile, pageNumber, pageSize);
        }
    }
}
