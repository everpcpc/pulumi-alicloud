// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.cs.KubernetesAddonArgs;
import com.pulumi.alicloud.cs.inputs.KubernetesAddonState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource will help you to manage addon in Kubernetes Cluster.
 * 
 * &gt; **NOTE:** Available in 1.150.0+.
 * **NOTE:** From version 1.166.0, support specifying addon customizable configuration.
 * 
 * ## Example Usage
 * 
 * **Create a managed cluster**
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.ecs.EcsFunctions;
 * import com.pulumi.alicloud.ecs.inputs.GetInstanceTypesArgs;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.ecs.KeyPair;
 * import com.pulumi.alicloud.ecs.KeyPairArgs;
 * import com.pulumi.alicloud.cs.ManagedKubernetes;
 * import com.pulumi.alicloud.cs.ManagedKubernetesArgs;
 * import com.pulumi.codegen.internal.KeyedValue;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get(&#34;name&#34;).orElse(&#34;tf-test&#34;);
 *         final var defaultZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
 *             .availableResourceCreation(&#34;VSwitch&#34;)
 *             .build());
 * 
 *         final var defaultInstanceTypes = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
 *             .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
 *             .cpuCoreCount(2)
 *             .memorySize(4)
 *             .kubernetesNodeRole(&#34;Worker&#34;)
 *             .build());
 * 
 *         var defaultNetwork = new Network(&#34;defaultNetwork&#34;, NetworkArgs.builder()        
 *             .vpcName(name)
 *             .cidrBlock(&#34;10.1.0.0/21&#34;)
 *             .build());
 * 
 *         var defaultSwitch = new Switch(&#34;defaultSwitch&#34;, SwitchArgs.builder()        
 *             .vswitchName(name)
 *             .vpcId(defaultNetwork.id())
 *             .cidrBlock(&#34;10.1.1.0/24&#34;)
 *             .zoneId(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
 *             .build());
 * 
 *         var defaultKeyPair = new KeyPair(&#34;defaultKeyPair&#34;, KeyPairArgs.builder()        
 *             .keyPairName(name)
 *             .build());
 * 
 *         for (var i = 0; i &lt; (1 == true); i++) {
 *             new ManagedKubernetes(&#34;defaultManagedKubernetes-&#34; + i, ManagedKubernetesArgs.builder()            
 *                 .clusterSpec(&#34;ack.pro.small&#34;)
 *                 .isEnterpriseSecurityGroup(true)
 *                 .workerNumber(2)
 *                 .password(&#34;Hello1234&#34;)
 *                 .podCidr(&#34;172.20.0.0/16&#34;)
 *                 .serviceCidr(&#34;172.21.0.0/20&#34;)
 *                 .workerVswitchIds(defaultSwitch.id())
 *                 .workerInstanceTypes(defaultInstanceTypes.applyValue(getInstanceTypesResult -&gt; getInstanceTypesResult.instanceTypes()[0].id()))
 *                 .build());
 * 
 *         
 * }
 *     }
 * }
 * ```
 * **Installing of addon**
 * When a cluster is created, some system addons and those specified at the time of cluster creation will be installed, so when an addon resource is applied:
 * * If the addon already exists in the cluster and its version is the same as the specified version, it will be skipped and will not be reinstalled.
 * * If the addon already exists in the cluster and its version is different from the specified version, the addon will be upgraded.
 * * If the addon does not exist in the cluster, it will be installed.
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.cs.KubernetesAddon;
 * import com.pulumi.alicloud.cs.KubernetesAddonArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var ack_node_problem_detector = new KubernetesAddon(&#34;ack-node-problem-detector&#34;, KubernetesAddonArgs.builder()        
 *             .clusterId(alicloud_cs_managed_kubernetes.default()[0].id())
 *             .version(&#34;1.2.7&#34;)
 *             .build());
 * 
 *         var nginxIngressController = new KubernetesAddon(&#34;nginxIngressController&#34;, KubernetesAddonArgs.builder()        
 *             .clusterId(var_.cluster_id())
 *             .version(&#34;v1.1.2-aliyun.2&#34;)
 *             .config(serializeJson(
 *                 jsonObject(
 *                     jsonProperty(&#34;CpuLimit&#34;, &#34;&#34;),
 *                     jsonProperty(&#34;CpuRequest&#34;, &#34;100m&#34;),
 *                     jsonProperty(&#34;EnableWebhook&#34;, true),
 *                     jsonProperty(&#34;HostNetwork&#34;, false),
 *                     jsonProperty(&#34;IngressSlbNetworkType&#34;, &#34;internet&#34;),
 *                     jsonProperty(&#34;IngressSlbSpec&#34;, &#34;slb.s2.small&#34;),
 *                     jsonProperty(&#34;MemoryLimit&#34;, &#34;&#34;),
 *                     jsonProperty(&#34;MemoryRequest&#34;, &#34;200Mi&#34;),
 *                     jsonProperty(&#34;NodeSelector&#34;, jsonArray(
 *                     ))
 *                 )))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * **Upgrading of addon**
 * First, check the `next_version` field of the addon that can be upgraded to through the `.tfstate file`, then overwrite the `version` field with the value of `next_version` and apply.
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.cs.KubernetesAddon;
 * import com.pulumi.alicloud.cs.KubernetesAddonArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var ack_node_problem_detector = new KubernetesAddon(&#34;ack-node-problem-detector&#34;, KubernetesAddonArgs.builder()        
 *             .clusterId(alicloud_cs_managed_kubernetes.default()[0].id())
 *             .version(&#34;1.2.8&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Cluster addon can be imported by cluster id and addon name. Then write the addon.tf file according to the result of `terraform plan`.
 * 
 * ```sh
 *  $ pulumi import alicloud:cs/kubernetesAddon:KubernetesAddon my_addon &lt;cluster_id&gt;:&lt;addon_name&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:cs/kubernetesAddon:KubernetesAddon")
public class KubernetesAddon extends com.pulumi.resources.CustomResource {
    /**
     * Is the addon ready for upgrade.
     * 
     */
    @Export(name="canUpgrade", type=Boolean.class, parameters={})
    private Output<Boolean> canUpgrade;

    /**
     * @return Is the addon ready for upgrade.
     * 
     */
    public Output<Boolean> canUpgrade() {
        return this.canUpgrade;
    }
    /**
     * The id of kubernetes cluster.
     * 
     */
    @Export(name="clusterId", type=String.class, parameters={})
    private Output<String> clusterId;

    /**
     * @return The id of kubernetes cluster.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }
    /**
     * The custom configuration of addon. You can checkout the customizable configuration of the addon through datasource `alicloud.cs.getKubernetesAddonMetadata`, the returned format is the standard json schema. If return empty, it means that the addon does not support custom configuration yet. You can also checkout the current custom configuration through the data source `alicloud.cs.getKubernetesAddons`.
     * 
     */
    @Export(name="config", type=String.class, parameters={})
    private Output</* @Nullable */ String> config;

    /**
     * @return The custom configuration of addon. You can checkout the customizable configuration of the addon through datasource `alicloud.cs.getKubernetesAddonMetadata`, the returned format is the standard json schema. If return empty, it means that the addon does not support custom configuration yet. You can also checkout the current custom configuration through the data source `alicloud.cs.getKubernetesAddons`.
     * 
     */
    public Output<Optional<String>> config() {
        return Codegen.optional(this.config);
    }
    /**
     * The name of addon.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of addon.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The version which addon can be upgraded to.
     * 
     */
    @Export(name="nextVersion", type=String.class, parameters={})
    private Output<String> nextVersion;

    /**
     * @return The version which addon can be upgraded to.
     * 
     */
    public Output<String> nextVersion() {
        return this.nextVersion;
    }
    /**
     * Is it a mandatory addon to be installed.
     * 
     */
    @Export(name="required", type=Boolean.class, parameters={})
    private Output<Boolean> required;

    /**
     * @return Is it a mandatory addon to be installed.
     * 
     */
    public Output<Boolean> required() {
        return this.required;
    }
    /**
     * The current version of addon.
     * 
     */
    @Export(name="version", type=String.class, parameters={})
    private Output<String> version;

    /**
     * @return The current version of addon.
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public KubernetesAddon(String name) {
        this(name, KubernetesAddonArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public KubernetesAddon(String name, KubernetesAddonArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public KubernetesAddon(String name, KubernetesAddonArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cs/kubernetesAddon:KubernetesAddon", name, args == null ? KubernetesAddonArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private KubernetesAddon(String name, Output<String> id, @Nullable KubernetesAddonState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cs/kubernetesAddon:KubernetesAddon", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static KubernetesAddon get(String name, Output<String> id, @Nullable KubernetesAddonState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new KubernetesAddon(name, id, state, options);
    }
}
