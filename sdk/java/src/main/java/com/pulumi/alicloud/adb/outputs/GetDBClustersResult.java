// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.adb.outputs;

import com.pulumi.alicloud.adb.outputs.GetDBClustersCluster;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDBClustersResult {
    private final List<GetDBClustersCluster> clusters;
    private final @Nullable String description;
    private final @Nullable String descriptionRegex;
    private final List<String> descriptions;
    private final @Nullable Boolean enableDetails;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<String> ids;
    private final @Nullable String outputFile;
    private final @Nullable Integer pageNumber;
    private final @Nullable Integer pageSize;
    private final @Nullable String resourceGroupId;
    private final @Nullable String status;
    private final @Nullable Map<String,Object> tags;
    private final Integer totalCount;

    @CustomType.Constructor
    private GetDBClustersResult(
        @CustomType.Parameter("clusters") List<GetDBClustersCluster> clusters,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("descriptionRegex") @Nullable String descriptionRegex,
        @CustomType.Parameter("descriptions") List<String> descriptions,
        @CustomType.Parameter("enableDetails") @Nullable Boolean enableDetails,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ids") List<String> ids,
        @CustomType.Parameter("outputFile") @Nullable String outputFile,
        @CustomType.Parameter("pageNumber") @Nullable Integer pageNumber,
        @CustomType.Parameter("pageSize") @Nullable Integer pageSize,
        @CustomType.Parameter("resourceGroupId") @Nullable String resourceGroupId,
        @CustomType.Parameter("status") @Nullable String status,
        @CustomType.Parameter("tags") @Nullable Map<String,Object> tags,
        @CustomType.Parameter("totalCount") Integer totalCount) {
        this.clusters = clusters;
        this.description = description;
        this.descriptionRegex = descriptionRegex;
        this.descriptions = descriptions;
        this.enableDetails = enableDetails;
        this.id = id;
        this.ids = ids;
        this.outputFile = outputFile;
        this.pageNumber = pageNumber;
        this.pageSize = pageSize;
        this.resourceGroupId = resourceGroupId;
        this.status = status;
        this.tags = tags;
        this.totalCount = totalCount;
    }

    public List<GetDBClustersCluster> clusters() {
        return this.clusters;
    }
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<String> descriptionRegex() {
        return Optional.ofNullable(this.descriptionRegex);
    }
    public List<String> descriptions() {
        return this.descriptions;
    }
    public Optional<Boolean> enableDetails() {
        return Optional.ofNullable(this.enableDetails);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Optional<Integer> pageNumber() {
        return Optional.ofNullable(this.pageNumber);
    }
    public Optional<Integer> pageSize() {
        return Optional.ofNullable(this.pageSize);
    }
    public Optional<String> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    public Map<String,Object> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Integer totalCount() {
        return this.totalCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDBClustersResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetDBClustersCluster> clusters;
        private @Nullable String description;
        private @Nullable String descriptionRegex;
        private List<String> descriptions;
        private @Nullable Boolean enableDetails;
        private String id;
        private List<String> ids;
        private @Nullable String outputFile;
        private @Nullable Integer pageNumber;
        private @Nullable Integer pageSize;
        private @Nullable String resourceGroupId;
        private @Nullable String status;
        private @Nullable Map<String,Object> tags;
        private Integer totalCount;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDBClustersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusters = defaults.clusters;
    	      this.description = defaults.description;
    	      this.descriptionRegex = defaults.descriptionRegex;
    	      this.descriptions = defaults.descriptions;
    	      this.enableDetails = defaults.enableDetails;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.outputFile = defaults.outputFile;
    	      this.pageNumber = defaults.pageNumber;
    	      this.pageSize = defaults.pageSize;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.totalCount = defaults.totalCount;
        }

        public Builder clusters(List<GetDBClustersCluster> clusters) {
            this.clusters = Objects.requireNonNull(clusters);
            return this;
        }
        public Builder clusters(GetDBClustersCluster... clusters) {
            return clusters(List.of(clusters));
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder descriptionRegex(@Nullable String descriptionRegex) {
            this.descriptionRegex = descriptionRegex;
            return this;
        }
        public Builder descriptions(List<String> descriptions) {
            this.descriptions = Objects.requireNonNull(descriptions);
            return this;
        }
        public Builder descriptions(String... descriptions) {
            return descriptions(List.of(descriptions));
        }
        public Builder enableDetails(@Nullable Boolean enableDetails) {
            this.enableDetails = enableDetails;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        public Builder pageNumber(@Nullable Integer pageNumber) {
            this.pageNumber = pageNumber;
            return this;
        }
        public Builder pageSize(@Nullable Integer pageSize) {
            this.pageSize = pageSize;
            return this;
        }
        public Builder resourceGroupId(@Nullable String resourceGroupId) {
            this.resourceGroupId = resourceGroupId;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public Builder tags(@Nullable Map<String,Object> tags) {
            this.tags = tags;
            return this;
        }
        public Builder totalCount(Integer totalCount) {
            this.totalCount = Objects.requireNonNull(totalCount);
            return this;
        }        public GetDBClustersResult build() {
            return new GetDBClustersResult(clusters, description, descriptionRegex, descriptions, enableDetails, id, ids, outputFile, pageNumber, pageSize, resourceGroupId, status, tags, totalCount);
        }
    }
}
