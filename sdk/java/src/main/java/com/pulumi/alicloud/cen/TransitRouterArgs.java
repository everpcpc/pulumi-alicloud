// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransitRouterArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransitRouterArgs Empty = new TransitRouterArgs();

    /**
     * The ID of the CEN.
     * 
     */
    @Import(name="cenId", required=true)
    private Output<String> cenId;

    /**
     * @return The ID of the CEN.
     * 
     */
    public Output<String> cenId() {
        return this.cenId;
    }

    /**
     * The dry run.
     * 
     */
    @Import(name="dryRun")
    private @Nullable Output<Boolean> dryRun;

    /**
     * @return The dry run.
     * 
     */
    public Optional<Output<Boolean>> dryRun() {
        return Optional.ofNullable(this.dryRun);
    }

    /**
     * The description of the transit router.
     * 
     */
    @Import(name="transitRouterDescription")
    private @Nullable Output<String> transitRouterDescription;

    /**
     * @return The description of the transit router.
     * 
     */
    public Optional<Output<String>> transitRouterDescription() {
        return Optional.ofNullable(this.transitRouterDescription);
    }

    /**
     * The name of the transit router.
     * 
     */
    @Import(name="transitRouterName")
    private @Nullable Output<String> transitRouterName;

    /**
     * @return The name of the transit router.
     * 
     */
    public Optional<Output<String>> transitRouterName() {
        return Optional.ofNullable(this.transitRouterName);
    }

    private TransitRouterArgs() {}

    private TransitRouterArgs(TransitRouterArgs $) {
        this.cenId = $.cenId;
        this.dryRun = $.dryRun;
        this.transitRouterDescription = $.transitRouterDescription;
        this.transitRouterName = $.transitRouterName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransitRouterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransitRouterArgs $;

        public Builder() {
            $ = new TransitRouterArgs();
        }

        public Builder(TransitRouterArgs defaults) {
            $ = new TransitRouterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cenId The ID of the CEN.
         * 
         * @return builder
         * 
         */
        public Builder cenId(Output<String> cenId) {
            $.cenId = cenId;
            return this;
        }

        /**
         * @param cenId The ID of the CEN.
         * 
         * @return builder
         * 
         */
        public Builder cenId(String cenId) {
            return cenId(Output.of(cenId));
        }

        /**
         * @param dryRun The dry run.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(@Nullable Output<Boolean> dryRun) {
            $.dryRun = dryRun;
            return this;
        }

        /**
         * @param dryRun The dry run.
         * 
         * @return builder
         * 
         */
        public Builder dryRun(Boolean dryRun) {
            return dryRun(Output.of(dryRun));
        }

        /**
         * @param transitRouterDescription The description of the transit router.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterDescription(@Nullable Output<String> transitRouterDescription) {
            $.transitRouterDescription = transitRouterDescription;
            return this;
        }

        /**
         * @param transitRouterDescription The description of the transit router.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterDescription(String transitRouterDescription) {
            return transitRouterDescription(Output.of(transitRouterDescription));
        }

        /**
         * @param transitRouterName The name of the transit router.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterName(@Nullable Output<String> transitRouterName) {
            $.transitRouterName = transitRouterName;
            return this;
        }

        /**
         * @param transitRouterName The name of the transit router.
         * 
         * @return builder
         * 
         */
        public Builder transitRouterName(String transitRouterName) {
            return transitRouterName(Output.of(transitRouterName));
        }

        public TransitRouterArgs build() {
            $.cenId = Objects.requireNonNull($.cenId, "expected parameter 'cenId' to be non-null");
            return $;
        }
    }

}
