// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc.outputs;

import com.pulumi.alicloud.vpc.outputs.GetSwitchesVswitch;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSwitchesResult {
    /**
     * @return CIDR block of the VSwitch.
     * 
     */
    private final @Nullable String cidrBlock;
    private final @Nullable Boolean dryRun;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return A list of VSwitch IDs.
     * 
     */
    private final List<String> ids;
    /**
     * @return Whether the VSwitch is the default one in the region.
     * 
     */
    private final @Nullable Boolean isDefault;
    private final @Nullable String nameRegex;
    /**
     * @return A list of VSwitch names.
     * 
     */
    private final List<String> names;
    private final @Nullable String outputFile;
    /**
     * @return The resource group ID of the VSwitch.
     * 
     */
    private final @Nullable String resourceGroupId;
    /**
     * @return The route table ID of the VSwitch.
     * 
     */
    private final @Nullable String routeTableId;
    /**
     * @return The status of the VSwitch.
     * 
     */
    private final @Nullable String status;
    /**
     * @return The Tags of the VSwitch.
     * 
     */
    private final @Nullable Map<String,Object> tags;
    /**
     * @return ID of the VPC that owns the VSwitch.
     * 
     */
    private final @Nullable String vpcId;
    /**
     * @return Name of the VSwitch.
     * 
     */
    private final @Nullable String vswitchName;
    private final @Nullable Integer vswitchOwnerId;
    /**
     * @return A list of VSwitches. Each element contains the following attributes:
     * 
     */
    private final List<GetSwitchesVswitch> vswitches;
    /**
     * @return ID of the availability zone where the VSwitch is located.
     * 
     */
    private final @Nullable String zoneId;

    @CustomType.Constructor
    private GetSwitchesResult(
        @CustomType.Parameter("cidrBlock") @Nullable String cidrBlock,
        @CustomType.Parameter("dryRun") @Nullable Boolean dryRun,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ids") List<String> ids,
        @CustomType.Parameter("isDefault") @Nullable Boolean isDefault,
        @CustomType.Parameter("nameRegex") @Nullable String nameRegex,
        @CustomType.Parameter("names") List<String> names,
        @CustomType.Parameter("outputFile") @Nullable String outputFile,
        @CustomType.Parameter("resourceGroupId") @Nullable String resourceGroupId,
        @CustomType.Parameter("routeTableId") @Nullable String routeTableId,
        @CustomType.Parameter("status") @Nullable String status,
        @CustomType.Parameter("tags") @Nullable Map<String,Object> tags,
        @CustomType.Parameter("vpcId") @Nullable String vpcId,
        @CustomType.Parameter("vswitchName") @Nullable String vswitchName,
        @CustomType.Parameter("vswitchOwnerId") @Nullable Integer vswitchOwnerId,
        @CustomType.Parameter("vswitches") List<GetSwitchesVswitch> vswitches,
        @CustomType.Parameter("zoneId") @Nullable String zoneId) {
        this.cidrBlock = cidrBlock;
        this.dryRun = dryRun;
        this.id = id;
        this.ids = ids;
        this.isDefault = isDefault;
        this.nameRegex = nameRegex;
        this.names = names;
        this.outputFile = outputFile;
        this.resourceGroupId = resourceGroupId;
        this.routeTableId = routeTableId;
        this.status = status;
        this.tags = tags;
        this.vpcId = vpcId;
        this.vswitchName = vswitchName;
        this.vswitchOwnerId = vswitchOwnerId;
        this.vswitches = vswitches;
        this.zoneId = zoneId;
    }

    /**
     * @return CIDR block of the VSwitch.
     * 
     */
    public Optional<String> cidrBlock() {
        return Optional.ofNullable(this.cidrBlock);
    }
    public Optional<Boolean> dryRun() {
        return Optional.ofNullable(this.dryRun);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of VSwitch IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    /**
     * @return Whether the VSwitch is the default one in the region.
     * 
     */
    public Optional<Boolean> isDefault() {
        return Optional.ofNullable(this.isDefault);
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    /**
     * @return A list of VSwitch names.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return The resource group ID of the VSwitch.
     * 
     */
    public Optional<String> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }
    /**
     * @return The route table ID of the VSwitch.
     * 
     */
    public Optional<String> routeTableId() {
        return Optional.ofNullable(this.routeTableId);
    }
    /**
     * @return The status of the VSwitch.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The Tags of the VSwitch.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return ID of the VPC that owns the VSwitch.
     * 
     */
    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }
    /**
     * @return Name of the VSwitch.
     * 
     */
    public Optional<String> vswitchName() {
        return Optional.ofNullable(this.vswitchName);
    }
    public Optional<Integer> vswitchOwnerId() {
        return Optional.ofNullable(this.vswitchOwnerId);
    }
    /**
     * @return A list of VSwitches. Each element contains the following attributes:
     * 
     */
    public List<GetSwitchesVswitch> vswitches() {
        return this.vswitches;
    }
    /**
     * @return ID of the availability zone where the VSwitch is located.
     * 
     */
    public Optional<String> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSwitchesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String cidrBlock;
        private @Nullable Boolean dryRun;
        private String id;
        private List<String> ids;
        private @Nullable Boolean isDefault;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        private @Nullable String resourceGroupId;
        private @Nullable String routeTableId;
        private @Nullable String status;
        private @Nullable Map<String,Object> tags;
        private @Nullable String vpcId;
        private @Nullable String vswitchName;
        private @Nullable Integer vswitchOwnerId;
        private List<GetSwitchesVswitch> vswitches;
        private @Nullable String zoneId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSwitchesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidrBlock = defaults.cidrBlock;
    	      this.dryRun = defaults.dryRun;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.isDefault = defaults.isDefault;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.routeTableId = defaults.routeTableId;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.vpcId = defaults.vpcId;
    	      this.vswitchName = defaults.vswitchName;
    	      this.vswitchOwnerId = defaults.vswitchOwnerId;
    	      this.vswitches = defaults.vswitches;
    	      this.zoneId = defaults.zoneId;
        }

        public Builder cidrBlock(@Nullable String cidrBlock) {
            this.cidrBlock = cidrBlock;
            return this;
        }
        public Builder dryRun(@Nullable Boolean dryRun) {
            this.dryRun = dryRun;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public Builder isDefault(@Nullable Boolean isDefault) {
            this.isDefault = isDefault;
            return this;
        }
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        public Builder names(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        public Builder resourceGroupId(@Nullable String resourceGroupId) {
            this.resourceGroupId = resourceGroupId;
            return this;
        }
        public Builder routeTableId(@Nullable String routeTableId) {
            this.routeTableId = routeTableId;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public Builder tags(@Nullable Map<String,Object> tags) {
            this.tags = tags;
            return this;
        }
        public Builder vpcId(@Nullable String vpcId) {
            this.vpcId = vpcId;
            return this;
        }
        public Builder vswitchName(@Nullable String vswitchName) {
            this.vswitchName = vswitchName;
            return this;
        }
        public Builder vswitchOwnerId(@Nullable Integer vswitchOwnerId) {
            this.vswitchOwnerId = vswitchOwnerId;
            return this;
        }
        public Builder vswitches(List<GetSwitchesVswitch> vswitches) {
            this.vswitches = Objects.requireNonNull(vswitches);
            return this;
        }
        public Builder vswitches(GetSwitchesVswitch... vswitches) {
            return vswitches(List.of(vswitches));
        }
        public Builder zoneId(@Nullable String zoneId) {
            this.zoneId = zoneId;
            return this;
        }        public GetSwitchesResult build() {
            return new GetSwitchesResult(cidrBlock, dryRun, id, ids, isDefault, nameRegex, names, outputFile, resourceGroupId, routeTableId, status, tags, vpcId, vswitchName, vswitchOwnerId, vswitches, zoneId);
        }
    }
}
