// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.dts.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetInstancesInstance {
    /**
     * @return Instance creation time
     * 
     */
    private final String createTime;
    /**
     * @return The target database engine type.
     * 
     */
    private final String destinationEndpointEngineName;
    /**
     * @return The destination instance region.
     * 
     */
    private final String destinationRegion;
    /**
     * @return The ID of the subscription instance.
     * 
     */
    private final String dtsInstanceId;
    /**
     * @return The ID of the instance.
     * 
     */
    private final String id;
    /**
     * @return The type of the migration or synchronization instance.- The specifications of the migration instance: **xxlarge**, **xlarge**, **large**, **medium**, **small**.- The types of synchronization instances: **large**, **medium**, **small**, **micro**.
     * 
     */
    private final String instanceClass;
    private final String instanceName;
    /**
     * @return The payment type of the resource.
     * 
     */
    private final String paymentType;
    /**
     * @return Resource Group ID
     * 
     */
    private final String resourceGroupId;
    /**
     * @return Source instance database engine type.
     * 
     */
    private final String sourceEndpointEngineName;
    /**
     * @return The source instance region.
     * 
     */
    private final String sourceRegion;
    /**
     * @return Instance status.
     * 
     */
    private final String status;
    /**
     * @return The tag value corresponding to the tag key.
     * 
     */
    private final @Nullable Map<String,Object> tags;
    /**
     * @return The instance type. Valid values: -**MIGRATION**: MIGRATION.-**SYNC**: synchronization.-**SUBSCRIBE**: SUBSCRIBE.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetInstancesInstance(
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("destinationEndpointEngineName") String destinationEndpointEngineName,
        @CustomType.Parameter("destinationRegion") String destinationRegion,
        @CustomType.Parameter("dtsInstanceId") String dtsInstanceId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceClass") String instanceClass,
        @CustomType.Parameter("instanceName") String instanceName,
        @CustomType.Parameter("paymentType") String paymentType,
        @CustomType.Parameter("resourceGroupId") String resourceGroupId,
        @CustomType.Parameter("sourceEndpointEngineName") String sourceEndpointEngineName,
        @CustomType.Parameter("sourceRegion") String sourceRegion,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("tags") @Nullable Map<String,Object> tags,
        @CustomType.Parameter("type") String type) {
        this.createTime = createTime;
        this.destinationEndpointEngineName = destinationEndpointEngineName;
        this.destinationRegion = destinationRegion;
        this.dtsInstanceId = dtsInstanceId;
        this.id = id;
        this.instanceClass = instanceClass;
        this.instanceName = instanceName;
        this.paymentType = paymentType;
        this.resourceGroupId = resourceGroupId;
        this.sourceEndpointEngineName = sourceEndpointEngineName;
        this.sourceRegion = sourceRegion;
        this.status = status;
        this.tags = tags;
        this.type = type;
    }

    /**
     * @return Instance creation time
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The target database engine type.
     * 
     */
    public String destinationEndpointEngineName() {
        return this.destinationEndpointEngineName;
    }
    /**
     * @return The destination instance region.
     * 
     */
    public String destinationRegion() {
        return this.destinationRegion;
    }
    /**
     * @return The ID of the subscription instance.
     * 
     */
    public String dtsInstanceId() {
        return this.dtsInstanceId;
    }
    /**
     * @return The ID of the instance.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The type of the migration or synchronization instance.- The specifications of the migration instance: **xxlarge**, **xlarge**, **large**, **medium**, **small**.- The types of synchronization instances: **large**, **medium**, **small**, **micro**.
     * 
     */
    public String instanceClass() {
        return this.instanceClass;
    }
    public String instanceName() {
        return this.instanceName;
    }
    /**
     * @return The payment type of the resource.
     * 
     */
    public String paymentType() {
        return this.paymentType;
    }
    /**
     * @return Resource Group ID
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return Source instance database engine type.
     * 
     */
    public String sourceEndpointEngineName() {
        return this.sourceEndpointEngineName;
    }
    /**
     * @return The source instance region.
     * 
     */
    public String sourceRegion() {
        return this.sourceRegion;
    }
    /**
     * @return Instance status.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The tag value corresponding to the tag key.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The instance type. Valid values: -**MIGRATION**: MIGRATION.-**SYNC**: synchronization.-**SUBSCRIBE**: SUBSCRIBE.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstance defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String destinationEndpointEngineName;
        private String destinationRegion;
        private String dtsInstanceId;
        private String id;
        private String instanceClass;
        private String instanceName;
        private String paymentType;
        private String resourceGroupId;
        private String sourceEndpointEngineName;
        private String sourceRegion;
        private String status;
        private @Nullable Map<String,Object> tags;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstancesInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.destinationEndpointEngineName = defaults.destinationEndpointEngineName;
    	      this.destinationRegion = defaults.destinationRegion;
    	      this.dtsInstanceId = defaults.dtsInstanceId;
    	      this.id = defaults.id;
    	      this.instanceClass = defaults.instanceClass;
    	      this.instanceName = defaults.instanceName;
    	      this.paymentType = defaults.paymentType;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.sourceEndpointEngineName = defaults.sourceEndpointEngineName;
    	      this.sourceRegion = defaults.sourceRegion;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder destinationEndpointEngineName(String destinationEndpointEngineName) {
            this.destinationEndpointEngineName = Objects.requireNonNull(destinationEndpointEngineName);
            return this;
        }
        public Builder destinationRegion(String destinationRegion) {
            this.destinationRegion = Objects.requireNonNull(destinationRegion);
            return this;
        }
        public Builder dtsInstanceId(String dtsInstanceId) {
            this.dtsInstanceId = Objects.requireNonNull(dtsInstanceId);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instanceClass(String instanceClass) {
            this.instanceClass = Objects.requireNonNull(instanceClass);
            return this;
        }
        public Builder instanceName(String instanceName) {
            this.instanceName = Objects.requireNonNull(instanceName);
            return this;
        }
        public Builder paymentType(String paymentType) {
            this.paymentType = Objects.requireNonNull(paymentType);
            return this;
        }
        public Builder resourceGroupId(String resourceGroupId) {
            this.resourceGroupId = Objects.requireNonNull(resourceGroupId);
            return this;
        }
        public Builder sourceEndpointEngineName(String sourceEndpointEngineName) {
            this.sourceEndpointEngineName = Objects.requireNonNull(sourceEndpointEngineName);
            return this;
        }
        public Builder sourceRegion(String sourceRegion) {
            this.sourceRegion = Objects.requireNonNull(sourceRegion);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder tags(@Nullable Map<String,Object> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetInstancesInstance build() {
            return new GetInstancesInstance(createTime, destinationEndpointEngineName, destinationRegion, dtsInstanceId, id, instanceClass, instanceName, paymentType, resourceGroupId, sourceEndpointEngineName, sourceRegion, status, tags, type);
        }
    }
}
