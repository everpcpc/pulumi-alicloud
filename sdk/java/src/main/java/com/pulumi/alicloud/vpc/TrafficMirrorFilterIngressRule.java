// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.vpc.TrafficMirrorFilterIngressRuleArgs;
import com.pulumi.alicloud.vpc.inputs.TrafficMirrorFilterIngressRuleState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a VPC Traffic Mirror Filter Ingress Rule resource.
 * 
 * For information about VPC Traffic Mirror Filter Ingress Rule and how to use it, see [What is Traffic Mirror Filter Ingress Rule](https://www.alibabacloud.com/help/doc-detail/261357.htm).
 * 
 * &gt; **NOTE:** Available in v1.141.0+.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * VPC Traffic Mirror Filter Ingress Rule can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:vpc/trafficMirrorFilterIngressRule:TrafficMirrorFilterIngressRule example &lt;traffic_mirror_filter_id&gt;:&lt;traffic_mirror_filter_ingress_rule_id&gt;
 * ```
 * 
 */
@ResourceType(type="alicloud:vpc/trafficMirrorFilterIngressRule:TrafficMirrorFilterIngressRule")
public class TrafficMirrorFilterIngressRule extends com.pulumi.resources.CustomResource {
    /**
     * The destination CIDR block of the inbound traffic.
     * 
     */
    @Export(name="destinationCidrBlock", type=String.class, parameters={})
    private Output<String> destinationCidrBlock;

    /**
     * @return The destination CIDR block of the inbound traffic.
     * 
     */
    public Output<String> destinationCidrBlock() {
        return this.destinationCidrBlock;
    }
    /**
     * The destination CIDR block of the inbound traffic. Valid values: `1` to `65535`. Separate the first port and last port with a forward slash (/), for example, `1/200` or `80/80`. A value of `-1/-1` indicates that all ports are available. Therefore, do not set the value to `-1/-1`. **NOTE:** When `protocol` is `ICMP`, this parameter is invalid.
     * 
     */
    @Export(name="destinationPortRange", type=String.class, parameters={})
    private Output<String> destinationPortRange;

    /**
     * @return The destination CIDR block of the inbound traffic. Valid values: `1` to `65535`. Separate the first port and last port with a forward slash (/), for example, `1/200` or `80/80`. A value of `-1/-1` indicates that all ports are available. Therefore, do not set the value to `-1/-1`. **NOTE:** When `protocol` is `ICMP`, this parameter is invalid.
     * 
     */
    public Output<String> destinationPortRange() {
        return this.destinationPortRange;
    }
    /**
     * Whether to pre-check this request only. Default to: `false`
     * 
     */
    @Export(name="dryRun", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> dryRun;

    /**
     * @return Whether to pre-check this request only. Default to: `false`
     * 
     */
    public Output<Optional<Boolean>> dryRun() {
        return Codegen.optional(this.dryRun);
    }
    /**
     * The priority of the inbound rule. A smaller value indicates a higher priority. The maximum value is `10`, which indicates that you can configure at most 10 inbound rules for a filter.
     * 
     */
    @Export(name="priority", type=Integer.class, parameters={})
    private Output<Integer> priority;

    /**
     * @return The priority of the inbound rule. A smaller value indicates a higher priority. The maximum value is `10`, which indicates that you can configure at most 10 inbound rules for a filter.
     * 
     */
    public Output<Integer> priority() {
        return this.priority;
    }
    /**
     * The transport protocol used by inbound traffic that needs to be mirrored. Valid values: `ALL`, `ICMP`, `TCP`, `UDP`.
     * 
     */
    @Export(name="protocol", type=String.class, parameters={})
    private Output<String> protocol;

    /**
     * @return The transport protocol used by inbound traffic that needs to be mirrored. Valid values: `ALL`, `ICMP`, `TCP`, `UDP`.
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }
    /**
     * The collection policy of the inbound rule. Valid values: `accept` or `drop`. `accept`: collects network traffic. `drop`: does not collect network traffic.
     * 
     */
    @Export(name="ruleAction", type=String.class, parameters={})
    private Output<String> ruleAction;

    /**
     * @return The collection policy of the inbound rule. Valid values: `accept` or `drop`. `accept`: collects network traffic. `drop`: does not collect network traffic.
     * 
     */
    public Output<String> ruleAction() {
        return this.ruleAction;
    }
    /**
     * The source CIDR block of the inbound traffic.
     * 
     */
    @Export(name="sourceCidrBlock", type=String.class, parameters={})
    private Output<String> sourceCidrBlock;

    /**
     * @return The source CIDR block of the inbound traffic.
     * 
     */
    public Output<String> sourceCidrBlock() {
        return this.sourceCidrBlock;
    }
    /**
     * The source port range of the inbound traffic. Valid values: `1` to `65535`. Separate the first port and last port with a forward slash (/), for example, `1/200` or `80/80`. A value of `-1/-1` indicates that all ports are available. Therefore, do not set the value to `-1/-1`. **NOTE:** When `protocol` is `ICMP`, this parameter is invalid.
     * 
     */
    @Export(name="sourcePortRange", type=String.class, parameters={})
    private Output<String> sourcePortRange;

    /**
     * @return The source port range of the inbound traffic. Valid values: `1` to `65535`. Separate the first port and last port with a forward slash (/), for example, `1/200` or `80/80`. A value of `-1/-1` indicates that all ports are available. Therefore, do not set the value to `-1/-1`. **NOTE:** When `protocol` is `ICMP`, this parameter is invalid.
     * 
     */
    public Output<String> sourcePortRange() {
        return this.sourcePortRange;
    }
    /**
     * The state of the inbound rule. Valid values:`Creating`, `Created`, `Modifying` and `Deleting`.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return The state of the inbound rule. Valid values:`Creating`, `Created`, `Modifying` and `Deleting`.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The ID of the filter.
     * 
     */
    @Export(name="trafficMirrorFilterId", type=String.class, parameters={})
    private Output<String> trafficMirrorFilterId;

    /**
     * @return The ID of the filter.
     * 
     */
    public Output<String> trafficMirrorFilterId() {
        return this.trafficMirrorFilterId;
    }
    /**
     * The ID of the inbound rule.
     * 
     */
    @Export(name="trafficMirrorFilterIngressRuleId", type=String.class, parameters={})
    private Output<String> trafficMirrorFilterIngressRuleId;

    /**
     * @return The ID of the inbound rule.
     * 
     */
    public Output<String> trafficMirrorFilterIngressRuleId() {
        return this.trafficMirrorFilterIngressRuleId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TrafficMirrorFilterIngressRule(String name) {
        this(name, TrafficMirrorFilterIngressRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TrafficMirrorFilterIngressRule(String name, TrafficMirrorFilterIngressRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TrafficMirrorFilterIngressRule(String name, TrafficMirrorFilterIngressRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:vpc/trafficMirrorFilterIngressRule:TrafficMirrorFilterIngressRule", name, args == null ? TrafficMirrorFilterIngressRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private TrafficMirrorFilterIngressRule(String name, Output<String> id, @Nullable TrafficMirrorFilterIngressRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:vpc/trafficMirrorFilterIngressRule:TrafficMirrorFilterIngressRule", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TrafficMirrorFilterIngressRule get(String name, Output<String> id, @Nullable TrafficMirrorFilterIngressRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TrafficMirrorFilterIngressRule(name, id, state, options);
    }
}
