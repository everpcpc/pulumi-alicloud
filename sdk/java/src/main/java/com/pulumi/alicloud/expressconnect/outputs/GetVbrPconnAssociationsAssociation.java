// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.expressconnect.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVbrPconnAssociationsAssociation {
    /**
     * @return The circuit code provided by the operator for the physical connection.
     * 
     */
    private final String circuitCode;
    /**
     * @return Whether IPv6 is enabled.
     * 
     */
    private final Boolean enableIpv6;
    /**
     * @return The ID of the Vbr Pconn Association.
     * 
     */
    private final String id;
    /**
     * @return The Alibaba cloud IP address of the VBR instance.
     * 
     */
    private final String localGatewayIp;
    /**
     * @return The IPv6 address on the Alibaba Cloud side of the VBR instance.
     * 
     */
    private final String localIpv6GatewayIp;
    /**
     * @return The client IP address of the VBR instance.
     * 
     */
    private final String peerGatewayIp;
    /**
     * @return The IPv6 address of the client side of the VBR instance.
     * 
     */
    private final String peerIpv6GatewayIp;
    /**
     * @return The subnet mask of the Alibaba Cloud side and the client side of the VBR instance.Two IPv6 addresses must be in the same subnet.
     * 
     */
    private final String peeringIpv6SubnetMask;
    /**
     * @return The subnet mask of the Alibaba Cloud side and the client side of the VBR instance.The two IP addresses must be in the same subnet.
     * 
     */
    private final String peeringSubnetMask;
    /**
     * @return The ID of the leased line instance.
     * 
     */
    private final String physicalConnectionId;
    /**
     * @return The status of the resource
     * 
     */
    private final String status;
    /**
     * @return The ID of the VBR instance.
     * 
     */
    private final String vbrId;
    /**
     * @return VLAN ID of the VBR.
     * 
     */
    private final Integer vlanId;

    @CustomType.Constructor
    private GetVbrPconnAssociationsAssociation(
        @CustomType.Parameter("circuitCode") String circuitCode,
        @CustomType.Parameter("enableIpv6") Boolean enableIpv6,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("localGatewayIp") String localGatewayIp,
        @CustomType.Parameter("localIpv6GatewayIp") String localIpv6GatewayIp,
        @CustomType.Parameter("peerGatewayIp") String peerGatewayIp,
        @CustomType.Parameter("peerIpv6GatewayIp") String peerIpv6GatewayIp,
        @CustomType.Parameter("peeringIpv6SubnetMask") String peeringIpv6SubnetMask,
        @CustomType.Parameter("peeringSubnetMask") String peeringSubnetMask,
        @CustomType.Parameter("physicalConnectionId") String physicalConnectionId,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("vbrId") String vbrId,
        @CustomType.Parameter("vlanId") Integer vlanId) {
        this.circuitCode = circuitCode;
        this.enableIpv6 = enableIpv6;
        this.id = id;
        this.localGatewayIp = localGatewayIp;
        this.localIpv6GatewayIp = localIpv6GatewayIp;
        this.peerGatewayIp = peerGatewayIp;
        this.peerIpv6GatewayIp = peerIpv6GatewayIp;
        this.peeringIpv6SubnetMask = peeringIpv6SubnetMask;
        this.peeringSubnetMask = peeringSubnetMask;
        this.physicalConnectionId = physicalConnectionId;
        this.status = status;
        this.vbrId = vbrId;
        this.vlanId = vlanId;
    }

    /**
     * @return The circuit code provided by the operator for the physical connection.
     * 
     */
    public String circuitCode() {
        return this.circuitCode;
    }
    /**
     * @return Whether IPv6 is enabled.
     * 
     */
    public Boolean enableIpv6() {
        return this.enableIpv6;
    }
    /**
     * @return The ID of the Vbr Pconn Association.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Alibaba cloud IP address of the VBR instance.
     * 
     */
    public String localGatewayIp() {
        return this.localGatewayIp;
    }
    /**
     * @return The IPv6 address on the Alibaba Cloud side of the VBR instance.
     * 
     */
    public String localIpv6GatewayIp() {
        return this.localIpv6GatewayIp;
    }
    /**
     * @return The client IP address of the VBR instance.
     * 
     */
    public String peerGatewayIp() {
        return this.peerGatewayIp;
    }
    /**
     * @return The IPv6 address of the client side of the VBR instance.
     * 
     */
    public String peerIpv6GatewayIp() {
        return this.peerIpv6GatewayIp;
    }
    /**
     * @return The subnet mask of the Alibaba Cloud side and the client side of the VBR instance.Two IPv6 addresses must be in the same subnet.
     * 
     */
    public String peeringIpv6SubnetMask() {
        return this.peeringIpv6SubnetMask;
    }
    /**
     * @return The subnet mask of the Alibaba Cloud side and the client side of the VBR instance.The two IP addresses must be in the same subnet.
     * 
     */
    public String peeringSubnetMask() {
        return this.peeringSubnetMask;
    }
    /**
     * @return The ID of the leased line instance.
     * 
     */
    public String physicalConnectionId() {
        return this.physicalConnectionId;
    }
    /**
     * @return The status of the resource
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The ID of the VBR instance.
     * 
     */
    public String vbrId() {
        return this.vbrId;
    }
    /**
     * @return VLAN ID of the VBR.
     * 
     */
    public Integer vlanId() {
        return this.vlanId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVbrPconnAssociationsAssociation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String circuitCode;
        private Boolean enableIpv6;
        private String id;
        private String localGatewayIp;
        private String localIpv6GatewayIp;
        private String peerGatewayIp;
        private String peerIpv6GatewayIp;
        private String peeringIpv6SubnetMask;
        private String peeringSubnetMask;
        private String physicalConnectionId;
        private String status;
        private String vbrId;
        private Integer vlanId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVbrPconnAssociationsAssociation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.circuitCode = defaults.circuitCode;
    	      this.enableIpv6 = defaults.enableIpv6;
    	      this.id = defaults.id;
    	      this.localGatewayIp = defaults.localGatewayIp;
    	      this.localIpv6GatewayIp = defaults.localIpv6GatewayIp;
    	      this.peerGatewayIp = defaults.peerGatewayIp;
    	      this.peerIpv6GatewayIp = defaults.peerIpv6GatewayIp;
    	      this.peeringIpv6SubnetMask = defaults.peeringIpv6SubnetMask;
    	      this.peeringSubnetMask = defaults.peeringSubnetMask;
    	      this.physicalConnectionId = defaults.physicalConnectionId;
    	      this.status = defaults.status;
    	      this.vbrId = defaults.vbrId;
    	      this.vlanId = defaults.vlanId;
        }

        public Builder circuitCode(String circuitCode) {
            this.circuitCode = Objects.requireNonNull(circuitCode);
            return this;
        }
        public Builder enableIpv6(Boolean enableIpv6) {
            this.enableIpv6 = Objects.requireNonNull(enableIpv6);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder localGatewayIp(String localGatewayIp) {
            this.localGatewayIp = Objects.requireNonNull(localGatewayIp);
            return this;
        }
        public Builder localIpv6GatewayIp(String localIpv6GatewayIp) {
            this.localIpv6GatewayIp = Objects.requireNonNull(localIpv6GatewayIp);
            return this;
        }
        public Builder peerGatewayIp(String peerGatewayIp) {
            this.peerGatewayIp = Objects.requireNonNull(peerGatewayIp);
            return this;
        }
        public Builder peerIpv6GatewayIp(String peerIpv6GatewayIp) {
            this.peerIpv6GatewayIp = Objects.requireNonNull(peerIpv6GatewayIp);
            return this;
        }
        public Builder peeringIpv6SubnetMask(String peeringIpv6SubnetMask) {
            this.peeringIpv6SubnetMask = Objects.requireNonNull(peeringIpv6SubnetMask);
            return this;
        }
        public Builder peeringSubnetMask(String peeringSubnetMask) {
            this.peeringSubnetMask = Objects.requireNonNull(peeringSubnetMask);
            return this;
        }
        public Builder physicalConnectionId(String physicalConnectionId) {
            this.physicalConnectionId = Objects.requireNonNull(physicalConnectionId);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder vbrId(String vbrId) {
            this.vbrId = Objects.requireNonNull(vbrId);
            return this;
        }
        public Builder vlanId(Integer vlanId) {
            this.vlanId = Objects.requireNonNull(vlanId);
            return this;
        }        public GetVbrPconnAssociationsAssociation build() {
            return new GetVbrPconnAssociationsAssociation(circuitCode, enableIpv6, id, localGatewayIp, localIpv6GatewayIp, peerGatewayIp, peerIpv6GatewayIp, peeringIpv6SubnetMask, peeringSubnetMask, physicalConnectionId, status, vbrId, vlanId);
        }
    }
}
