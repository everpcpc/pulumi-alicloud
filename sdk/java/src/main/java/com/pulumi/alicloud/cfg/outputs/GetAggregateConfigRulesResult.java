// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cfg.outputs;

import com.pulumi.alicloud.cfg.outputs.GetAggregateConfigRulesRule;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAggregateConfigRulesResult {
    /**
     * @return The name of the rule.
     * 
     */
    private final @Nullable String aggregateConfigRuleName;
    /**
     * @return The ID of Aggregator.
     * * `compliance` -The Compliance information.
     * 
     */
    private final String aggregatorId;
    private final @Nullable Boolean enableDetails;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<String> ids;
    private final @Nullable String nameRegex;
    /**
     * @return A list of Aggregate Config Rule names.
     * 
     */
    private final List<String> names;
    private final @Nullable String outputFile;
    /**
     * @return The risk level of the resources that are not compliant with the rule. Valid values: `1`: critical, `2`: warning, `3`: info.
     * 
     */
    private final @Nullable Integer riskLevel;
    /**
     * @return A list of Config Aggregate Config Rules. Each element contains the following attributes:
     * 
     */
    private final List<GetAggregateConfigRulesRule> rules;
    /**
     * @return The status of the rule.
     * 
     */
    private final @Nullable String status;

    @CustomType.Constructor
    private GetAggregateConfigRulesResult(
        @CustomType.Parameter("aggregateConfigRuleName") @Nullable String aggregateConfigRuleName,
        @CustomType.Parameter("aggregatorId") String aggregatorId,
        @CustomType.Parameter("enableDetails") @Nullable Boolean enableDetails,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ids") List<String> ids,
        @CustomType.Parameter("nameRegex") @Nullable String nameRegex,
        @CustomType.Parameter("names") List<String> names,
        @CustomType.Parameter("outputFile") @Nullable String outputFile,
        @CustomType.Parameter("riskLevel") @Nullable Integer riskLevel,
        @CustomType.Parameter("rules") List<GetAggregateConfigRulesRule> rules,
        @CustomType.Parameter("status") @Nullable String status) {
        this.aggregateConfigRuleName = aggregateConfigRuleName;
        this.aggregatorId = aggregatorId;
        this.enableDetails = enableDetails;
        this.id = id;
        this.ids = ids;
        this.nameRegex = nameRegex;
        this.names = names;
        this.outputFile = outputFile;
        this.riskLevel = riskLevel;
        this.rules = rules;
        this.status = status;
    }

    /**
     * @return The name of the rule.
     * 
     */
    public Optional<String> aggregateConfigRuleName() {
        return Optional.ofNullable(this.aggregateConfigRuleName);
    }
    /**
     * @return The ID of Aggregator.
     * * `compliance` -The Compliance information.
     * 
     */
    public String aggregatorId() {
        return this.aggregatorId;
    }
    public Optional<Boolean> enableDetails() {
        return Optional.ofNullable(this.enableDetails);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    /**
     * @return A list of Aggregate Config Rule names.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return The risk level of the resources that are not compliant with the rule. Valid values: `1`: critical, `2`: warning, `3`: info.
     * 
     */
    public Optional<Integer> riskLevel() {
        return Optional.ofNullable(this.riskLevel);
    }
    /**
     * @return A list of Config Aggregate Config Rules. Each element contains the following attributes:
     * 
     */
    public List<GetAggregateConfigRulesRule> rules() {
        return this.rules;
    }
    /**
     * @return The status of the rule.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAggregateConfigRulesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String aggregateConfigRuleName;
        private String aggregatorId;
        private @Nullable Boolean enableDetails;
        private String id;
        private List<String> ids;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        private @Nullable Integer riskLevel;
        private List<GetAggregateConfigRulesRule> rules;
        private @Nullable String status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAggregateConfigRulesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregateConfigRuleName = defaults.aggregateConfigRuleName;
    	      this.aggregatorId = defaults.aggregatorId;
    	      this.enableDetails = defaults.enableDetails;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
    	      this.riskLevel = defaults.riskLevel;
    	      this.rules = defaults.rules;
    	      this.status = defaults.status;
        }

        public Builder aggregateConfigRuleName(@Nullable String aggregateConfigRuleName) {
            this.aggregateConfigRuleName = aggregateConfigRuleName;
            return this;
        }
        public Builder aggregatorId(String aggregatorId) {
            this.aggregatorId = Objects.requireNonNull(aggregatorId);
            return this;
        }
        public Builder enableDetails(@Nullable Boolean enableDetails) {
            this.enableDetails = enableDetails;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        public Builder names(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        public Builder riskLevel(@Nullable Integer riskLevel) {
            this.riskLevel = riskLevel;
            return this;
        }
        public Builder rules(List<GetAggregateConfigRulesRule> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }
        public Builder rules(GetAggregateConfigRulesRule... rules) {
            return rules(List.of(rules));
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }        public GetAggregateConfigRulesResult build() {
            return new GetAggregateConfigRulesResult(aggregateConfigRuleName, aggregatorId, enableDetails, id, ids, nameRegex, names, outputFile, riskLevel, rules, status);
        }
    }
}
