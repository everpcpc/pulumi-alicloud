// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EcsInstanceSetDataDisk {
    /**
     * @return The ID of the automatic snapshot policy applied to the system disk.
     * 
     */
    private final @Nullable String autoSnapshotPolicyId;
    /**
     * @return The category of the disk. Valid values: `cloud_efficiency`, `cloud_ssd`, `cloud_essd`, `cloud`.
     * 
     */
    private final @Nullable String diskCategory;
    /**
     * @return The description of the data disk.
     * 
     */
    private final @Nullable String diskDescription;
    /**
     * @return The name of the data disk.
     * 
     */
    private final @Nullable String diskName;
    /**
     * @return The size of the data disk. Unit: GiB.
     * - When `disk_category` is `cloud_efficiency`, Valid values: `20` to `32768`.
     * - When `disk_category` is `cloud_ssd`, Valid values: `20` to `32768`.
     * - When `disk_category` is `cloud_essd`, Valid values: `20` to `32768`.
     * - When `disk_category` is `cloud`, Valid values: `5` to `200`.
     * 
     */
    private final Integer diskSize;
    private final @Nullable Boolean encrypted;
    /**
     * @return The KMS key ID corresponding to the data disk.
     * 
     */
    private final @Nullable String kmsKeyId;
    /**
     * @return The performance level of the ESSD used as data disk. Valid values: `PL0`, `PL1`, `PL2`, `PL3`.
     * 
     */
    private final @Nullable String performanceLevel;
    /**
     * @return The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
     * 
     */
    private final @Nullable String snapshotId;

    @CustomType.Constructor
    private EcsInstanceSetDataDisk(
        @CustomType.Parameter("autoSnapshotPolicyId") @Nullable String autoSnapshotPolicyId,
        @CustomType.Parameter("diskCategory") @Nullable String diskCategory,
        @CustomType.Parameter("diskDescription") @Nullable String diskDescription,
        @CustomType.Parameter("diskName") @Nullable String diskName,
        @CustomType.Parameter("diskSize") Integer diskSize,
        @CustomType.Parameter("encrypted") @Nullable Boolean encrypted,
        @CustomType.Parameter("kmsKeyId") @Nullable String kmsKeyId,
        @CustomType.Parameter("performanceLevel") @Nullable String performanceLevel,
        @CustomType.Parameter("snapshotId") @Nullable String snapshotId) {
        this.autoSnapshotPolicyId = autoSnapshotPolicyId;
        this.diskCategory = diskCategory;
        this.diskDescription = diskDescription;
        this.diskName = diskName;
        this.diskSize = diskSize;
        this.encrypted = encrypted;
        this.kmsKeyId = kmsKeyId;
        this.performanceLevel = performanceLevel;
        this.snapshotId = snapshotId;
    }

    /**
     * @return The ID of the automatic snapshot policy applied to the system disk.
     * 
     */
    public Optional<String> autoSnapshotPolicyId() {
        return Optional.ofNullable(this.autoSnapshotPolicyId);
    }
    /**
     * @return The category of the disk. Valid values: `cloud_efficiency`, `cloud_ssd`, `cloud_essd`, `cloud`.
     * 
     */
    public Optional<String> diskCategory() {
        return Optional.ofNullable(this.diskCategory);
    }
    /**
     * @return The description of the data disk.
     * 
     */
    public Optional<String> diskDescription() {
        return Optional.ofNullable(this.diskDescription);
    }
    /**
     * @return The name of the data disk.
     * 
     */
    public Optional<String> diskName() {
        return Optional.ofNullable(this.diskName);
    }
    /**
     * @return The size of the data disk. Unit: GiB.
     * - When `disk_category` is `cloud_efficiency`, Valid values: `20` to `32768`.
     * - When `disk_category` is `cloud_ssd`, Valid values: `20` to `32768`.
     * - When `disk_category` is `cloud_essd`, Valid values: `20` to `32768`.
     * - When `disk_category` is `cloud`, Valid values: `5` to `200`.
     * 
     */
    public Integer diskSize() {
        return this.diskSize;
    }
    public Optional<Boolean> encrypted() {
        return Optional.ofNullable(this.encrypted);
    }
    /**
     * @return The KMS key ID corresponding to the data disk.
     * 
     */
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    /**
     * @return The performance level of the ESSD used as data disk. Valid values: `PL0`, `PL1`, `PL2`, `PL3`.
     * 
     */
    public Optional<String> performanceLevel() {
        return Optional.ofNullable(this.performanceLevel);
    }
    /**
     * @return The snapshot ID used to initialize the data disk. If the size specified by snapshot is greater that the size of the disk, use the size specified by snapshot as the size of the data disk.
     * 
     */
    public Optional<String> snapshotId() {
        return Optional.ofNullable(this.snapshotId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EcsInstanceSetDataDisk defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String autoSnapshotPolicyId;
        private @Nullable String diskCategory;
        private @Nullable String diskDescription;
        private @Nullable String diskName;
        private Integer diskSize;
        private @Nullable Boolean encrypted;
        private @Nullable String kmsKeyId;
        private @Nullable String performanceLevel;
        private @Nullable String snapshotId;

        public Builder() {
    	      // Empty
        }

        public Builder(EcsInstanceSetDataDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoSnapshotPolicyId = defaults.autoSnapshotPolicyId;
    	      this.diskCategory = defaults.diskCategory;
    	      this.diskDescription = defaults.diskDescription;
    	      this.diskName = defaults.diskName;
    	      this.diskSize = defaults.diskSize;
    	      this.encrypted = defaults.encrypted;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.performanceLevel = defaults.performanceLevel;
    	      this.snapshotId = defaults.snapshotId;
        }

        public Builder autoSnapshotPolicyId(@Nullable String autoSnapshotPolicyId) {
            this.autoSnapshotPolicyId = autoSnapshotPolicyId;
            return this;
        }
        public Builder diskCategory(@Nullable String diskCategory) {
            this.diskCategory = diskCategory;
            return this;
        }
        public Builder diskDescription(@Nullable String diskDescription) {
            this.diskDescription = diskDescription;
            return this;
        }
        public Builder diskName(@Nullable String diskName) {
            this.diskName = diskName;
            return this;
        }
        public Builder diskSize(Integer diskSize) {
            this.diskSize = Objects.requireNonNull(diskSize);
            return this;
        }
        public Builder encrypted(@Nullable Boolean encrypted) {
            this.encrypted = encrypted;
            return this;
        }
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        public Builder performanceLevel(@Nullable String performanceLevel) {
            this.performanceLevel = performanceLevel;
            return this;
        }
        public Builder snapshotId(@Nullable String snapshotId) {
            this.snapshotId = snapshotId;
            return this;
        }        public EcsInstanceSetDataDisk build() {
            return new EcsInstanceSetDataDisk(autoSnapshotPolicyId, diskCategory, diskDescription, diskName, diskSize, encrypted, kmsKeyId, performanceLevel, snapshotId);
        }
    }
}
