// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.log.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class StoreEncryptConfUserCmkInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final StoreEncryptConfUserCmkInfoArgs Empty = new StoreEncryptConfUserCmkInfoArgs();

    /**
     * role arn.
     * 
     */
    @Import(name="arn", required=true)
    private Output<String> arn;

    /**
     * @return role arn.
     * 
     */
    public Output<String> arn() {
        return this.arn;
    }

    /**
     * User master key id.
     * 
     */
    @Import(name="cmkKeyId", required=true)
    private Output<String> cmkKeyId;

    /**
     * @return User master key id.
     * 
     */
    public Output<String> cmkKeyId() {
        return this.cmkKeyId;
    }

    /**
     * Region id where the  user master key id is located.
     * 
     */
    @Import(name="regionId", required=true)
    private Output<String> regionId;

    /**
     * @return Region id where the  user master key id is located.
     * 
     */
    public Output<String> regionId() {
        return this.regionId;
    }

    private StoreEncryptConfUserCmkInfoArgs() {}

    private StoreEncryptConfUserCmkInfoArgs(StoreEncryptConfUserCmkInfoArgs $) {
        this.arn = $.arn;
        this.cmkKeyId = $.cmkKeyId;
        this.regionId = $.regionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StoreEncryptConfUserCmkInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StoreEncryptConfUserCmkInfoArgs $;

        public Builder() {
            $ = new StoreEncryptConfUserCmkInfoArgs();
        }

        public Builder(StoreEncryptConfUserCmkInfoArgs defaults) {
            $ = new StoreEncryptConfUserCmkInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param arn role arn.
         * 
         * @return builder
         * 
         */
        public Builder arn(Output<String> arn) {
            $.arn = arn;
            return this;
        }

        /**
         * @param arn role arn.
         * 
         * @return builder
         * 
         */
        public Builder arn(String arn) {
            return arn(Output.of(arn));
        }

        /**
         * @param cmkKeyId User master key id.
         * 
         * @return builder
         * 
         */
        public Builder cmkKeyId(Output<String> cmkKeyId) {
            $.cmkKeyId = cmkKeyId;
            return this;
        }

        /**
         * @param cmkKeyId User master key id.
         * 
         * @return builder
         * 
         */
        public Builder cmkKeyId(String cmkKeyId) {
            return cmkKeyId(Output.of(cmkKeyId));
        }

        /**
         * @param regionId Region id where the  user master key id is located.
         * 
         * @return builder
         * 
         */
        public Builder regionId(Output<String> regionId) {
            $.regionId = regionId;
            return this;
        }

        /**
         * @param regionId Region id where the  user master key id is located.
         * 
         * @return builder
         * 
         */
        public Builder regionId(String regionId) {
            return regionId(Output.of(regionId));
        }

        public StoreEncryptConfUserCmkInfoArgs build() {
            $.arn = Objects.requireNonNull($.arn, "expected parameter 'arn' to be non-null");
            $.cmkKeyId = Objects.requireNonNull($.cmkKeyId, "expected parameter 'cmkKeyId' to be non-null");
            $.regionId = Objects.requireNonNull($.regionId, "expected parameter 'regionId' to be non-null");
            return $;
        }
    }

}
