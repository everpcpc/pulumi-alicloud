// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rds.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstancesInstanceParameter {
    /**
     * @return The value range of the parameter.
     * 
     */
    private final String checkingCode;
    /**
     * @return Indicates whether the parameter can be modified. Valid values: true | false
     * 
     */
    private final String forceModify;
    /**
     * @return Indicates whether the modified parameter takes effect only after a database restart. Valid values: true | false
     * 
     */
    private final String forceRestart;
    /**
     * @return The description of the parameter.
     * 
     */
    private final String parameterDescription;
    /**
     * @return The name of the parameter.
     * 
     */
    private final String parameterName;
    /**
     * @return The default value of the parameter.
     * 
     */
    private final String parameterValue;

    @CustomType.Constructor
    private GetInstancesInstanceParameter(
        @CustomType.Parameter("checkingCode") String checkingCode,
        @CustomType.Parameter("forceModify") String forceModify,
        @CustomType.Parameter("forceRestart") String forceRestart,
        @CustomType.Parameter("parameterDescription") String parameterDescription,
        @CustomType.Parameter("parameterName") String parameterName,
        @CustomType.Parameter("parameterValue") String parameterValue) {
        this.checkingCode = checkingCode;
        this.forceModify = forceModify;
        this.forceRestart = forceRestart;
        this.parameterDescription = parameterDescription;
        this.parameterName = parameterName;
        this.parameterValue = parameterValue;
    }

    /**
     * @return The value range of the parameter.
     * 
     */
    public String checkingCode() {
        return this.checkingCode;
    }
    /**
     * @return Indicates whether the parameter can be modified. Valid values: true | false
     * 
     */
    public String forceModify() {
        return this.forceModify;
    }
    /**
     * @return Indicates whether the modified parameter takes effect only after a database restart. Valid values: true | false
     * 
     */
    public String forceRestart() {
        return this.forceRestart;
    }
    /**
     * @return The description of the parameter.
     * 
     */
    public String parameterDescription() {
        return this.parameterDescription;
    }
    /**
     * @return The name of the parameter.
     * 
     */
    public String parameterName() {
        return this.parameterName;
    }
    /**
     * @return The default value of the parameter.
     * 
     */
    public String parameterValue() {
        return this.parameterValue;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstanceParameter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String checkingCode;
        private String forceModify;
        private String forceRestart;
        private String parameterDescription;
        private String parameterName;
        private String parameterValue;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstancesInstanceParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.checkingCode = defaults.checkingCode;
    	      this.forceModify = defaults.forceModify;
    	      this.forceRestart = defaults.forceRestart;
    	      this.parameterDescription = defaults.parameterDescription;
    	      this.parameterName = defaults.parameterName;
    	      this.parameterValue = defaults.parameterValue;
        }

        public Builder checkingCode(String checkingCode) {
            this.checkingCode = Objects.requireNonNull(checkingCode);
            return this;
        }
        public Builder forceModify(String forceModify) {
            this.forceModify = Objects.requireNonNull(forceModify);
            return this;
        }
        public Builder forceRestart(String forceRestart) {
            this.forceRestart = Objects.requireNonNull(forceRestart);
            return this;
        }
        public Builder parameterDescription(String parameterDescription) {
            this.parameterDescription = Objects.requireNonNull(parameterDescription);
            return this;
        }
        public Builder parameterName(String parameterName) {
            this.parameterName = Objects.requireNonNull(parameterName);
            return this;
        }
        public Builder parameterValue(String parameterValue) {
            this.parameterValue = Objects.requireNonNull(parameterValue);
            return this;
        }        public GetInstancesInstanceParameter build() {
            return new GetInstancesInstanceParameter(checkingCode, forceModify, forceRestart, parameterDescription, parameterName, parameterValue);
        }
    }
}
