// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetGatewaysGateway {
    /**
     * @return Whether to automatically propagate BGP routes to the VPC. Valid values: `true`, `false`.
     * 
     */
    private final String autoPropagate;
    /**
     * @return Limit search to specific business status - valid value is &#34;Normal&#34;, &#34;FinancialLocked&#34;.
     * 
     */
    private final String businessStatus;
    /**
     * @return The creation time of the VPN gateway.
     * 
     */
    private final String createTime;
    /**
     * @return The description of the VPN
     * 
     */
    private final String description;
    /**
     * @return Indicates whether the IPsec-VPN feature is enabled.
     * 
     */
    private final String enableIpsec;
    /**
     * @return Whether the ssl function is enabled.
     * 
     */
    private final String enableSsl;
    /**
     * @return The expiration time of the VPN gateway.
     * 
     */
    private final String endTime;
    /**
     * @return ID of the VPN.
     * 
     */
    private final String id;
    /**
     * @return The charge type of the VPN gateway.
     * 
     */
    private final String instanceChargeType;
    /**
     * @return The internet ip of the VPN.
     * 
     */
    private final String internetIp;
    /**
     * @return The name of the VPN.
     * 
     */
    private final String name;
    /**
     * @return The network type of the VPN gateway.
     * 
     */
    private final String networkType;
    /**
     * @return The Specification of the VPN
     * 
     */
    private final String specification;
    /**
     * @return Total count of ssl vpn connections.
     * 
     */
    private final Integer sslConnections;
    /**
     * @return Limit search to specific status - valid value is &#34;Init&#34;, &#34;Provisioning&#34;, &#34;Active&#34;, &#34;Updating&#34;, &#34;Deleting&#34;.
     * 
     */
    private final String status;
    /**
     * @return Use the VPC ID as the search key.
     * 
     */
    private final String vpcId;

    @CustomType.Constructor
    private GetGatewaysGateway(
        @CustomType.Parameter("autoPropagate") String autoPropagate,
        @CustomType.Parameter("businessStatus") String businessStatus,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("enableIpsec") String enableIpsec,
        @CustomType.Parameter("enableSsl") String enableSsl,
        @CustomType.Parameter("endTime") String endTime,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceChargeType") String instanceChargeType,
        @CustomType.Parameter("internetIp") String internetIp,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("networkType") String networkType,
        @CustomType.Parameter("specification") String specification,
        @CustomType.Parameter("sslConnections") Integer sslConnections,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("vpcId") String vpcId) {
        this.autoPropagate = autoPropagate;
        this.businessStatus = businessStatus;
        this.createTime = createTime;
        this.description = description;
        this.enableIpsec = enableIpsec;
        this.enableSsl = enableSsl;
        this.endTime = endTime;
        this.id = id;
        this.instanceChargeType = instanceChargeType;
        this.internetIp = internetIp;
        this.name = name;
        this.networkType = networkType;
        this.specification = specification;
        this.sslConnections = sslConnections;
        this.status = status;
        this.vpcId = vpcId;
    }

    /**
     * @return Whether to automatically propagate BGP routes to the VPC. Valid values: `true`, `false`.
     * 
     */
    public String autoPropagate() {
        return this.autoPropagate;
    }
    /**
     * @return Limit search to specific business status - valid value is &#34;Normal&#34;, &#34;FinancialLocked&#34;.
     * 
     */
    public String businessStatus() {
        return this.businessStatus;
    }
    /**
     * @return The creation time of the VPN gateway.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The description of the VPN
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Indicates whether the IPsec-VPN feature is enabled.
     * 
     */
    public String enableIpsec() {
        return this.enableIpsec;
    }
    /**
     * @return Whether the ssl function is enabled.
     * 
     */
    public String enableSsl() {
        return this.enableSsl;
    }
    /**
     * @return The expiration time of the VPN gateway.
     * 
     */
    public String endTime() {
        return this.endTime;
    }
    /**
     * @return ID of the VPN.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The charge type of the VPN gateway.
     * 
     */
    public String instanceChargeType() {
        return this.instanceChargeType;
    }
    /**
     * @return The internet ip of the VPN.
     * 
     */
    public String internetIp() {
        return this.internetIp;
    }
    /**
     * @return The name of the VPN.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The network type of the VPN gateway.
     * 
     */
    public String networkType() {
        return this.networkType;
    }
    /**
     * @return The Specification of the VPN
     * 
     */
    public String specification() {
        return this.specification;
    }
    /**
     * @return Total count of ssl vpn connections.
     * 
     */
    public Integer sslConnections() {
        return this.sslConnections;
    }
    /**
     * @return Limit search to specific status - valid value is &#34;Init&#34;, &#34;Provisioning&#34;, &#34;Active&#34;, &#34;Updating&#34;, &#34;Deleting&#34;.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Use the VPC ID as the search key.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGatewaysGateway defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String autoPropagate;
        private String businessStatus;
        private String createTime;
        private String description;
        private String enableIpsec;
        private String enableSsl;
        private String endTime;
        private String id;
        private String instanceChargeType;
        private String internetIp;
        private String name;
        private String networkType;
        private String specification;
        private Integer sslConnections;
        private String status;
        private String vpcId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetGatewaysGateway defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoPropagate = defaults.autoPropagate;
    	      this.businessStatus = defaults.businessStatus;
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.enableIpsec = defaults.enableIpsec;
    	      this.enableSsl = defaults.enableSsl;
    	      this.endTime = defaults.endTime;
    	      this.id = defaults.id;
    	      this.instanceChargeType = defaults.instanceChargeType;
    	      this.internetIp = defaults.internetIp;
    	      this.name = defaults.name;
    	      this.networkType = defaults.networkType;
    	      this.specification = defaults.specification;
    	      this.sslConnections = defaults.sslConnections;
    	      this.status = defaults.status;
    	      this.vpcId = defaults.vpcId;
        }

        public Builder autoPropagate(String autoPropagate) {
            this.autoPropagate = Objects.requireNonNull(autoPropagate);
            return this;
        }
        public Builder businessStatus(String businessStatus) {
            this.businessStatus = Objects.requireNonNull(businessStatus);
            return this;
        }
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder enableIpsec(String enableIpsec) {
            this.enableIpsec = Objects.requireNonNull(enableIpsec);
            return this;
        }
        public Builder enableSsl(String enableSsl) {
            this.enableSsl = Objects.requireNonNull(enableSsl);
            return this;
        }
        public Builder endTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instanceChargeType(String instanceChargeType) {
            this.instanceChargeType = Objects.requireNonNull(instanceChargeType);
            return this;
        }
        public Builder internetIp(String internetIp) {
            this.internetIp = Objects.requireNonNull(internetIp);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder networkType(String networkType) {
            this.networkType = Objects.requireNonNull(networkType);
            return this;
        }
        public Builder specification(String specification) {
            this.specification = Objects.requireNonNull(specification);
            return this;
        }
        public Builder sslConnections(Integer sslConnections) {
            this.sslConnections = Objects.requireNonNull(sslConnections);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder vpcId(String vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }        public GetGatewaysGateway build() {
            return new GetGatewaysGateway(autoPropagate, businessStatus, createTime, description, enableIpsec, enableSsl, endTime, id, instanceChargeType, internetIp, name, networkType, specification, sslConnections, status, vpcId);
        }
    }
}
