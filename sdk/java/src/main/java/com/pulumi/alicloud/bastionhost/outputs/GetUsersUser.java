// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.bastionhost.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetUsersUser {
    /**
     * @return Specify the New of the User That Created the Remark Information. Supports up to 500 Characters.
     * 
     */
    private final String comment;
    /**
     * @return Specify the New Created the User&#39;s Display Name. Supports up to 128 Characters.
     * 
     */
    private final String displayName;
    /**
     * @return Specify the New User&#39;s Mailbox.
     * 
     */
    private final String email;
    /**
     * @return The ID of the User.
     * 
     */
    private final String id;
    /**
     * @return You Want to Query the User the Bastion Host ID of.
     * 
     */
    private final String instanceId;
    /**
     * @return Specify the New of the User That Created a Different Mobile Phone Number from Your.
     * 
     */
    private final String mobile;
    /**
     * @return Specify the New Create User Mobile Phone Number of the International Domain Name. The Default Value Is the CN Value: CN: Mainland China (+86) HK: hong Kong, China (+852) Mo: Macau, China (+853) TW: Taiwan, China (+886) ru: Russian (+7) SG: Singapore (+65) My: malaysia (+60) ID: Indonesia (+62) De: Germany (+49) AU: Australia (+61) US: United States (+1) AE: dubai (+971) JP: Japan (+81) Introducing the Long-Range GB: United Kingdom (+44) in: India (+91) KR: South Korea (+82) Ph: philippines (+63) Ch: Switzerland (+41) Se: Sweden (+46).
     * 
     */
    private final String mobileCountryCode;
    /**
     * @return Specify the New of the User That Created the Source. Valid Values: Local: Local User RAM: Ram User.
     * 
     */
    private final String source;
    /**
     * @return Specify the Newly Created User Is Uniquely Identified. Indicates That the Parameter Is a Bastion Host Corresponding to the User with the Ram User&#39;s Unique Identifier. The Newly Created User Source Grant Permission to a RAM User (That Is, Source Used as a Ram), this Parameter Is Required. You Can Call Access Control of Listusers Interface from the Return Data Userid to Obtain the Parameters.
     * 
     */
    private final String sourceUserId;
    /**
     * @return The status of the resource.
     * 
     */
    private final String status;
    /**
     * @return The User ID.
     * 
     */
    private final String userId;
    /**
     * @return Specify the New User Name. This Parameter Is Only by Letters, Lowercase Letters, Numbers, and Underscores (_), Supports up to 128 Characters.
     * 
     */
    private final String userName;

    @CustomType.Constructor
    private GetUsersUser(
        @CustomType.Parameter("comment") String comment,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("email") String email,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceId") String instanceId,
        @CustomType.Parameter("mobile") String mobile,
        @CustomType.Parameter("mobileCountryCode") String mobileCountryCode,
        @CustomType.Parameter("source") String source,
        @CustomType.Parameter("sourceUserId") String sourceUserId,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("userId") String userId,
        @CustomType.Parameter("userName") String userName) {
        this.comment = comment;
        this.displayName = displayName;
        this.email = email;
        this.id = id;
        this.instanceId = instanceId;
        this.mobile = mobile;
        this.mobileCountryCode = mobileCountryCode;
        this.source = source;
        this.sourceUserId = sourceUserId;
        this.status = status;
        this.userId = userId;
        this.userName = userName;
    }

    /**
     * @return Specify the New of the User That Created the Remark Information. Supports up to 500 Characters.
     * 
     */
    public String comment() {
        return this.comment;
    }
    /**
     * @return Specify the New Created the User&#39;s Display Name. Supports up to 128 Characters.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Specify the New User&#39;s Mailbox.
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return The ID of the User.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return You Want to Query the User the Bastion Host ID of.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return Specify the New of the User That Created a Different Mobile Phone Number from Your.
     * 
     */
    public String mobile() {
        return this.mobile;
    }
    /**
     * @return Specify the New Create User Mobile Phone Number of the International Domain Name. The Default Value Is the CN Value: CN: Mainland China (+86) HK: hong Kong, China (+852) Mo: Macau, China (+853) TW: Taiwan, China (+886) ru: Russian (+7) SG: Singapore (+65) My: malaysia (+60) ID: Indonesia (+62) De: Germany (+49) AU: Australia (+61) US: United States (+1) AE: dubai (+971) JP: Japan (+81) Introducing the Long-Range GB: United Kingdom (+44) in: India (+91) KR: South Korea (+82) Ph: philippines (+63) Ch: Switzerland (+41) Se: Sweden (+46).
     * 
     */
    public String mobileCountryCode() {
        return this.mobileCountryCode;
    }
    /**
     * @return Specify the New of the User That Created the Source. Valid Values: Local: Local User RAM: Ram User.
     * 
     */
    public String source() {
        return this.source;
    }
    /**
     * @return Specify the Newly Created User Is Uniquely Identified. Indicates That the Parameter Is a Bastion Host Corresponding to the User with the Ram User&#39;s Unique Identifier. The Newly Created User Source Grant Permission to a RAM User (That Is, Source Used as a Ram), this Parameter Is Required. You Can Call Access Control of Listusers Interface from the Return Data Userid to Obtain the Parameters.
     * 
     */
    public String sourceUserId() {
        return this.sourceUserId;
    }
    /**
     * @return The status of the resource.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The User ID.
     * 
     */
    public String userId() {
        return this.userId;
    }
    /**
     * @return Specify the New User Name. This Parameter Is Only by Letters, Lowercase Letters, Numbers, and Underscores (_), Supports up to 128 Characters.
     * 
     */
    public String userName() {
        return this.userName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUsersUser defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String comment;
        private String displayName;
        private String email;
        private String id;
        private String instanceId;
        private String mobile;
        private String mobileCountryCode;
        private String source;
        private String sourceUserId;
        private String status;
        private String userId;
        private String userName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetUsersUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.displayName = defaults.displayName;
    	      this.email = defaults.email;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.mobile = defaults.mobile;
    	      this.mobileCountryCode = defaults.mobileCountryCode;
    	      this.source = defaults.source;
    	      this.sourceUserId = defaults.sourceUserId;
    	      this.status = defaults.status;
    	      this.userId = defaults.userId;
    	      this.userName = defaults.userName;
        }

        public Builder comment(String comment) {
            this.comment = Objects.requireNonNull(comment);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder email(String email) {
            this.email = Objects.requireNonNull(email);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        public Builder mobile(String mobile) {
            this.mobile = Objects.requireNonNull(mobile);
            return this;
        }
        public Builder mobileCountryCode(String mobileCountryCode) {
            this.mobileCountryCode = Objects.requireNonNull(mobileCountryCode);
            return this;
        }
        public Builder source(String source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }
        public Builder sourceUserId(String sourceUserId) {
            this.sourceUserId = Objects.requireNonNull(sourceUserId);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder userId(String userId) {
            this.userId = Objects.requireNonNull(userId);
            return this;
        }
        public Builder userName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }        public GetUsersUser build() {
            return new GetUsersUser(comment, displayName, email, id, instanceId, mobile, mobileCountryCode, source, sourceUserId, status, userId, userName);
        }
    }
}
