// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBandwidthLimitsLimit {
    /**
     * @return The bandwidth limit configured for the interconnected regions communication.
     * 
     */
    private final Integer bandwidthLimit;
    /**
     * @return ID of the CEN instance.
     * 
     */
    private final String instanceId;
    /**
     * @return ID of local region.
     * 
     */
    private final String localRegionId;
    /**
     * @return ID of opposite region.
     * 
     */
    private final String oppositeRegionId;
    /**
     * @return Status of the CEN Bandwidth Limit, including &#34;Active&#34; and &#34;Modifying&#34;.
     * 
     */
    private final String status;

    @CustomType.Constructor
    private GetBandwidthLimitsLimit(
        @CustomType.Parameter("bandwidthLimit") Integer bandwidthLimit,
        @CustomType.Parameter("instanceId") String instanceId,
        @CustomType.Parameter("localRegionId") String localRegionId,
        @CustomType.Parameter("oppositeRegionId") String oppositeRegionId,
        @CustomType.Parameter("status") String status) {
        this.bandwidthLimit = bandwidthLimit;
        this.instanceId = instanceId;
        this.localRegionId = localRegionId;
        this.oppositeRegionId = oppositeRegionId;
        this.status = status;
    }

    /**
     * @return The bandwidth limit configured for the interconnected regions communication.
     * 
     */
    public Integer bandwidthLimit() {
        return this.bandwidthLimit;
    }
    /**
     * @return ID of the CEN instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return ID of local region.
     * 
     */
    public String localRegionId() {
        return this.localRegionId;
    }
    /**
     * @return ID of opposite region.
     * 
     */
    public String oppositeRegionId() {
        return this.oppositeRegionId;
    }
    /**
     * @return Status of the CEN Bandwidth Limit, including &#34;Active&#34; and &#34;Modifying&#34;.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBandwidthLimitsLimit defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer bandwidthLimit;
        private String instanceId;
        private String localRegionId;
        private String oppositeRegionId;
        private String status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBandwidthLimitsLimit defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidthLimit = defaults.bandwidthLimit;
    	      this.instanceId = defaults.instanceId;
    	      this.localRegionId = defaults.localRegionId;
    	      this.oppositeRegionId = defaults.oppositeRegionId;
    	      this.status = defaults.status;
        }

        public Builder bandwidthLimit(Integer bandwidthLimit) {
            this.bandwidthLimit = Objects.requireNonNull(bandwidthLimit);
            return this;
        }
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        public Builder localRegionId(String localRegionId) {
            this.localRegionId = Objects.requireNonNull(localRegionId);
            return this;
        }
        public Builder oppositeRegionId(String oppositeRegionId) {
            this.oppositeRegionId = Objects.requireNonNull(oppositeRegionId);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }        public GetBandwidthLimitsLimit build() {
            return new GetBandwidthLimitsLimit(bandwidthLimit, instanceId, localRegionId, oppositeRegionId, status);
        }
    }
}
