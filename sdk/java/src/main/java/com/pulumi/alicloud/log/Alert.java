// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.log;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.log.AlertArgs;
import com.pulumi.alicloud.log.inputs.AlertState;
import com.pulumi.alicloud.log.outputs.AlertAnnotation;
import com.pulumi.alicloud.log.outputs.AlertGroupConfiguration;
import com.pulumi.alicloud.log.outputs.AlertJoinConfiguration;
import com.pulumi.alicloud.log.outputs.AlertLabel;
import com.pulumi.alicloud.log.outputs.AlertNotificationList;
import com.pulumi.alicloud.log.outputs.AlertPolicyConfiguration;
import com.pulumi.alicloud.log.outputs.AlertQueryList;
import com.pulumi.alicloud.log.outputs.AlertSchedule;
import com.pulumi.alicloud.log.outputs.AlertSeverityConfiguration;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Log alert is a unit of log service, which is used to monitor and alert the user&#39;s logstore status information.
 * Log Service enables you to configure alerts based on the charts in a dashboard to monitor the service status in real time.
 * 
 * For information about SLS Alert and how to use it, see [SLS Alert Overview](https://www.alibabacloud.com/help/en/doc-detail/209202.html)
 * 
 * &gt; **NOTE:** Available in 1.78.0
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Log alert can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:log/alert:Alert example tf-log:tf-log-alert
 * ```
 * 
 */
@ResourceType(type="alicloud:log/alert:Alert")
public class Alert extends com.pulumi.resources.CustomResource {
    /**
     * Alert description.
     * 
     */
    @Export(name="alertDescription", type=String.class, parameters={})
    private Output</* @Nullable */ String> alertDescription;

    /**
     * @return Alert description.
     * 
     */
    public Output<Optional<String>> alertDescription() {
        return Codegen.optional(this.alertDescription);
    }
    /**
     * Alert displayname.
     * 
     */
    @Export(name="alertDisplayname", type=String.class, parameters={})
    private Output<String> alertDisplayname;

    /**
     * @return Alert displayname.
     * 
     */
    public Output<String> alertDisplayname() {
        return this.alertDisplayname;
    }
    /**
     * Name of logstore for configuring alarm service.
     * 
     */
    @Export(name="alertName", type=String.class, parameters={})
    private Output<String> alertName;

    /**
     * @return Name of logstore for configuring alarm service.
     * 
     */
    public Output<String> alertName() {
        return this.alertName;
    }
    /**
     * Annotations for new alert.
     * 
     */
    @Export(name="annotations", type=List.class, parameters={AlertAnnotation.class})
    private Output</* @Nullable */ List<AlertAnnotation>> annotations;

    /**
     * @return Annotations for new alert.
     * 
     */
    public Output<Optional<List<AlertAnnotation>>> annotations() {
        return Codegen.optional(this.annotations);
    }
    /**
     * whether to add automatic annotation, default is false.
     * 
     */
    @Export(name="autoAnnotation", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> autoAnnotation;

    /**
     * @return whether to add automatic annotation, default is false.
     * 
     */
    public Output<Optional<Boolean>> autoAnnotation() {
        return Codegen.optional(this.autoAnnotation);
    }
    /**
     * Join condition.
     * 
     * @deprecated
     * Deprecated from 1.161.0+, use eval_condition in severity_configurations
     * 
     */
    @Deprecated /* Deprecated from 1.161.0+, use eval_condition in severity_configurations */
    @Export(name="condition", type=String.class, parameters={})
    private Output</* @Nullable */ String> condition;

    /**
     * @return Join condition.
     * 
     */
    public Output<Optional<String>> condition() {
        return Codegen.optional(this.condition);
    }
    /**
     * @deprecated
     * Deprecated from 1.161.0+, use dashboardId in query_list
     * 
     */
    @Deprecated /* Deprecated from 1.161.0+, use dashboardId in query_list */
    @Export(name="dashboard", type=String.class, parameters={})
    private Output</* @Nullable */ String> dashboard;

    public Output<Optional<String>> dashboard() {
        return Codegen.optional(this.dashboard);
    }
    /**
     * Group configuration for new alert.
     * 
     */
    @Export(name="groupConfiguration", type=AlertGroupConfiguration.class, parameters={})
    private Output</* @Nullable */ AlertGroupConfiguration> groupConfiguration;

    /**
     * @return Group configuration for new alert.
     * 
     */
    public Output<Optional<AlertGroupConfiguration>> groupConfiguration() {
        return Codegen.optional(this.groupConfiguration);
    }
    /**
     * Join configuration for different queries.
     * 
     */
    @Export(name="joinConfigurations", type=List.class, parameters={AlertJoinConfiguration.class})
    private Output</* @Nullable */ List<AlertJoinConfiguration>> joinConfigurations;

    /**
     * @return Join configuration for different queries.
     * 
     */
    public Output<Optional<List<AlertJoinConfiguration>>> joinConfigurations() {
        return Codegen.optional(this.joinConfigurations);
    }
    /**
     * Labels for new alert.
     * 
     */
    @Export(name="labels", type=List.class, parameters={AlertLabel.class})
    private Output</* @Nullable */ List<AlertLabel>> labels;

    /**
     * @return Labels for new alert.
     * 
     */
    public Output<Optional<List<AlertLabel>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * Timestamp, notifications before closing again.
     * 
     */
    @Export(name="muteUntil", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> muteUntil;

    /**
     * @return Timestamp, notifications before closing again.
     * 
     */
    public Output<Optional<Integer>> muteUntil() {
        return Codegen.optional(this.muteUntil);
    }
    /**
     * Switch for whether new alert fires when no data happens, default is false.
     * 
     */
    @Export(name="noDataFire", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> noDataFire;

    /**
     * @return Switch for whether new alert fires when no data happens, default is false.
     * 
     */
    public Output<Optional<Boolean>> noDataFire() {
        return Codegen.optional(this.noDataFire);
    }
    /**
     * when no data happens, the severity of new alert.
     * 
     */
    @Export(name="noDataSeverity", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> noDataSeverity;

    /**
     * @return when no data happens, the severity of new alert.
     * 
     */
    public Output<Optional<Integer>> noDataSeverity() {
        return Codegen.optional(this.noDataSeverity);
    }
    /**
     * Alarm information notification list, Deprecated from 1.161.0+.
     * 
     * @deprecated
     * Deprecated from 1.161.0+, use policy_configuration for notification
     * 
     */
    @Deprecated /* Deprecated from 1.161.0+, use policy_configuration for notification */
    @Export(name="notificationLists", type=List.class, parameters={AlertNotificationList.class})
    private Output</* @Nullable */ List<AlertNotificationList>> notificationLists;

    /**
     * @return Alarm information notification list, Deprecated from 1.161.0+.
     * 
     */
    public Output<Optional<List<AlertNotificationList>>> notificationLists() {
        return Codegen.optional(this.notificationLists);
    }
    /**
     * Notification threshold, which is not notified until the number of triggers is reached. The default is 1, Deprecated from 1.161.0+.
     * 
     * @deprecated
     * Deprecated from 1.161.0+, use threshold
     * 
     */
    @Deprecated /* Deprecated from 1.161.0+, use threshold */
    @Export(name="notifyThreshold", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> notifyThreshold;

    /**
     * @return Notification threshold, which is not notified until the number of triggers is reached. The default is 1, Deprecated from 1.161.0+.
     * 
     */
    public Output<Optional<Integer>> notifyThreshold() {
        return Codegen.optional(this.notifyThreshold);
    }
    /**
     * Policy configuration for new alert.
     * 
     */
    @Export(name="policyConfiguration", type=AlertPolicyConfiguration.class, parameters={})
    private Output</* @Nullable */ AlertPolicyConfiguration> policyConfiguration;

    /**
     * @return Policy configuration for new alert.
     * 
     */
    public Output<Optional<AlertPolicyConfiguration>> policyConfiguration() {
        return Codegen.optional(this.policyConfiguration);
    }
    /**
     * The project name.
     * 
     */
    @Export(name="projectName", type=String.class, parameters={})
    private Output<String> projectName;

    /**
     * @return The project name.
     * 
     */
    public Output<String> projectName() {
        return this.projectName;
    }
    /**
     * Multiple conditions for configured alarm query.
     * 
     */
    @Export(name="queryLists", type=List.class, parameters={AlertQueryList.class})
    private Output<List<AlertQueryList>> queryLists;

    /**
     * @return Multiple conditions for configured alarm query.
     * 
     */
    public Output<List<AlertQueryList>> queryLists() {
        return this.queryLists;
    }
    /**
     * schedule for alert.
     * 
     */
    @Export(name="schedule", type=AlertSchedule.class, parameters={})
    private Output</* @Nullable */ AlertSchedule> schedule;

    /**
     * @return schedule for alert.
     * 
     */
    public Output<Optional<AlertSchedule>> schedule() {
        return Codegen.optional(this.schedule);
    }
    /**
     * Execution interval. 60 seconds minimum, such as 60s, 1h. Deprecated from 1.176.0+. use interval in schedule.
     * 
     * @deprecated
     * Field &#39;schedule_interval&#39; has been deprecated from provider version 1.176.0. New field &#39;schedule&#39; instead.
     * 
     */
    @Deprecated /* Field 'schedule_interval' has been deprecated from provider version 1.176.0. New field 'schedule' instead. */
    @Export(name="scheduleInterval", type=String.class, parameters={})
    private Output<String> scheduleInterval;

    /**
     * @return Execution interval. 60 seconds minimum, such as 60s, 1h. Deprecated from 1.176.0+. use interval in schedule.
     * 
     */
    public Output<String> scheduleInterval() {
        return this.scheduleInterval;
    }
    /**
     * Default FixedRate. No need to configure this parameter. Deprecated from 1.176.0+. use type in schedule.
     * 
     * @deprecated
     * Field &#39;schedule_type&#39; has been deprecated from provider version 1.176.0. New field &#39;schedule&#39; instead.
     * 
     */
    @Deprecated /* Field 'schedule_type' has been deprecated from provider version 1.176.0. New field 'schedule' instead. */
    @Export(name="scheduleType", type=String.class, parameters={})
    private Output<String> scheduleType;

    /**
     * @return Default FixedRate. No need to configure this parameter. Deprecated from 1.176.0+. use type in schedule.
     * 
     */
    public Output<String> scheduleType() {
        return this.scheduleType;
    }
    /**
     * when new alert is resolved, whether to notify, default is false.
     * 
     */
    @Export(name="sendResolved", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> sendResolved;

    /**
     * @return when new alert is resolved, whether to notify, default is false.
     * 
     */
    public Output<Optional<Boolean>> sendResolved() {
        return Codegen.optional(this.sendResolved);
    }
    /**
     * Severity configuration for new alert.
     * 
     */
    @Export(name="severityConfigurations", type=List.class, parameters={AlertSeverityConfiguration.class})
    private Output</* @Nullable */ List<AlertSeverityConfiguration>> severityConfigurations;

    /**
     * @return Severity configuration for new alert.
     * 
     */
    public Output<Optional<List<AlertSeverityConfiguration>>> severityConfigurations() {
        return Codegen.optional(this.severityConfigurations);
    }
    /**
     * Evaluation threshold, alert will not fire until the number of triggers is reached. The default is 1.
     * 
     */
    @Export(name="threshold", type=Integer.class, parameters={})
    private Output<Integer> threshold;

    /**
     * @return Evaluation threshold, alert will not fire until the number of triggers is reached. The default is 1.
     * 
     */
    public Output<Integer> threshold() {
        return this.threshold;
    }
    /**
     * Notification interval, default is no interval. Support number + unit type, for example 60s, 1h, Deprecated from 1.161.0+.
     * 
     * @deprecated
     * Deprecated from 1.161.0+, use repeat_interval in policy_configuration
     * 
     */
    @Deprecated /* Deprecated from 1.161.0+, use repeat_interval in policy_configuration */
    @Export(name="throttling", type=String.class, parameters={})
    private Output</* @Nullable */ String> throttling;

    /**
     * @return Notification interval, default is no interval. Support number + unit type, for example 60s, 1h, Deprecated from 1.161.0+.
     * 
     */
    public Output<Optional<String>> throttling() {
        return Codegen.optional(this.throttling);
    }
    /**
     * including FixedRate,Hourly,Daily,Weekly,Cron.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output</* @Nullable */ String> type;

    /**
     * @return including FixedRate,Hourly,Daily,Weekly,Cron.
     * 
     */
    public Output<Optional<String>> type() {
        return Codegen.optional(this.type);
    }
    /**
     * The version of alert, new alert is 2.0.
     * 
     */
    @Export(name="version", type=String.class, parameters={})
    private Output</* @Nullable */ String> version;

    /**
     * @return The version of alert, new alert is 2.0.
     * 
     */
    public Output<Optional<String>> version() {
        return Codegen.optional(this.version);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Alert(String name) {
        this(name, AlertArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Alert(String name, AlertArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Alert(String name, AlertArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:log/alert:Alert", name, args == null ? AlertArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Alert(String name, Output<String> id, @Nullable AlertState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:log/alert:Alert", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Alert get(String name, Output<String> id, @Nullable AlertState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Alert(name, id, state, options);
    }
}
