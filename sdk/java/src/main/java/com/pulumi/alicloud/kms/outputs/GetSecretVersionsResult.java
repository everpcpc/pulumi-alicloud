// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.kms.outputs;

import com.pulumi.alicloud.kms.outputs.GetSecretVersionsVersion;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSecretVersionsResult {
    private final @Nullable Boolean enableDetails;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return A list of Kms Secret Version ids.
     * 
     */
    private final List<String> ids;
    private final @Nullable String includeDeprecated;
    private final @Nullable String outputFile;
    /**
     * @return The name of the secret.
     * 
     */
    private final String secretName;
    private final @Nullable String versionStage;
    /**
     * @return A list of KMS Secret Versions. Each element contains the following attributes:
     * 
     */
    private final List<GetSecretVersionsVersion> versions;

    @CustomType.Constructor
    private GetSecretVersionsResult(
        @CustomType.Parameter("enableDetails") @Nullable Boolean enableDetails,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ids") List<String> ids,
        @CustomType.Parameter("includeDeprecated") @Nullable String includeDeprecated,
        @CustomType.Parameter("outputFile") @Nullable String outputFile,
        @CustomType.Parameter("secretName") String secretName,
        @CustomType.Parameter("versionStage") @Nullable String versionStage,
        @CustomType.Parameter("versions") List<GetSecretVersionsVersion> versions) {
        this.enableDetails = enableDetails;
        this.id = id;
        this.ids = ids;
        this.includeDeprecated = includeDeprecated;
        this.outputFile = outputFile;
        this.secretName = secretName;
        this.versionStage = versionStage;
        this.versions = versions;
    }

    public Optional<Boolean> enableDetails() {
        return Optional.ofNullable(this.enableDetails);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of Kms Secret Version ids.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> includeDeprecated() {
        return Optional.ofNullable(this.includeDeprecated);
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return The name of the secret.
     * 
     */
    public String secretName() {
        return this.secretName;
    }
    public Optional<String> versionStage() {
        return Optional.ofNullable(this.versionStage);
    }
    /**
     * @return A list of KMS Secret Versions. Each element contains the following attributes:
     * 
     */
    public List<GetSecretVersionsVersion> versions() {
        return this.versions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecretVersionsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean enableDetails;
        private String id;
        private List<String> ids;
        private @Nullable String includeDeprecated;
        private @Nullable String outputFile;
        private String secretName;
        private @Nullable String versionStage;
        private List<GetSecretVersionsVersion> versions;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSecretVersionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableDetails = defaults.enableDetails;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.includeDeprecated = defaults.includeDeprecated;
    	      this.outputFile = defaults.outputFile;
    	      this.secretName = defaults.secretName;
    	      this.versionStage = defaults.versionStage;
    	      this.versions = defaults.versions;
        }

        public Builder enableDetails(@Nullable Boolean enableDetails) {
            this.enableDetails = enableDetails;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public Builder includeDeprecated(@Nullable String includeDeprecated) {
            this.includeDeprecated = includeDeprecated;
            return this;
        }
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        public Builder secretName(String secretName) {
            this.secretName = Objects.requireNonNull(secretName);
            return this;
        }
        public Builder versionStage(@Nullable String versionStage) {
            this.versionStage = versionStage;
            return this;
        }
        public Builder versions(List<GetSecretVersionsVersion> versions) {
            this.versions = Objects.requireNonNull(versions);
            return this;
        }
        public Builder versions(GetSecretVersionsVersion... versions) {
            return versions(List.of(versions));
        }        public GetSecretVersionsResult build() {
            return new GetSecretVersionsResult(enableDetails, id, ids, includeDeprecated, outputFile, secretName, versionStage, versions);
        }
    }
}
