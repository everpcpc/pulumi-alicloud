// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.adb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetClustersCluster {
    private final Integer autoRenewPeriod;
    /**
     * @return Billing method. Value options: `PostPaid` for Pay-As-You-Go and `PrePaid` for subscription.
     * 
     */
    private final String chargeType;
    private final String commodityCode;
    private final String computeResource;
    private final String connectionString;
    /**
     * @return The CreateTime of the ADB cluster.
     * 
     */
    private final String createTime;
    private final String dbClusterCategory;
    private final String dbClusterId;
    private final String dbClusterNetworkType;
    private final String dbClusterType;
    private final String dbClusterVersion;
    /**
     * @return The DBNodeClass of the ADB cluster.
     * 
     */
    private final String dbNodeClass;
    /**
     * @return The DBNodeCount of the ADB cluster.
     * 
     */
    private final Integer dbNodeCount;
    /**
     * @return The DBNodeStorage of the ADB cluster.
     * 
     */
    private final Integer dbNodeStorage;
    /**
     * @return The description of the ADB cluster.
     * 
     */
    private final String description;
    private final String diskType;
    private final String dtsJobId;
    private final Integer elasticIoResource;
    private final String engine;
    private final String engineVersion;
    private final String executorCount;
    /**
     * @return Expiration time. Pay-As-You-Go clusters never expire.
     * 
     */
    private final String expireTime;
    /**
     * @return The expired of the ADB cluster.
     * 
     */
    private final String expired;
    /**
     * @return The ID of the ADB cluster.
     * 
     */
    private final String id;
    /**
     * @return The LockMode of the ADB cluster.
     * 
     */
    private final String lockMode;
    private final String lockReason;
    private final String maintainTime;
    private final String mode;
    /**
     * @return The DBClusterNetworkType of the ADB cluster.
     * 
     */
    private final String networkType;
    private final String paymentType;
    private final Integer port;
    private final String rdsInstanceId;
    /**
     * @return Region ID the cluster belongs to.
     * 
     */
    private final String regionId;
    private final String renewalStatus;
    private final String resourceGroupId;
    private final List<String> securityIps;
    /**
     * @return The status of the cluster. Valid values: `Preparing`, `Creating`, `Restoring`, `Running`, `Deleting`, `ClassChanging`, `NetAddressCreating`, `NetAddressDeleting`. For more information, see [Cluster status](https://www.alibabacloud.com/help/doc-detail/143075.htm).
     * 
     */
    private final String status;
    private final String storageResource;
    /**
     * @return A mapping of tags to assign to the resource.
     * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
     * 
     */
    private final Map<String,Object> tags;
    private final String vpcCloudInstanceId;
    /**
     * @return ID of the VPC the cluster belongs to.
     * 
     */
    private final String vpcId;
    private final String vswitchId;
    /**
     * @return The ZoneId of the ADB cluster.
     * 
     */
    private final String zoneId;

    @CustomType.Constructor
    private GetClustersCluster(
        @CustomType.Parameter("autoRenewPeriod") Integer autoRenewPeriod,
        @CustomType.Parameter("chargeType") String chargeType,
        @CustomType.Parameter("commodityCode") String commodityCode,
        @CustomType.Parameter("computeResource") String computeResource,
        @CustomType.Parameter("connectionString") String connectionString,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("dbClusterCategory") String dbClusterCategory,
        @CustomType.Parameter("dbClusterId") String dbClusterId,
        @CustomType.Parameter("dbClusterNetworkType") String dbClusterNetworkType,
        @CustomType.Parameter("dbClusterType") String dbClusterType,
        @CustomType.Parameter("dbClusterVersion") String dbClusterVersion,
        @CustomType.Parameter("dbNodeClass") String dbNodeClass,
        @CustomType.Parameter("dbNodeCount") Integer dbNodeCount,
        @CustomType.Parameter("dbNodeStorage") Integer dbNodeStorage,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("diskType") String diskType,
        @CustomType.Parameter("dtsJobId") String dtsJobId,
        @CustomType.Parameter("elasticIoResource") Integer elasticIoResource,
        @CustomType.Parameter("engine") String engine,
        @CustomType.Parameter("engineVersion") String engineVersion,
        @CustomType.Parameter("executorCount") String executorCount,
        @CustomType.Parameter("expireTime") String expireTime,
        @CustomType.Parameter("expired") String expired,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lockMode") String lockMode,
        @CustomType.Parameter("lockReason") String lockReason,
        @CustomType.Parameter("maintainTime") String maintainTime,
        @CustomType.Parameter("mode") String mode,
        @CustomType.Parameter("networkType") String networkType,
        @CustomType.Parameter("paymentType") String paymentType,
        @CustomType.Parameter("port") Integer port,
        @CustomType.Parameter("rdsInstanceId") String rdsInstanceId,
        @CustomType.Parameter("regionId") String regionId,
        @CustomType.Parameter("renewalStatus") String renewalStatus,
        @CustomType.Parameter("resourceGroupId") String resourceGroupId,
        @CustomType.Parameter("securityIps") List<String> securityIps,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("storageResource") String storageResource,
        @CustomType.Parameter("tags") Map<String,Object> tags,
        @CustomType.Parameter("vpcCloudInstanceId") String vpcCloudInstanceId,
        @CustomType.Parameter("vpcId") String vpcId,
        @CustomType.Parameter("vswitchId") String vswitchId,
        @CustomType.Parameter("zoneId") String zoneId) {
        this.autoRenewPeriod = autoRenewPeriod;
        this.chargeType = chargeType;
        this.commodityCode = commodityCode;
        this.computeResource = computeResource;
        this.connectionString = connectionString;
        this.createTime = createTime;
        this.dbClusterCategory = dbClusterCategory;
        this.dbClusterId = dbClusterId;
        this.dbClusterNetworkType = dbClusterNetworkType;
        this.dbClusterType = dbClusterType;
        this.dbClusterVersion = dbClusterVersion;
        this.dbNodeClass = dbNodeClass;
        this.dbNodeCount = dbNodeCount;
        this.dbNodeStorage = dbNodeStorage;
        this.description = description;
        this.diskType = diskType;
        this.dtsJobId = dtsJobId;
        this.elasticIoResource = elasticIoResource;
        this.engine = engine;
        this.engineVersion = engineVersion;
        this.executorCount = executorCount;
        this.expireTime = expireTime;
        this.expired = expired;
        this.id = id;
        this.lockMode = lockMode;
        this.lockReason = lockReason;
        this.maintainTime = maintainTime;
        this.mode = mode;
        this.networkType = networkType;
        this.paymentType = paymentType;
        this.port = port;
        this.rdsInstanceId = rdsInstanceId;
        this.regionId = regionId;
        this.renewalStatus = renewalStatus;
        this.resourceGroupId = resourceGroupId;
        this.securityIps = securityIps;
        this.status = status;
        this.storageResource = storageResource;
        this.tags = tags;
        this.vpcCloudInstanceId = vpcCloudInstanceId;
        this.vpcId = vpcId;
        this.vswitchId = vswitchId;
        this.zoneId = zoneId;
    }

    public Integer autoRenewPeriod() {
        return this.autoRenewPeriod;
    }
    /**
     * @return Billing method. Value options: `PostPaid` for Pay-As-You-Go and `PrePaid` for subscription.
     * 
     */
    public String chargeType() {
        return this.chargeType;
    }
    public String commodityCode() {
        return this.commodityCode;
    }
    public String computeResource() {
        return this.computeResource;
    }
    public String connectionString() {
        return this.connectionString;
    }
    /**
     * @return The CreateTime of the ADB cluster.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    public String dbClusterCategory() {
        return this.dbClusterCategory;
    }
    public String dbClusterId() {
        return this.dbClusterId;
    }
    public String dbClusterNetworkType() {
        return this.dbClusterNetworkType;
    }
    public String dbClusterType() {
        return this.dbClusterType;
    }
    public String dbClusterVersion() {
        return this.dbClusterVersion;
    }
    /**
     * @return The DBNodeClass of the ADB cluster.
     * 
     */
    public String dbNodeClass() {
        return this.dbNodeClass;
    }
    /**
     * @return The DBNodeCount of the ADB cluster.
     * 
     */
    public Integer dbNodeCount() {
        return this.dbNodeCount;
    }
    /**
     * @return The DBNodeStorage of the ADB cluster.
     * 
     */
    public Integer dbNodeStorage() {
        return this.dbNodeStorage;
    }
    /**
     * @return The description of the ADB cluster.
     * 
     */
    public String description() {
        return this.description;
    }
    public String diskType() {
        return this.diskType;
    }
    public String dtsJobId() {
        return this.dtsJobId;
    }
    public Integer elasticIoResource() {
        return this.elasticIoResource;
    }
    public String engine() {
        return this.engine;
    }
    public String engineVersion() {
        return this.engineVersion;
    }
    public String executorCount() {
        return this.executorCount;
    }
    /**
     * @return Expiration time. Pay-As-You-Go clusters never expire.
     * 
     */
    public String expireTime() {
        return this.expireTime;
    }
    /**
     * @return The expired of the ADB cluster.
     * 
     */
    public String expired() {
        return this.expired;
    }
    /**
     * @return The ID of the ADB cluster.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The LockMode of the ADB cluster.
     * 
     */
    public String lockMode() {
        return this.lockMode;
    }
    public String lockReason() {
        return this.lockReason;
    }
    public String maintainTime() {
        return this.maintainTime;
    }
    public String mode() {
        return this.mode;
    }
    /**
     * @return The DBClusterNetworkType of the ADB cluster.
     * 
     */
    public String networkType() {
        return this.networkType;
    }
    public String paymentType() {
        return this.paymentType;
    }
    public Integer port() {
        return this.port;
    }
    public String rdsInstanceId() {
        return this.rdsInstanceId;
    }
    /**
     * @return Region ID the cluster belongs to.
     * 
     */
    public String regionId() {
        return this.regionId;
    }
    public String renewalStatus() {
        return this.renewalStatus;
    }
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    public List<String> securityIps() {
        return this.securityIps;
    }
    /**
     * @return The status of the cluster. Valid values: `Preparing`, `Creating`, `Restoring`, `Running`, `Deleting`, `ClassChanging`, `NetAddressCreating`, `NetAddressDeleting`. For more information, see [Cluster status](https://www.alibabacloud.com/help/doc-detail/143075.htm).
     * 
     */
    public String status() {
        return this.status;
    }
    public String storageResource() {
        return this.storageResource;
    }
    /**
     * @return A mapping of tags to assign to the resource.
     * - Key: It can be up to 64 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It cannot be a null string.
     * - Value: It can be up to 128 characters in length. It cannot begin with &#34;aliyun&#34;, &#34;acs:&#34;, &#34;http://&#34;, or &#34;https://&#34;. It can be a null string.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags;
    }
    public String vpcCloudInstanceId() {
        return this.vpcCloudInstanceId;
    }
    /**
     * @return ID of the VPC the cluster belongs to.
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    public String vswitchId() {
        return this.vswitchId;
    }
    /**
     * @return The ZoneId of the ADB cluster.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClustersCluster defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer autoRenewPeriod;
        private String chargeType;
        private String commodityCode;
        private String computeResource;
        private String connectionString;
        private String createTime;
        private String dbClusterCategory;
        private String dbClusterId;
        private String dbClusterNetworkType;
        private String dbClusterType;
        private String dbClusterVersion;
        private String dbNodeClass;
        private Integer dbNodeCount;
        private Integer dbNodeStorage;
        private String description;
        private String diskType;
        private String dtsJobId;
        private Integer elasticIoResource;
        private String engine;
        private String engineVersion;
        private String executorCount;
        private String expireTime;
        private String expired;
        private String id;
        private String lockMode;
        private String lockReason;
        private String maintainTime;
        private String mode;
        private String networkType;
        private String paymentType;
        private Integer port;
        private String rdsInstanceId;
        private String regionId;
        private String renewalStatus;
        private String resourceGroupId;
        private List<String> securityIps;
        private String status;
        private String storageResource;
        private Map<String,Object> tags;
        private String vpcCloudInstanceId;
        private String vpcId;
        private String vswitchId;
        private String zoneId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClustersCluster defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoRenewPeriod = defaults.autoRenewPeriod;
    	      this.chargeType = defaults.chargeType;
    	      this.commodityCode = defaults.commodityCode;
    	      this.computeResource = defaults.computeResource;
    	      this.connectionString = defaults.connectionString;
    	      this.createTime = defaults.createTime;
    	      this.dbClusterCategory = defaults.dbClusterCategory;
    	      this.dbClusterId = defaults.dbClusterId;
    	      this.dbClusterNetworkType = defaults.dbClusterNetworkType;
    	      this.dbClusterType = defaults.dbClusterType;
    	      this.dbClusterVersion = defaults.dbClusterVersion;
    	      this.dbNodeClass = defaults.dbNodeClass;
    	      this.dbNodeCount = defaults.dbNodeCount;
    	      this.dbNodeStorage = defaults.dbNodeStorage;
    	      this.description = defaults.description;
    	      this.diskType = defaults.diskType;
    	      this.dtsJobId = defaults.dtsJobId;
    	      this.elasticIoResource = defaults.elasticIoResource;
    	      this.engine = defaults.engine;
    	      this.engineVersion = defaults.engineVersion;
    	      this.executorCount = defaults.executorCount;
    	      this.expireTime = defaults.expireTime;
    	      this.expired = defaults.expired;
    	      this.id = defaults.id;
    	      this.lockMode = defaults.lockMode;
    	      this.lockReason = defaults.lockReason;
    	      this.maintainTime = defaults.maintainTime;
    	      this.mode = defaults.mode;
    	      this.networkType = defaults.networkType;
    	      this.paymentType = defaults.paymentType;
    	      this.port = defaults.port;
    	      this.rdsInstanceId = defaults.rdsInstanceId;
    	      this.regionId = defaults.regionId;
    	      this.renewalStatus = defaults.renewalStatus;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.securityIps = defaults.securityIps;
    	      this.status = defaults.status;
    	      this.storageResource = defaults.storageResource;
    	      this.tags = defaults.tags;
    	      this.vpcCloudInstanceId = defaults.vpcCloudInstanceId;
    	      this.vpcId = defaults.vpcId;
    	      this.vswitchId = defaults.vswitchId;
    	      this.zoneId = defaults.zoneId;
        }

        public Builder autoRenewPeriod(Integer autoRenewPeriod) {
            this.autoRenewPeriod = Objects.requireNonNull(autoRenewPeriod);
            return this;
        }
        public Builder chargeType(String chargeType) {
            this.chargeType = Objects.requireNonNull(chargeType);
            return this;
        }
        public Builder commodityCode(String commodityCode) {
            this.commodityCode = Objects.requireNonNull(commodityCode);
            return this;
        }
        public Builder computeResource(String computeResource) {
            this.computeResource = Objects.requireNonNull(computeResource);
            return this;
        }
        public Builder connectionString(String connectionString) {
            this.connectionString = Objects.requireNonNull(connectionString);
            return this;
        }
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder dbClusterCategory(String dbClusterCategory) {
            this.dbClusterCategory = Objects.requireNonNull(dbClusterCategory);
            return this;
        }
        public Builder dbClusterId(String dbClusterId) {
            this.dbClusterId = Objects.requireNonNull(dbClusterId);
            return this;
        }
        public Builder dbClusterNetworkType(String dbClusterNetworkType) {
            this.dbClusterNetworkType = Objects.requireNonNull(dbClusterNetworkType);
            return this;
        }
        public Builder dbClusterType(String dbClusterType) {
            this.dbClusterType = Objects.requireNonNull(dbClusterType);
            return this;
        }
        public Builder dbClusterVersion(String dbClusterVersion) {
            this.dbClusterVersion = Objects.requireNonNull(dbClusterVersion);
            return this;
        }
        public Builder dbNodeClass(String dbNodeClass) {
            this.dbNodeClass = Objects.requireNonNull(dbNodeClass);
            return this;
        }
        public Builder dbNodeCount(Integer dbNodeCount) {
            this.dbNodeCount = Objects.requireNonNull(dbNodeCount);
            return this;
        }
        public Builder dbNodeStorage(Integer dbNodeStorage) {
            this.dbNodeStorage = Objects.requireNonNull(dbNodeStorage);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder diskType(String diskType) {
            this.diskType = Objects.requireNonNull(diskType);
            return this;
        }
        public Builder dtsJobId(String dtsJobId) {
            this.dtsJobId = Objects.requireNonNull(dtsJobId);
            return this;
        }
        public Builder elasticIoResource(Integer elasticIoResource) {
            this.elasticIoResource = Objects.requireNonNull(elasticIoResource);
            return this;
        }
        public Builder engine(String engine) {
            this.engine = Objects.requireNonNull(engine);
            return this;
        }
        public Builder engineVersion(String engineVersion) {
            this.engineVersion = Objects.requireNonNull(engineVersion);
            return this;
        }
        public Builder executorCount(String executorCount) {
            this.executorCount = Objects.requireNonNull(executorCount);
            return this;
        }
        public Builder expireTime(String expireTime) {
            this.expireTime = Objects.requireNonNull(expireTime);
            return this;
        }
        public Builder expired(String expired) {
            this.expired = Objects.requireNonNull(expired);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lockMode(String lockMode) {
            this.lockMode = Objects.requireNonNull(lockMode);
            return this;
        }
        public Builder lockReason(String lockReason) {
            this.lockReason = Objects.requireNonNull(lockReason);
            return this;
        }
        public Builder maintainTime(String maintainTime) {
            this.maintainTime = Objects.requireNonNull(maintainTime);
            return this;
        }
        public Builder mode(String mode) {
            this.mode = Objects.requireNonNull(mode);
            return this;
        }
        public Builder networkType(String networkType) {
            this.networkType = Objects.requireNonNull(networkType);
            return this;
        }
        public Builder paymentType(String paymentType) {
            this.paymentType = Objects.requireNonNull(paymentType);
            return this;
        }
        public Builder port(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        public Builder rdsInstanceId(String rdsInstanceId) {
            this.rdsInstanceId = Objects.requireNonNull(rdsInstanceId);
            return this;
        }
        public Builder regionId(String regionId) {
            this.regionId = Objects.requireNonNull(regionId);
            return this;
        }
        public Builder renewalStatus(String renewalStatus) {
            this.renewalStatus = Objects.requireNonNull(renewalStatus);
            return this;
        }
        public Builder resourceGroupId(String resourceGroupId) {
            this.resourceGroupId = Objects.requireNonNull(resourceGroupId);
            return this;
        }
        public Builder securityIps(List<String> securityIps) {
            this.securityIps = Objects.requireNonNull(securityIps);
            return this;
        }
        public Builder securityIps(String... securityIps) {
            return securityIps(List.of(securityIps));
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder storageResource(String storageResource) {
            this.storageResource = Objects.requireNonNull(storageResource);
            return this;
        }
        public Builder tags(Map<String,Object> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder vpcCloudInstanceId(String vpcCloudInstanceId) {
            this.vpcCloudInstanceId = Objects.requireNonNull(vpcCloudInstanceId);
            return this;
        }
        public Builder vpcId(String vpcId) {
            this.vpcId = Objects.requireNonNull(vpcId);
            return this;
        }
        public Builder vswitchId(String vswitchId) {
            this.vswitchId = Objects.requireNonNull(vswitchId);
            return this;
        }
        public Builder zoneId(String zoneId) {
            this.zoneId = Objects.requireNonNull(zoneId);
            return this;
        }        public GetClustersCluster build() {
            return new GetClustersCluster(autoRenewPeriod, chargeType, commodityCode, computeResource, connectionString, createTime, dbClusterCategory, dbClusterId, dbClusterNetworkType, dbClusterType, dbClusterVersion, dbNodeClass, dbNodeCount, dbNodeStorage, description, diskType, dtsJobId, elasticIoResource, engine, engineVersion, executorCount, expireTime, expired, id, lockMode, lockReason, maintainTime, mode, networkType, paymentType, port, rdsInstanceId, regionId, renewalStatus, resourceGroupId, securityIps, status, storageResource, tags, vpcCloudInstanceId, vpcId, vswitchId, zoneId);
        }
    }
}
