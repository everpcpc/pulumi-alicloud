// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ros.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StackInstanceParameterOverride {
    /**
     * @return The key of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
     * 
     */
    private final @Nullable String parameterKey;
    /**
     * @return The value of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
     * 
     */
    private final @Nullable String parameterValue;

    @CustomType.Constructor
    private StackInstanceParameterOverride(
        @CustomType.Parameter("parameterKey") @Nullable String parameterKey,
        @CustomType.Parameter("parameterValue") @Nullable String parameterValue) {
        this.parameterKey = parameterKey;
        this.parameterValue = parameterValue;
    }

    /**
     * @return The key of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
     * 
     */
    public Optional<String> parameterKey() {
        return Optional.ofNullable(this.parameterKey);
    }
    /**
     * @return The value of override parameter. If you do not specify the key and value of the parameter, ROS uses the key and value that you specified when you created the stack group.
     * 
     */
    public Optional<String> parameterValue() {
        return Optional.ofNullable(this.parameterValue);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StackInstanceParameterOverride defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String parameterKey;
        private @Nullable String parameterValue;

        public Builder() {
    	      // Empty
        }

        public Builder(StackInstanceParameterOverride defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.parameterKey = defaults.parameterKey;
    	      this.parameterValue = defaults.parameterValue;
        }

        public Builder parameterKey(@Nullable String parameterKey) {
            this.parameterKey = parameterKey;
            return this;
        }
        public Builder parameterValue(@Nullable String parameterValue) {
            this.parameterValue = parameterValue;
            return this;
        }        public StackInstanceParameterOverride build() {
            return new StackInstanceParameterOverride(parameterKey, parameterValue);
        }
    }
}
