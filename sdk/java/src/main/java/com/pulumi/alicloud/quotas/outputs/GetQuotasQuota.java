// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.quotas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetQuotasQuota {
    /**
     * @return Is the quota adjustable.
     * 
     */
    private final Boolean adjustable;
    /**
     * @return The range of quota adjustment.
     * 
     */
    private final List<String> applicableRanges;
    /**
     * @return The type of quota.
     * 
     */
    private final String applicableType;
    /**
     * @return Show used quota.
     * 
     */
    private final Boolean consumable;
    /**
     * @return The ID of the Quota.
     * 
     */
    private final String id;
    /**
     * @return The quota action code.
     * 
     */
    private final String quotaActionCode;
    /**
     * @return The quota description.
     * 
     */
    private final String quotaDescription;
    /**
     * @return The quota name.
     * 
     */
    private final String quotaName;
    /**
     * @return The quota type.
     * 
     */
    private final String quotaType;
    /**
     * @return The quota unit.
     * 
     */
    private final String quotaUnit;
    /**
     * @return TotalQuota.
     * 
     */
    private final Double totalQuota;
    /**
     * @return The total of usage.
     * 
     */
    private final Double totalUsage;
    /**
     * @return The unadjustable detail.
     * 
     */
    private final String unadjustableDetail;

    @CustomType.Constructor
    private GetQuotasQuota(
        @CustomType.Parameter("adjustable") Boolean adjustable,
        @CustomType.Parameter("applicableRanges") List<String> applicableRanges,
        @CustomType.Parameter("applicableType") String applicableType,
        @CustomType.Parameter("consumable") Boolean consumable,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("quotaActionCode") String quotaActionCode,
        @CustomType.Parameter("quotaDescription") String quotaDescription,
        @CustomType.Parameter("quotaName") String quotaName,
        @CustomType.Parameter("quotaType") String quotaType,
        @CustomType.Parameter("quotaUnit") String quotaUnit,
        @CustomType.Parameter("totalQuota") Double totalQuota,
        @CustomType.Parameter("totalUsage") Double totalUsage,
        @CustomType.Parameter("unadjustableDetail") String unadjustableDetail) {
        this.adjustable = adjustable;
        this.applicableRanges = applicableRanges;
        this.applicableType = applicableType;
        this.consumable = consumable;
        this.id = id;
        this.quotaActionCode = quotaActionCode;
        this.quotaDescription = quotaDescription;
        this.quotaName = quotaName;
        this.quotaType = quotaType;
        this.quotaUnit = quotaUnit;
        this.totalQuota = totalQuota;
        this.totalUsage = totalUsage;
        this.unadjustableDetail = unadjustableDetail;
    }

    /**
     * @return Is the quota adjustable.
     * 
     */
    public Boolean adjustable() {
        return this.adjustable;
    }
    /**
     * @return The range of quota adjustment.
     * 
     */
    public List<String> applicableRanges() {
        return this.applicableRanges;
    }
    /**
     * @return The type of quota.
     * 
     */
    public String applicableType() {
        return this.applicableType;
    }
    /**
     * @return Show used quota.
     * 
     */
    public Boolean consumable() {
        return this.consumable;
    }
    /**
     * @return The ID of the Quota.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The quota action code.
     * 
     */
    public String quotaActionCode() {
        return this.quotaActionCode;
    }
    /**
     * @return The quota description.
     * 
     */
    public String quotaDescription() {
        return this.quotaDescription;
    }
    /**
     * @return The quota name.
     * 
     */
    public String quotaName() {
        return this.quotaName;
    }
    /**
     * @return The quota type.
     * 
     */
    public String quotaType() {
        return this.quotaType;
    }
    /**
     * @return The quota unit.
     * 
     */
    public String quotaUnit() {
        return this.quotaUnit;
    }
    /**
     * @return TotalQuota.
     * 
     */
    public Double totalQuota() {
        return this.totalQuota;
    }
    /**
     * @return The total of usage.
     * 
     */
    public Double totalUsage() {
        return this.totalUsage;
    }
    /**
     * @return The unadjustable detail.
     * 
     */
    public String unadjustableDetail() {
        return this.unadjustableDetail;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetQuotasQuota defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean adjustable;
        private List<String> applicableRanges;
        private String applicableType;
        private Boolean consumable;
        private String id;
        private String quotaActionCode;
        private String quotaDescription;
        private String quotaName;
        private String quotaType;
        private String quotaUnit;
        private Double totalQuota;
        private Double totalUsage;
        private String unadjustableDetail;

        public Builder() {
    	      // Empty
        }

        public Builder(GetQuotasQuota defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adjustable = defaults.adjustable;
    	      this.applicableRanges = defaults.applicableRanges;
    	      this.applicableType = defaults.applicableType;
    	      this.consumable = defaults.consumable;
    	      this.id = defaults.id;
    	      this.quotaActionCode = defaults.quotaActionCode;
    	      this.quotaDescription = defaults.quotaDescription;
    	      this.quotaName = defaults.quotaName;
    	      this.quotaType = defaults.quotaType;
    	      this.quotaUnit = defaults.quotaUnit;
    	      this.totalQuota = defaults.totalQuota;
    	      this.totalUsage = defaults.totalUsage;
    	      this.unadjustableDetail = defaults.unadjustableDetail;
        }

        public Builder adjustable(Boolean adjustable) {
            this.adjustable = Objects.requireNonNull(adjustable);
            return this;
        }
        public Builder applicableRanges(List<String> applicableRanges) {
            this.applicableRanges = Objects.requireNonNull(applicableRanges);
            return this;
        }
        public Builder applicableRanges(String... applicableRanges) {
            return applicableRanges(List.of(applicableRanges));
        }
        public Builder applicableType(String applicableType) {
            this.applicableType = Objects.requireNonNull(applicableType);
            return this;
        }
        public Builder consumable(Boolean consumable) {
            this.consumable = Objects.requireNonNull(consumable);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder quotaActionCode(String quotaActionCode) {
            this.quotaActionCode = Objects.requireNonNull(quotaActionCode);
            return this;
        }
        public Builder quotaDescription(String quotaDescription) {
            this.quotaDescription = Objects.requireNonNull(quotaDescription);
            return this;
        }
        public Builder quotaName(String quotaName) {
            this.quotaName = Objects.requireNonNull(quotaName);
            return this;
        }
        public Builder quotaType(String quotaType) {
            this.quotaType = Objects.requireNonNull(quotaType);
            return this;
        }
        public Builder quotaUnit(String quotaUnit) {
            this.quotaUnit = Objects.requireNonNull(quotaUnit);
            return this;
        }
        public Builder totalQuota(Double totalQuota) {
            this.totalQuota = Objects.requireNonNull(totalQuota);
            return this;
        }
        public Builder totalUsage(Double totalUsage) {
            this.totalUsage = Objects.requireNonNull(totalUsage);
            return this;
        }
        public Builder unadjustableDetail(String unadjustableDetail) {
            this.unadjustableDetail = Objects.requireNonNull(unadjustableDetail);
            return this;
        }        public GetQuotasQuota build() {
            return new GetQuotasQuota(adjustable, applicableRanges, applicableType, consumable, id, quotaActionCode, quotaDescription, quotaName, quotaType, quotaUnit, totalQuota, totalUsage, unadjustableDetail);
        }
    }
}
