// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oos.outputs;

import com.pulumi.alicloud.oos.outputs.GetParametersParameter;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetParametersResult {
    private final @Nullable Boolean enableDetails;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<String> ids;
    private final @Nullable String nameRegex;
    private final List<String> names;
    private final @Nullable String outputFile;
    private final @Nullable String parameterName;
    private final List<GetParametersParameter> parameters;
    private final @Nullable String resourceGroupId;
    private final @Nullable String sortField;
    private final @Nullable String sortOrder;
    private final @Nullable Map<String,Object> tags;
    private final @Nullable String type;

    @CustomType.Constructor
    private GetParametersResult(
        @CustomType.Parameter("enableDetails") @Nullable Boolean enableDetails,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ids") List<String> ids,
        @CustomType.Parameter("nameRegex") @Nullable String nameRegex,
        @CustomType.Parameter("names") List<String> names,
        @CustomType.Parameter("outputFile") @Nullable String outputFile,
        @CustomType.Parameter("parameterName") @Nullable String parameterName,
        @CustomType.Parameter("parameters") List<GetParametersParameter> parameters,
        @CustomType.Parameter("resourceGroupId") @Nullable String resourceGroupId,
        @CustomType.Parameter("sortField") @Nullable String sortField,
        @CustomType.Parameter("sortOrder") @Nullable String sortOrder,
        @CustomType.Parameter("tags") @Nullable Map<String,Object> tags,
        @CustomType.Parameter("type") @Nullable String type) {
        this.enableDetails = enableDetails;
        this.id = id;
        this.ids = ids;
        this.nameRegex = nameRegex;
        this.names = names;
        this.outputFile = outputFile;
        this.parameterName = parameterName;
        this.parameters = parameters;
        this.resourceGroupId = resourceGroupId;
        this.sortField = sortField;
        this.sortOrder = sortOrder;
        this.tags = tags;
        this.type = type;
    }

    public Optional<Boolean> enableDetails() {
        return Optional.ofNullable(this.enableDetails);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Optional<String> parameterName() {
        return Optional.ofNullable(this.parameterName);
    }
    public List<GetParametersParameter> parameters() {
        return this.parameters;
    }
    public Optional<String> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }
    public Optional<String> sortField() {
        return Optional.ofNullable(this.sortField);
    }
    public Optional<String> sortOrder() {
        return Optional.ofNullable(this.sortOrder);
    }
    public Map<String,Object> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetParametersResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean enableDetails;
        private String id;
        private List<String> ids;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        private @Nullable String parameterName;
        private List<GetParametersParameter> parameters;
        private @Nullable String resourceGroupId;
        private @Nullable String sortField;
        private @Nullable String sortOrder;
        private @Nullable Map<String,Object> tags;
        private @Nullable String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetParametersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableDetails = defaults.enableDetails;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
    	      this.parameterName = defaults.parameterName;
    	      this.parameters = defaults.parameters;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.sortField = defaults.sortField;
    	      this.sortOrder = defaults.sortOrder;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        public Builder enableDetails(@Nullable Boolean enableDetails) {
            this.enableDetails = enableDetails;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        public Builder names(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        public Builder parameterName(@Nullable String parameterName) {
            this.parameterName = parameterName;
            return this;
        }
        public Builder parameters(List<GetParametersParameter> parameters) {
            this.parameters = Objects.requireNonNull(parameters);
            return this;
        }
        public Builder parameters(GetParametersParameter... parameters) {
            return parameters(List.of(parameters));
        }
        public Builder resourceGroupId(@Nullable String resourceGroupId) {
            this.resourceGroupId = resourceGroupId;
            return this;
        }
        public Builder sortField(@Nullable String sortField) {
            this.sortField = sortField;
            return this;
        }
        public Builder sortOrder(@Nullable String sortOrder) {
            this.sortOrder = sortOrder;
            return this;
        }
        public Builder tags(@Nullable Map<String,Object> tags) {
            this.tags = tags;
            return this;
        }
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }        public GetParametersResult build() {
            return new GetParametersResult(enableDetails, id, ids, nameRegex, names, outputFile, parameterName, parameters, resourceGroupId, sortField, sortOrder, tags, type);
        }
    }
}
