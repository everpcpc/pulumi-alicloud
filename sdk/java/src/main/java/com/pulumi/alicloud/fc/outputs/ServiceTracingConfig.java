// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.fc.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class ServiceTracingConfig {
    /**
     * @return Tracing parameters, which type is map[string]string. When the protocol type is Jaeger, the key is &#34;endpoint&#34; and the value is your tracing intranet endpoint. For example endpoint: http://tracing-analysis-dc-hz.aliyuncs.com/adapt_xxx/api/traces.
     * 
     */
    private final Map<String,Object> params;
    /**
     * @return Tracing protocol type. Currently, only Jaeger is supported.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private ServiceTracingConfig(
        @CustomType.Parameter("params") Map<String,Object> params,
        @CustomType.Parameter("type") String type) {
        this.params = params;
        this.type = type;
    }

    /**
     * @return Tracing parameters, which type is map[string]string. When the protocol type is Jaeger, the key is &#34;endpoint&#34; and the value is your tracing intranet endpoint. For example endpoint: http://tracing-analysis-dc-hz.aliyuncs.com/adapt_xxx/api/traces.
     * 
     */
    public Map<String,Object> params() {
        return this.params;
    }
    /**
     * @return Tracing protocol type. Currently, only Jaeger is supported.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceTracingConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,Object> params;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceTracingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.params = defaults.params;
    	      this.type = defaults.type;
        }

        public Builder params(Map<String,Object> params) {
            this.params = Objects.requireNonNull(params);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public ServiceTracingConfig build() {
            return new ServiceTracingConfig(params, type);
        }
    }
}
