// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ga.outputs;

import com.pulumi.alicloud.ga.outputs.ForwardingRuleRuleActionForwardGroupConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ForwardingRuleRuleAction {
    /**
     * @return Forwarding configuration.
     * 
     */
    private final ForwardingRuleRuleActionForwardGroupConfig forwardGroupConfig;
    /**
     * @return Forwarding priority.
     * 
     */
    private final Integer order;
    /**
     * @return Forward action type. Default: forwardgroup.
     * 
     */
    private final String ruleActionType;

    @CustomType.Constructor
    private ForwardingRuleRuleAction(
        @CustomType.Parameter("forwardGroupConfig") ForwardingRuleRuleActionForwardGroupConfig forwardGroupConfig,
        @CustomType.Parameter("order") Integer order,
        @CustomType.Parameter("ruleActionType") String ruleActionType) {
        this.forwardGroupConfig = forwardGroupConfig;
        this.order = order;
        this.ruleActionType = ruleActionType;
    }

    /**
     * @return Forwarding configuration.
     * 
     */
    public ForwardingRuleRuleActionForwardGroupConfig forwardGroupConfig() {
        return this.forwardGroupConfig;
    }
    /**
     * @return Forwarding priority.
     * 
     */
    public Integer order() {
        return this.order;
    }
    /**
     * @return Forward action type. Default: forwardgroup.
     * 
     */
    public String ruleActionType() {
        return this.ruleActionType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ForwardingRuleRuleAction defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ForwardingRuleRuleActionForwardGroupConfig forwardGroupConfig;
        private Integer order;
        private String ruleActionType;

        public Builder() {
    	      // Empty
        }

        public Builder(ForwardingRuleRuleAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.forwardGroupConfig = defaults.forwardGroupConfig;
    	      this.order = defaults.order;
    	      this.ruleActionType = defaults.ruleActionType;
        }

        public Builder forwardGroupConfig(ForwardingRuleRuleActionForwardGroupConfig forwardGroupConfig) {
            this.forwardGroupConfig = Objects.requireNonNull(forwardGroupConfig);
            return this;
        }
        public Builder order(Integer order) {
            this.order = Objects.requireNonNull(order);
            return this;
        }
        public Builder ruleActionType(String ruleActionType) {
            this.ruleActionType = Objects.requireNonNull(ruleActionType);
            return this;
        }        public ForwardingRuleRuleAction build() {
            return new ForwardingRuleRuleAction(forwardGroupConfig, order, ruleActionType);
        }
    }
}
