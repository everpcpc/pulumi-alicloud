// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eci.outputs;

import com.pulumi.alicloud.eci.outputs.GetContainerGroupsGroupEciSecurityContextSysctl;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetContainerGroupsGroupEciSecurityContext {
    /**
     * @return The system information.
     * 
     */
    private final List<GetContainerGroupsGroupEciSecurityContextSysctl> sysctls;

    @CustomType.Constructor
    private GetContainerGroupsGroupEciSecurityContext(@CustomType.Parameter("sysctls") List<GetContainerGroupsGroupEciSecurityContextSysctl> sysctls) {
        this.sysctls = sysctls;
    }

    /**
     * @return The system information.
     * 
     */
    public List<GetContainerGroupsGroupEciSecurityContextSysctl> sysctls() {
        return this.sysctls;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContainerGroupsGroupEciSecurityContext defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetContainerGroupsGroupEciSecurityContextSysctl> sysctls;

        public Builder() {
    	      // Empty
        }

        public Builder(GetContainerGroupsGroupEciSecurityContext defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sysctls = defaults.sysctls;
        }

        public Builder sysctls(List<GetContainerGroupsGroupEciSecurityContextSysctl> sysctls) {
            this.sysctls = Objects.requireNonNull(sysctls);
            return this;
        }
        public Builder sysctls(GetContainerGroupsGroupEciSecurityContextSysctl... sysctls) {
            return sysctls(List.of(sysctls));
        }        public GetContainerGroupsGroupEciSecurityContext build() {
            return new GetContainerGroupsGroupEciSecurityContext(sysctls);
        }
    }
}
