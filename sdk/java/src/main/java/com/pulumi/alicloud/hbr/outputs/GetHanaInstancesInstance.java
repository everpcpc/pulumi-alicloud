// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.hbr.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetHanaInstancesInstance {
    /**
     * @return The alert settings. Valid value: `INHERITED`, which indicates that the backup client sends alert notifications in the same way as the backup vault.
     * 
     */
    private final String alertSetting;
    /**
     * @return The ID of the SAP HANA instance.
     * 
     */
    private final String hanaInstanceId;
    /**
     * @return The name of the SAP HANA instance.
     * 
     */
    private final String hanaName;
    /**
     * @return The private or internal IP address of the host where the primary node of the SAP HANA instance resides.
     * 
     */
    private final String host;
    /**
     * @return The ID of the Hana Instance. The value formats as `&lt;vault_id&gt;:&lt;hana_instance_id&gt;`.
     * 
     */
    private final String id;
    /**
     * @return The instance number of the SAP HANA system.
     * 
     */
    private final Integer instanceNumber;
    /**
     * @return The ID of the resource group.
     * 
     */
    private final String resourceGroupId;
    /**
     * @return The status of the SAP HANA instance.
     * 
     */
    private final String status;
    /**
     * @return The status information.
     * 
     */
    private final String statusMessage;
    /**
     * @return Indicates whether the SAP HANA instance is connected over Secure Sockets Layer (SSL).
     * 
     */
    private final Boolean useSsl;
    /**
     * @return The username of the SYSTEMDB database.
     * 
     */
    private final String userName;
    /**
     * @return Indicates whether the SSL certificate of the SAP HANA instance is verified.
     * 
     */
    private final Boolean validateCertificate;
    /**
     * @return The ID of the backup vault.
     * 
     */
    private final String vaultId;

    @CustomType.Constructor
    private GetHanaInstancesInstance(
        @CustomType.Parameter("alertSetting") String alertSetting,
        @CustomType.Parameter("hanaInstanceId") String hanaInstanceId,
        @CustomType.Parameter("hanaName") String hanaName,
        @CustomType.Parameter("host") String host,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceNumber") Integer instanceNumber,
        @CustomType.Parameter("resourceGroupId") String resourceGroupId,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("statusMessage") String statusMessage,
        @CustomType.Parameter("useSsl") Boolean useSsl,
        @CustomType.Parameter("userName") String userName,
        @CustomType.Parameter("validateCertificate") Boolean validateCertificate,
        @CustomType.Parameter("vaultId") String vaultId) {
        this.alertSetting = alertSetting;
        this.hanaInstanceId = hanaInstanceId;
        this.hanaName = hanaName;
        this.host = host;
        this.id = id;
        this.instanceNumber = instanceNumber;
        this.resourceGroupId = resourceGroupId;
        this.status = status;
        this.statusMessage = statusMessage;
        this.useSsl = useSsl;
        this.userName = userName;
        this.validateCertificate = validateCertificate;
        this.vaultId = vaultId;
    }

    /**
     * @return The alert settings. Valid value: `INHERITED`, which indicates that the backup client sends alert notifications in the same way as the backup vault.
     * 
     */
    public String alertSetting() {
        return this.alertSetting;
    }
    /**
     * @return The ID of the SAP HANA instance.
     * 
     */
    public String hanaInstanceId() {
        return this.hanaInstanceId;
    }
    /**
     * @return The name of the SAP HANA instance.
     * 
     */
    public String hanaName() {
        return this.hanaName;
    }
    /**
     * @return The private or internal IP address of the host where the primary node of the SAP HANA instance resides.
     * 
     */
    public String host() {
        return this.host;
    }
    /**
     * @return The ID of the Hana Instance. The value formats as `&lt;vault_id&gt;:&lt;hana_instance_id&gt;`.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The instance number of the SAP HANA system.
     * 
     */
    public Integer instanceNumber() {
        return this.instanceNumber;
    }
    /**
     * @return The ID of the resource group.
     * 
     */
    public String resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * @return The status of the SAP HANA instance.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The status information.
     * 
     */
    public String statusMessage() {
        return this.statusMessage;
    }
    /**
     * @return Indicates whether the SAP HANA instance is connected over Secure Sockets Layer (SSL).
     * 
     */
    public Boolean useSsl() {
        return this.useSsl;
    }
    /**
     * @return The username of the SYSTEMDB database.
     * 
     */
    public String userName() {
        return this.userName;
    }
    /**
     * @return Indicates whether the SSL certificate of the SAP HANA instance is verified.
     * 
     */
    public Boolean validateCertificate() {
        return this.validateCertificate;
    }
    /**
     * @return The ID of the backup vault.
     * 
     */
    public String vaultId() {
        return this.vaultId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHanaInstancesInstance defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String alertSetting;
        private String hanaInstanceId;
        private String hanaName;
        private String host;
        private String id;
        private Integer instanceNumber;
        private String resourceGroupId;
        private String status;
        private String statusMessage;
        private Boolean useSsl;
        private String userName;
        private Boolean validateCertificate;
        private String vaultId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetHanaInstancesInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alertSetting = defaults.alertSetting;
    	      this.hanaInstanceId = defaults.hanaInstanceId;
    	      this.hanaName = defaults.hanaName;
    	      this.host = defaults.host;
    	      this.id = defaults.id;
    	      this.instanceNumber = defaults.instanceNumber;
    	      this.resourceGroupId = defaults.resourceGroupId;
    	      this.status = defaults.status;
    	      this.statusMessage = defaults.statusMessage;
    	      this.useSsl = defaults.useSsl;
    	      this.userName = defaults.userName;
    	      this.validateCertificate = defaults.validateCertificate;
    	      this.vaultId = defaults.vaultId;
        }

        public Builder alertSetting(String alertSetting) {
            this.alertSetting = Objects.requireNonNull(alertSetting);
            return this;
        }
        public Builder hanaInstanceId(String hanaInstanceId) {
            this.hanaInstanceId = Objects.requireNonNull(hanaInstanceId);
            return this;
        }
        public Builder hanaName(String hanaName) {
            this.hanaName = Objects.requireNonNull(hanaName);
            return this;
        }
        public Builder host(String host) {
            this.host = Objects.requireNonNull(host);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instanceNumber(Integer instanceNumber) {
            this.instanceNumber = Objects.requireNonNull(instanceNumber);
            return this;
        }
        public Builder resourceGroupId(String resourceGroupId) {
            this.resourceGroupId = Objects.requireNonNull(resourceGroupId);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder statusMessage(String statusMessage) {
            this.statusMessage = Objects.requireNonNull(statusMessage);
            return this;
        }
        public Builder useSsl(Boolean useSsl) {
            this.useSsl = Objects.requireNonNull(useSsl);
            return this;
        }
        public Builder userName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }
        public Builder validateCertificate(Boolean validateCertificate) {
            this.validateCertificate = Objects.requireNonNull(validateCertificate);
            return this;
        }
        public Builder vaultId(String vaultId) {
            this.vaultId = Objects.requireNonNull(vaultId);
            return this;
        }        public GetHanaInstancesInstance build() {
            return new GetHanaInstancesInstance(alertSetting, hanaInstanceId, hanaName, host, id, instanceNumber, resourceGroupId, status, statusMessage, useSsl, userName, validateCertificate, vaultId);
        }
    }
}
