// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.oss.outputs;

import com.pulumi.alicloud.oss.outputs.GetBucketObjectsObject;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBucketObjectsResult {
    private final String bucketName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final @Nullable String keyPrefix;
    private final @Nullable String keyRegex;
    /**
     * @return A list of bucket objects. Each element contains the following attributes:
     * 
     */
    private final List<GetBucketObjectsObject> objects;
    private final @Nullable String outputFile;

    @CustomType.Constructor
    private GetBucketObjectsResult(
        @CustomType.Parameter("bucketName") String bucketName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("keyPrefix") @Nullable String keyPrefix,
        @CustomType.Parameter("keyRegex") @Nullable String keyRegex,
        @CustomType.Parameter("objects") List<GetBucketObjectsObject> objects,
        @CustomType.Parameter("outputFile") @Nullable String outputFile) {
        this.bucketName = bucketName;
        this.id = id;
        this.keyPrefix = keyPrefix;
        this.keyRegex = keyRegex;
        this.objects = objects;
        this.outputFile = outputFile;
    }

    public String bucketName() {
        return this.bucketName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> keyPrefix() {
        return Optional.ofNullable(this.keyPrefix);
    }
    public Optional<String> keyRegex() {
        return Optional.ofNullable(this.keyRegex);
    }
    /**
     * @return A list of bucket objects. Each element contains the following attributes:
     * 
     */
    public List<GetBucketObjectsObject> objects() {
        return this.objects;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBucketObjectsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bucketName;
        private String id;
        private @Nullable String keyPrefix;
        private @Nullable String keyRegex;
        private List<GetBucketObjectsObject> objects;
        private @Nullable String outputFile;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBucketObjectsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketName = defaults.bucketName;
    	      this.id = defaults.id;
    	      this.keyPrefix = defaults.keyPrefix;
    	      this.keyRegex = defaults.keyRegex;
    	      this.objects = defaults.objects;
    	      this.outputFile = defaults.outputFile;
        }

        public Builder bucketName(String bucketName) {
            this.bucketName = Objects.requireNonNull(bucketName);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder keyPrefix(@Nullable String keyPrefix) {
            this.keyPrefix = keyPrefix;
            return this;
        }
        public Builder keyRegex(@Nullable String keyRegex) {
            this.keyRegex = keyRegex;
            return this;
        }
        public Builder objects(List<GetBucketObjectsObject> objects) {
            this.objects = Objects.requireNonNull(objects);
            return this;
        }
        public Builder objects(GetBucketObjectsObject... objects) {
            return objects(List.of(objects));
        }
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }        public GetBucketObjectsResult build() {
            return new GetBucketObjectsResult(bucketName, id, keyPrefix, keyRegex, objects, outputFile);
        }
    }
}
