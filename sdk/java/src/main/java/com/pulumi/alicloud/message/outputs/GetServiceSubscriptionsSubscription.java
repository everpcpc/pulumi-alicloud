// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.message.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServiceSubscriptionsSubscription {
    /**
     * @return The time when the subscription was created. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since the epoch time January 1, 1970, 00:00:00 UTC.
     * 
     */
    private final Integer createTime;
    /**
     * @return The endpoint to which the messages are pushed.
     * 
     */
    private final String endpoint;
    /**
     * @return The tag that is used to filter messages. Only the messages that are attached with the specified tag can be pushed.
     * 
     */
    private final String filterTag;
    /**
     * @return The id of the Subscription.
     * 
     */
    private final String id;
    /**
     * @return The time when the subscription was last modified. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since the epoch time January 1, 1970, 00:00:00 UTC.
     * 
     */
    private final Integer lastModifyTime;
    /**
     * @return The content format of the messages that are pushed to the endpoint.
     * 
     */
    private final String notifyContentFormat;
    /**
     * @return The retry policy that is applied if an error occurs when MNS pushes messages to the endpoint.
     * 
     */
    private final String notifyStrategy;
    /**
     * @return The name of the subscription.
     * 
     */
    private final String subscriptionName;
    /**
     * @return The url of the subscription.
     * 
     */
    private final String subscriptionUrl;
    /**
     * @return The name of the topic.
     * 
     */
    private final String topicName;
    /**
     * @return The account ID of the topic owner.
     * 
     */
    private final String topicOwner;

    @CustomType.Constructor
    private GetServiceSubscriptionsSubscription(
        @CustomType.Parameter("createTime") Integer createTime,
        @CustomType.Parameter("endpoint") String endpoint,
        @CustomType.Parameter("filterTag") String filterTag,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lastModifyTime") Integer lastModifyTime,
        @CustomType.Parameter("notifyContentFormat") String notifyContentFormat,
        @CustomType.Parameter("notifyStrategy") String notifyStrategy,
        @CustomType.Parameter("subscriptionName") String subscriptionName,
        @CustomType.Parameter("subscriptionUrl") String subscriptionUrl,
        @CustomType.Parameter("topicName") String topicName,
        @CustomType.Parameter("topicOwner") String topicOwner) {
        this.createTime = createTime;
        this.endpoint = endpoint;
        this.filterTag = filterTag;
        this.id = id;
        this.lastModifyTime = lastModifyTime;
        this.notifyContentFormat = notifyContentFormat;
        this.notifyStrategy = notifyStrategy;
        this.subscriptionName = subscriptionName;
        this.subscriptionUrl = subscriptionUrl;
        this.topicName = topicName;
        this.topicOwner = topicOwner;
    }

    /**
     * @return The time when the subscription was created. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since the epoch time January 1, 1970, 00:00:00 UTC.
     * 
     */
    public Integer createTime() {
        return this.createTime;
    }
    /**
     * @return The endpoint to which the messages are pushed.
     * 
     */
    public String endpoint() {
        return this.endpoint;
    }
    /**
     * @return The tag that is used to filter messages. Only the messages that are attached with the specified tag can be pushed.
     * 
     */
    public String filterTag() {
        return this.filterTag;
    }
    /**
     * @return The id of the Subscription.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The time when the subscription was last modified. This value is a UNIX timestamp representing the number of milliseconds that have elapsed since the epoch time January 1, 1970, 00:00:00 UTC.
     * 
     */
    public Integer lastModifyTime() {
        return this.lastModifyTime;
    }
    /**
     * @return The content format of the messages that are pushed to the endpoint.
     * 
     */
    public String notifyContentFormat() {
        return this.notifyContentFormat;
    }
    /**
     * @return The retry policy that is applied if an error occurs when MNS pushes messages to the endpoint.
     * 
     */
    public String notifyStrategy() {
        return this.notifyStrategy;
    }
    /**
     * @return The name of the subscription.
     * 
     */
    public String subscriptionName() {
        return this.subscriptionName;
    }
    /**
     * @return The url of the subscription.
     * 
     */
    public String subscriptionUrl() {
        return this.subscriptionUrl;
    }
    /**
     * @return The name of the topic.
     * 
     */
    public String topicName() {
        return this.topicName;
    }
    /**
     * @return The account ID of the topic owner.
     * 
     */
    public String topicOwner() {
        return this.topicOwner;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceSubscriptionsSubscription defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer createTime;
        private String endpoint;
        private String filterTag;
        private String id;
        private Integer lastModifyTime;
        private String notifyContentFormat;
        private String notifyStrategy;
        private String subscriptionName;
        private String subscriptionUrl;
        private String topicName;
        private String topicOwner;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServiceSubscriptionsSubscription defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.endpoint = defaults.endpoint;
    	      this.filterTag = defaults.filterTag;
    	      this.id = defaults.id;
    	      this.lastModifyTime = defaults.lastModifyTime;
    	      this.notifyContentFormat = defaults.notifyContentFormat;
    	      this.notifyStrategy = defaults.notifyStrategy;
    	      this.subscriptionName = defaults.subscriptionName;
    	      this.subscriptionUrl = defaults.subscriptionUrl;
    	      this.topicName = defaults.topicName;
    	      this.topicOwner = defaults.topicOwner;
        }

        public Builder createTime(Integer createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder endpoint(String endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }
        public Builder filterTag(String filterTag) {
            this.filterTag = Objects.requireNonNull(filterTag);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lastModifyTime(Integer lastModifyTime) {
            this.lastModifyTime = Objects.requireNonNull(lastModifyTime);
            return this;
        }
        public Builder notifyContentFormat(String notifyContentFormat) {
            this.notifyContentFormat = Objects.requireNonNull(notifyContentFormat);
            return this;
        }
        public Builder notifyStrategy(String notifyStrategy) {
            this.notifyStrategy = Objects.requireNonNull(notifyStrategy);
            return this;
        }
        public Builder subscriptionName(String subscriptionName) {
            this.subscriptionName = Objects.requireNonNull(subscriptionName);
            return this;
        }
        public Builder subscriptionUrl(String subscriptionUrl) {
            this.subscriptionUrl = Objects.requireNonNull(subscriptionUrl);
            return this;
        }
        public Builder topicName(String topicName) {
            this.topicName = Objects.requireNonNull(topicName);
            return this;
        }
        public Builder topicOwner(String topicOwner) {
            this.topicOwner = Objects.requireNonNull(topicOwner);
            return this;
        }        public GetServiceSubscriptionsSubscription build() {
            return new GetServiceSubscriptionsSubscription(createTime, endpoint, filterTag, id, lastModifyTime, notifyContentFormat, notifyStrategy, subscriptionName, subscriptionUrl, topicName, topicOwner);
        }
    }
}
