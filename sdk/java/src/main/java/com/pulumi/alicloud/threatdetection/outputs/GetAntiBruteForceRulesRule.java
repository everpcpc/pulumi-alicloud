// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAntiBruteForceRulesRule {
    /**
     * @return The ID of the defense rule.
     * 
     */
    private final String antiBruteForceRuleId;
    /**
     * @return The name of the defense rule.
     * 
     */
    private final String antiBruteForceRuleName;
    /**
     * @return Specifies whether to set the defense rule as the default rule.
     * 
     */
    private final Boolean defaultRule;
    /**
     * @return The threshold for the number of failed user logins when the brute-force defense rule takes effect.
     * 
     */
    private final Integer failCount;
    /**
     * @return The period of time during which logons from an account are not allowed. Unit: minutes.
     * 
     */
    private final Integer forbiddenTime;
    /**
     * @return The ID of the defense rule.
     * 
     */
    private final String id;
    /**
     * @return The period of time during which logon failures from an account are measured. Unit: minutes. If Span is set to 10, the defense rule takes effect when the logon failures measured within 10 minutes reaches the specified threshold. The IP address of attackers cannot be used to log on to the server in the specified period of time.
     * 
     */
    private final Integer span;
    /**
     * @return An array consisting of the UUIDs of servers to which the defense rule is applied.
     * 
     */
    private final List<String> uuidLists;

    @CustomType.Constructor
    private GetAntiBruteForceRulesRule(
        @CustomType.Parameter("antiBruteForceRuleId") String antiBruteForceRuleId,
        @CustomType.Parameter("antiBruteForceRuleName") String antiBruteForceRuleName,
        @CustomType.Parameter("defaultRule") Boolean defaultRule,
        @CustomType.Parameter("failCount") Integer failCount,
        @CustomType.Parameter("forbiddenTime") Integer forbiddenTime,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("span") Integer span,
        @CustomType.Parameter("uuidLists") List<String> uuidLists) {
        this.antiBruteForceRuleId = antiBruteForceRuleId;
        this.antiBruteForceRuleName = antiBruteForceRuleName;
        this.defaultRule = defaultRule;
        this.failCount = failCount;
        this.forbiddenTime = forbiddenTime;
        this.id = id;
        this.span = span;
        this.uuidLists = uuidLists;
    }

    /**
     * @return The ID of the defense rule.
     * 
     */
    public String antiBruteForceRuleId() {
        return this.antiBruteForceRuleId;
    }
    /**
     * @return The name of the defense rule.
     * 
     */
    public String antiBruteForceRuleName() {
        return this.antiBruteForceRuleName;
    }
    /**
     * @return Specifies whether to set the defense rule as the default rule.
     * 
     */
    public Boolean defaultRule() {
        return this.defaultRule;
    }
    /**
     * @return The threshold for the number of failed user logins when the brute-force defense rule takes effect.
     * 
     */
    public Integer failCount() {
        return this.failCount;
    }
    /**
     * @return The period of time during which logons from an account are not allowed. Unit: minutes.
     * 
     */
    public Integer forbiddenTime() {
        return this.forbiddenTime;
    }
    /**
     * @return The ID of the defense rule.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The period of time during which logon failures from an account are measured. Unit: minutes. If Span is set to 10, the defense rule takes effect when the logon failures measured within 10 minutes reaches the specified threshold. The IP address of attackers cannot be used to log on to the server in the specified period of time.
     * 
     */
    public Integer span() {
        return this.span;
    }
    /**
     * @return An array consisting of the UUIDs of servers to which the defense rule is applied.
     * 
     */
    public List<String> uuidLists() {
        return this.uuidLists;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAntiBruteForceRulesRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String antiBruteForceRuleId;
        private String antiBruteForceRuleName;
        private Boolean defaultRule;
        private Integer failCount;
        private Integer forbiddenTime;
        private String id;
        private Integer span;
        private List<String> uuidLists;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAntiBruteForceRulesRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.antiBruteForceRuleId = defaults.antiBruteForceRuleId;
    	      this.antiBruteForceRuleName = defaults.antiBruteForceRuleName;
    	      this.defaultRule = defaults.defaultRule;
    	      this.failCount = defaults.failCount;
    	      this.forbiddenTime = defaults.forbiddenTime;
    	      this.id = defaults.id;
    	      this.span = defaults.span;
    	      this.uuidLists = defaults.uuidLists;
        }

        public Builder antiBruteForceRuleId(String antiBruteForceRuleId) {
            this.antiBruteForceRuleId = Objects.requireNonNull(antiBruteForceRuleId);
            return this;
        }
        public Builder antiBruteForceRuleName(String antiBruteForceRuleName) {
            this.antiBruteForceRuleName = Objects.requireNonNull(antiBruteForceRuleName);
            return this;
        }
        public Builder defaultRule(Boolean defaultRule) {
            this.defaultRule = Objects.requireNonNull(defaultRule);
            return this;
        }
        public Builder failCount(Integer failCount) {
            this.failCount = Objects.requireNonNull(failCount);
            return this;
        }
        public Builder forbiddenTime(Integer forbiddenTime) {
            this.forbiddenTime = Objects.requireNonNull(forbiddenTime);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder span(Integer span) {
            this.span = Objects.requireNonNull(span);
            return this;
        }
        public Builder uuidLists(List<String> uuidLists) {
            this.uuidLists = Objects.requireNonNull(uuidLists);
            return this;
        }
        public Builder uuidLists(String... uuidLists) {
            return uuidLists(List.of(uuidLists));
        }        public GetAntiBruteForceRulesRule build() {
            return new GetAntiBruteForceRulesRule(antiBruteForceRuleId, antiBruteForceRuleName, defaultRule, failCount, forbiddenTime, id, span, uuidLists);
        }
    }
}
