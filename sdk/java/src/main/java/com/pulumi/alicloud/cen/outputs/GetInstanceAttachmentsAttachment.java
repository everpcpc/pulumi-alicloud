// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstanceAttachmentsAttachment {
    /**
     * @return The time when the network is associated with the CEN instance.
     * 
     */
    private final String childInstanceAttachTime;
    /**
     * @return The ID of the network.
     * 
     */
    private final String childInstanceId;
    /**
     * @return The ID of the account to which the network belongs.
     * 
     */
    private final Integer childInstanceOwnerId;
    /**
     * @return The region to which the network to be queried belongs.
     * 
     */
    private final String childInstanceRegionId;
    /**
     * @return The type of the associated network. Valid values: `VPC`, `VBR` and `CCN`.
     * 
     */
    private final String childInstanceType;
    /**
     * @return The ID of the CEN Instance Attachment.
     * 
     */
    private final String id;
    /**
     * @return The ID of the CEN instance.
     * 
     */
    private final String instanceId;
    /**
     * @return The status of the Cen Child Instance Attachment. Valid value: `Attaching`, `Attached` and `Aetaching`.
     * 
     */
    private final String status;

    @CustomType.Constructor
    private GetInstanceAttachmentsAttachment(
        @CustomType.Parameter("childInstanceAttachTime") String childInstanceAttachTime,
        @CustomType.Parameter("childInstanceId") String childInstanceId,
        @CustomType.Parameter("childInstanceOwnerId") Integer childInstanceOwnerId,
        @CustomType.Parameter("childInstanceRegionId") String childInstanceRegionId,
        @CustomType.Parameter("childInstanceType") String childInstanceType,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceId") String instanceId,
        @CustomType.Parameter("status") String status) {
        this.childInstanceAttachTime = childInstanceAttachTime;
        this.childInstanceId = childInstanceId;
        this.childInstanceOwnerId = childInstanceOwnerId;
        this.childInstanceRegionId = childInstanceRegionId;
        this.childInstanceType = childInstanceType;
        this.id = id;
        this.instanceId = instanceId;
        this.status = status;
    }

    /**
     * @return The time when the network is associated with the CEN instance.
     * 
     */
    public String childInstanceAttachTime() {
        return this.childInstanceAttachTime;
    }
    /**
     * @return The ID of the network.
     * 
     */
    public String childInstanceId() {
        return this.childInstanceId;
    }
    /**
     * @return The ID of the account to which the network belongs.
     * 
     */
    public Integer childInstanceOwnerId() {
        return this.childInstanceOwnerId;
    }
    /**
     * @return The region to which the network to be queried belongs.
     * 
     */
    public String childInstanceRegionId() {
        return this.childInstanceRegionId;
    }
    /**
     * @return The type of the associated network. Valid values: `VPC`, `VBR` and `CCN`.
     * 
     */
    public String childInstanceType() {
        return this.childInstanceType;
    }
    /**
     * @return The ID of the CEN Instance Attachment.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the CEN instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The status of the Cen Child Instance Attachment. Valid value: `Attaching`, `Attached` and `Aetaching`.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceAttachmentsAttachment defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String childInstanceAttachTime;
        private String childInstanceId;
        private Integer childInstanceOwnerId;
        private String childInstanceRegionId;
        private String childInstanceType;
        private String id;
        private String instanceId;
        private String status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstanceAttachmentsAttachment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.childInstanceAttachTime = defaults.childInstanceAttachTime;
    	      this.childInstanceId = defaults.childInstanceId;
    	      this.childInstanceOwnerId = defaults.childInstanceOwnerId;
    	      this.childInstanceRegionId = defaults.childInstanceRegionId;
    	      this.childInstanceType = defaults.childInstanceType;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.status = defaults.status;
        }

        public Builder childInstanceAttachTime(String childInstanceAttachTime) {
            this.childInstanceAttachTime = Objects.requireNonNull(childInstanceAttachTime);
            return this;
        }
        public Builder childInstanceId(String childInstanceId) {
            this.childInstanceId = Objects.requireNonNull(childInstanceId);
            return this;
        }
        public Builder childInstanceOwnerId(Integer childInstanceOwnerId) {
            this.childInstanceOwnerId = Objects.requireNonNull(childInstanceOwnerId);
            return this;
        }
        public Builder childInstanceRegionId(String childInstanceRegionId) {
            this.childInstanceRegionId = Objects.requireNonNull(childInstanceRegionId);
            return this;
        }
        public Builder childInstanceType(String childInstanceType) {
            this.childInstanceType = Objects.requireNonNull(childInstanceType);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }        public GetInstanceAttachmentsAttachment build() {
            return new GetInstanceAttachmentsAttachment(childInstanceAttachTime, childInstanceId, childInstanceOwnerId, childInstanceRegionId, childInstanceType, id, instanceId, status);
        }
    }
}
