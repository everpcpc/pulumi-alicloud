// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetEipAddressesEip {
    /**
     * @return The maximum bandwidth of the EIP. Unit: Mbit/s.
     * 
     */
    private final String bandwidth;
    private final String creationTime;
    /**
     * @return Indicates whether deletion protection is enabled.
     * 
     */
    private final Boolean deletionProtection;
    /**
     * @return The ID of the Address.
     * 
     */
    private final String id;
    /**
     * @return The ID of the instance with which the EIP is associated.
     * 
     */
    private final String instanceId;
    /**
     * @return The type of the instance with which the EIP is associated.
     * 
     */
    private final String instanceType;
    /**
     * @return The metering method of the EIP.
     * 
     */
    private final String internetChargeType;
    /**
     * @return The IP address of the EIP.
     * 
     */
    private final String ipAddress;
    /**
     * @return The status of the EIP.
     * 
     */
    private final String status;

    @CustomType.Constructor
    private GetEipAddressesEip(
        @CustomType.Parameter("bandwidth") String bandwidth,
        @CustomType.Parameter("creationTime") String creationTime,
        @CustomType.Parameter("deletionProtection") Boolean deletionProtection,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceId") String instanceId,
        @CustomType.Parameter("instanceType") String instanceType,
        @CustomType.Parameter("internetChargeType") String internetChargeType,
        @CustomType.Parameter("ipAddress") String ipAddress,
        @CustomType.Parameter("status") String status) {
        this.bandwidth = bandwidth;
        this.creationTime = creationTime;
        this.deletionProtection = deletionProtection;
        this.id = id;
        this.instanceId = instanceId;
        this.instanceType = instanceType;
        this.internetChargeType = internetChargeType;
        this.ipAddress = ipAddress;
        this.status = status;
    }

    /**
     * @return The maximum bandwidth of the EIP. Unit: Mbit/s.
     * 
     */
    public String bandwidth() {
        return this.bandwidth;
    }
    public String creationTime() {
        return this.creationTime;
    }
    /**
     * @return Indicates whether deletion protection is enabled.
     * 
     */
    public Boolean deletionProtection() {
        return this.deletionProtection;
    }
    /**
     * @return The ID of the Address.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the instance with which the EIP is associated.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The type of the instance with which the EIP is associated.
     * 
     */
    public String instanceType() {
        return this.instanceType;
    }
    /**
     * @return The metering method of the EIP.
     * 
     */
    public String internetChargeType() {
        return this.internetChargeType;
    }
    /**
     * @return The IP address of the EIP.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return The status of the EIP.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEipAddressesEip defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bandwidth;
        private String creationTime;
        private Boolean deletionProtection;
        private String id;
        private String instanceId;
        private String instanceType;
        private String internetChargeType;
        private String ipAddress;
        private String status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEipAddressesEip defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidth = defaults.bandwidth;
    	      this.creationTime = defaults.creationTime;
    	      this.deletionProtection = defaults.deletionProtection;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.instanceType = defaults.instanceType;
    	      this.internetChargeType = defaults.internetChargeType;
    	      this.ipAddress = defaults.ipAddress;
    	      this.status = defaults.status;
        }

        public Builder bandwidth(String bandwidth) {
            this.bandwidth = Objects.requireNonNull(bandwidth);
            return this;
        }
        public Builder creationTime(String creationTime) {
            this.creationTime = Objects.requireNonNull(creationTime);
            return this;
        }
        public Builder deletionProtection(Boolean deletionProtection) {
            this.deletionProtection = Objects.requireNonNull(deletionProtection);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        public Builder instanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }
        public Builder internetChargeType(String internetChargeType) {
            this.internetChargeType = Objects.requireNonNull(internetChargeType);
            return this;
        }
        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }        public GetEipAddressesEip build() {
            return new GetEipAddressesEip(bandwidth, creationTime, deletionProtection, id, instanceId, instanceType, internetChargeType, ipAddress, status);
        }
    }
}
