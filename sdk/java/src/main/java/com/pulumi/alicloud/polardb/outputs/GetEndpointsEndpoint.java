// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.polardb.outputs;

import com.pulumi.alicloud.polardb.outputs.GetEndpointsEndpointAddressItem;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEndpointsEndpoint {
    /**
     * @return A list of endpoint addresses. Each element contains the following attributes.
     * 
     */
    private final List<GetEndpointsEndpointAddressItem> addressItems;
    /**
     * @return Whether the new node is automatically added to the default cluster address.Options are `Enable` and `Disable`.
     * 
     */
    private final String autoAddNewNodes;
    /**
     * @return endpoint of the cluster.
     * 
     */
    private final String dbEndpointId;
    /**
     * @return The Endpoint configuration. `ConsistLevel`: session consistency level, value:`0`: final consistency,`1`: session consistency;`LoadBalanceStrategy`: load balancing strategy. Based on the automatic scheduling of load, the value is: `load`.
     * 
     */
    private final String endpointConfig;
    /**
     * @return Cluster address type.`Cluster`: the default address of the Cluster.`Primary`: Primary address.`Custom`: Custom cluster addresses.
     * 
     */
    private final String endpointType;
    /**
     * @return A list of nodes that connect to the address configuration.
     * 
     */
    private final String nodes;
    /**
     * @return Read-write mode:`ReadWrite`: readable and writable (automatic read-write separation).`ReadOnly`: ReadOnly.
     * 
     */
    private final String readWriteMode;

    @CustomType.Constructor
    private GetEndpointsEndpoint(
        @CustomType.Parameter("addressItems") List<GetEndpointsEndpointAddressItem> addressItems,
        @CustomType.Parameter("autoAddNewNodes") String autoAddNewNodes,
        @CustomType.Parameter("dbEndpointId") String dbEndpointId,
        @CustomType.Parameter("endpointConfig") String endpointConfig,
        @CustomType.Parameter("endpointType") String endpointType,
        @CustomType.Parameter("nodes") String nodes,
        @CustomType.Parameter("readWriteMode") String readWriteMode) {
        this.addressItems = addressItems;
        this.autoAddNewNodes = autoAddNewNodes;
        this.dbEndpointId = dbEndpointId;
        this.endpointConfig = endpointConfig;
        this.endpointType = endpointType;
        this.nodes = nodes;
        this.readWriteMode = readWriteMode;
    }

    /**
     * @return A list of endpoint addresses. Each element contains the following attributes.
     * 
     */
    public List<GetEndpointsEndpointAddressItem> addressItems() {
        return this.addressItems;
    }
    /**
     * @return Whether the new node is automatically added to the default cluster address.Options are `Enable` and `Disable`.
     * 
     */
    public String autoAddNewNodes() {
        return this.autoAddNewNodes;
    }
    /**
     * @return endpoint of the cluster.
     * 
     */
    public String dbEndpointId() {
        return this.dbEndpointId;
    }
    /**
     * @return The Endpoint configuration. `ConsistLevel`: session consistency level, value:`0`: final consistency,`1`: session consistency;`LoadBalanceStrategy`: load balancing strategy. Based on the automatic scheduling of load, the value is: `load`.
     * 
     */
    public String endpointConfig() {
        return this.endpointConfig;
    }
    /**
     * @return Cluster address type.`Cluster`: the default address of the Cluster.`Primary`: Primary address.`Custom`: Custom cluster addresses.
     * 
     */
    public String endpointType() {
        return this.endpointType;
    }
    /**
     * @return A list of nodes that connect to the address configuration.
     * 
     */
    public String nodes() {
        return this.nodes;
    }
    /**
     * @return Read-write mode:`ReadWrite`: readable and writable (automatic read-write separation).`ReadOnly`: ReadOnly.
     * 
     */
    public String readWriteMode() {
        return this.readWriteMode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEndpointsEndpoint defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetEndpointsEndpointAddressItem> addressItems;
        private String autoAddNewNodes;
        private String dbEndpointId;
        private String endpointConfig;
        private String endpointType;
        private String nodes;
        private String readWriteMode;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEndpointsEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressItems = defaults.addressItems;
    	      this.autoAddNewNodes = defaults.autoAddNewNodes;
    	      this.dbEndpointId = defaults.dbEndpointId;
    	      this.endpointConfig = defaults.endpointConfig;
    	      this.endpointType = defaults.endpointType;
    	      this.nodes = defaults.nodes;
    	      this.readWriteMode = defaults.readWriteMode;
        }

        public Builder addressItems(List<GetEndpointsEndpointAddressItem> addressItems) {
            this.addressItems = Objects.requireNonNull(addressItems);
            return this;
        }
        public Builder addressItems(GetEndpointsEndpointAddressItem... addressItems) {
            return addressItems(List.of(addressItems));
        }
        public Builder autoAddNewNodes(String autoAddNewNodes) {
            this.autoAddNewNodes = Objects.requireNonNull(autoAddNewNodes);
            return this;
        }
        public Builder dbEndpointId(String dbEndpointId) {
            this.dbEndpointId = Objects.requireNonNull(dbEndpointId);
            return this;
        }
        public Builder endpointConfig(String endpointConfig) {
            this.endpointConfig = Objects.requireNonNull(endpointConfig);
            return this;
        }
        public Builder endpointType(String endpointType) {
            this.endpointType = Objects.requireNonNull(endpointType);
            return this;
        }
        public Builder nodes(String nodes) {
            this.nodes = Objects.requireNonNull(nodes);
            return this;
        }
        public Builder readWriteMode(String readWriteMode) {
            this.readWriteMode = Objects.requireNonNull(readWriteMode);
            return this;
        }        public GetEndpointsEndpoint build() {
            return new GetEndpointsEndpoint(addressItems, autoAddNewNodes, dbEndpointId, endpointConfig, endpointType, nodes, readWriteMode);
        }
    }
}
