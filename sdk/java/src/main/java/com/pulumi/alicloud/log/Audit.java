// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.log;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.log.AuditArgs;
import com.pulumi.alicloud.log.inputs.AuditState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * SLS log audit exists in the form of log service app.
 * 
 * In addition to inheriting all SLS functions, it also enhances the real-time automatic centralized collection of audit related logs across multi cloud products under multi accounts, and provides support for storage, query and information summary required by audit. It covers actiontrail, OSS, NAS, SLB, API gateway, RDS, WAF, cloud firewall, cloud security center and other products.
 * 
 * &gt; **NOTE:** Available in 1.81.0
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Log audit can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:log/audit:Audit example tf-audit-test
 * ```
 * 
 */
@ResourceType(type="alicloud:log/audit:Audit")
public class Audit extends com.pulumi.resources.CustomResource {
    /**
     * Aliuid value of your account.
     * 
     */
    @Export(name="aliuid", type=String.class, parameters={})
    private Output<String> aliuid;

    /**
     * @return Aliuid value of your account.
     * 
     */
    public Output<String> aliuid() {
        return this.aliuid;
    }
    /**
     * Name of SLS log audit.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return Name of SLS log audit.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Multi-account configuration, please fill in multiple aliuid.
     * 
     */
    @Export(name="multiAccounts", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> multiAccounts;

    /**
     * @return Multi-account configuration, please fill in multiple aliuid.
     * 
     */
    public Output<Optional<List<String>>> multiAccounts() {
        return Codegen.optional(this.multiAccounts);
    }
    /**
     * Resource Directory type. Optional values are all or custom. If the value is custom, argument multi_account should be provided.
     * 
     */
    @Export(name="resourceDirectoryType", type=String.class, parameters={})
    private Output</* @Nullable */ String> resourceDirectoryType;

    /**
     * @return Resource Directory type. Optional values are all or custom. If the value is custom, argument multi_account should be provided.
     * 
     */
    public Output<Optional<String>> resourceDirectoryType() {
        return Codegen.optional(this.resourceDirectoryType);
    }
    /**
     * Log audit detailed configuration.
     * 
     */
    @Export(name="variableMap", type=Map.class, parameters={String.class, Object.class})
    private Output</* @Nullable */ Map<String,Object>> variableMap;

    /**
     * @return Log audit detailed configuration.
     * 
     */
    public Output<Optional<Map<String,Object>>> variableMap() {
        return Codegen.optional(this.variableMap);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Audit(String name) {
        this(name, AuditArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Audit(String name, AuditArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Audit(String name, AuditArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:log/audit:Audit", name, args == null ? AuditArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Audit(String name, Output<String> id, @Nullable AuditState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:log/audit:Audit", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Audit get(String name, Output<String> id, @Nullable AuditState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Audit(name, id, state, options);
    }
}
