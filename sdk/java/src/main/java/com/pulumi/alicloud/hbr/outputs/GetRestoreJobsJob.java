// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.hbr.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRestoreJobsJob {
    /**
     * @return The actual size of Snapshot.
     * 
     */
    private final String actualBytes;
    /**
     * @return The actual number of files.
     * 
     */
    private final String actualItems;
    /**
     * @return The size of restore job recovered.
     * 
     */
    private final String bytesDone;
    /**
     * @return The total size of restore job recovered.
     * 
     */
    private final String bytesTotal;
    /**
     * @return The completion time of restore Job.
     * 
     */
    private final String completeTime;
    /**
     * @return The creation time of restore job.
     * 
     */
    private final String createTime;
    private final String errorFile;
    /**
     * @return The error message of recovery task execution.
     * 
     */
    private final String errorMessage;
    /**
     * @return The expiration time of restore job. Unix Time in seconds.
     * 
     */
    private final String expireTime;
    /**
     * @return The ID of the restore job.
     * 
     */
    private final String id;
    /**
     * @return The number of items restore job recovered.
     * 
     */
    private final String itemsDone;
    /**
     * @return The total number of items restore job recovered.
     * 
     */
    private final String itemsTotal;
    /**
     * @return Recovery Options.
     * 
     */
    private final String options;
    private final String parentId;
    /**
     * @return The recovery progress.
     * 
     */
    private final Integer progress;
    /**
     * @return The ID of restore job.
     * 
     */
    private final String restoreJobId;
    /**
     * @return The type of recovery destination. Valid Values: `ECS_FILE`, `OSS`, `NAS`.
     * 
     */
    private final String restoreType;
    /**
     * @return The hashcode of Snapshot.
     * 
     */
    private final String snapshotHash;
    /**
     * @return The ID of Snapshot.
     * 
     */
    private final String snapshotId;
    /**
     * @return The list of data source types. Valid values: `ECS_FILE`, `NAS`, `OSS`, `OTS_TABLE`,`UDM_ECS_ROLLBACK`.
     * 
     */
    private final String sourceType;
    /**
     * @return The start time of restore job. Unix Time in Seconds.
     * 
     */
    private final String startTime;
    /**
     * @return The status of restore job.
     * 
     */
    private final String status;
    /**
     * @return The name of target ofo OSS bucket.
     * 
     */
    private final String targetBucket;
    private final String targetClientId;
    /**
     * @return The creation time of destination file system.
     * 
     */
    private final String targetCreateTime;
    private final String targetDataSourceId;
    /**
     * @return The ID of destination file system.
     * 
     */
    private final String targetFileSystemId;
    /**
     * @return The ID of target ECS instance.
     * 
     */
    private final String targetInstanceId;
    /**
     * @return The target file path of ECS instance.
     * 
     */
    private final String targetPath;
    /**
     * @return The file prefix of target OSS object.
     * 
     */
    private final String targetPrefix;
    /**
     * @return The update Time of restore job. Unix Time in Seconds.
     * 
     */
    private final String updatedTime;
    /**
     * @return The ID of backup vault.
     * 
     */
    private final String vaultId;

    @CustomType.Constructor
    private GetRestoreJobsJob(
        @CustomType.Parameter("actualBytes") String actualBytes,
        @CustomType.Parameter("actualItems") String actualItems,
        @CustomType.Parameter("bytesDone") String bytesDone,
        @CustomType.Parameter("bytesTotal") String bytesTotal,
        @CustomType.Parameter("completeTime") String completeTime,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("errorFile") String errorFile,
        @CustomType.Parameter("errorMessage") String errorMessage,
        @CustomType.Parameter("expireTime") String expireTime,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("itemsDone") String itemsDone,
        @CustomType.Parameter("itemsTotal") String itemsTotal,
        @CustomType.Parameter("options") String options,
        @CustomType.Parameter("parentId") String parentId,
        @CustomType.Parameter("progress") Integer progress,
        @CustomType.Parameter("restoreJobId") String restoreJobId,
        @CustomType.Parameter("restoreType") String restoreType,
        @CustomType.Parameter("snapshotHash") String snapshotHash,
        @CustomType.Parameter("snapshotId") String snapshotId,
        @CustomType.Parameter("sourceType") String sourceType,
        @CustomType.Parameter("startTime") String startTime,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("targetBucket") String targetBucket,
        @CustomType.Parameter("targetClientId") String targetClientId,
        @CustomType.Parameter("targetCreateTime") String targetCreateTime,
        @CustomType.Parameter("targetDataSourceId") String targetDataSourceId,
        @CustomType.Parameter("targetFileSystemId") String targetFileSystemId,
        @CustomType.Parameter("targetInstanceId") String targetInstanceId,
        @CustomType.Parameter("targetPath") String targetPath,
        @CustomType.Parameter("targetPrefix") String targetPrefix,
        @CustomType.Parameter("updatedTime") String updatedTime,
        @CustomType.Parameter("vaultId") String vaultId) {
        this.actualBytes = actualBytes;
        this.actualItems = actualItems;
        this.bytesDone = bytesDone;
        this.bytesTotal = bytesTotal;
        this.completeTime = completeTime;
        this.createTime = createTime;
        this.errorFile = errorFile;
        this.errorMessage = errorMessage;
        this.expireTime = expireTime;
        this.id = id;
        this.itemsDone = itemsDone;
        this.itemsTotal = itemsTotal;
        this.options = options;
        this.parentId = parentId;
        this.progress = progress;
        this.restoreJobId = restoreJobId;
        this.restoreType = restoreType;
        this.snapshotHash = snapshotHash;
        this.snapshotId = snapshotId;
        this.sourceType = sourceType;
        this.startTime = startTime;
        this.status = status;
        this.targetBucket = targetBucket;
        this.targetClientId = targetClientId;
        this.targetCreateTime = targetCreateTime;
        this.targetDataSourceId = targetDataSourceId;
        this.targetFileSystemId = targetFileSystemId;
        this.targetInstanceId = targetInstanceId;
        this.targetPath = targetPath;
        this.targetPrefix = targetPrefix;
        this.updatedTime = updatedTime;
        this.vaultId = vaultId;
    }

    /**
     * @return The actual size of Snapshot.
     * 
     */
    public String actualBytes() {
        return this.actualBytes;
    }
    /**
     * @return The actual number of files.
     * 
     */
    public String actualItems() {
        return this.actualItems;
    }
    /**
     * @return The size of restore job recovered.
     * 
     */
    public String bytesDone() {
        return this.bytesDone;
    }
    /**
     * @return The total size of restore job recovered.
     * 
     */
    public String bytesTotal() {
        return this.bytesTotal;
    }
    /**
     * @return The completion time of restore Job.
     * 
     */
    public String completeTime() {
        return this.completeTime;
    }
    /**
     * @return The creation time of restore job.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    public String errorFile() {
        return this.errorFile;
    }
    /**
     * @return The error message of recovery task execution.
     * 
     */
    public String errorMessage() {
        return this.errorMessage;
    }
    /**
     * @return The expiration time of restore job. Unix Time in seconds.
     * 
     */
    public String expireTime() {
        return this.expireTime;
    }
    /**
     * @return The ID of the restore job.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The number of items restore job recovered.
     * 
     */
    public String itemsDone() {
        return this.itemsDone;
    }
    /**
     * @return The total number of items restore job recovered.
     * 
     */
    public String itemsTotal() {
        return this.itemsTotal;
    }
    /**
     * @return Recovery Options.
     * 
     */
    public String options() {
        return this.options;
    }
    public String parentId() {
        return this.parentId;
    }
    /**
     * @return The recovery progress.
     * 
     */
    public Integer progress() {
        return this.progress;
    }
    /**
     * @return The ID of restore job.
     * 
     */
    public String restoreJobId() {
        return this.restoreJobId;
    }
    /**
     * @return The type of recovery destination. Valid Values: `ECS_FILE`, `OSS`, `NAS`.
     * 
     */
    public String restoreType() {
        return this.restoreType;
    }
    /**
     * @return The hashcode of Snapshot.
     * 
     */
    public String snapshotHash() {
        return this.snapshotHash;
    }
    /**
     * @return The ID of Snapshot.
     * 
     */
    public String snapshotId() {
        return this.snapshotId;
    }
    /**
     * @return The list of data source types. Valid values: `ECS_FILE`, `NAS`, `OSS`, `OTS_TABLE`,`UDM_ECS_ROLLBACK`.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }
    /**
     * @return The start time of restore job. Unix Time in Seconds.
     * 
     */
    public String startTime() {
        return this.startTime;
    }
    /**
     * @return The status of restore job.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The name of target ofo OSS bucket.
     * 
     */
    public String targetBucket() {
        return this.targetBucket;
    }
    public String targetClientId() {
        return this.targetClientId;
    }
    /**
     * @return The creation time of destination file system.
     * 
     */
    public String targetCreateTime() {
        return this.targetCreateTime;
    }
    public String targetDataSourceId() {
        return this.targetDataSourceId;
    }
    /**
     * @return The ID of destination file system.
     * 
     */
    public String targetFileSystemId() {
        return this.targetFileSystemId;
    }
    /**
     * @return The ID of target ECS instance.
     * 
     */
    public String targetInstanceId() {
        return this.targetInstanceId;
    }
    /**
     * @return The target file path of ECS instance.
     * 
     */
    public String targetPath() {
        return this.targetPath;
    }
    /**
     * @return The file prefix of target OSS object.
     * 
     */
    public String targetPrefix() {
        return this.targetPrefix;
    }
    /**
     * @return The update Time of restore job. Unix Time in Seconds.
     * 
     */
    public String updatedTime() {
        return this.updatedTime;
    }
    /**
     * @return The ID of backup vault.
     * 
     */
    public String vaultId() {
        return this.vaultId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRestoreJobsJob defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String actualBytes;
        private String actualItems;
        private String bytesDone;
        private String bytesTotal;
        private String completeTime;
        private String createTime;
        private String errorFile;
        private String errorMessage;
        private String expireTime;
        private String id;
        private String itemsDone;
        private String itemsTotal;
        private String options;
        private String parentId;
        private Integer progress;
        private String restoreJobId;
        private String restoreType;
        private String snapshotHash;
        private String snapshotId;
        private String sourceType;
        private String startTime;
        private String status;
        private String targetBucket;
        private String targetClientId;
        private String targetCreateTime;
        private String targetDataSourceId;
        private String targetFileSystemId;
        private String targetInstanceId;
        private String targetPath;
        private String targetPrefix;
        private String updatedTime;
        private String vaultId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRestoreJobsJob defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actualBytes = defaults.actualBytes;
    	      this.actualItems = defaults.actualItems;
    	      this.bytesDone = defaults.bytesDone;
    	      this.bytesTotal = defaults.bytesTotal;
    	      this.completeTime = defaults.completeTime;
    	      this.createTime = defaults.createTime;
    	      this.errorFile = defaults.errorFile;
    	      this.errorMessage = defaults.errorMessage;
    	      this.expireTime = defaults.expireTime;
    	      this.id = defaults.id;
    	      this.itemsDone = defaults.itemsDone;
    	      this.itemsTotal = defaults.itemsTotal;
    	      this.options = defaults.options;
    	      this.parentId = defaults.parentId;
    	      this.progress = defaults.progress;
    	      this.restoreJobId = defaults.restoreJobId;
    	      this.restoreType = defaults.restoreType;
    	      this.snapshotHash = defaults.snapshotHash;
    	      this.snapshotId = defaults.snapshotId;
    	      this.sourceType = defaults.sourceType;
    	      this.startTime = defaults.startTime;
    	      this.status = defaults.status;
    	      this.targetBucket = defaults.targetBucket;
    	      this.targetClientId = defaults.targetClientId;
    	      this.targetCreateTime = defaults.targetCreateTime;
    	      this.targetDataSourceId = defaults.targetDataSourceId;
    	      this.targetFileSystemId = defaults.targetFileSystemId;
    	      this.targetInstanceId = defaults.targetInstanceId;
    	      this.targetPath = defaults.targetPath;
    	      this.targetPrefix = defaults.targetPrefix;
    	      this.updatedTime = defaults.updatedTime;
    	      this.vaultId = defaults.vaultId;
        }

        public Builder actualBytes(String actualBytes) {
            this.actualBytes = Objects.requireNonNull(actualBytes);
            return this;
        }
        public Builder actualItems(String actualItems) {
            this.actualItems = Objects.requireNonNull(actualItems);
            return this;
        }
        public Builder bytesDone(String bytesDone) {
            this.bytesDone = Objects.requireNonNull(bytesDone);
            return this;
        }
        public Builder bytesTotal(String bytesTotal) {
            this.bytesTotal = Objects.requireNonNull(bytesTotal);
            return this;
        }
        public Builder completeTime(String completeTime) {
            this.completeTime = Objects.requireNonNull(completeTime);
            return this;
        }
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder errorFile(String errorFile) {
            this.errorFile = Objects.requireNonNull(errorFile);
            return this;
        }
        public Builder errorMessage(String errorMessage) {
            this.errorMessage = Objects.requireNonNull(errorMessage);
            return this;
        }
        public Builder expireTime(String expireTime) {
            this.expireTime = Objects.requireNonNull(expireTime);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder itemsDone(String itemsDone) {
            this.itemsDone = Objects.requireNonNull(itemsDone);
            return this;
        }
        public Builder itemsTotal(String itemsTotal) {
            this.itemsTotal = Objects.requireNonNull(itemsTotal);
            return this;
        }
        public Builder options(String options) {
            this.options = Objects.requireNonNull(options);
            return this;
        }
        public Builder parentId(String parentId) {
            this.parentId = Objects.requireNonNull(parentId);
            return this;
        }
        public Builder progress(Integer progress) {
            this.progress = Objects.requireNonNull(progress);
            return this;
        }
        public Builder restoreJobId(String restoreJobId) {
            this.restoreJobId = Objects.requireNonNull(restoreJobId);
            return this;
        }
        public Builder restoreType(String restoreType) {
            this.restoreType = Objects.requireNonNull(restoreType);
            return this;
        }
        public Builder snapshotHash(String snapshotHash) {
            this.snapshotHash = Objects.requireNonNull(snapshotHash);
            return this;
        }
        public Builder snapshotId(String snapshotId) {
            this.snapshotId = Objects.requireNonNull(snapshotId);
            return this;
        }
        public Builder sourceType(String sourceType) {
            this.sourceType = Objects.requireNonNull(sourceType);
            return this;
        }
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder targetBucket(String targetBucket) {
            this.targetBucket = Objects.requireNonNull(targetBucket);
            return this;
        }
        public Builder targetClientId(String targetClientId) {
            this.targetClientId = Objects.requireNonNull(targetClientId);
            return this;
        }
        public Builder targetCreateTime(String targetCreateTime) {
            this.targetCreateTime = Objects.requireNonNull(targetCreateTime);
            return this;
        }
        public Builder targetDataSourceId(String targetDataSourceId) {
            this.targetDataSourceId = Objects.requireNonNull(targetDataSourceId);
            return this;
        }
        public Builder targetFileSystemId(String targetFileSystemId) {
            this.targetFileSystemId = Objects.requireNonNull(targetFileSystemId);
            return this;
        }
        public Builder targetInstanceId(String targetInstanceId) {
            this.targetInstanceId = Objects.requireNonNull(targetInstanceId);
            return this;
        }
        public Builder targetPath(String targetPath) {
            this.targetPath = Objects.requireNonNull(targetPath);
            return this;
        }
        public Builder targetPrefix(String targetPrefix) {
            this.targetPrefix = Objects.requireNonNull(targetPrefix);
            return this;
        }
        public Builder updatedTime(String updatedTime) {
            this.updatedTime = Objects.requireNonNull(updatedTime);
            return this;
        }
        public Builder vaultId(String vaultId) {
            this.vaultId = Objects.requireNonNull(vaultId);
            return this;
        }        public GetRestoreJobsJob build() {
            return new GetRestoreJobsJob(actualBytes, actualItems, bytesDone, bytesTotal, completeTime, createTime, errorFile, errorMessage, expireTime, id, itemsDone, itemsTotal, options, parentId, progress, restoreJobId, restoreType, snapshotHash, snapshotId, sourceType, startTime, status, targetBucket, targetClientId, targetCreateTime, targetDataSourceId, targetFileSystemId, targetInstanceId, targetPath, targetPrefix, updatedTime, vaultId);
        }
    }
}
