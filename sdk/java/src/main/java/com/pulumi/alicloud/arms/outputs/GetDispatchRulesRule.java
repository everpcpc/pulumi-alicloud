// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.arms.outputs;

import com.pulumi.alicloud.arms.outputs.GetDispatchRulesRuleGroupRule;
import com.pulumi.alicloud.arms.outputs.GetDispatchRulesRuleLabelMatchExpressionGrid;
import com.pulumi.alicloud.arms.outputs.GetDispatchRulesRuleNotifyRule;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDispatchRulesRule {
    /**
     * @return Dispatch rule ID.
     * 
     */
    private final String dispatchRuleId;
    /**
     * @return The name of the dispatch rule.
     * 
     */
    private final String dispatchRuleName;
    private final String dispatchType;
    /**
     * @return Sets the event group.
     * 
     */
    private final List<GetDispatchRulesRuleGroupRule> groupRules;
    /**
     * @return The ID of the Dispatch Rule.
     * 
     */
    private final String id;
    /**
     * @return Sets the dispatch rule.
     * 
     */
    private final List<GetDispatchRulesRuleLabelMatchExpressionGrid> labelMatchExpressionGrids;
    /**
     * @return Sets the notification rule.
     * 
     */
    private final List<GetDispatchRulesRuleNotifyRule> notifyRules;
    /**
     * @return The resource status of Alert Dispatch Rule.
     * 
     */
    private final String status;

    @CustomType.Constructor
    private GetDispatchRulesRule(
        @CustomType.Parameter("dispatchRuleId") String dispatchRuleId,
        @CustomType.Parameter("dispatchRuleName") String dispatchRuleName,
        @CustomType.Parameter("dispatchType") String dispatchType,
        @CustomType.Parameter("groupRules") List<GetDispatchRulesRuleGroupRule> groupRules,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("labelMatchExpressionGrids") List<GetDispatchRulesRuleLabelMatchExpressionGrid> labelMatchExpressionGrids,
        @CustomType.Parameter("notifyRules") List<GetDispatchRulesRuleNotifyRule> notifyRules,
        @CustomType.Parameter("status") String status) {
        this.dispatchRuleId = dispatchRuleId;
        this.dispatchRuleName = dispatchRuleName;
        this.dispatchType = dispatchType;
        this.groupRules = groupRules;
        this.id = id;
        this.labelMatchExpressionGrids = labelMatchExpressionGrids;
        this.notifyRules = notifyRules;
        this.status = status;
    }

    /**
     * @return Dispatch rule ID.
     * 
     */
    public String dispatchRuleId() {
        return this.dispatchRuleId;
    }
    /**
     * @return The name of the dispatch rule.
     * 
     */
    public String dispatchRuleName() {
        return this.dispatchRuleName;
    }
    public String dispatchType() {
        return this.dispatchType;
    }
    /**
     * @return Sets the event group.
     * 
     */
    public List<GetDispatchRulesRuleGroupRule> groupRules() {
        return this.groupRules;
    }
    /**
     * @return The ID of the Dispatch Rule.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Sets the dispatch rule.
     * 
     */
    public List<GetDispatchRulesRuleLabelMatchExpressionGrid> labelMatchExpressionGrids() {
        return this.labelMatchExpressionGrids;
    }
    /**
     * @return Sets the notification rule.
     * 
     */
    public List<GetDispatchRulesRuleNotifyRule> notifyRules() {
        return this.notifyRules;
    }
    /**
     * @return The resource status of Alert Dispatch Rule.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDispatchRulesRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String dispatchRuleId;
        private String dispatchRuleName;
        private String dispatchType;
        private List<GetDispatchRulesRuleGroupRule> groupRules;
        private String id;
        private List<GetDispatchRulesRuleLabelMatchExpressionGrid> labelMatchExpressionGrids;
        private List<GetDispatchRulesRuleNotifyRule> notifyRules;
        private String status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDispatchRulesRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dispatchRuleId = defaults.dispatchRuleId;
    	      this.dispatchRuleName = defaults.dispatchRuleName;
    	      this.dispatchType = defaults.dispatchType;
    	      this.groupRules = defaults.groupRules;
    	      this.id = defaults.id;
    	      this.labelMatchExpressionGrids = defaults.labelMatchExpressionGrids;
    	      this.notifyRules = defaults.notifyRules;
    	      this.status = defaults.status;
        }

        public Builder dispatchRuleId(String dispatchRuleId) {
            this.dispatchRuleId = Objects.requireNonNull(dispatchRuleId);
            return this;
        }
        public Builder dispatchRuleName(String dispatchRuleName) {
            this.dispatchRuleName = Objects.requireNonNull(dispatchRuleName);
            return this;
        }
        public Builder dispatchType(String dispatchType) {
            this.dispatchType = Objects.requireNonNull(dispatchType);
            return this;
        }
        public Builder groupRules(List<GetDispatchRulesRuleGroupRule> groupRules) {
            this.groupRules = Objects.requireNonNull(groupRules);
            return this;
        }
        public Builder groupRules(GetDispatchRulesRuleGroupRule... groupRules) {
            return groupRules(List.of(groupRules));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder labelMatchExpressionGrids(List<GetDispatchRulesRuleLabelMatchExpressionGrid> labelMatchExpressionGrids) {
            this.labelMatchExpressionGrids = Objects.requireNonNull(labelMatchExpressionGrids);
            return this;
        }
        public Builder labelMatchExpressionGrids(GetDispatchRulesRuleLabelMatchExpressionGrid... labelMatchExpressionGrids) {
            return labelMatchExpressionGrids(List.of(labelMatchExpressionGrids));
        }
        public Builder notifyRules(List<GetDispatchRulesRuleNotifyRule> notifyRules) {
            this.notifyRules = Objects.requireNonNull(notifyRules);
            return this;
        }
        public Builder notifyRules(GetDispatchRulesRuleNotifyRule... notifyRules) {
            return notifyRules(List.of(notifyRules));
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }        public GetDispatchRulesRule build() {
            return new GetDispatchRulesRule(dispatchRuleId, dispatchRuleName, dispatchType, groupRules, id, labelMatchExpressionGrids, notifyRules, status);
        }
    }
}
