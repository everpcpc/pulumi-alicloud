// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ga.outputs;

import com.pulumi.alicloud.ga.outputs.GetBasicAcceleratorsAcceleratorBasicBandwidthPackage;
import com.pulumi.alicloud.ga.outputs.GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBasicAcceleratorsAccelerator {
    /**
     * @return The bandwidth billing method.
     * 
     */
    private final String bandwidthBillingType;
    /**
     * @return The id of the Global Accelerator Basic Accelerator instance.
     * 
     */
    private final String basicAcceleratorId;
    /**
     * @return The name of the Global Accelerator Basic Accelerator instance.
     * 
     */
    private final String basicAcceleratorName;
    /**
     * @return The details about the basic bandwidth plan that is associated with the Global Accelerator Basic Accelerator instance.
     * 
     */
    private final List<GetBasicAcceleratorsAcceleratorBasicBandwidthPackage> basicBandwidthPackages;
    /**
     * @return The ID of the endpoint group that is associated with the Global Accelerator Basic Accelerator instance.
     * 
     */
    private final String basicEndpointGroupId;
    /**
     * @return The ID of the acceleration region.
     * 
     */
    private final String basicIpSetId;
    /**
     * @return The timestamp that indicates when the Global Accelerator Basic Accelerator instance was created.
     * 
     */
    private final Integer createTime;
    /**
     * @return The details about the cross-region acceleration bandwidth plan that is associated with the Global Accelerator Basic Accelerator instance. **NOTE:** This array is returned only for Global Accelerator Basic Accelerator instances that are created on the International site.
     * 
     */
    private final List<GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage> crossDomainBandwidthPackages;
    /**
     * @return The description of the Global Accelerator Basic Accelerator instance.
     * 
     */
    private final String description;
    /**
     * @return The timestamp that indicates when the Global Accelerator Basic Accelerator instance was expired.
     * 
     */
    private final Integer expiredTime;
    /**
     * @return The id of the Global Accelerator Basic Accelerator.
     * 
     */
    private final String id;
    /**
     * @return The billing method of the Global Accelerator Basic Accelerator instance. Only `PREPAY` is returned, which indicates the subscription billing method.
     * 
     */
    private final String instanceChargeType;
    /**
     * @return The ID of the region where the Global Accelerator Basic Accelerator instance is deployed.
     * 
     */
    private final String regionId;
    /**
     * @return The status of the Global Accelerator Basic Accelerator instance. Valid Value: `init`, `active`, `configuring`, `binding`, `unbinding`, `deleting`, `finacialLocked`.
     * 
     */
    private final String status;

    @CustomType.Constructor
    private GetBasicAcceleratorsAccelerator(
        @CustomType.Parameter("bandwidthBillingType") String bandwidthBillingType,
        @CustomType.Parameter("basicAcceleratorId") String basicAcceleratorId,
        @CustomType.Parameter("basicAcceleratorName") String basicAcceleratorName,
        @CustomType.Parameter("basicBandwidthPackages") List<GetBasicAcceleratorsAcceleratorBasicBandwidthPackage> basicBandwidthPackages,
        @CustomType.Parameter("basicEndpointGroupId") String basicEndpointGroupId,
        @CustomType.Parameter("basicIpSetId") String basicIpSetId,
        @CustomType.Parameter("createTime") Integer createTime,
        @CustomType.Parameter("crossDomainBandwidthPackages") List<GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage> crossDomainBandwidthPackages,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("expiredTime") Integer expiredTime,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceChargeType") String instanceChargeType,
        @CustomType.Parameter("regionId") String regionId,
        @CustomType.Parameter("status") String status) {
        this.bandwidthBillingType = bandwidthBillingType;
        this.basicAcceleratorId = basicAcceleratorId;
        this.basicAcceleratorName = basicAcceleratorName;
        this.basicBandwidthPackages = basicBandwidthPackages;
        this.basicEndpointGroupId = basicEndpointGroupId;
        this.basicIpSetId = basicIpSetId;
        this.createTime = createTime;
        this.crossDomainBandwidthPackages = crossDomainBandwidthPackages;
        this.description = description;
        this.expiredTime = expiredTime;
        this.id = id;
        this.instanceChargeType = instanceChargeType;
        this.regionId = regionId;
        this.status = status;
    }

    /**
     * @return The bandwidth billing method.
     * 
     */
    public String bandwidthBillingType() {
        return this.bandwidthBillingType;
    }
    /**
     * @return The id of the Global Accelerator Basic Accelerator instance.
     * 
     */
    public String basicAcceleratorId() {
        return this.basicAcceleratorId;
    }
    /**
     * @return The name of the Global Accelerator Basic Accelerator instance.
     * 
     */
    public String basicAcceleratorName() {
        return this.basicAcceleratorName;
    }
    /**
     * @return The details about the basic bandwidth plan that is associated with the Global Accelerator Basic Accelerator instance.
     * 
     */
    public List<GetBasicAcceleratorsAcceleratorBasicBandwidthPackage> basicBandwidthPackages() {
        return this.basicBandwidthPackages;
    }
    /**
     * @return The ID of the endpoint group that is associated with the Global Accelerator Basic Accelerator instance.
     * 
     */
    public String basicEndpointGroupId() {
        return this.basicEndpointGroupId;
    }
    /**
     * @return The ID of the acceleration region.
     * 
     */
    public String basicIpSetId() {
        return this.basicIpSetId;
    }
    /**
     * @return The timestamp that indicates when the Global Accelerator Basic Accelerator instance was created.
     * 
     */
    public Integer createTime() {
        return this.createTime;
    }
    /**
     * @return The details about the cross-region acceleration bandwidth plan that is associated with the Global Accelerator Basic Accelerator instance. **NOTE:** This array is returned only for Global Accelerator Basic Accelerator instances that are created on the International site.
     * 
     */
    public List<GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage> crossDomainBandwidthPackages() {
        return this.crossDomainBandwidthPackages;
    }
    /**
     * @return The description of the Global Accelerator Basic Accelerator instance.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The timestamp that indicates when the Global Accelerator Basic Accelerator instance was expired.
     * 
     */
    public Integer expiredTime() {
        return this.expiredTime;
    }
    /**
     * @return The id of the Global Accelerator Basic Accelerator.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The billing method of the Global Accelerator Basic Accelerator instance. Only `PREPAY` is returned, which indicates the subscription billing method.
     * 
     */
    public String instanceChargeType() {
        return this.instanceChargeType;
    }
    /**
     * @return The ID of the region where the Global Accelerator Basic Accelerator instance is deployed.
     * 
     */
    public String regionId() {
        return this.regionId;
    }
    /**
     * @return The status of the Global Accelerator Basic Accelerator instance. Valid Value: `init`, `active`, `configuring`, `binding`, `unbinding`, `deleting`, `finacialLocked`.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBasicAcceleratorsAccelerator defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bandwidthBillingType;
        private String basicAcceleratorId;
        private String basicAcceleratorName;
        private List<GetBasicAcceleratorsAcceleratorBasicBandwidthPackage> basicBandwidthPackages;
        private String basicEndpointGroupId;
        private String basicIpSetId;
        private Integer createTime;
        private List<GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage> crossDomainBandwidthPackages;
        private String description;
        private Integer expiredTime;
        private String id;
        private String instanceChargeType;
        private String regionId;
        private String status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBasicAcceleratorsAccelerator defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidthBillingType = defaults.bandwidthBillingType;
    	      this.basicAcceleratorId = defaults.basicAcceleratorId;
    	      this.basicAcceleratorName = defaults.basicAcceleratorName;
    	      this.basicBandwidthPackages = defaults.basicBandwidthPackages;
    	      this.basicEndpointGroupId = defaults.basicEndpointGroupId;
    	      this.basicIpSetId = defaults.basicIpSetId;
    	      this.createTime = defaults.createTime;
    	      this.crossDomainBandwidthPackages = defaults.crossDomainBandwidthPackages;
    	      this.description = defaults.description;
    	      this.expiredTime = defaults.expiredTime;
    	      this.id = defaults.id;
    	      this.instanceChargeType = defaults.instanceChargeType;
    	      this.regionId = defaults.regionId;
    	      this.status = defaults.status;
        }

        public Builder bandwidthBillingType(String bandwidthBillingType) {
            this.bandwidthBillingType = Objects.requireNonNull(bandwidthBillingType);
            return this;
        }
        public Builder basicAcceleratorId(String basicAcceleratorId) {
            this.basicAcceleratorId = Objects.requireNonNull(basicAcceleratorId);
            return this;
        }
        public Builder basicAcceleratorName(String basicAcceleratorName) {
            this.basicAcceleratorName = Objects.requireNonNull(basicAcceleratorName);
            return this;
        }
        public Builder basicBandwidthPackages(List<GetBasicAcceleratorsAcceleratorBasicBandwidthPackage> basicBandwidthPackages) {
            this.basicBandwidthPackages = Objects.requireNonNull(basicBandwidthPackages);
            return this;
        }
        public Builder basicBandwidthPackages(GetBasicAcceleratorsAcceleratorBasicBandwidthPackage... basicBandwidthPackages) {
            return basicBandwidthPackages(List.of(basicBandwidthPackages));
        }
        public Builder basicEndpointGroupId(String basicEndpointGroupId) {
            this.basicEndpointGroupId = Objects.requireNonNull(basicEndpointGroupId);
            return this;
        }
        public Builder basicIpSetId(String basicIpSetId) {
            this.basicIpSetId = Objects.requireNonNull(basicIpSetId);
            return this;
        }
        public Builder createTime(Integer createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder crossDomainBandwidthPackages(List<GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage> crossDomainBandwidthPackages) {
            this.crossDomainBandwidthPackages = Objects.requireNonNull(crossDomainBandwidthPackages);
            return this;
        }
        public Builder crossDomainBandwidthPackages(GetBasicAcceleratorsAcceleratorCrossDomainBandwidthPackage... crossDomainBandwidthPackages) {
            return crossDomainBandwidthPackages(List.of(crossDomainBandwidthPackages));
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder expiredTime(Integer expiredTime) {
            this.expiredTime = Objects.requireNonNull(expiredTime);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instanceChargeType(String instanceChargeType) {
            this.instanceChargeType = Objects.requireNonNull(instanceChargeType);
            return this;
        }
        public Builder regionId(String regionId) {
            this.regionId = Objects.requireNonNull(regionId);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }        public GetBasicAcceleratorsAccelerator build() {
            return new GetBasicAcceleratorsAccelerator(bandwidthBillingType, basicAcceleratorId, basicAcceleratorName, basicBandwidthPackages, basicEndpointGroupId, basicIpSetId, createTime, crossDomainBandwidthPackages, description, expiredTime, id, instanceChargeType, regionId, status);
        }
    }
}
