// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cdn;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.cdn.DomainArgs;
import com.pulumi.alicloud.cdn.inputs.DomainState;
import com.pulumi.alicloud.cdn.outputs.DomainAuthConfig;
import com.pulumi.alicloud.cdn.outputs.DomainCacheConfig;
import com.pulumi.alicloud.cdn.outputs.DomainCertificateConfig;
import com.pulumi.alicloud.cdn.outputs.DomainHttpHeaderConfig;
import com.pulumi.alicloud.cdn.outputs.DomainPage404Config;
import com.pulumi.alicloud.cdn.outputs.DomainParameterFilterConfig;
import com.pulumi.alicloud.cdn.outputs.DomainReferConfig;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="alicloud:cdn/domain:Domain")
public class Domain extends com.pulumi.resources.CustomResource {
    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Export(name="authConfig", type=DomainAuthConfig.class, parameters={})
    private Output</* @Nullable */ DomainAuthConfig> authConfig;

    public Output<Optional<DomainAuthConfig>> authConfig() {
        return Codegen.optional(this.authConfig);
    }
    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Export(name="blockIps", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> blockIps;

    public Output<Optional<List<String>>> blockIps() {
        return Codegen.optional(this.blockIps);
    }
    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Export(name="cacheConfigs", type=List.class, parameters={DomainCacheConfig.class})
    private Output</* @Nullable */ List<DomainCacheConfig>> cacheConfigs;

    public Output<Optional<List<DomainCacheConfig>>> cacheConfigs() {
        return Codegen.optional(this.cacheConfigs);
    }
    @Export(name="cdnType", type=String.class, parameters={})
    private Output<String> cdnType;

    public Output<String> cdnType() {
        return this.cdnType;
    }
    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Export(name="certificateConfig", type=DomainCertificateConfig.class, parameters={})
    private Output</* @Nullable */ DomainCertificateConfig> certificateConfig;

    public Output<Optional<DomainCertificateConfig>> certificateConfig() {
        return Codegen.optional(this.certificateConfig);
    }
    @Export(name="domainName", type=String.class, parameters={})
    private Output<String> domainName;

    public Output<String> domainName() {
        return this.domainName;
    }
    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Export(name="httpHeaderConfigs", type=List.class, parameters={DomainHttpHeaderConfig.class})
    private Output</* @Nullable */ List<DomainHttpHeaderConfig>> httpHeaderConfigs;

    public Output<Optional<List<DomainHttpHeaderConfig>>> httpHeaderConfigs() {
        return Codegen.optional(this.httpHeaderConfigs);
    }
    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Export(name="optimizeEnable", type=String.class, parameters={})
    private Output</* @Nullable */ String> optimizeEnable;

    public Output<Optional<String>> optimizeEnable() {
        return Codegen.optional(this.optimizeEnable);
    }
    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Export(name="page404Config", type=DomainPage404Config.class, parameters={})
    private Output</* @Nullable */ DomainPage404Config> page404Config;

    public Output<Optional<DomainPage404Config>> page404Config() {
        return Codegen.optional(this.page404Config);
    }
    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Export(name="pageCompressEnable", type=String.class, parameters={})
    private Output</* @Nullable */ String> pageCompressEnable;

    public Output<Optional<String>> pageCompressEnable() {
        return Codegen.optional(this.pageCompressEnable);
    }
    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Export(name="parameterFilterConfig", type=DomainParameterFilterConfig.class, parameters={})
    private Output</* @Nullable */ DomainParameterFilterConfig> parameterFilterConfig;

    public Output<Optional<DomainParameterFilterConfig>> parameterFilterConfig() {
        return Codegen.optional(this.parameterFilterConfig);
    }
    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Export(name="rangeEnable", type=String.class, parameters={})
    private Output</* @Nullable */ String> rangeEnable;

    public Output<Optional<String>> rangeEnable() {
        return Codegen.optional(this.rangeEnable);
    }
    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Export(name="referConfig", type=DomainReferConfig.class, parameters={})
    private Output</* @Nullable */ DomainReferConfig> referConfig;

    public Output<Optional<DomainReferConfig>> referConfig() {
        return Codegen.optional(this.referConfig);
    }
    @Export(name="scope", type=String.class, parameters={})
    private Output<String> scope;

    public Output<String> scope() {
        return this.scope;
    }
    /**
     * @deprecated
     * Use `alicloud_cdn_domain_new` configuration `sources` block `port` argument instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_new` configuration `sources` block `port` argument instead. */
    @Export(name="sourcePort", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> sourcePort;

    public Output<Optional<Integer>> sourcePort() {
        return Codegen.optional(this.sourcePort);
    }
    /**
     * @deprecated
     * Use `alicloud_cdn_domain_new` configuration `sources` block `type` argument instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_new` configuration `sources` block `type` argument instead. */
    @Export(name="sourceType", type=String.class, parameters={})
    private Output</* @Nullable */ String> sourceType;

    public Output<Optional<String>> sourceType() {
        return Codegen.optional(this.sourceType);
    }
    /**
     * @deprecated
     * Use `alicloud_cdn_domain_new` configuration `sources` argument instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_new` configuration `sources` argument instead. */
    @Export(name="sources", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> sources;

    public Output<Optional<List<String>>> sources() {
        return Codegen.optional(this.sources);
    }
    /**
     * @deprecated
     * Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead.
     * 
     */
    @Deprecated /* Use `alicloud_cdn_domain_config` configuration `function_name` and `function_args` arguments instead. */
    @Export(name="videoSeekEnable", type=String.class, parameters={})
    private Output</* @Nullable */ String> videoSeekEnable;

    public Output<Optional<String>> videoSeekEnable() {
        return Codegen.optional(this.videoSeekEnable);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Domain(String name) {
        this(name, DomainArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Domain(String name, DomainArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Domain(String name, DomainArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cdn/domain:Domain", name, args == null ? DomainArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Domain(String name, Output<String> id, @Nullable DomainState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:cdn/domain:Domain", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Domain get(String name, Output<String> id, @Nullable DomainState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Domain(name, id, state, options);
    }
}
