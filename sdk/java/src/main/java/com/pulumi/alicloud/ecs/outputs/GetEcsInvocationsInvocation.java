// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.ecs.outputs;

import com.pulumi.alicloud.ecs.outputs.GetEcsInvocationsInvocationInvokeInstance;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEcsInvocationsInvocation {
    /**
     * @return The Base64-encoded command content.
     * 
     */
    private final String commandContent;
    /**
     * @return The ID of the command.
     * 
     */
    private final String commandId;
    /**
     * @return The name of the command.
     * 
     */
    private final String commandName;
    /**
     * @return The type of the command.
     * 
     */
    private final String commandType;
    /**
     * @return The creation time of the resource.
     * 
     */
    private final String createTime;
    /**
     * @return The schedule on which the recurring execution of the command takes place. For information about the value specifications, see [Cron expression](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/cron-expression).
     * 
     */
    private final String frequency;
    /**
     * @return The ID of the Invocation.
     * 
     */
    private final String id;
    /**
     * @return The ID of the Invocation.
     * 
     */
    private final String invocationId;
    /**
     * @return The execution state on a single instance. Valid values: `Pending`, `Scheduled`, `Running`, `Success`, `Failed`, `Stopping`, `Stopped`, `PartialFailed`.
     * 
     */
    private final String invocationStatus;
    /**
     * @return Execute target instance set type.
     * 
     */
    private final List<GetEcsInvocationsInvocationInvokeInstance> invokeInstances;
    /**
     * @return The overall execution state of the command. **Note:** We recommend that you ignore this parameter and check the value of the `invocation_status` response parameter for the overall execution state.
     * 
     */
    private final String invokeStatus;
    /**
     * @return The custom parameters in the command.
     * 
     */
    private final String parameters;
    /**
     * @return Indicates the execution mode of the command.
     * 
     */
    private final String repeatMode;
    /**
     * @return Indicates whether the commands are to be automatically run.
     * * `error_code	` - The code that indicates why the command failed to be sent or run.
     * * `instance_invoke_status	` - **Note:** We recommend that you ignore this parameter and check the value of the `invocation_status` response parameter for the overall execution state.
     * 
     */
    private final Boolean timed;
    /**
     * @return The username that was used to run the command on the instance.
     * 
     */
    private final String username;

    @CustomType.Constructor
    private GetEcsInvocationsInvocation(
        @CustomType.Parameter("commandContent") String commandContent,
        @CustomType.Parameter("commandId") String commandId,
        @CustomType.Parameter("commandName") String commandName,
        @CustomType.Parameter("commandType") String commandType,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("frequency") String frequency,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("invocationId") String invocationId,
        @CustomType.Parameter("invocationStatus") String invocationStatus,
        @CustomType.Parameter("invokeInstances") List<GetEcsInvocationsInvocationInvokeInstance> invokeInstances,
        @CustomType.Parameter("invokeStatus") String invokeStatus,
        @CustomType.Parameter("parameters") String parameters,
        @CustomType.Parameter("repeatMode") String repeatMode,
        @CustomType.Parameter("timed") Boolean timed,
        @CustomType.Parameter("username") String username) {
        this.commandContent = commandContent;
        this.commandId = commandId;
        this.commandName = commandName;
        this.commandType = commandType;
        this.createTime = createTime;
        this.frequency = frequency;
        this.id = id;
        this.invocationId = invocationId;
        this.invocationStatus = invocationStatus;
        this.invokeInstances = invokeInstances;
        this.invokeStatus = invokeStatus;
        this.parameters = parameters;
        this.repeatMode = repeatMode;
        this.timed = timed;
        this.username = username;
    }

    /**
     * @return The Base64-encoded command content.
     * 
     */
    public String commandContent() {
        return this.commandContent;
    }
    /**
     * @return The ID of the command.
     * 
     */
    public String commandId() {
        return this.commandId;
    }
    /**
     * @return The name of the command.
     * 
     */
    public String commandName() {
        return this.commandName;
    }
    /**
     * @return The type of the command.
     * 
     */
    public String commandType() {
        return this.commandType;
    }
    /**
     * @return The creation time of the resource.
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return The schedule on which the recurring execution of the command takes place. For information about the value specifications, see [Cron expression](https://www.alibabacloud.com/help/en/elastic-compute-service/latest/cron-expression).
     * 
     */
    public String frequency() {
        return this.frequency;
    }
    /**
     * @return The ID of the Invocation.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the Invocation.
     * 
     */
    public String invocationId() {
        return this.invocationId;
    }
    /**
     * @return The execution state on a single instance. Valid values: `Pending`, `Scheduled`, `Running`, `Success`, `Failed`, `Stopping`, `Stopped`, `PartialFailed`.
     * 
     */
    public String invocationStatus() {
        return this.invocationStatus;
    }
    /**
     * @return Execute target instance set type.
     * 
     */
    public List<GetEcsInvocationsInvocationInvokeInstance> invokeInstances() {
        return this.invokeInstances;
    }
    /**
     * @return The overall execution state of the command. **Note:** We recommend that you ignore this parameter and check the value of the `invocation_status` response parameter for the overall execution state.
     * 
     */
    public String invokeStatus() {
        return this.invokeStatus;
    }
    /**
     * @return The custom parameters in the command.
     * 
     */
    public String parameters() {
        return this.parameters;
    }
    /**
     * @return Indicates the execution mode of the command.
     * 
     */
    public String repeatMode() {
        return this.repeatMode;
    }
    /**
     * @return Indicates whether the commands are to be automatically run.
     * * `error_code	` - The code that indicates why the command failed to be sent or run.
     * * `instance_invoke_status	` - **Note:** We recommend that you ignore this parameter and check the value of the `invocation_status` response parameter for the overall execution state.
     * 
     */
    public Boolean timed() {
        return this.timed;
    }
    /**
     * @return The username that was used to run the command on the instance.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEcsInvocationsInvocation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String commandContent;
        private String commandId;
        private String commandName;
        private String commandType;
        private String createTime;
        private String frequency;
        private String id;
        private String invocationId;
        private String invocationStatus;
        private List<GetEcsInvocationsInvocationInvokeInstance> invokeInstances;
        private String invokeStatus;
        private String parameters;
        private String repeatMode;
        private Boolean timed;
        private String username;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEcsInvocationsInvocation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commandContent = defaults.commandContent;
    	      this.commandId = defaults.commandId;
    	      this.commandName = defaults.commandName;
    	      this.commandType = defaults.commandType;
    	      this.createTime = defaults.createTime;
    	      this.frequency = defaults.frequency;
    	      this.id = defaults.id;
    	      this.invocationId = defaults.invocationId;
    	      this.invocationStatus = defaults.invocationStatus;
    	      this.invokeInstances = defaults.invokeInstances;
    	      this.invokeStatus = defaults.invokeStatus;
    	      this.parameters = defaults.parameters;
    	      this.repeatMode = defaults.repeatMode;
    	      this.timed = defaults.timed;
    	      this.username = defaults.username;
        }

        public Builder commandContent(String commandContent) {
            this.commandContent = Objects.requireNonNull(commandContent);
            return this;
        }
        public Builder commandId(String commandId) {
            this.commandId = Objects.requireNonNull(commandId);
            return this;
        }
        public Builder commandName(String commandName) {
            this.commandName = Objects.requireNonNull(commandName);
            return this;
        }
        public Builder commandType(String commandType) {
            this.commandType = Objects.requireNonNull(commandType);
            return this;
        }
        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder frequency(String frequency) {
            this.frequency = Objects.requireNonNull(frequency);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder invocationId(String invocationId) {
            this.invocationId = Objects.requireNonNull(invocationId);
            return this;
        }
        public Builder invocationStatus(String invocationStatus) {
            this.invocationStatus = Objects.requireNonNull(invocationStatus);
            return this;
        }
        public Builder invokeInstances(List<GetEcsInvocationsInvocationInvokeInstance> invokeInstances) {
            this.invokeInstances = Objects.requireNonNull(invokeInstances);
            return this;
        }
        public Builder invokeInstances(GetEcsInvocationsInvocationInvokeInstance... invokeInstances) {
            return invokeInstances(List.of(invokeInstances));
        }
        public Builder invokeStatus(String invokeStatus) {
            this.invokeStatus = Objects.requireNonNull(invokeStatus);
            return this;
        }
        public Builder parameters(String parameters) {
            this.parameters = Objects.requireNonNull(parameters);
            return this;
        }
        public Builder repeatMode(String repeatMode) {
            this.repeatMode = Objects.requireNonNull(repeatMode);
            return this;
        }
        public Builder timed(Boolean timed) {
            this.timed = Objects.requireNonNull(timed);
            return this;
        }
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }        public GetEcsInvocationsInvocation build() {
            return new GetEcsInvocationsInvocation(commandContent, commandId, commandName, commandType, createTime, frequency, id, invocationId, invocationStatus, invokeInstances, invokeStatus, parameters, repeatMode, timed, username);
        }
    }
}
