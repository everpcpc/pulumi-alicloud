// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.outputs;

import com.pulumi.alicloud.cen.outputs.GetFlowlogsFlowlog;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFlowlogsResult {
    /**
     * @return The ID of the CEN Instance.
     * 
     */
    private final @Nullable String cenId;
    /**
     * @return The description of flowlog.
     * 
     */
    private final @Nullable String description;
    private final List<GetFlowlogsFlowlog> flowlogs;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return A list of CEN flow log IDs.
     * 
     */
    private final List<String> ids;
    /**
     * @return The name of the log store which is in the  `project_name` SLS project.
     * 
     */
    private final @Nullable String logStoreName;
    private final @Nullable String nameRegex;
    /**
     * @return A list of CEN flow log names.
     * 
     */
    private final List<String> names;
    private final @Nullable String outputFile;
    /**
     * @return The name of the SLS project.
     * 
     */
    private final @Nullable String projectName;
    /**
     * @return The status of flowlog.
     * 
     */
    private final @Nullable String status;

    @CustomType.Constructor
    private GetFlowlogsResult(
        @CustomType.Parameter("cenId") @Nullable String cenId,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("flowlogs") List<GetFlowlogsFlowlog> flowlogs,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ids") List<String> ids,
        @CustomType.Parameter("logStoreName") @Nullable String logStoreName,
        @CustomType.Parameter("nameRegex") @Nullable String nameRegex,
        @CustomType.Parameter("names") List<String> names,
        @CustomType.Parameter("outputFile") @Nullable String outputFile,
        @CustomType.Parameter("projectName") @Nullable String projectName,
        @CustomType.Parameter("status") @Nullable String status) {
        this.cenId = cenId;
        this.description = description;
        this.flowlogs = flowlogs;
        this.id = id;
        this.ids = ids;
        this.logStoreName = logStoreName;
        this.nameRegex = nameRegex;
        this.names = names;
        this.outputFile = outputFile;
        this.projectName = projectName;
        this.status = status;
    }

    /**
     * @return The ID of the CEN Instance.
     * 
     */
    public Optional<String> cenId() {
        return Optional.ofNullable(this.cenId);
    }
    /**
     * @return The description of flowlog.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public List<GetFlowlogsFlowlog> flowlogs() {
        return this.flowlogs;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of CEN flow log IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    /**
     * @return The name of the log store which is in the  `project_name` SLS project.
     * 
     */
    public Optional<String> logStoreName() {
        return Optional.ofNullable(this.logStoreName);
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    /**
     * @return A list of CEN flow log names.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return The name of the SLS project.
     * 
     */
    public Optional<String> projectName() {
        return Optional.ofNullable(this.projectName);
    }
    /**
     * @return The status of flowlog.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFlowlogsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String cenId;
        private @Nullable String description;
        private List<GetFlowlogsFlowlog> flowlogs;
        private String id;
        private List<String> ids;
        private @Nullable String logStoreName;
        private @Nullable String nameRegex;
        private List<String> names;
        private @Nullable String outputFile;
        private @Nullable String projectName;
        private @Nullable String status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetFlowlogsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cenId = defaults.cenId;
    	      this.description = defaults.description;
    	      this.flowlogs = defaults.flowlogs;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.logStoreName = defaults.logStoreName;
    	      this.nameRegex = defaults.nameRegex;
    	      this.names = defaults.names;
    	      this.outputFile = defaults.outputFile;
    	      this.projectName = defaults.projectName;
    	      this.status = defaults.status;
        }

        public Builder cenId(@Nullable String cenId) {
            this.cenId = cenId;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder flowlogs(List<GetFlowlogsFlowlog> flowlogs) {
            this.flowlogs = Objects.requireNonNull(flowlogs);
            return this;
        }
        public Builder flowlogs(GetFlowlogsFlowlog... flowlogs) {
            return flowlogs(List.of(flowlogs));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public Builder logStoreName(@Nullable String logStoreName) {
            this.logStoreName = logStoreName;
            return this;
        }
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        public Builder names(List<String> names) {
            this.names = Objects.requireNonNull(names);
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        public Builder projectName(@Nullable String projectName) {
            this.projectName = projectName;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }        public GetFlowlogsResult build() {
            return new GetFlowlogsResult(cenId, description, flowlogs, id, ids, logStoreName, nameRegex, names, outputFile, projectName, status);
        }
    }
}
