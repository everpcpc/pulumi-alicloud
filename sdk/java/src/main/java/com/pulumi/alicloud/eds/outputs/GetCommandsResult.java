// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.eds.outputs;

import com.pulumi.alicloud.eds.outputs.GetCommandsCommand;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCommandsResult {
    private final @Nullable String commandType;
    private final List<GetCommandsCommand> commands;
    private final @Nullable String contentEncoding;
    private final @Nullable String desktopId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<String> ids;
    private final @Nullable String outputFile;
    private final @Nullable String status;

    @CustomType.Constructor
    private GetCommandsResult(
        @CustomType.Parameter("commandType") @Nullable String commandType,
        @CustomType.Parameter("commands") List<GetCommandsCommand> commands,
        @CustomType.Parameter("contentEncoding") @Nullable String contentEncoding,
        @CustomType.Parameter("desktopId") @Nullable String desktopId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ids") List<String> ids,
        @CustomType.Parameter("outputFile") @Nullable String outputFile,
        @CustomType.Parameter("status") @Nullable String status) {
        this.commandType = commandType;
        this.commands = commands;
        this.contentEncoding = contentEncoding;
        this.desktopId = desktopId;
        this.id = id;
        this.ids = ids;
        this.outputFile = outputFile;
        this.status = status;
    }

    public Optional<String> commandType() {
        return Optional.ofNullable(this.commandType);
    }
    public List<GetCommandsCommand> commands() {
        return this.commands;
    }
    public Optional<String> contentEncoding() {
        return Optional.ofNullable(this.contentEncoding);
    }
    public Optional<String> desktopId() {
        return Optional.ofNullable(this.desktopId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCommandsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String commandType;
        private List<GetCommandsCommand> commands;
        private @Nullable String contentEncoding;
        private @Nullable String desktopId;
        private String id;
        private List<String> ids;
        private @Nullable String outputFile;
        private @Nullable String status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCommandsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commandType = defaults.commandType;
    	      this.commands = defaults.commands;
    	      this.contentEncoding = defaults.contentEncoding;
    	      this.desktopId = defaults.desktopId;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.outputFile = defaults.outputFile;
    	      this.status = defaults.status;
        }

        public Builder commandType(@Nullable String commandType) {
            this.commandType = commandType;
            return this;
        }
        public Builder commands(List<GetCommandsCommand> commands) {
            this.commands = Objects.requireNonNull(commands);
            return this;
        }
        public Builder commands(GetCommandsCommand... commands) {
            return commands(List.of(commands));
        }
        public Builder contentEncoding(@Nullable String contentEncoding) {
            this.contentEncoding = contentEncoding;
            return this;
        }
        public Builder desktopId(@Nullable String desktopId) {
            this.desktopId = desktopId;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }        public GetCommandsResult build() {
            return new GetCommandsResult(commandType, commands, contentEncoding, desktopId, id, ids, outputFile, status);
        }
    }
}
