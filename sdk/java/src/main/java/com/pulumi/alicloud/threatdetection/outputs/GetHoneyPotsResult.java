// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.threatdetection.outputs;

import com.pulumi.alicloud.threatdetection.outputs.GetHoneyPotsPot;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetHoneyPotsResult {
    /**
     * @return Honeypot ID.
     * 
     */
    private final @Nullable String honeypotId;
    /**
     * @return Honeypot custom name.
     * 
     */
    private final @Nullable String honeypotName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return A list of Honey Pot IDs.
     * 
     */
    private final List<String> ids;
    private final @Nullable String nameRegex;
    /**
     * @return The ID of the honeypot management node.
     * 
     */
    private final @Nullable String nodeId;
    private final @Nullable String nodeName;
    private final @Nullable String outputFile;
    /**
     * @return A list of Honey Pot Entries. Each element contains the following attributes:
     * 
     */
    private final List<GetHoneyPotsPot> pots;

    @CustomType.Constructor
    private GetHoneyPotsResult(
        @CustomType.Parameter("honeypotId") @Nullable String honeypotId,
        @CustomType.Parameter("honeypotName") @Nullable String honeypotName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ids") List<String> ids,
        @CustomType.Parameter("nameRegex") @Nullable String nameRegex,
        @CustomType.Parameter("nodeId") @Nullable String nodeId,
        @CustomType.Parameter("nodeName") @Nullable String nodeName,
        @CustomType.Parameter("outputFile") @Nullable String outputFile,
        @CustomType.Parameter("pots") List<GetHoneyPotsPot> pots) {
        this.honeypotId = honeypotId;
        this.honeypotName = honeypotName;
        this.id = id;
        this.ids = ids;
        this.nameRegex = nameRegex;
        this.nodeId = nodeId;
        this.nodeName = nodeName;
        this.outputFile = outputFile;
        this.pots = pots;
    }

    /**
     * @return Honeypot ID.
     * 
     */
    public Optional<String> honeypotId() {
        return Optional.ofNullable(this.honeypotId);
    }
    /**
     * @return Honeypot custom name.
     * 
     */
    public Optional<String> honeypotName() {
        return Optional.ofNullable(this.honeypotName);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of Honey Pot IDs.
     * 
     */
    public List<String> ids() {
        return this.ids;
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    /**
     * @return The ID of the honeypot management node.
     * 
     */
    public Optional<String> nodeId() {
        return Optional.ofNullable(this.nodeId);
    }
    public Optional<String> nodeName() {
        return Optional.ofNullable(this.nodeName);
    }
    public Optional<String> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }
    /**
     * @return A list of Honey Pot Entries. Each element contains the following attributes:
     * 
     */
    public List<GetHoneyPotsPot> pots() {
        return this.pots;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHoneyPotsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String honeypotId;
        private @Nullable String honeypotName;
        private String id;
        private List<String> ids;
        private @Nullable String nameRegex;
        private @Nullable String nodeId;
        private @Nullable String nodeName;
        private @Nullable String outputFile;
        private List<GetHoneyPotsPot> pots;

        public Builder() {
    	      // Empty
        }

        public Builder(GetHoneyPotsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.honeypotId = defaults.honeypotId;
    	      this.honeypotName = defaults.honeypotName;
    	      this.id = defaults.id;
    	      this.ids = defaults.ids;
    	      this.nameRegex = defaults.nameRegex;
    	      this.nodeId = defaults.nodeId;
    	      this.nodeName = defaults.nodeName;
    	      this.outputFile = defaults.outputFile;
    	      this.pots = defaults.pots;
        }

        public Builder honeypotId(@Nullable String honeypotId) {
            this.honeypotId = honeypotId;
            return this;
        }
        public Builder honeypotName(@Nullable String honeypotName) {
            this.honeypotName = honeypotName;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ids(List<String> ids) {
            this.ids = Objects.requireNonNull(ids);
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        public Builder nodeId(@Nullable String nodeId) {
            this.nodeId = nodeId;
            return this;
        }
        public Builder nodeName(@Nullable String nodeName) {
            this.nodeName = nodeName;
            return this;
        }
        public Builder outputFile(@Nullable String outputFile) {
            this.outputFile = outputFile;
            return this;
        }
        public Builder pots(List<GetHoneyPotsPot> pots) {
            this.pots = Objects.requireNonNull(pots);
            return this;
        }
        public Builder pots(GetHoneyPotsPot... pots) {
            return pots(List.of(pots));
        }        public GetHoneyPotsResult build() {
            return new GetHoneyPotsResult(honeypotId, honeypotName, id, ids, nameRegex, nodeId, nodeName, outputFile, pots);
        }
    }
}
