// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.sae.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationScalingRuleScalingRuleMetricMetricArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationScalingRuleScalingRuleMetricMetricArgs Empty = new ApplicationScalingRuleScalingRuleMetricMetricArgs();

    /**
     * According to different `metric_type`, set the target value of the corresponding monitoring index.
     * 
     */
    @Import(name="metricTargetAverageUtilization")
    private @Nullable Output<Integer> metricTargetAverageUtilization;

    /**
     * @return According to different `metric_type`, set the target value of the corresponding monitoring index.
     * 
     */
    public Optional<Output<Integer>> metricTargetAverageUtilization() {
        return Optional.ofNullable(this.metricTargetAverageUtilization);
    }

    /**
     * Monitoring indicator trigger condition. Valid values: `CPU`, `MEMORY`, `tcpActiveConn`, `SLB_QPS` and `SLB_RT`. The values are described as follows:
     * - CPU: CPU usage.
     * - MEMORY: MEMORY usage.
     * - tcpActiveConn: the average number of TCP active connections for a single instance in 30 seconds.
     * - SLB_QPS: the average public network SLB QPS of a single instance within 15 seconds.
     * - SLB_RT: the average response time of public network SLB within 15 seconds.
     * 
     */
    @Import(name="metricType")
    private @Nullable Output<String> metricType;

    /**
     * @return Monitoring indicator trigger condition. Valid values: `CPU`, `MEMORY`, `tcpActiveConn`, `SLB_QPS` and `SLB_RT`. The values are described as follows:
     * - CPU: CPU usage.
     * - MEMORY: MEMORY usage.
     * - tcpActiveConn: the average number of TCP active connections for a single instance in 30 seconds.
     * - SLB_QPS: the average public network SLB QPS of a single instance within 15 seconds.
     * - SLB_RT: the average response time of public network SLB within 15 seconds.
     * 
     */
    public Optional<Output<String>> metricType() {
        return Optional.ofNullable(this.metricType);
    }

    private ApplicationScalingRuleScalingRuleMetricMetricArgs() {}

    private ApplicationScalingRuleScalingRuleMetricMetricArgs(ApplicationScalingRuleScalingRuleMetricMetricArgs $) {
        this.metricTargetAverageUtilization = $.metricTargetAverageUtilization;
        this.metricType = $.metricType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationScalingRuleScalingRuleMetricMetricArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationScalingRuleScalingRuleMetricMetricArgs $;

        public Builder() {
            $ = new ApplicationScalingRuleScalingRuleMetricMetricArgs();
        }

        public Builder(ApplicationScalingRuleScalingRuleMetricMetricArgs defaults) {
            $ = new ApplicationScalingRuleScalingRuleMetricMetricArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metricTargetAverageUtilization According to different `metric_type`, set the target value of the corresponding monitoring index.
         * 
         * @return builder
         * 
         */
        public Builder metricTargetAverageUtilization(@Nullable Output<Integer> metricTargetAverageUtilization) {
            $.metricTargetAverageUtilization = metricTargetAverageUtilization;
            return this;
        }

        /**
         * @param metricTargetAverageUtilization According to different `metric_type`, set the target value of the corresponding monitoring index.
         * 
         * @return builder
         * 
         */
        public Builder metricTargetAverageUtilization(Integer metricTargetAverageUtilization) {
            return metricTargetAverageUtilization(Output.of(metricTargetAverageUtilization));
        }

        /**
         * @param metricType Monitoring indicator trigger condition. Valid values: `CPU`, `MEMORY`, `tcpActiveConn`, `SLB_QPS` and `SLB_RT`. The values are described as follows:
         * - CPU: CPU usage.
         * - MEMORY: MEMORY usage.
         * - tcpActiveConn: the average number of TCP active connections for a single instance in 30 seconds.
         * - SLB_QPS: the average public network SLB QPS of a single instance within 15 seconds.
         * - SLB_RT: the average response time of public network SLB within 15 seconds.
         * 
         * @return builder
         * 
         */
        public Builder metricType(@Nullable Output<String> metricType) {
            $.metricType = metricType;
            return this;
        }

        /**
         * @param metricType Monitoring indicator trigger condition. Valid values: `CPU`, `MEMORY`, `tcpActiveConn`, `SLB_QPS` and `SLB_RT`. The values are described as follows:
         * - CPU: CPU usage.
         * - MEMORY: MEMORY usage.
         * - tcpActiveConn: the average number of TCP active connections for a single instance in 30 seconds.
         * - SLB_QPS: the average public network SLB QPS of a single instance within 15 seconds.
         * - SLB_RT: the average response time of public network SLB within 15 seconds.
         * 
         * @return builder
         * 
         */
        public Builder metricType(String metricType) {
            return metricType(Output.of(metricType));
        }

        public ApplicationScalingRuleScalingRuleMetricMetricArgs build() {
            return $;
        }
    }

}
