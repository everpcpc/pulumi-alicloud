// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.bss.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOpenApiPricingModulesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOpenApiPricingModulesArgs Empty = new GetOpenApiPricingModulesArgs();

    @Import(name="ids")
    private @Nullable Output<List<String>> ids;

    public Optional<Output<List<String>>> ids() {
        return Optional.ofNullable(this.ids);
    }

    @Import(name="nameRegex")
    private @Nullable Output<String> nameRegex;

    public Optional<Output<String>> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }

    @Import(name="outputFile")
    private @Nullable Output<String> outputFile;

    public Optional<Output<String>> outputFile() {
        return Optional.ofNullable(this.outputFile);
    }

    @Import(name="productCode", required=true)
    private Output<String> productCode;

    public Output<String> productCode() {
        return this.productCode;
    }

    @Import(name="productType")
    private @Nullable Output<String> productType;

    public Optional<Output<String>> productType() {
        return Optional.ofNullable(this.productType);
    }

    @Import(name="subscriptionType", required=true)
    private Output<String> subscriptionType;

    public Output<String> subscriptionType() {
        return this.subscriptionType;
    }

    private GetOpenApiPricingModulesArgs() {}

    private GetOpenApiPricingModulesArgs(GetOpenApiPricingModulesArgs $) {
        this.ids = $.ids;
        this.nameRegex = $.nameRegex;
        this.outputFile = $.outputFile;
        this.productCode = $.productCode;
        this.productType = $.productType;
        this.subscriptionType = $.subscriptionType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOpenApiPricingModulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOpenApiPricingModulesArgs $;

        public Builder() {
            $ = new GetOpenApiPricingModulesArgs();
        }

        public Builder(GetOpenApiPricingModulesArgs defaults) {
            $ = new GetOpenApiPricingModulesArgs(Objects.requireNonNull(defaults));
        }

        public Builder ids(@Nullable Output<List<String>> ids) {
            $.ids = ids;
            return this;
        }

        public Builder ids(List<String> ids) {
            return ids(Output.of(ids));
        }

        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }

        public Builder nameRegex(@Nullable Output<String> nameRegex) {
            $.nameRegex = nameRegex;
            return this;
        }

        public Builder nameRegex(String nameRegex) {
            return nameRegex(Output.of(nameRegex));
        }

        public Builder outputFile(@Nullable Output<String> outputFile) {
            $.outputFile = outputFile;
            return this;
        }

        public Builder outputFile(String outputFile) {
            return outputFile(Output.of(outputFile));
        }

        public Builder productCode(Output<String> productCode) {
            $.productCode = productCode;
            return this;
        }

        public Builder productCode(String productCode) {
            return productCode(Output.of(productCode));
        }

        public Builder productType(@Nullable Output<String> productType) {
            $.productType = productType;
            return this;
        }

        public Builder productType(String productType) {
            return productType(Output.of(productType));
        }

        public Builder subscriptionType(Output<String> subscriptionType) {
            $.subscriptionType = subscriptionType;
            return this;
        }

        public Builder subscriptionType(String subscriptionType) {
            return subscriptionType(Output.of(subscriptionType));
        }

        public GetOpenApiPricingModulesArgs build() {
            $.productCode = Objects.requireNonNull($.productCode, "expected parameter 'productCode' to be non-null");
            $.subscriptionType = Objects.requireNonNull($.subscriptionType, "expected parameter 'subscriptionType' to be non-null");
            return $;
        }
    }

}
