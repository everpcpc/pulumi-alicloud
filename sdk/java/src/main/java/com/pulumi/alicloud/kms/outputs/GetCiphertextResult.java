// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.kms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetCiphertextResult {
    /**
     * @return The ciphertext of the data key encrypted with the primary CMK version.
     * 
     */
    private final String ciphertextBlob;
    private final @Nullable Map<String,String> encryptionContext;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String keyId;
    private final String plaintext;

    @CustomType.Constructor
    private GetCiphertextResult(
        @CustomType.Parameter("ciphertextBlob") String ciphertextBlob,
        @CustomType.Parameter("encryptionContext") @Nullable Map<String,String> encryptionContext,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("keyId") String keyId,
        @CustomType.Parameter("plaintext") String plaintext) {
        this.ciphertextBlob = ciphertextBlob;
        this.encryptionContext = encryptionContext;
        this.id = id;
        this.keyId = keyId;
        this.plaintext = plaintext;
    }

    /**
     * @return The ciphertext of the data key encrypted with the primary CMK version.
     * 
     */
    public String ciphertextBlob() {
        return this.ciphertextBlob;
    }
    public Map<String,String> encryptionContext() {
        return this.encryptionContext == null ? Map.of() : this.encryptionContext;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String keyId() {
        return this.keyId;
    }
    public String plaintext() {
        return this.plaintext;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCiphertextResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String ciphertextBlob;
        private @Nullable Map<String,String> encryptionContext;
        private String id;
        private String keyId;
        private String plaintext;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCiphertextResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ciphertextBlob = defaults.ciphertextBlob;
    	      this.encryptionContext = defaults.encryptionContext;
    	      this.id = defaults.id;
    	      this.keyId = defaults.keyId;
    	      this.plaintext = defaults.plaintext;
        }

        public Builder ciphertextBlob(String ciphertextBlob) {
            this.ciphertextBlob = Objects.requireNonNull(ciphertextBlob);
            return this;
        }
        public Builder encryptionContext(@Nullable Map<String,String> encryptionContext) {
            this.encryptionContext = encryptionContext;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder keyId(String keyId) {
            this.keyId = Objects.requireNonNull(keyId);
            return this;
        }
        public Builder plaintext(String plaintext) {
            this.plaintext = Objects.requireNonNull(plaintext);
            return this;
        }        public GetCiphertextResult build() {
            return new GetCiphertextResult(ciphertextBlob, encryptionContext, id, keyId, plaintext);
        }
    }
}
