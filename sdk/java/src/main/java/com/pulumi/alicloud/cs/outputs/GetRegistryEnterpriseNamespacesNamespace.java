// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRegistryEnterpriseNamespacesNamespace {
    /**
     * @return Boolean, when it set to true, repositories are automatically created when pushing new images. If it set to false, you create repository for images before pushing.
     * 
     */
    private final Boolean autoCreate;
    /**
     * @return `PUBLIC` or `PRIVATE`, default repository visibility in this namespace.
     * 
     */
    private final String defaultVisibility;
    /**
     * @return ID of Container Registry Enterprise Edition namespace. It formats as `&lt;instance_id&gt;:&lt;namespace_name&gt;`. Before 1.161.0, it is a namespace uuid.
     * 
     */
    private final String id;
    /**
     * @return ID of Container Registry Enterprise Edition instance.
     * 
     */
    private final String instanceId;
    /**
     * @return Name of Container Registry Enterprise Edition namespace.
     * 
     */
    private final String name;
    /**
     * @return Container Registry Enterprise Edition namespace id. It is a uuid.
     * 
     */
    private final String namespaceId;
    /**
     * @return Name of Container Registry Enterprise Edition namespace.
     * 
     */
    private final String namespaceName;

    @CustomType.Constructor
    private GetRegistryEnterpriseNamespacesNamespace(
        @CustomType.Parameter("autoCreate") Boolean autoCreate,
        @CustomType.Parameter("defaultVisibility") String defaultVisibility,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceId") String instanceId,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("namespaceId") String namespaceId,
        @CustomType.Parameter("namespaceName") String namespaceName) {
        this.autoCreate = autoCreate;
        this.defaultVisibility = defaultVisibility;
        this.id = id;
        this.instanceId = instanceId;
        this.name = name;
        this.namespaceId = namespaceId;
        this.namespaceName = namespaceName;
    }

    /**
     * @return Boolean, when it set to true, repositories are automatically created when pushing new images. If it set to false, you create repository for images before pushing.
     * 
     */
    public Boolean autoCreate() {
        return this.autoCreate;
    }
    /**
     * @return `PUBLIC` or `PRIVATE`, default repository visibility in this namespace.
     * 
     */
    public String defaultVisibility() {
        return this.defaultVisibility;
    }
    /**
     * @return ID of Container Registry Enterprise Edition namespace. It formats as `&lt;instance_id&gt;:&lt;namespace_name&gt;`. Before 1.161.0, it is a namespace uuid.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return ID of Container Registry Enterprise Edition instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return Name of Container Registry Enterprise Edition namespace.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Container Registry Enterprise Edition namespace id. It is a uuid.
     * 
     */
    public String namespaceId() {
        return this.namespaceId;
    }
    /**
     * @return Name of Container Registry Enterprise Edition namespace.
     * 
     */
    public String namespaceName() {
        return this.namespaceName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegistryEnterpriseNamespacesNamespace defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean autoCreate;
        private String defaultVisibility;
        private String id;
        private String instanceId;
        private String name;
        private String namespaceId;
        private String namespaceName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRegistryEnterpriseNamespacesNamespace defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoCreate = defaults.autoCreate;
    	      this.defaultVisibility = defaults.defaultVisibility;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.name = defaults.name;
    	      this.namespaceId = defaults.namespaceId;
    	      this.namespaceName = defaults.namespaceName;
        }

        public Builder autoCreate(Boolean autoCreate) {
            this.autoCreate = Objects.requireNonNull(autoCreate);
            return this;
        }
        public Builder defaultVisibility(String defaultVisibility) {
            this.defaultVisibility = Objects.requireNonNull(defaultVisibility);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder namespaceId(String namespaceId) {
            this.namespaceId = Objects.requireNonNull(namespaceId);
            return this;
        }
        public Builder namespaceName(String namespaceName) {
            this.namespaceName = Objects.requireNonNull(namespaceName);
            return this;
        }        public GetRegistryEnterpriseNamespacesNamespace build() {
            return new GetRegistryEnterpriseNamespacesNamespace(autoCreate, defaultVisibility, id, instanceId, name, namespaceId, namespaceName);
        }
    }
}
