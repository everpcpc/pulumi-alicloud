// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.cen.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTransitRouteTableAggregationsTransitRouteTableAggregation {
    /**
     * @return The ID of the Transit Route Table Aggregation. It formats as `&lt;transit_route_table_id&gt;:&lt;transit_route_table_aggregation_cidr&gt;`.
     * 
     */
    private final String id;
    /**
     * @return The route type of the aggregate route.
     * 
     */
    private final String routeType;
    /**
     * @return The status of Transit Route Table Aggregation. Valid Values: `AllConfigured`, `Configuring`, `ConfigFailed`, `PartialConfigured`, `Deleting`.
     * 
     */
    private final String status;
    /**
     * @return The destination CIDR block of the aggregate route.
     * 
     */
    private final String transitRouteTableAggregationCidr;
    /**
     * @return The description of the aggregate route.
     * 
     */
    private final String transitRouteTableAggregationDescription;
    /**
     * @return The name of the aggregate route.
     * 
     */
    private final String transitRouteTableAggregationName;
    /**
     * @return The scope of networks that you want to advertise the aggregate route.
     * 
     */
    private final String transitRouteTableAggregationScope;
    /**
     * @return The ID of the route table of the Enterprise Edition transit router.
     * 
     */
    private final String transitRouteTableId;

    @CustomType.Constructor
    private GetTransitRouteTableAggregationsTransitRouteTableAggregation(
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("routeType") String routeType,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("transitRouteTableAggregationCidr") String transitRouteTableAggregationCidr,
        @CustomType.Parameter("transitRouteTableAggregationDescription") String transitRouteTableAggregationDescription,
        @CustomType.Parameter("transitRouteTableAggregationName") String transitRouteTableAggregationName,
        @CustomType.Parameter("transitRouteTableAggregationScope") String transitRouteTableAggregationScope,
        @CustomType.Parameter("transitRouteTableId") String transitRouteTableId) {
        this.id = id;
        this.routeType = routeType;
        this.status = status;
        this.transitRouteTableAggregationCidr = transitRouteTableAggregationCidr;
        this.transitRouteTableAggregationDescription = transitRouteTableAggregationDescription;
        this.transitRouteTableAggregationName = transitRouteTableAggregationName;
        this.transitRouteTableAggregationScope = transitRouteTableAggregationScope;
        this.transitRouteTableId = transitRouteTableId;
    }

    /**
     * @return The ID of the Transit Route Table Aggregation. It formats as `&lt;transit_route_table_id&gt;:&lt;transit_route_table_aggregation_cidr&gt;`.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The route type of the aggregate route.
     * 
     */
    public String routeType() {
        return this.routeType;
    }
    /**
     * @return The status of Transit Route Table Aggregation. Valid Values: `AllConfigured`, `Configuring`, `ConfigFailed`, `PartialConfigured`, `Deleting`.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The destination CIDR block of the aggregate route.
     * 
     */
    public String transitRouteTableAggregationCidr() {
        return this.transitRouteTableAggregationCidr;
    }
    /**
     * @return The description of the aggregate route.
     * 
     */
    public String transitRouteTableAggregationDescription() {
        return this.transitRouteTableAggregationDescription;
    }
    /**
     * @return The name of the aggregate route.
     * 
     */
    public String transitRouteTableAggregationName() {
        return this.transitRouteTableAggregationName;
    }
    /**
     * @return The scope of networks that you want to advertise the aggregate route.
     * 
     */
    public String transitRouteTableAggregationScope() {
        return this.transitRouteTableAggregationScope;
    }
    /**
     * @return The ID of the route table of the Enterprise Edition transit router.
     * 
     */
    public String transitRouteTableId() {
        return this.transitRouteTableId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTransitRouteTableAggregationsTransitRouteTableAggregation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String id;
        private String routeType;
        private String status;
        private String transitRouteTableAggregationCidr;
        private String transitRouteTableAggregationDescription;
        private String transitRouteTableAggregationName;
        private String transitRouteTableAggregationScope;
        private String transitRouteTableId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTransitRouteTableAggregationsTransitRouteTableAggregation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.routeType = defaults.routeType;
    	      this.status = defaults.status;
    	      this.transitRouteTableAggregationCidr = defaults.transitRouteTableAggregationCidr;
    	      this.transitRouteTableAggregationDescription = defaults.transitRouteTableAggregationDescription;
    	      this.transitRouteTableAggregationName = defaults.transitRouteTableAggregationName;
    	      this.transitRouteTableAggregationScope = defaults.transitRouteTableAggregationScope;
    	      this.transitRouteTableId = defaults.transitRouteTableId;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder routeType(String routeType) {
            this.routeType = Objects.requireNonNull(routeType);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder transitRouteTableAggregationCidr(String transitRouteTableAggregationCidr) {
            this.transitRouteTableAggregationCidr = Objects.requireNonNull(transitRouteTableAggregationCidr);
            return this;
        }
        public Builder transitRouteTableAggregationDescription(String transitRouteTableAggregationDescription) {
            this.transitRouteTableAggregationDescription = Objects.requireNonNull(transitRouteTableAggregationDescription);
            return this;
        }
        public Builder transitRouteTableAggregationName(String transitRouteTableAggregationName) {
            this.transitRouteTableAggregationName = Objects.requireNonNull(transitRouteTableAggregationName);
            return this;
        }
        public Builder transitRouteTableAggregationScope(String transitRouteTableAggregationScope) {
            this.transitRouteTableAggregationScope = Objects.requireNonNull(transitRouteTableAggregationScope);
            return this;
        }
        public Builder transitRouteTableId(String transitRouteTableId) {
            this.transitRouteTableId = Objects.requireNonNull(transitRouteTableId);
            return this;
        }        public GetTransitRouteTableAggregationsTransitRouteTableAggregation build() {
            return new GetTransitRouteTableAggregationsTransitRouteTableAggregation(id, routeType, status, transitRouteTableAggregationCidr, transitRouteTableAggregationDescription, transitRouteTableAggregationName, transitRouteTableAggregationScope, transitRouteTableId);
        }
    }
}
