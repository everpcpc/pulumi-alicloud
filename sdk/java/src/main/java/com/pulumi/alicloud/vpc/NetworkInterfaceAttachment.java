// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpc;

import com.pulumi.alicloud.Utilities;
import com.pulumi.alicloud.vpc.NetworkInterfaceAttachmentArgs;
import com.pulumi.alicloud.vpc.inputs.NetworkInterfaceAttachmentState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * Bacis Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.alicloud.vpc.Network;
 * import com.pulumi.alicloud.vpc.NetworkArgs;
 * import com.pulumi.alicloud.AlicloudFunctions;
 * import com.pulumi.alicloud.adb.inputs.GetZonesArgs;
 * import com.pulumi.alicloud.vpc.Switch;
 * import com.pulumi.alicloud.vpc.SwitchArgs;
 * import com.pulumi.alicloud.ecs.SecurityGroup;
 * import com.pulumi.alicloud.ecs.SecurityGroupArgs;
 * import com.pulumi.alicloud.ecs.EcsFunctions;
 * import com.pulumi.alicloud.ecp.inputs.GetInstanceTypesArgs;
 * import com.pulumi.alicloud.ecs.inputs.GetImagesArgs;
 * import com.pulumi.alicloud.ecs.Instance;
 * import com.pulumi.alicloud.ecs.InstanceArgs;
 * import com.pulumi.alicloud.vpc.NetworkInterface;
 * import com.pulumi.alicloud.vpc.NetworkInterfaceArgs;
 * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachment;
 * import com.pulumi.alicloud.vpc.NetworkInterfaceAttachmentArgs;
 * import com.pulumi.codegen.internal.KeyedValue;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var name = config.get(&#34;name&#34;).orElse(&#34;networkInterfaceAttachment&#34;);
 *         final var number = config.get(&#34;number&#34;).orElse(&#34;2&#34;);
 *         var vpc = new Network(&#34;vpc&#34;, NetworkArgs.builder()        
 *             .cidrBlock(&#34;192.168.0.0/24&#34;)
 *             .build());
 * 
 *         final var defaultZones = AlicloudFunctions.getZones(GetZonesArgs.builder()
 *             .availableResourceCreation(&#34;VSwitch&#34;)
 *             .build());
 * 
 *         var vswitch = new Switch(&#34;vswitch&#34;, SwitchArgs.builder()        
 *             .vswitchName(name)
 *             .cidrBlock(&#34;192.168.0.0/24&#34;)
 *             .zoneId(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
 *             .vpcId(vpc.id())
 *             .build());
 * 
 *         var group = new SecurityGroup(&#34;group&#34;, SecurityGroupArgs.builder()        
 *             .vpcId(vpc.id())
 *             .build());
 * 
 *         final var instanceType = EcsFunctions.getInstanceTypes(GetInstanceTypesArgs.builder()
 *             .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
 *             .eniAmount(2)
 *             .build());
 * 
 *         final var defaultImages = EcsFunctions.getImages(GetImagesArgs.builder()
 *             .nameRegex(&#34;^ubuntu_18.*64&#34;)
 *             .mostRecent(true)
 *             .owners(&#34;system&#34;)
 *             .build());
 * 
 *         for (var i = 0; i &lt; number; i++) {
 *             new Instance(&#34;instance-&#34; + i, InstanceArgs.builder()            
 *                 .availabilityZone(defaultZones.applyValue(getZonesResult -&gt; getZonesResult.zones()[0].id()))
 *                 .securityGroups(group.id())
 *                 .instanceType(instanceType.applyValue(getInstanceTypesResult -&gt; getInstanceTypesResult.instanceTypes()[0].id()))
 *                 .systemDiskCategory(&#34;cloud_efficiency&#34;)
 *                 .imageId(defaultImages.applyValue(getImagesResult -&gt; getImagesResult.images()[0].id()))
 *                 .instanceName(name)
 *                 .vswitchId(vswitch.id())
 *                 .internetMaxBandwidthOut(10)
 *                 .build());
 * 
 *         
 * }
 *         for (var i = 0; i &lt; number; i++) {
 *             new NetworkInterface(&#34;interface-&#34; + i, NetworkInterfaceArgs.builder()            
 *                 .vswitchId(vswitch.id())
 *                 .securityGroups(group.id())
 *                 .build());
 * 
 *         
 * }
 *         for (var i = 0; i &lt; number; i++) {
 *             new NetworkInterfaceAttachment(&#34;attachment-&#34; + i, NetworkInterfaceAttachmentArgs.builder()            
 *                 .instanceId(instance.stream().map(element -&gt; element.id()).collect(toList())[range.index()])
 *                 .networkInterfaceId(interface_.stream().map(element -&gt; element.id()).collect(toList())[range.index()])
 *                 .build());
 * 
 *         
 * }
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Network Interfaces Attachment resource can be imported using the id, e.g.
 * 
 * ```sh
 *  $ pulumi import alicloud:vpc/networkInterfaceAttachment:NetworkInterfaceAttachment eni eni-abc123456789000:i-abc123456789000
 * ```
 * 
 */
@ResourceType(type="alicloud:vpc/networkInterfaceAttachment:NetworkInterfaceAttachment")
public class NetworkInterfaceAttachment extends com.pulumi.resources.CustomResource {
    /**
     * The instance ID to attach.
     * 
     */
    @Export(name="instanceId", type=String.class, parameters={})
    private Output<String> instanceId;

    /**
     * @return The instance ID to attach.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * The ENI ID to attach.
     * 
     */
    @Export(name="networkInterfaceId", type=String.class, parameters={})
    private Output<String> networkInterfaceId;

    /**
     * @return The ENI ID to attach.
     * 
     */
    public Output<String> networkInterfaceId() {
        return this.networkInterfaceId;
    }
    @Export(name="trunkNetworkInstanceId", type=String.class, parameters={})
    private Output</* @Nullable */ String> trunkNetworkInstanceId;

    public Output<Optional<String>> trunkNetworkInstanceId() {
        return Codegen.optional(this.trunkNetworkInstanceId);
    }
    @Export(name="waitForNetworkConfigurationReady", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> waitForNetworkConfigurationReady;

    public Output<Optional<Boolean>> waitForNetworkConfigurationReady() {
        return Codegen.optional(this.waitForNetworkConfigurationReady);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NetworkInterfaceAttachment(String name) {
        this(name, NetworkInterfaceAttachmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NetworkInterfaceAttachment(String name, NetworkInterfaceAttachmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NetworkInterfaceAttachment(String name, NetworkInterfaceAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:vpc/networkInterfaceAttachment:NetworkInterfaceAttachment", name, args == null ? NetworkInterfaceAttachmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private NetworkInterfaceAttachment(String name, Output<String> id, @Nullable NetworkInterfaceAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("alicloud:vpc/networkInterfaceAttachment:NetworkInterfaceAttachment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NetworkInterfaceAttachment get(String name, Output<String> id, @Nullable NetworkInterfaceAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NetworkInterfaceAttachment(name, id, state, options);
    }
}
