// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vpn.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GatewayVpnAttachmentHealthCheckConfig {
    /**
     * @return The destination IP address that is used for health checks.
     * 
     */
    private final @Nullable String dip;
    /**
     * @return Specifies whether to enable health checks.
     * 
     */
    private final @Nullable Boolean enable;
    /**
     * @return The interval between two consecutive health checks. Unit: seconds.
     * 
     */
    private final @Nullable Integer interval;
    /**
     * @return Whether to revoke the published route when the health check fails. Valid values: `revoke_route` or `reserve_route`.
     * 
     */
    private final @Nullable String policy;
    /**
     * @return The maximum number of health check retries.
     * 
     */
    private final @Nullable Integer retry;
    /**
     * @return The source IP address that is used for health checks.
     * 
     */
    private final @Nullable String sip;

    @CustomType.Constructor
    private GatewayVpnAttachmentHealthCheckConfig(
        @CustomType.Parameter("dip") @Nullable String dip,
        @CustomType.Parameter("enable") @Nullable Boolean enable,
        @CustomType.Parameter("interval") @Nullable Integer interval,
        @CustomType.Parameter("policy") @Nullable String policy,
        @CustomType.Parameter("retry") @Nullable Integer retry,
        @CustomType.Parameter("sip") @Nullable String sip) {
        this.dip = dip;
        this.enable = enable;
        this.interval = interval;
        this.policy = policy;
        this.retry = retry;
        this.sip = sip;
    }

    /**
     * @return The destination IP address that is used for health checks.
     * 
     */
    public Optional<String> dip() {
        return Optional.ofNullable(this.dip);
    }
    /**
     * @return Specifies whether to enable health checks.
     * 
     */
    public Optional<Boolean> enable() {
        return Optional.ofNullable(this.enable);
    }
    /**
     * @return The interval between two consecutive health checks. Unit: seconds.
     * 
     */
    public Optional<Integer> interval() {
        return Optional.ofNullable(this.interval);
    }
    /**
     * @return Whether to revoke the published route when the health check fails. Valid values: `revoke_route` or `reserve_route`.
     * 
     */
    public Optional<String> policy() {
        return Optional.ofNullable(this.policy);
    }
    /**
     * @return The maximum number of health check retries.
     * 
     */
    public Optional<Integer> retry() {
        return Optional.ofNullable(this.retry);
    }
    /**
     * @return The source IP address that is used for health checks.
     * 
     */
    public Optional<String> sip() {
        return Optional.ofNullable(this.sip);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GatewayVpnAttachmentHealthCheckConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String dip;
        private @Nullable Boolean enable;
        private @Nullable Integer interval;
        private @Nullable String policy;
        private @Nullable Integer retry;
        private @Nullable String sip;

        public Builder() {
    	      // Empty
        }

        public Builder(GatewayVpnAttachmentHealthCheckConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dip = defaults.dip;
    	      this.enable = defaults.enable;
    	      this.interval = defaults.interval;
    	      this.policy = defaults.policy;
    	      this.retry = defaults.retry;
    	      this.sip = defaults.sip;
        }

        public Builder dip(@Nullable String dip) {
            this.dip = dip;
            return this;
        }
        public Builder enable(@Nullable Boolean enable) {
            this.enable = enable;
            return this;
        }
        public Builder interval(@Nullable Integer interval) {
            this.interval = interval;
            return this;
        }
        public Builder policy(@Nullable String policy) {
            this.policy = policy;
            return this;
        }
        public Builder retry(@Nullable Integer retry) {
            this.retry = retry;
            return this;
        }
        public Builder sip(@Nullable String sip) {
            this.sip = sip;
            return this;
        }        public GatewayVpnAttachmentHealthCheckConfig build() {
            return new GatewayVpnAttachmentHealthCheckConfig(dip, enable, interval, policy, retry, sip);
        }
    }
}
