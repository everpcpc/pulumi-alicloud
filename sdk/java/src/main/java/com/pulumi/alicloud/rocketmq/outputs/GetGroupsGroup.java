// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.rocketmq.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetGroupsGroup {
    /**
     * @return The name of the group.
     * 
     */
    private final String groupName;
    /**
     * @return Specify the protocol applicable to the created Group ID. Valid values: `tcp`, `http`. Default to `tcp`.
     * 
     */
    private final String groupType;
    /**
     * @return The name of the group.
     * 
     */
    private final String id;
    /**
     * @return Indicates whether namespaces are available. Read [Fields in SubscribeInfoDo](https://www.alibabacloud.com/help/doc-detail/29619.html) for further details.
     * 
     */
    private final Boolean independentNaming;
    /**
     * @return ID of the ONS Instance that owns the groups.
     * 
     */
    private final String instanceId;
    /**
     * @return The ID of the group owner, which is the Alibaba Cloud UID.
     * 
     */
    private final String owner;
    /**
     * @return Remark of the group.
     * 
     */
    private final String remark;
    /**
     * @return A map of tags assigned to the Ons instance.
     * 
     */
    private final Map<String,Object> tags;

    @CustomType.Constructor
    private GetGroupsGroup(
        @CustomType.Parameter("groupName") String groupName,
        @CustomType.Parameter("groupType") String groupType,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("independentNaming") Boolean independentNaming,
        @CustomType.Parameter("instanceId") String instanceId,
        @CustomType.Parameter("owner") String owner,
        @CustomType.Parameter("remark") String remark,
        @CustomType.Parameter("tags") Map<String,Object> tags) {
        this.groupName = groupName;
        this.groupType = groupType;
        this.id = id;
        this.independentNaming = independentNaming;
        this.instanceId = instanceId;
        this.owner = owner;
        this.remark = remark;
        this.tags = tags;
    }

    /**
     * @return The name of the group.
     * 
     */
    public String groupName() {
        return this.groupName;
    }
    /**
     * @return Specify the protocol applicable to the created Group ID. Valid values: `tcp`, `http`. Default to `tcp`.
     * 
     */
    public String groupType() {
        return this.groupType;
    }
    /**
     * @return The name of the group.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether namespaces are available. Read [Fields in SubscribeInfoDo](https://www.alibabacloud.com/help/doc-detail/29619.html) for further details.
     * 
     */
    public Boolean independentNaming() {
        return this.independentNaming;
    }
    /**
     * @return ID of the ONS Instance that owns the groups.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The ID of the group owner, which is the Alibaba Cloud UID.
     * 
     */
    public String owner() {
        return this.owner;
    }
    /**
     * @return Remark of the group.
     * 
     */
    public String remark() {
        return this.remark;
    }
    /**
     * @return A map of tags assigned to the Ons instance.
     * 
     */
    public Map<String,Object> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupsGroup defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String groupName;
        private String groupType;
        private String id;
        private Boolean independentNaming;
        private String instanceId;
        private String owner;
        private String remark;
        private Map<String,Object> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(GetGroupsGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.groupName = defaults.groupName;
    	      this.groupType = defaults.groupType;
    	      this.id = defaults.id;
    	      this.independentNaming = defaults.independentNaming;
    	      this.instanceId = defaults.instanceId;
    	      this.owner = defaults.owner;
    	      this.remark = defaults.remark;
    	      this.tags = defaults.tags;
        }

        public Builder groupName(String groupName) {
            this.groupName = Objects.requireNonNull(groupName);
            return this;
        }
        public Builder groupType(String groupType) {
            this.groupType = Objects.requireNonNull(groupType);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder independentNaming(Boolean independentNaming) {
            this.independentNaming = Objects.requireNonNull(independentNaming);
            return this;
        }
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        public Builder owner(String owner) {
            this.owner = Objects.requireNonNull(owner);
            return this;
        }
        public Builder remark(String remark) {
            this.remark = Objects.requireNonNull(remark);
            return this;
        }
        public Builder tags(Map<String,Object> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }        public GetGroupsGroup build() {
            return new GetGroupsGroup(groupName, groupType, id, independentNaming, instanceId, owner, remark, tags);
        }
    }
}
