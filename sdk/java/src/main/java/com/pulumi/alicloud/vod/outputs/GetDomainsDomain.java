// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.alicloud.vod.outputs;

import com.pulumi.alicloud.vod.outputs.GetDomainsDomainSource;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDomainsDomain {
    /**
     * @return The CNAME that is assigned to the domain name for CDN. You must add a CNAME record in the system of your Domain Name System (DNS) service provider to map the domain name for CDN to the CNAME.
     * 
     */
    private final String cname;
    /**
     * @return The description of the domain name for CDN.
     * 
     */
    private final String description;
    /**
     * @return The domain name for CDN.
     * 
     */
    private final String domainName;
    /**
     * @return The time when the domain name for CDN was added. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
     * 
     */
    private final String gmtCreated;
    /**
     * @return The last time when the domain name for CDN was modified. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
     * 
     */
    private final String gmtModified;
    /**
     * @return The ID of the Domain. Its value is same as Queue Name.
     * 
     */
    private final String id;
    /**
     * @return Indicates whether the domain name for CDN is in a sandbox environment.
     * 
     */
    private final String sandBox;
    /**
     * @return The information about the address of the origin server. For more information about the Sources parameter, See the following `Block sources`.
     * 
     */
    private final List<GetDomainsDomainSource> sources;
    /**
     * @return Indicates whether the Secure Sockets Layer (SSL) certificate is enabled. Valid values: `on`,`off`.
     * 
     */
    private final String sslProtocol;
    /**
     * @return The status of the resource.
     * 
     */
    private final String status;

    @CustomType.Constructor
    private GetDomainsDomain(
        @CustomType.Parameter("cname") String cname,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("domainName") String domainName,
        @CustomType.Parameter("gmtCreated") String gmtCreated,
        @CustomType.Parameter("gmtModified") String gmtModified,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("sandBox") String sandBox,
        @CustomType.Parameter("sources") List<GetDomainsDomainSource> sources,
        @CustomType.Parameter("sslProtocol") String sslProtocol,
        @CustomType.Parameter("status") String status) {
        this.cname = cname;
        this.description = description;
        this.domainName = domainName;
        this.gmtCreated = gmtCreated;
        this.gmtModified = gmtModified;
        this.id = id;
        this.sandBox = sandBox;
        this.sources = sources;
        this.sslProtocol = sslProtocol;
        this.status = status;
    }

    /**
     * @return The CNAME that is assigned to the domain name for CDN. You must add a CNAME record in the system of your Domain Name System (DNS) service provider to map the domain name for CDN to the CNAME.
     * 
     */
    public String cname() {
        return this.cname;
    }
    /**
     * @return The description of the domain name for CDN.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The domain name for CDN.
     * 
     */
    public String domainName() {
        return this.domainName;
    }
    /**
     * @return The time when the domain name for CDN was added. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
     * 
     */
    public String gmtCreated() {
        return this.gmtCreated;
    }
    /**
     * @return The last time when the domain name for CDN was modified. The time follows the ISO 8601 standard in the yyyy-MM-ddTHH:mm:ssZ format. The time is displayed in UTC.
     * 
     */
    public String gmtModified() {
        return this.gmtModified;
    }
    /**
     * @return The ID of the Domain. Its value is same as Queue Name.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether the domain name for CDN is in a sandbox environment.
     * 
     */
    public String sandBox() {
        return this.sandBox;
    }
    /**
     * @return The information about the address of the origin server. For more information about the Sources parameter, See the following `Block sources`.
     * 
     */
    public List<GetDomainsDomainSource> sources() {
        return this.sources;
    }
    /**
     * @return Indicates whether the Secure Sockets Layer (SSL) certificate is enabled. Valid values: `on`,`off`.
     * 
     */
    public String sslProtocol() {
        return this.sslProtocol;
    }
    /**
     * @return The status of the resource.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsDomain defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String cname;
        private String description;
        private String domainName;
        private String gmtCreated;
        private String gmtModified;
        private String id;
        private String sandBox;
        private List<GetDomainsDomainSource> sources;
        private String sslProtocol;
        private String status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDomainsDomain defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cname = defaults.cname;
    	      this.description = defaults.description;
    	      this.domainName = defaults.domainName;
    	      this.gmtCreated = defaults.gmtCreated;
    	      this.gmtModified = defaults.gmtModified;
    	      this.id = defaults.id;
    	      this.sandBox = defaults.sandBox;
    	      this.sources = defaults.sources;
    	      this.sslProtocol = defaults.sslProtocol;
    	      this.status = defaults.status;
        }

        public Builder cname(String cname) {
            this.cname = Objects.requireNonNull(cname);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder domainName(String domainName) {
            this.domainName = Objects.requireNonNull(domainName);
            return this;
        }
        public Builder gmtCreated(String gmtCreated) {
            this.gmtCreated = Objects.requireNonNull(gmtCreated);
            return this;
        }
        public Builder gmtModified(String gmtModified) {
            this.gmtModified = Objects.requireNonNull(gmtModified);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder sandBox(String sandBox) {
            this.sandBox = Objects.requireNonNull(sandBox);
            return this;
        }
        public Builder sources(List<GetDomainsDomainSource> sources) {
            this.sources = Objects.requireNonNull(sources);
            return this;
        }
        public Builder sources(GetDomainsDomainSource... sources) {
            return sources(List.of(sources));
        }
        public Builder sslProtocol(String sslProtocol) {
            this.sslProtocol = Objects.requireNonNull(sslProtocol);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }        public GetDomainsDomain build() {
            return new GetDomainsDomain(cname, description, domainName, gmtCreated, gmtModified, id, sandBox, sources, sslProtocol, status);
        }
    }
}
