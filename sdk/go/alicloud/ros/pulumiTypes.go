// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ros

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ChangeSetParameter struct {
	// The parameter key.
	ParameterKey string `pulumi:"parameterKey"`
	// The parameter value.
	ParameterValue string `pulumi:"parameterValue"`
}

// ChangeSetParameterInput is an input type that accepts ChangeSetParameterArgs and ChangeSetParameterOutput values.
// You can construct a concrete instance of `ChangeSetParameterInput` via:
//
//          ChangeSetParameterArgs{...}
type ChangeSetParameterInput interface {
	pulumi.Input

	ToChangeSetParameterOutput() ChangeSetParameterOutput
	ToChangeSetParameterOutputWithContext(context.Context) ChangeSetParameterOutput
}

type ChangeSetParameterArgs struct {
	// The parameter key.
	ParameterKey pulumi.StringInput `pulumi:"parameterKey"`
	// The parameter value.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (ChangeSetParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChangeSetParameter)(nil)).Elem()
}

func (i ChangeSetParameterArgs) ToChangeSetParameterOutput() ChangeSetParameterOutput {
	return i.ToChangeSetParameterOutputWithContext(context.Background())
}

func (i ChangeSetParameterArgs) ToChangeSetParameterOutputWithContext(ctx context.Context) ChangeSetParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChangeSetParameterOutput)
}

// ChangeSetParameterArrayInput is an input type that accepts ChangeSetParameterArray and ChangeSetParameterArrayOutput values.
// You can construct a concrete instance of `ChangeSetParameterArrayInput` via:
//
//          ChangeSetParameterArray{ ChangeSetParameterArgs{...} }
type ChangeSetParameterArrayInput interface {
	pulumi.Input

	ToChangeSetParameterArrayOutput() ChangeSetParameterArrayOutput
	ToChangeSetParameterArrayOutputWithContext(context.Context) ChangeSetParameterArrayOutput
}

type ChangeSetParameterArray []ChangeSetParameterInput

func (ChangeSetParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChangeSetParameter)(nil)).Elem()
}

func (i ChangeSetParameterArray) ToChangeSetParameterArrayOutput() ChangeSetParameterArrayOutput {
	return i.ToChangeSetParameterArrayOutputWithContext(context.Background())
}

func (i ChangeSetParameterArray) ToChangeSetParameterArrayOutputWithContext(ctx context.Context) ChangeSetParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChangeSetParameterArrayOutput)
}

type ChangeSetParameterOutput struct{ *pulumi.OutputState }

func (ChangeSetParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChangeSetParameter)(nil)).Elem()
}

func (o ChangeSetParameterOutput) ToChangeSetParameterOutput() ChangeSetParameterOutput {
	return o
}

func (o ChangeSetParameterOutput) ToChangeSetParameterOutputWithContext(ctx context.Context) ChangeSetParameterOutput {
	return o
}

// The parameter key.
func (o ChangeSetParameterOutput) ParameterKey() pulumi.StringOutput {
	return o.ApplyT(func(v ChangeSetParameter) string { return v.ParameterKey }).(pulumi.StringOutput)
}

// The parameter value.
func (o ChangeSetParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v ChangeSetParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type ChangeSetParameterArrayOutput struct{ *pulumi.OutputState }

func (ChangeSetParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChangeSetParameter)(nil)).Elem()
}

func (o ChangeSetParameterArrayOutput) ToChangeSetParameterArrayOutput() ChangeSetParameterArrayOutput {
	return o
}

func (o ChangeSetParameterArrayOutput) ToChangeSetParameterArrayOutputWithContext(ctx context.Context) ChangeSetParameterArrayOutput {
	return o
}

func (o ChangeSetParameterArrayOutput) Index(i pulumi.IntInput) ChangeSetParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChangeSetParameter {
		return vs[0].([]ChangeSetParameter)[vs[1].(int)]
	}).(ChangeSetParameterOutput)
}

type StackGroupParameter struct {
	// The parameter key.
	ParameterKey *string `pulumi:"parameterKey"`
	// The parameter value.
	ParameterValue *string `pulumi:"parameterValue"`
}

// StackGroupParameterInput is an input type that accepts StackGroupParameterArgs and StackGroupParameterOutput values.
// You can construct a concrete instance of `StackGroupParameterInput` via:
//
//          StackGroupParameterArgs{...}
type StackGroupParameterInput interface {
	pulumi.Input

	ToStackGroupParameterOutput() StackGroupParameterOutput
	ToStackGroupParameterOutputWithContext(context.Context) StackGroupParameterOutput
}

type StackGroupParameterArgs struct {
	// The parameter key.
	ParameterKey pulumi.StringPtrInput `pulumi:"parameterKey"`
	// The parameter value.
	ParameterValue pulumi.StringPtrInput `pulumi:"parameterValue"`
}

func (StackGroupParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackGroupParameter)(nil)).Elem()
}

func (i StackGroupParameterArgs) ToStackGroupParameterOutput() StackGroupParameterOutput {
	return i.ToStackGroupParameterOutputWithContext(context.Background())
}

func (i StackGroupParameterArgs) ToStackGroupParameterOutputWithContext(ctx context.Context) StackGroupParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackGroupParameterOutput)
}

// StackGroupParameterArrayInput is an input type that accepts StackGroupParameterArray and StackGroupParameterArrayOutput values.
// You can construct a concrete instance of `StackGroupParameterArrayInput` via:
//
//          StackGroupParameterArray{ StackGroupParameterArgs{...} }
type StackGroupParameterArrayInput interface {
	pulumi.Input

	ToStackGroupParameterArrayOutput() StackGroupParameterArrayOutput
	ToStackGroupParameterArrayOutputWithContext(context.Context) StackGroupParameterArrayOutput
}

type StackGroupParameterArray []StackGroupParameterInput

func (StackGroupParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackGroupParameter)(nil)).Elem()
}

func (i StackGroupParameterArray) ToStackGroupParameterArrayOutput() StackGroupParameterArrayOutput {
	return i.ToStackGroupParameterArrayOutputWithContext(context.Background())
}

func (i StackGroupParameterArray) ToStackGroupParameterArrayOutputWithContext(ctx context.Context) StackGroupParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackGroupParameterArrayOutput)
}

type StackGroupParameterOutput struct{ *pulumi.OutputState }

func (StackGroupParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackGroupParameter)(nil)).Elem()
}

func (o StackGroupParameterOutput) ToStackGroupParameterOutput() StackGroupParameterOutput {
	return o
}

func (o StackGroupParameterOutput) ToStackGroupParameterOutputWithContext(ctx context.Context) StackGroupParameterOutput {
	return o
}

// The parameter key.
func (o StackGroupParameterOutput) ParameterKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackGroupParameter) *string { return v.ParameterKey }).(pulumi.StringPtrOutput)
}

// The parameter value.
func (o StackGroupParameterOutput) ParameterValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackGroupParameter) *string { return v.ParameterValue }).(pulumi.StringPtrOutput)
}

type StackGroupParameterArrayOutput struct{ *pulumi.OutputState }

func (StackGroupParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackGroupParameter)(nil)).Elem()
}

func (o StackGroupParameterArrayOutput) ToStackGroupParameterArrayOutput() StackGroupParameterArrayOutput {
	return o
}

func (o StackGroupParameterArrayOutput) ToStackGroupParameterArrayOutputWithContext(ctx context.Context) StackGroupParameterArrayOutput {
	return o
}

func (o StackGroupParameterArrayOutput) Index(i pulumi.IntInput) StackGroupParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackGroupParameter {
		return vs[0].([]StackGroupParameter)[vs[1].(int)]
	}).(StackGroupParameterOutput)
}

type StackParameter struct {
	// The parameter key.
	ParameterKey *string `pulumi:"parameterKey"`
	// The parameter value.
	ParameterValue string `pulumi:"parameterValue"`
}

// StackParameterInput is an input type that accepts StackParameterArgs and StackParameterOutput values.
// You can construct a concrete instance of `StackParameterInput` via:
//
//          StackParameterArgs{...}
type StackParameterInput interface {
	pulumi.Input

	ToStackParameterOutput() StackParameterOutput
	ToStackParameterOutputWithContext(context.Context) StackParameterOutput
}

type StackParameterArgs struct {
	// The parameter key.
	ParameterKey pulumi.StringPtrInput `pulumi:"parameterKey"`
	// The parameter value.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (StackParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackParameter)(nil)).Elem()
}

func (i StackParameterArgs) ToStackParameterOutput() StackParameterOutput {
	return i.ToStackParameterOutputWithContext(context.Background())
}

func (i StackParameterArgs) ToStackParameterOutputWithContext(ctx context.Context) StackParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackParameterOutput)
}

// StackParameterArrayInput is an input type that accepts StackParameterArray and StackParameterArrayOutput values.
// You can construct a concrete instance of `StackParameterArrayInput` via:
//
//          StackParameterArray{ StackParameterArgs{...} }
type StackParameterArrayInput interface {
	pulumi.Input

	ToStackParameterArrayOutput() StackParameterArrayOutput
	ToStackParameterArrayOutputWithContext(context.Context) StackParameterArrayOutput
}

type StackParameterArray []StackParameterInput

func (StackParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackParameter)(nil)).Elem()
}

func (i StackParameterArray) ToStackParameterArrayOutput() StackParameterArrayOutput {
	return i.ToStackParameterArrayOutputWithContext(context.Background())
}

func (i StackParameterArray) ToStackParameterArrayOutputWithContext(ctx context.Context) StackParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackParameterArrayOutput)
}

type StackParameterOutput struct{ *pulumi.OutputState }

func (StackParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackParameter)(nil)).Elem()
}

func (o StackParameterOutput) ToStackParameterOutput() StackParameterOutput {
	return o
}

func (o StackParameterOutput) ToStackParameterOutputWithContext(ctx context.Context) StackParameterOutput {
	return o
}

// The parameter key.
func (o StackParameterOutput) ParameterKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackParameter) *string { return v.ParameterKey }).(pulumi.StringPtrOutput)
}

// The parameter value.
func (o StackParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v StackParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type StackParameterArrayOutput struct{ *pulumi.OutputState }

func (StackParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackParameter)(nil)).Elem()
}

func (o StackParameterArrayOutput) ToStackParameterArrayOutput() StackParameterArrayOutput {
	return o
}

func (o StackParameterArrayOutput) ToStackParameterArrayOutputWithContext(ctx context.Context) StackParameterArrayOutput {
	return o
}

func (o StackParameterArrayOutput) Index(i pulumi.IntInput) StackParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackParameter {
		return vs[0].([]StackParameter)[vs[1].(int)]
	}).(StackParameterOutput)
}

type GetChangeSetsSet struct {
	// The ID of the change set.
	ChangeSetId string `pulumi:"changeSetId"`
	// The name of the change set.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.
	ChangeSetName string `pulumi:"changeSetName"`
	// The type of the change set. Valid values:  CREATE: creates a change set for a new stack. UPDATE: creates a change set for an existing stack. IMPORT: creates a change set for a new stack or an existing stack to import non-ROS-managed resources. If you create a change set for a new stack, ROS creates a stack that has a unique stack ID. The stack is in the REVIEW_IN_PROGRESS state until you execute the change set.  You cannot use the UPDATE type to create a change set for a new stack or the CREATE type to create a change set for an existing stack.
	ChangeSetType string `pulumi:"changeSetType"`
	// The description of the change set. The description can be up to 1,024 bytes in length.
	Description string `pulumi:"description"`
	// Specifies whether to disable rollback on stack creation failure. Default value: false.  Valid values:  true: disables rollback on stack creation failure. false: enables rollback on stack creation failure. Note This parameter takes effect only when ChangeSetType is set to CREATE or IMPORT.
	DisableRollback bool `pulumi:"disableRollback"`
	// The execution status of change set N. Maximum value of N: 5. Valid values:  UNAVAILABLE AVAILABLE EXECUTE_IN_PROGRESS EXECUTE_COMPLETE EXECUTE_FAILED OBSOLETE.
	ExecutionStatus string `pulumi:"executionStatus"`
	// The ID of the Change Set.
	Id string `pulumi:"id"`
	// Parameters.
	Parameters []GetChangeSetsSetParameter `pulumi:"parameters"`
	// The ID of the stack for which you want to create the change set. ROS generates the change set by comparing the stack information with the information that you submit, such as a modified template or different inputs.
	StackId string `pulumi:"stackId"`
	// The name of the stack for which you want to create the change set.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.  Note This parameter takes effect only when ChangeSetType is set to CREATE or IMPORT.
	StackName string `pulumi:"stackName"`
	// The status of the change set.
	Status string `pulumi:"status"`
	// The structure that contains the template body. The template body must be 1 to 524,288 bytes in length.  If the length of the template body is longer than required, we recommend that you add parameters to the HTTP POST request body to avoid request failures due to excessive length of URLs.  You can specify one of TemplateBody or TemplateURL parameters, but you cannot specify both of them.
	TemplateBody string `pulumi:"templateBody"`
	// Timeout In Minutes.
	TimeoutInMinutes int `pulumi:"timeoutInMinutes"`
}

// GetChangeSetsSetInput is an input type that accepts GetChangeSetsSetArgs and GetChangeSetsSetOutput values.
// You can construct a concrete instance of `GetChangeSetsSetInput` via:
//
//          GetChangeSetsSetArgs{...}
type GetChangeSetsSetInput interface {
	pulumi.Input

	ToGetChangeSetsSetOutput() GetChangeSetsSetOutput
	ToGetChangeSetsSetOutputWithContext(context.Context) GetChangeSetsSetOutput
}

type GetChangeSetsSetArgs struct {
	// The ID of the change set.
	ChangeSetId pulumi.StringInput `pulumi:"changeSetId"`
	// The name of the change set.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.
	ChangeSetName pulumi.StringInput `pulumi:"changeSetName"`
	// The type of the change set. Valid values:  CREATE: creates a change set for a new stack. UPDATE: creates a change set for an existing stack. IMPORT: creates a change set for a new stack or an existing stack to import non-ROS-managed resources. If you create a change set for a new stack, ROS creates a stack that has a unique stack ID. The stack is in the REVIEW_IN_PROGRESS state until you execute the change set.  You cannot use the UPDATE type to create a change set for a new stack or the CREATE type to create a change set for an existing stack.
	ChangeSetType pulumi.StringInput `pulumi:"changeSetType"`
	// The description of the change set. The description can be up to 1,024 bytes in length.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies whether to disable rollback on stack creation failure. Default value: false.  Valid values:  true: disables rollback on stack creation failure. false: enables rollback on stack creation failure. Note This parameter takes effect only when ChangeSetType is set to CREATE or IMPORT.
	DisableRollback pulumi.BoolInput `pulumi:"disableRollback"`
	// The execution status of change set N. Maximum value of N: 5. Valid values:  UNAVAILABLE AVAILABLE EXECUTE_IN_PROGRESS EXECUTE_COMPLETE EXECUTE_FAILED OBSOLETE.
	ExecutionStatus pulumi.StringInput `pulumi:"executionStatus"`
	// The ID of the Change Set.
	Id pulumi.StringInput `pulumi:"id"`
	// Parameters.
	Parameters GetChangeSetsSetParameterArrayInput `pulumi:"parameters"`
	// The ID of the stack for which you want to create the change set. ROS generates the change set by comparing the stack information with the information that you submit, such as a modified template or different inputs.
	StackId pulumi.StringInput `pulumi:"stackId"`
	// The name of the stack for which you want to create the change set.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.  Note This parameter takes effect only when ChangeSetType is set to CREATE or IMPORT.
	StackName pulumi.StringInput `pulumi:"stackName"`
	// The status of the change set.
	Status pulumi.StringInput `pulumi:"status"`
	// The structure that contains the template body. The template body must be 1 to 524,288 bytes in length.  If the length of the template body is longer than required, we recommend that you add parameters to the HTTP POST request body to avoid request failures due to excessive length of URLs.  You can specify one of TemplateBody or TemplateURL parameters, but you cannot specify both of them.
	TemplateBody pulumi.StringInput `pulumi:"templateBody"`
	// Timeout In Minutes.
	TimeoutInMinutes pulumi.IntInput `pulumi:"timeoutInMinutes"`
}

func (GetChangeSetsSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChangeSetsSet)(nil)).Elem()
}

func (i GetChangeSetsSetArgs) ToGetChangeSetsSetOutput() GetChangeSetsSetOutput {
	return i.ToGetChangeSetsSetOutputWithContext(context.Background())
}

func (i GetChangeSetsSetArgs) ToGetChangeSetsSetOutputWithContext(ctx context.Context) GetChangeSetsSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChangeSetsSetOutput)
}

// GetChangeSetsSetArrayInput is an input type that accepts GetChangeSetsSetArray and GetChangeSetsSetArrayOutput values.
// You can construct a concrete instance of `GetChangeSetsSetArrayInput` via:
//
//          GetChangeSetsSetArray{ GetChangeSetsSetArgs{...} }
type GetChangeSetsSetArrayInput interface {
	pulumi.Input

	ToGetChangeSetsSetArrayOutput() GetChangeSetsSetArrayOutput
	ToGetChangeSetsSetArrayOutputWithContext(context.Context) GetChangeSetsSetArrayOutput
}

type GetChangeSetsSetArray []GetChangeSetsSetInput

func (GetChangeSetsSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChangeSetsSet)(nil)).Elem()
}

func (i GetChangeSetsSetArray) ToGetChangeSetsSetArrayOutput() GetChangeSetsSetArrayOutput {
	return i.ToGetChangeSetsSetArrayOutputWithContext(context.Background())
}

func (i GetChangeSetsSetArray) ToGetChangeSetsSetArrayOutputWithContext(ctx context.Context) GetChangeSetsSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChangeSetsSetArrayOutput)
}

type GetChangeSetsSetOutput struct{ *pulumi.OutputState }

func (GetChangeSetsSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChangeSetsSet)(nil)).Elem()
}

func (o GetChangeSetsSetOutput) ToGetChangeSetsSetOutput() GetChangeSetsSetOutput {
	return o
}

func (o GetChangeSetsSetOutput) ToGetChangeSetsSetOutputWithContext(ctx context.Context) GetChangeSetsSetOutput {
	return o
}

// The ID of the change set.
func (o GetChangeSetsSetOutput) ChangeSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.ChangeSetId }).(pulumi.StringOutput)
}

// The name of the change set.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.
func (o GetChangeSetsSetOutput) ChangeSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.ChangeSetName }).(pulumi.StringOutput)
}

// The type of the change set. Valid values:  CREATE: creates a change set for a new stack. UPDATE: creates a change set for an existing stack. IMPORT: creates a change set for a new stack or an existing stack to import non-ROS-managed resources. If you create a change set for a new stack, ROS creates a stack that has a unique stack ID. The stack is in the REVIEW_IN_PROGRESS state until you execute the change set.  You cannot use the UPDATE type to create a change set for a new stack or the CREATE type to create a change set for an existing stack.
func (o GetChangeSetsSetOutput) ChangeSetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.ChangeSetType }).(pulumi.StringOutput)
}

// The description of the change set. The description can be up to 1,024 bytes in length.
func (o GetChangeSetsSetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.Description }).(pulumi.StringOutput)
}

// Specifies whether to disable rollback on stack creation failure. Default value: false.  Valid values:  true: disables rollback on stack creation failure. false: enables rollback on stack creation failure. Note This parameter takes effect only when ChangeSetType is set to CREATE or IMPORT.
func (o GetChangeSetsSetOutput) DisableRollback() pulumi.BoolOutput {
	return o.ApplyT(func(v GetChangeSetsSet) bool { return v.DisableRollback }).(pulumi.BoolOutput)
}

// The execution status of change set N. Maximum value of N: 5. Valid values:  UNAVAILABLE AVAILABLE EXECUTE_IN_PROGRESS EXECUTE_COMPLETE EXECUTE_FAILED OBSOLETE.
func (o GetChangeSetsSetOutput) ExecutionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.ExecutionStatus }).(pulumi.StringOutput)
}

// The ID of the Change Set.
func (o GetChangeSetsSetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.Id }).(pulumi.StringOutput)
}

// Parameters.
func (o GetChangeSetsSetOutput) Parameters() GetChangeSetsSetParameterArrayOutput {
	return o.ApplyT(func(v GetChangeSetsSet) []GetChangeSetsSetParameter { return v.Parameters }).(GetChangeSetsSetParameterArrayOutput)
}

// The ID of the stack for which you want to create the change set. ROS generates the change set by comparing the stack information with the information that you submit, such as a modified template or different inputs.
func (o GetChangeSetsSetOutput) StackId() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.StackId }).(pulumi.StringOutput)
}

// The name of the stack for which you want to create the change set.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.  Note This parameter takes effect only when ChangeSetType is set to CREATE or IMPORT.
func (o GetChangeSetsSetOutput) StackName() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.StackName }).(pulumi.StringOutput)
}

// The status of the change set.
func (o GetChangeSetsSetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.Status }).(pulumi.StringOutput)
}

// The structure that contains the template body. The template body must be 1 to 524,288 bytes in length.  If the length of the template body is longer than required, we recommend that you add parameters to the HTTP POST request body to avoid request failures due to excessive length of URLs.  You can specify one of TemplateBody or TemplateURL parameters, but you cannot specify both of them.
func (o GetChangeSetsSetOutput) TemplateBody() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSet) string { return v.TemplateBody }).(pulumi.StringOutput)
}

// Timeout In Minutes.
func (o GetChangeSetsSetOutput) TimeoutInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetChangeSetsSet) int { return v.TimeoutInMinutes }).(pulumi.IntOutput)
}

type GetChangeSetsSetArrayOutput struct{ *pulumi.OutputState }

func (GetChangeSetsSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChangeSetsSet)(nil)).Elem()
}

func (o GetChangeSetsSetArrayOutput) ToGetChangeSetsSetArrayOutput() GetChangeSetsSetArrayOutput {
	return o
}

func (o GetChangeSetsSetArrayOutput) ToGetChangeSetsSetArrayOutputWithContext(ctx context.Context) GetChangeSetsSetArrayOutput {
	return o
}

func (o GetChangeSetsSetArrayOutput) Index(i pulumi.IntInput) GetChangeSetsSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChangeSetsSet {
		return vs[0].([]GetChangeSetsSet)[vs[1].(int)]
	}).(GetChangeSetsSetOutput)
}

type GetChangeSetsSetParameter struct {
	// The parameters.
	ParameterKey string `pulumi:"parameterKey"`
	// The parameters.
	ParameterValue string `pulumi:"parameterValue"`
}

// GetChangeSetsSetParameterInput is an input type that accepts GetChangeSetsSetParameterArgs and GetChangeSetsSetParameterOutput values.
// You can construct a concrete instance of `GetChangeSetsSetParameterInput` via:
//
//          GetChangeSetsSetParameterArgs{...}
type GetChangeSetsSetParameterInput interface {
	pulumi.Input

	ToGetChangeSetsSetParameterOutput() GetChangeSetsSetParameterOutput
	ToGetChangeSetsSetParameterOutputWithContext(context.Context) GetChangeSetsSetParameterOutput
}

type GetChangeSetsSetParameterArgs struct {
	// The parameters.
	ParameterKey pulumi.StringInput `pulumi:"parameterKey"`
	// The parameters.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (GetChangeSetsSetParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChangeSetsSetParameter)(nil)).Elem()
}

func (i GetChangeSetsSetParameterArgs) ToGetChangeSetsSetParameterOutput() GetChangeSetsSetParameterOutput {
	return i.ToGetChangeSetsSetParameterOutputWithContext(context.Background())
}

func (i GetChangeSetsSetParameterArgs) ToGetChangeSetsSetParameterOutputWithContext(ctx context.Context) GetChangeSetsSetParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChangeSetsSetParameterOutput)
}

// GetChangeSetsSetParameterArrayInput is an input type that accepts GetChangeSetsSetParameterArray and GetChangeSetsSetParameterArrayOutput values.
// You can construct a concrete instance of `GetChangeSetsSetParameterArrayInput` via:
//
//          GetChangeSetsSetParameterArray{ GetChangeSetsSetParameterArgs{...} }
type GetChangeSetsSetParameterArrayInput interface {
	pulumi.Input

	ToGetChangeSetsSetParameterArrayOutput() GetChangeSetsSetParameterArrayOutput
	ToGetChangeSetsSetParameterArrayOutputWithContext(context.Context) GetChangeSetsSetParameterArrayOutput
}

type GetChangeSetsSetParameterArray []GetChangeSetsSetParameterInput

func (GetChangeSetsSetParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChangeSetsSetParameter)(nil)).Elem()
}

func (i GetChangeSetsSetParameterArray) ToGetChangeSetsSetParameterArrayOutput() GetChangeSetsSetParameterArrayOutput {
	return i.ToGetChangeSetsSetParameterArrayOutputWithContext(context.Background())
}

func (i GetChangeSetsSetParameterArray) ToGetChangeSetsSetParameterArrayOutputWithContext(ctx context.Context) GetChangeSetsSetParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetChangeSetsSetParameterArrayOutput)
}

type GetChangeSetsSetParameterOutput struct{ *pulumi.OutputState }

func (GetChangeSetsSetParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetChangeSetsSetParameter)(nil)).Elem()
}

func (o GetChangeSetsSetParameterOutput) ToGetChangeSetsSetParameterOutput() GetChangeSetsSetParameterOutput {
	return o
}

func (o GetChangeSetsSetParameterOutput) ToGetChangeSetsSetParameterOutputWithContext(ctx context.Context) GetChangeSetsSetParameterOutput {
	return o
}

// The parameters.
func (o GetChangeSetsSetParameterOutput) ParameterKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSetParameter) string { return v.ParameterKey }).(pulumi.StringOutput)
}

// The parameters.
func (o GetChangeSetsSetParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetChangeSetsSetParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type GetChangeSetsSetParameterArrayOutput struct{ *pulumi.OutputState }

func (GetChangeSetsSetParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetChangeSetsSetParameter)(nil)).Elem()
}

func (o GetChangeSetsSetParameterArrayOutput) ToGetChangeSetsSetParameterArrayOutput() GetChangeSetsSetParameterArrayOutput {
	return o
}

func (o GetChangeSetsSetParameterArrayOutput) ToGetChangeSetsSetParameterArrayOutputWithContext(ctx context.Context) GetChangeSetsSetParameterArrayOutput {
	return o
}

func (o GetChangeSetsSetParameterArrayOutput) Index(i pulumi.IntInput) GetChangeSetsSetParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetChangeSetsSetParameter {
		return vs[0].([]GetChangeSetsSetParameter)[vs[1].(int)]
	}).(GetChangeSetsSetParameterOutput)
}

type GetStackGroupsGroup struct {
	// The name of the RAM administrator role assumed by ROS.
	AdministrationRoleName string `pulumi:"administrationRoleName"`
	// The description of the stack group.
	Description string `pulumi:"description"`
	// The name of the RAM execution role assumed by the administrator role.
	ExecutionRoleName string `pulumi:"executionRoleName"`
	// The ID of the Stack Group.
	Id string `pulumi:"id"`
	// The parameters.
	Parameters []GetStackGroupsGroupParameter `pulumi:"parameters"`
	// The id of Stack Group.
	StackGroupId string `pulumi:"stackGroupId"`
	// The name of the stack group..
	StackGroupName string `pulumi:"stackGroupName"`
	// The status of Stack Group.
	Status string `pulumi:"status"`
	// The structure that contains the template body.
	TemplateBody string `pulumi:"templateBody"`
}

// GetStackGroupsGroupInput is an input type that accepts GetStackGroupsGroupArgs and GetStackGroupsGroupOutput values.
// You can construct a concrete instance of `GetStackGroupsGroupInput` via:
//
//          GetStackGroupsGroupArgs{...}
type GetStackGroupsGroupInput interface {
	pulumi.Input

	ToGetStackGroupsGroupOutput() GetStackGroupsGroupOutput
	ToGetStackGroupsGroupOutputWithContext(context.Context) GetStackGroupsGroupOutput
}

type GetStackGroupsGroupArgs struct {
	// The name of the RAM administrator role assumed by ROS.
	AdministrationRoleName pulumi.StringInput `pulumi:"administrationRoleName"`
	// The description of the stack group.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the RAM execution role assumed by the administrator role.
	ExecutionRoleName pulumi.StringInput `pulumi:"executionRoleName"`
	// The ID of the Stack Group.
	Id pulumi.StringInput `pulumi:"id"`
	// The parameters.
	Parameters GetStackGroupsGroupParameterArrayInput `pulumi:"parameters"`
	// The id of Stack Group.
	StackGroupId pulumi.StringInput `pulumi:"stackGroupId"`
	// The name of the stack group..
	StackGroupName pulumi.StringInput `pulumi:"stackGroupName"`
	// The status of Stack Group.
	Status pulumi.StringInput `pulumi:"status"`
	// The structure that contains the template body.
	TemplateBody pulumi.StringInput `pulumi:"templateBody"`
}

func (GetStackGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackGroupsGroup)(nil)).Elem()
}

func (i GetStackGroupsGroupArgs) ToGetStackGroupsGroupOutput() GetStackGroupsGroupOutput {
	return i.ToGetStackGroupsGroupOutputWithContext(context.Background())
}

func (i GetStackGroupsGroupArgs) ToGetStackGroupsGroupOutputWithContext(ctx context.Context) GetStackGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackGroupsGroupOutput)
}

// GetStackGroupsGroupArrayInput is an input type that accepts GetStackGroupsGroupArray and GetStackGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetStackGroupsGroupArrayInput` via:
//
//          GetStackGroupsGroupArray{ GetStackGroupsGroupArgs{...} }
type GetStackGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetStackGroupsGroupArrayOutput() GetStackGroupsGroupArrayOutput
	ToGetStackGroupsGroupArrayOutputWithContext(context.Context) GetStackGroupsGroupArrayOutput
}

type GetStackGroupsGroupArray []GetStackGroupsGroupInput

func (GetStackGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackGroupsGroup)(nil)).Elem()
}

func (i GetStackGroupsGroupArray) ToGetStackGroupsGroupArrayOutput() GetStackGroupsGroupArrayOutput {
	return i.ToGetStackGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetStackGroupsGroupArray) ToGetStackGroupsGroupArrayOutputWithContext(ctx context.Context) GetStackGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackGroupsGroupArrayOutput)
}

type GetStackGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetStackGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackGroupsGroup)(nil)).Elem()
}

func (o GetStackGroupsGroupOutput) ToGetStackGroupsGroupOutput() GetStackGroupsGroupOutput {
	return o
}

func (o GetStackGroupsGroupOutput) ToGetStackGroupsGroupOutputWithContext(ctx context.Context) GetStackGroupsGroupOutput {
	return o
}

// The name of the RAM administrator role assumed by ROS.
func (o GetStackGroupsGroupOutput) AdministrationRoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroup) string { return v.AdministrationRoleName }).(pulumi.StringOutput)
}

// The description of the stack group.
func (o GetStackGroupsGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroup) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the RAM execution role assumed by the administrator role.
func (o GetStackGroupsGroupOutput) ExecutionRoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroup) string { return v.ExecutionRoleName }).(pulumi.StringOutput)
}

// The ID of the Stack Group.
func (o GetStackGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The parameters.
func (o GetStackGroupsGroupOutput) Parameters() GetStackGroupsGroupParameterArrayOutput {
	return o.ApplyT(func(v GetStackGroupsGroup) []GetStackGroupsGroupParameter { return v.Parameters }).(GetStackGroupsGroupParameterArrayOutput)
}

// The id of Stack Group.
func (o GetStackGroupsGroupOutput) StackGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroup) string { return v.StackGroupId }).(pulumi.StringOutput)
}

// The name of the stack group..
func (o GetStackGroupsGroupOutput) StackGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroup) string { return v.StackGroupName }).(pulumi.StringOutput)
}

// The status of Stack Group.
func (o GetStackGroupsGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroup) string { return v.Status }).(pulumi.StringOutput)
}

// The structure that contains the template body.
func (o GetStackGroupsGroupOutput) TemplateBody() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroup) string { return v.TemplateBody }).(pulumi.StringOutput)
}

type GetStackGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetStackGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackGroupsGroup)(nil)).Elem()
}

func (o GetStackGroupsGroupArrayOutput) ToGetStackGroupsGroupArrayOutput() GetStackGroupsGroupArrayOutput {
	return o
}

func (o GetStackGroupsGroupArrayOutput) ToGetStackGroupsGroupArrayOutputWithContext(ctx context.Context) GetStackGroupsGroupArrayOutput {
	return o
}

func (o GetStackGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetStackGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStackGroupsGroup {
		return vs[0].([]GetStackGroupsGroup)[vs[1].(int)]
	}).(GetStackGroupsGroupOutput)
}

type GetStackGroupsGroupParameter struct {
	// The parameter key.
	ParameterKey string `pulumi:"parameterKey"`
	// The parameter value.
	ParameterValue string `pulumi:"parameterValue"`
}

// GetStackGroupsGroupParameterInput is an input type that accepts GetStackGroupsGroupParameterArgs and GetStackGroupsGroupParameterOutput values.
// You can construct a concrete instance of `GetStackGroupsGroupParameterInput` via:
//
//          GetStackGroupsGroupParameterArgs{...}
type GetStackGroupsGroupParameterInput interface {
	pulumi.Input

	ToGetStackGroupsGroupParameterOutput() GetStackGroupsGroupParameterOutput
	ToGetStackGroupsGroupParameterOutputWithContext(context.Context) GetStackGroupsGroupParameterOutput
}

type GetStackGroupsGroupParameterArgs struct {
	// The parameter key.
	ParameterKey pulumi.StringInput `pulumi:"parameterKey"`
	// The parameter value.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (GetStackGroupsGroupParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackGroupsGroupParameter)(nil)).Elem()
}

func (i GetStackGroupsGroupParameterArgs) ToGetStackGroupsGroupParameterOutput() GetStackGroupsGroupParameterOutput {
	return i.ToGetStackGroupsGroupParameterOutputWithContext(context.Background())
}

func (i GetStackGroupsGroupParameterArgs) ToGetStackGroupsGroupParameterOutputWithContext(ctx context.Context) GetStackGroupsGroupParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackGroupsGroupParameterOutput)
}

// GetStackGroupsGroupParameterArrayInput is an input type that accepts GetStackGroupsGroupParameterArray and GetStackGroupsGroupParameterArrayOutput values.
// You can construct a concrete instance of `GetStackGroupsGroupParameterArrayInput` via:
//
//          GetStackGroupsGroupParameterArray{ GetStackGroupsGroupParameterArgs{...} }
type GetStackGroupsGroupParameterArrayInput interface {
	pulumi.Input

	ToGetStackGroupsGroupParameterArrayOutput() GetStackGroupsGroupParameterArrayOutput
	ToGetStackGroupsGroupParameterArrayOutputWithContext(context.Context) GetStackGroupsGroupParameterArrayOutput
}

type GetStackGroupsGroupParameterArray []GetStackGroupsGroupParameterInput

func (GetStackGroupsGroupParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackGroupsGroupParameter)(nil)).Elem()
}

func (i GetStackGroupsGroupParameterArray) ToGetStackGroupsGroupParameterArrayOutput() GetStackGroupsGroupParameterArrayOutput {
	return i.ToGetStackGroupsGroupParameterArrayOutputWithContext(context.Background())
}

func (i GetStackGroupsGroupParameterArray) ToGetStackGroupsGroupParameterArrayOutputWithContext(ctx context.Context) GetStackGroupsGroupParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStackGroupsGroupParameterArrayOutput)
}

type GetStackGroupsGroupParameterOutput struct{ *pulumi.OutputState }

func (GetStackGroupsGroupParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStackGroupsGroupParameter)(nil)).Elem()
}

func (o GetStackGroupsGroupParameterOutput) ToGetStackGroupsGroupParameterOutput() GetStackGroupsGroupParameterOutput {
	return o
}

func (o GetStackGroupsGroupParameterOutput) ToGetStackGroupsGroupParameterOutputWithContext(ctx context.Context) GetStackGroupsGroupParameterOutput {
	return o
}

// The parameter key.
func (o GetStackGroupsGroupParameterOutput) ParameterKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroupParameter) string { return v.ParameterKey }).(pulumi.StringOutput)
}

// The parameter value.
func (o GetStackGroupsGroupParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetStackGroupsGroupParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type GetStackGroupsGroupParameterArrayOutput struct{ *pulumi.OutputState }

func (GetStackGroupsGroupParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStackGroupsGroupParameter)(nil)).Elem()
}

func (o GetStackGroupsGroupParameterArrayOutput) ToGetStackGroupsGroupParameterArrayOutput() GetStackGroupsGroupParameterArrayOutput {
	return o
}

func (o GetStackGroupsGroupParameterArrayOutput) ToGetStackGroupsGroupParameterArrayOutputWithContext(ctx context.Context) GetStackGroupsGroupParameterArrayOutput {
	return o
}

func (o GetStackGroupsGroupParameterArrayOutput) Index(i pulumi.IntInput) GetStackGroupsGroupParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStackGroupsGroupParameter {
		return vs[0].([]GetStackGroupsGroupParameter)[vs[1].(int)]
	}).(GetStackGroupsGroupParameterOutput)
}

type GetStacksStack struct {
	// Specifies whether to enable deletion protection on the stack.
	DeletionProtection string `pulumi:"deletionProtection"`
	// The Description of the Stack.
	Description string `pulumi:"description"`
	// Specifies whether to disable rollback on stack creation failure..
	DisableRollback bool `pulumi:"disableRollback"`
	// Drift DetectionTime.
	DriftDetectionTime string `pulumi:"driftDetectionTime"`
	// The ID of the Stack.
	Id string `pulumi:"id"`
	// The parameters.
	Parameters []GetStacksStackParameter `pulumi:"parameters"`
	// Parent Stack Id.
	ParentStackId string `pulumi:"parentStackId"`
	// The RamRoleName.
	RamRoleName string `pulumi:"ramRoleName"`
	// Root Stack Id.
	RootStackId string `pulumi:"rootStackId"`
	// Stack DriftStatus.
	StackDriftStatus string `pulumi:"stackDriftStatus"`
	// Stack Id.
	StackId string `pulumi:"stackId"`
	// Stack Name.
	StackName string `pulumi:"stackName"`
	// The structure that contains the stack policy body.
	StackPolicyBody string `pulumi:"stackPolicyBody"`
	// The status of Stack. Valid Values: `CREATE_COMPLETE`, `CREATE_FAILED`, `CREATE_IN_PROGRESS`, `DELETE_COMPLETE`, `DELETE_FAILED`, `DELETE_IN_PROGRESS`, `ROLLBACK_COMPLETE`, `ROLLBACK_FAILED`, `ROLLBACK_IN_PROGRESS`.
	Status string `pulumi:"status"`
	// Status Reason.
	StatusReason string `pulumi:"statusReason"`
	// Query the instance bound to the tag. The format of the incoming value is `json` string, including `TagKey` and `TagValue`. `TagKey` cannot be null, and `TagValue` can be empty. Format example `{"key1":"value1"}`.
	Tags map[string]interface{} `pulumi:"tags"`
	// Template Description.
	TemplateDescription string `pulumi:"templateDescription"`
	// Specifies whether to use the values that were passed last time for the parameters that you do not specify in the current request.
	TimeoutInMinutes int `pulumi:"timeoutInMinutes"`
}

// GetStacksStackInput is an input type that accepts GetStacksStackArgs and GetStacksStackOutput values.
// You can construct a concrete instance of `GetStacksStackInput` via:
//
//          GetStacksStackArgs{...}
type GetStacksStackInput interface {
	pulumi.Input

	ToGetStacksStackOutput() GetStacksStackOutput
	ToGetStacksStackOutputWithContext(context.Context) GetStacksStackOutput
}

type GetStacksStackArgs struct {
	// Specifies whether to enable deletion protection on the stack.
	DeletionProtection pulumi.StringInput `pulumi:"deletionProtection"`
	// The Description of the Stack.
	Description pulumi.StringInput `pulumi:"description"`
	// Specifies whether to disable rollback on stack creation failure..
	DisableRollback pulumi.BoolInput `pulumi:"disableRollback"`
	// Drift DetectionTime.
	DriftDetectionTime pulumi.StringInput `pulumi:"driftDetectionTime"`
	// The ID of the Stack.
	Id pulumi.StringInput `pulumi:"id"`
	// The parameters.
	Parameters GetStacksStackParameterArrayInput `pulumi:"parameters"`
	// Parent Stack Id.
	ParentStackId pulumi.StringInput `pulumi:"parentStackId"`
	// The RamRoleName.
	RamRoleName pulumi.StringInput `pulumi:"ramRoleName"`
	// Root Stack Id.
	RootStackId pulumi.StringInput `pulumi:"rootStackId"`
	// Stack DriftStatus.
	StackDriftStatus pulumi.StringInput `pulumi:"stackDriftStatus"`
	// Stack Id.
	StackId pulumi.StringInput `pulumi:"stackId"`
	// Stack Name.
	StackName pulumi.StringInput `pulumi:"stackName"`
	// The structure that contains the stack policy body.
	StackPolicyBody pulumi.StringInput `pulumi:"stackPolicyBody"`
	// The status of Stack. Valid Values: `CREATE_COMPLETE`, `CREATE_FAILED`, `CREATE_IN_PROGRESS`, `DELETE_COMPLETE`, `DELETE_FAILED`, `DELETE_IN_PROGRESS`, `ROLLBACK_COMPLETE`, `ROLLBACK_FAILED`, `ROLLBACK_IN_PROGRESS`.
	Status pulumi.StringInput `pulumi:"status"`
	// Status Reason.
	StatusReason pulumi.StringInput `pulumi:"statusReason"`
	// Query the instance bound to the tag. The format of the incoming value is `json` string, including `TagKey` and `TagValue`. `TagKey` cannot be null, and `TagValue` can be empty. Format example `{"key1":"value1"}`.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Template Description.
	TemplateDescription pulumi.StringInput `pulumi:"templateDescription"`
	// Specifies whether to use the values that were passed last time for the parameters that you do not specify in the current request.
	TimeoutInMinutes pulumi.IntInput `pulumi:"timeoutInMinutes"`
}

func (GetStacksStackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStacksStack)(nil)).Elem()
}

func (i GetStacksStackArgs) ToGetStacksStackOutput() GetStacksStackOutput {
	return i.ToGetStacksStackOutputWithContext(context.Background())
}

func (i GetStacksStackArgs) ToGetStacksStackOutputWithContext(ctx context.Context) GetStacksStackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStacksStackOutput)
}

// GetStacksStackArrayInput is an input type that accepts GetStacksStackArray and GetStacksStackArrayOutput values.
// You can construct a concrete instance of `GetStacksStackArrayInput` via:
//
//          GetStacksStackArray{ GetStacksStackArgs{...} }
type GetStacksStackArrayInput interface {
	pulumi.Input

	ToGetStacksStackArrayOutput() GetStacksStackArrayOutput
	ToGetStacksStackArrayOutputWithContext(context.Context) GetStacksStackArrayOutput
}

type GetStacksStackArray []GetStacksStackInput

func (GetStacksStackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStacksStack)(nil)).Elem()
}

func (i GetStacksStackArray) ToGetStacksStackArrayOutput() GetStacksStackArrayOutput {
	return i.ToGetStacksStackArrayOutputWithContext(context.Background())
}

func (i GetStacksStackArray) ToGetStacksStackArrayOutputWithContext(ctx context.Context) GetStacksStackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStacksStackArrayOutput)
}

type GetStacksStackOutput struct{ *pulumi.OutputState }

func (GetStacksStackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStacksStack)(nil)).Elem()
}

func (o GetStacksStackOutput) ToGetStacksStackOutput() GetStacksStackOutput {
	return o
}

func (o GetStacksStackOutput) ToGetStacksStackOutputWithContext(ctx context.Context) GetStacksStackOutput {
	return o
}

// Specifies whether to enable deletion protection on the stack.
func (o GetStacksStackOutput) DeletionProtection() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.DeletionProtection }).(pulumi.StringOutput)
}

// The Description of the Stack.
func (o GetStacksStackOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.Description }).(pulumi.StringOutput)
}

// Specifies whether to disable rollback on stack creation failure..
func (o GetStacksStackOutput) DisableRollback() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStacksStack) bool { return v.DisableRollback }).(pulumi.BoolOutput)
}

// Drift DetectionTime.
func (o GetStacksStackOutput) DriftDetectionTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.DriftDetectionTime }).(pulumi.StringOutput)
}

// The ID of the Stack.
func (o GetStacksStackOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.Id }).(pulumi.StringOutput)
}

// The parameters.
func (o GetStacksStackOutput) Parameters() GetStacksStackParameterArrayOutput {
	return o.ApplyT(func(v GetStacksStack) []GetStacksStackParameter { return v.Parameters }).(GetStacksStackParameterArrayOutput)
}

// Parent Stack Id.
func (o GetStacksStackOutput) ParentStackId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.ParentStackId }).(pulumi.StringOutput)
}

// The RamRoleName.
func (o GetStacksStackOutput) RamRoleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.RamRoleName }).(pulumi.StringOutput)
}

// Root Stack Id.
func (o GetStacksStackOutput) RootStackId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.RootStackId }).(pulumi.StringOutput)
}

// Stack DriftStatus.
func (o GetStacksStackOutput) StackDriftStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.StackDriftStatus }).(pulumi.StringOutput)
}

// Stack Id.
func (o GetStacksStackOutput) StackId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.StackId }).(pulumi.StringOutput)
}

// Stack Name.
func (o GetStacksStackOutput) StackName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.StackName }).(pulumi.StringOutput)
}

// The structure that contains the stack policy body.
func (o GetStacksStackOutput) StackPolicyBody() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.StackPolicyBody }).(pulumi.StringOutput)
}

// The status of Stack. Valid Values: `CREATE_COMPLETE`, `CREATE_FAILED`, `CREATE_IN_PROGRESS`, `DELETE_COMPLETE`, `DELETE_FAILED`, `DELETE_IN_PROGRESS`, `ROLLBACK_COMPLETE`, `ROLLBACK_FAILED`, `ROLLBACK_IN_PROGRESS`.
func (o GetStacksStackOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.Status }).(pulumi.StringOutput)
}

// Status Reason.
func (o GetStacksStackOutput) StatusReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.StatusReason }).(pulumi.StringOutput)
}

// Query the instance bound to the tag. The format of the incoming value is `json` string, including `TagKey` and `TagValue`. `TagKey` cannot be null, and `TagValue` can be empty. Format example `{"key1":"value1"}`.
func (o GetStacksStackOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetStacksStack) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// Template Description.
func (o GetStacksStackOutput) TemplateDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStack) string { return v.TemplateDescription }).(pulumi.StringOutput)
}

// Specifies whether to use the values that were passed last time for the parameters that you do not specify in the current request.
func (o GetStacksStackOutput) TimeoutInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetStacksStack) int { return v.TimeoutInMinutes }).(pulumi.IntOutput)
}

type GetStacksStackArrayOutput struct{ *pulumi.OutputState }

func (GetStacksStackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStacksStack)(nil)).Elem()
}

func (o GetStacksStackArrayOutput) ToGetStacksStackArrayOutput() GetStacksStackArrayOutput {
	return o
}

func (o GetStacksStackArrayOutput) ToGetStacksStackArrayOutputWithContext(ctx context.Context) GetStacksStackArrayOutput {
	return o
}

func (o GetStacksStackArrayOutput) Index(i pulumi.IntInput) GetStacksStackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStacksStack {
		return vs[0].([]GetStacksStack)[vs[1].(int)]
	}).(GetStacksStackOutput)
}

type GetStacksStackParameter struct {
	// The key of parameters.
	ParameterKey string `pulumi:"parameterKey"`
	// The value of parameters.
	ParameterValue string `pulumi:"parameterValue"`
}

// GetStacksStackParameterInput is an input type that accepts GetStacksStackParameterArgs and GetStacksStackParameterOutput values.
// You can construct a concrete instance of `GetStacksStackParameterInput` via:
//
//          GetStacksStackParameterArgs{...}
type GetStacksStackParameterInput interface {
	pulumi.Input

	ToGetStacksStackParameterOutput() GetStacksStackParameterOutput
	ToGetStacksStackParameterOutputWithContext(context.Context) GetStacksStackParameterOutput
}

type GetStacksStackParameterArgs struct {
	// The key of parameters.
	ParameterKey pulumi.StringInput `pulumi:"parameterKey"`
	// The value of parameters.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (GetStacksStackParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStacksStackParameter)(nil)).Elem()
}

func (i GetStacksStackParameterArgs) ToGetStacksStackParameterOutput() GetStacksStackParameterOutput {
	return i.ToGetStacksStackParameterOutputWithContext(context.Background())
}

func (i GetStacksStackParameterArgs) ToGetStacksStackParameterOutputWithContext(ctx context.Context) GetStacksStackParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStacksStackParameterOutput)
}

// GetStacksStackParameterArrayInput is an input type that accepts GetStacksStackParameterArray and GetStacksStackParameterArrayOutput values.
// You can construct a concrete instance of `GetStacksStackParameterArrayInput` via:
//
//          GetStacksStackParameterArray{ GetStacksStackParameterArgs{...} }
type GetStacksStackParameterArrayInput interface {
	pulumi.Input

	ToGetStacksStackParameterArrayOutput() GetStacksStackParameterArrayOutput
	ToGetStacksStackParameterArrayOutputWithContext(context.Context) GetStacksStackParameterArrayOutput
}

type GetStacksStackParameterArray []GetStacksStackParameterInput

func (GetStacksStackParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStacksStackParameter)(nil)).Elem()
}

func (i GetStacksStackParameterArray) ToGetStacksStackParameterArrayOutput() GetStacksStackParameterArrayOutput {
	return i.ToGetStacksStackParameterArrayOutputWithContext(context.Background())
}

func (i GetStacksStackParameterArray) ToGetStacksStackParameterArrayOutputWithContext(ctx context.Context) GetStacksStackParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStacksStackParameterArrayOutput)
}

type GetStacksStackParameterOutput struct{ *pulumi.OutputState }

func (GetStacksStackParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStacksStackParameter)(nil)).Elem()
}

func (o GetStacksStackParameterOutput) ToGetStacksStackParameterOutput() GetStacksStackParameterOutput {
	return o
}

func (o GetStacksStackParameterOutput) ToGetStacksStackParameterOutputWithContext(ctx context.Context) GetStacksStackParameterOutput {
	return o
}

// The key of parameters.
func (o GetStacksStackParameterOutput) ParameterKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStackParameter) string { return v.ParameterKey }).(pulumi.StringOutput)
}

// The value of parameters.
func (o GetStacksStackParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetStacksStackParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type GetStacksStackParameterArrayOutput struct{ *pulumi.OutputState }

func (GetStacksStackParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStacksStackParameter)(nil)).Elem()
}

func (o GetStacksStackParameterArrayOutput) ToGetStacksStackParameterArrayOutput() GetStacksStackParameterArrayOutput {
	return o
}

func (o GetStacksStackParameterArrayOutput) ToGetStacksStackParameterArrayOutputWithContext(ctx context.Context) GetStacksStackParameterArrayOutput {
	return o
}

func (o GetStacksStackParameterArrayOutput) Index(i pulumi.IntInput) GetStacksStackParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStacksStackParameter {
		return vs[0].([]GetStacksStackParameter)[vs[1].(int)]
	}).(GetStacksStackParameterOutput)
}

type GetTemplatesTemplate struct {
	// The ID of the change set.
	ChangeSetId string `pulumi:"changeSetId"`
	// The description of the template. The description can be up to 256 characters in length.
	Description string `pulumi:"description"`
	// The ID of the Template.
	Id string `pulumi:"id"`
	// Share Type.
	ShareType string `pulumi:"shareType"`
	// The name of the stack group. The name must be unique in a region.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.
	StackGroupName string `pulumi:"stackGroupName"`
	// The ID of the stack.
	StackId string `pulumi:"stackId"`
	// Tags.
	Tags map[string]interface{} `pulumi:"tags"`
	// The structure that contains the template body. The template body must be 1 to 524,288 bytes in length.  If the length of the template body is longer than required, we recommend that you add parameters to the HTTP POST request body to avoid request failures due to excessive length of URLs.  You must specify one of the TemplateBody and TemplateURL parameters, but you cannot specify both of them.
	TemplateBody string `pulumi:"templateBody"`
	// The ID of the template.
	TemplateId string `pulumi:"templateId"`
	// The name of the template.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.
	TemplateName string `pulumi:"templateName"`
	// Template Version.
	TemplateVersion string `pulumi:"templateVersion"`
}

// GetTemplatesTemplateInput is an input type that accepts GetTemplatesTemplateArgs and GetTemplatesTemplateOutput values.
// You can construct a concrete instance of `GetTemplatesTemplateInput` via:
//
//          GetTemplatesTemplateArgs{...}
type GetTemplatesTemplateInput interface {
	pulumi.Input

	ToGetTemplatesTemplateOutput() GetTemplatesTemplateOutput
	ToGetTemplatesTemplateOutputWithContext(context.Context) GetTemplatesTemplateOutput
}

type GetTemplatesTemplateArgs struct {
	// The ID of the change set.
	ChangeSetId pulumi.StringInput `pulumi:"changeSetId"`
	// The description of the template. The description can be up to 256 characters in length.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Template.
	Id pulumi.StringInput `pulumi:"id"`
	// Share Type.
	ShareType pulumi.StringInput `pulumi:"shareType"`
	// The name of the stack group. The name must be unique in a region.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.
	StackGroupName pulumi.StringInput `pulumi:"stackGroupName"`
	// The ID of the stack.
	StackId pulumi.StringInput `pulumi:"stackId"`
	// Tags.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The structure that contains the template body. The template body must be 1 to 524,288 bytes in length.  If the length of the template body is longer than required, we recommend that you add parameters to the HTTP POST request body to avoid request failures due to excessive length of URLs.  You must specify one of the TemplateBody and TemplateURL parameters, but you cannot specify both of them.
	TemplateBody pulumi.StringInput `pulumi:"templateBody"`
	// The ID of the template.
	TemplateId pulumi.StringInput `pulumi:"templateId"`
	// The name of the template.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.
	TemplateName pulumi.StringInput `pulumi:"templateName"`
	// Template Version.
	TemplateVersion pulumi.StringInput `pulumi:"templateVersion"`
}

func (GetTemplatesTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplatesTemplate)(nil)).Elem()
}

func (i GetTemplatesTemplateArgs) ToGetTemplatesTemplateOutput() GetTemplatesTemplateOutput {
	return i.ToGetTemplatesTemplateOutputWithContext(context.Background())
}

func (i GetTemplatesTemplateArgs) ToGetTemplatesTemplateOutputWithContext(ctx context.Context) GetTemplatesTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplatesTemplateOutput)
}

// GetTemplatesTemplateArrayInput is an input type that accepts GetTemplatesTemplateArray and GetTemplatesTemplateArrayOutput values.
// You can construct a concrete instance of `GetTemplatesTemplateArrayInput` via:
//
//          GetTemplatesTemplateArray{ GetTemplatesTemplateArgs{...} }
type GetTemplatesTemplateArrayInput interface {
	pulumi.Input

	ToGetTemplatesTemplateArrayOutput() GetTemplatesTemplateArrayOutput
	ToGetTemplatesTemplateArrayOutputWithContext(context.Context) GetTemplatesTemplateArrayOutput
}

type GetTemplatesTemplateArray []GetTemplatesTemplateInput

func (GetTemplatesTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplatesTemplate)(nil)).Elem()
}

func (i GetTemplatesTemplateArray) ToGetTemplatesTemplateArrayOutput() GetTemplatesTemplateArrayOutput {
	return i.ToGetTemplatesTemplateArrayOutputWithContext(context.Background())
}

func (i GetTemplatesTemplateArray) ToGetTemplatesTemplateArrayOutputWithContext(ctx context.Context) GetTemplatesTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTemplatesTemplateArrayOutput)
}

type GetTemplatesTemplateOutput struct{ *pulumi.OutputState }

func (GetTemplatesTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTemplatesTemplate)(nil)).Elem()
}

func (o GetTemplatesTemplateOutput) ToGetTemplatesTemplateOutput() GetTemplatesTemplateOutput {
	return o
}

func (o GetTemplatesTemplateOutput) ToGetTemplatesTemplateOutputWithContext(ctx context.Context) GetTemplatesTemplateOutput {
	return o
}

// The ID of the change set.
func (o GetTemplatesTemplateOutput) ChangeSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.ChangeSetId }).(pulumi.StringOutput)
}

// The description of the template. The description can be up to 256 characters in length.
func (o GetTemplatesTemplateOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Template.
func (o GetTemplatesTemplateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.Id }).(pulumi.StringOutput)
}

// Share Type.
func (o GetTemplatesTemplateOutput) ShareType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.ShareType }).(pulumi.StringOutput)
}

// The name of the stack group. The name must be unique in a region.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.
func (o GetTemplatesTemplateOutput) StackGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.StackGroupName }).(pulumi.StringOutput)
}

// The ID of the stack.
func (o GetTemplatesTemplateOutput) StackId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.StackId }).(pulumi.StringOutput)
}

// Tags.
func (o GetTemplatesTemplateOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// The structure that contains the template body. The template body must be 1 to 524,288 bytes in length.  If the length of the template body is longer than required, we recommend that you add parameters to the HTTP POST request body to avoid request failures due to excessive length of URLs.  You must specify one of the TemplateBody and TemplateURL parameters, but you cannot specify both of them.
func (o GetTemplatesTemplateOutput) TemplateBody() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.TemplateBody }).(pulumi.StringOutput)
}

// The ID of the template.
func (o GetTemplatesTemplateOutput) TemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.TemplateId }).(pulumi.StringOutput)
}

// The name of the template.  The name can be up to 255 characters in length and can contain digits, letters, hyphens (-), and underscores (_). It must start with a digit or letter.
func (o GetTemplatesTemplateOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.TemplateName }).(pulumi.StringOutput)
}

// Template Version.
func (o GetTemplatesTemplateOutput) TemplateVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetTemplatesTemplate) string { return v.TemplateVersion }).(pulumi.StringOutput)
}

type GetTemplatesTemplateArrayOutput struct{ *pulumi.OutputState }

func (GetTemplatesTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTemplatesTemplate)(nil)).Elem()
}

func (o GetTemplatesTemplateArrayOutput) ToGetTemplatesTemplateArrayOutput() GetTemplatesTemplateArrayOutput {
	return o
}

func (o GetTemplatesTemplateArrayOutput) ToGetTemplatesTemplateArrayOutputWithContext(ctx context.Context) GetTemplatesTemplateArrayOutput {
	return o
}

func (o GetTemplatesTemplateArrayOutput) Index(i pulumi.IntInput) GetTemplatesTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTemplatesTemplate {
		return vs[0].([]GetTemplatesTemplate)[vs[1].(int)]
	}).(GetTemplatesTemplateOutput)
}

func init() {
	pulumi.RegisterOutputType(ChangeSetParameterOutput{})
	pulumi.RegisterOutputType(ChangeSetParameterArrayOutput{})
	pulumi.RegisterOutputType(StackGroupParameterOutput{})
	pulumi.RegisterOutputType(StackGroupParameterArrayOutput{})
	pulumi.RegisterOutputType(StackParameterOutput{})
	pulumi.RegisterOutputType(StackParameterArrayOutput{})
	pulumi.RegisterOutputType(GetChangeSetsSetOutput{})
	pulumi.RegisterOutputType(GetChangeSetsSetArrayOutput{})
	pulumi.RegisterOutputType(GetChangeSetsSetParameterOutput{})
	pulumi.RegisterOutputType(GetChangeSetsSetParameterArrayOutput{})
	pulumi.RegisterOutputType(GetStackGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetStackGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetStackGroupsGroupParameterOutput{})
	pulumi.RegisterOutputType(GetStackGroupsGroupParameterArrayOutput{})
	pulumi.RegisterOutputType(GetStacksStackOutput{})
	pulumi.RegisterOutputType(GetStacksStackArrayOutput{})
	pulumi.RegisterOutputType(GetStacksStackParameterOutput{})
	pulumi.RegisterOutputType(GetStacksStackParameterArrayOutput{})
	pulumi.RegisterOutputType(GetTemplatesTemplateOutput{})
	pulumi.RegisterOutputType(GetTemplatesTemplateArrayOutput{})
}
