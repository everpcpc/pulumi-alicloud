// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package actiontrail

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a new resource to manage [Action Trail](https://www.alibabacloud.com/help/doc-detail/28804.htm).
//
// > **NOTE:** Available in 1.35.0+
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/actiontrail.html.markdown.
type Trail struct {
	pulumi.CustomResourceState

	// Indicates whether the event is a read or a write event. Valid values: Read, Write, and All. Default value: Write.
	EventRw pulumi.StringPtrOutput `pulumi:"eventRw"`
	// The name of the trail to be created, which must be unique for an account.
	Name pulumi.StringOutput `pulumi:"name"`
	// The OSS bucket to which the trail delivers logs. Ensure that this is an existing OSS bucket.
	OssBucketName pulumi.StringOutput `pulumi:"ossBucketName"`
	// The prefix of the specified OSS bucket name. This parameter can be left empty.
	OssKeyPrefix pulumi.StringPtrOutput `pulumi:"ossKeyPrefix"`
	// The RAM role in ActionTrail permitted by the user.
	RoleName pulumi.StringOutput `pulumi:"roleName"`
	// The unique ARN of the Log Service project.
	SlsProjectArn pulumi.StringPtrOutput `pulumi:"slsProjectArn"`
	// The unique ARN of the Log Service role.
	SlsWriteRoleArn pulumi.StringPtrOutput `pulumi:"slsWriteRoleArn"`
}

// NewTrail registers a new resource with the given unique name, arguments, and options.
func NewTrail(ctx *pulumi.Context,
	name string, args *TrailArgs, opts ...pulumi.ResourceOption) (*Trail, error) {
	if args == nil || args.OssBucketName == nil {
		return nil, errors.New("missing required argument 'OssBucketName'")
	}
	if args == nil || args.RoleName == nil {
		return nil, errors.New("missing required argument 'RoleName'")
	}
	if args == nil {
		args = &TrailArgs{}
	}
	var resource Trail
	err := ctx.RegisterResource("alicloud:actiontrail/trail:Trail", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTrail gets an existing Trail resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTrail(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TrailState, opts ...pulumi.ResourceOption) (*Trail, error) {
	var resource Trail
	err := ctx.ReadResource("alicloud:actiontrail/trail:Trail", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Trail resources.
type trailState struct {
	// Indicates whether the event is a read or a write event. Valid values: Read, Write, and All. Default value: Write.
	EventRw *string `pulumi:"eventRw"`
	// The name of the trail to be created, which must be unique for an account.
	Name *string `pulumi:"name"`
	// The OSS bucket to which the trail delivers logs. Ensure that this is an existing OSS bucket.
	OssBucketName *string `pulumi:"ossBucketName"`
	// The prefix of the specified OSS bucket name. This parameter can be left empty.
	OssKeyPrefix *string `pulumi:"ossKeyPrefix"`
	// The RAM role in ActionTrail permitted by the user.
	RoleName *string `pulumi:"roleName"`
	// The unique ARN of the Log Service project.
	SlsProjectArn *string `pulumi:"slsProjectArn"`
	// The unique ARN of the Log Service role.
	SlsWriteRoleArn *string `pulumi:"slsWriteRoleArn"`
}

type TrailState struct {
	// Indicates whether the event is a read or a write event. Valid values: Read, Write, and All. Default value: Write.
	EventRw pulumi.StringPtrInput
	// The name of the trail to be created, which must be unique for an account.
	Name pulumi.StringPtrInput
	// The OSS bucket to which the trail delivers logs. Ensure that this is an existing OSS bucket.
	OssBucketName pulumi.StringPtrInput
	// The prefix of the specified OSS bucket name. This parameter can be left empty.
	OssKeyPrefix pulumi.StringPtrInput
	// The RAM role in ActionTrail permitted by the user.
	RoleName pulumi.StringPtrInput
	// The unique ARN of the Log Service project.
	SlsProjectArn pulumi.StringPtrInput
	// The unique ARN of the Log Service role.
	SlsWriteRoleArn pulumi.StringPtrInput
}

func (TrailState) ElementType() reflect.Type {
	return reflect.TypeOf((*trailState)(nil)).Elem()
}

type trailArgs struct {
	// Indicates whether the event is a read or a write event. Valid values: Read, Write, and All. Default value: Write.
	EventRw *string `pulumi:"eventRw"`
	// The name of the trail to be created, which must be unique for an account.
	Name *string `pulumi:"name"`
	// The OSS bucket to which the trail delivers logs. Ensure that this is an existing OSS bucket.
	OssBucketName string `pulumi:"ossBucketName"`
	// The prefix of the specified OSS bucket name. This parameter can be left empty.
	OssKeyPrefix *string `pulumi:"ossKeyPrefix"`
	// The RAM role in ActionTrail permitted by the user.
	RoleName string `pulumi:"roleName"`
	// The unique ARN of the Log Service project.
	SlsProjectArn *string `pulumi:"slsProjectArn"`
	// The unique ARN of the Log Service role.
	SlsWriteRoleArn *string `pulumi:"slsWriteRoleArn"`
}

// The set of arguments for constructing a Trail resource.
type TrailArgs struct {
	// Indicates whether the event is a read or a write event. Valid values: Read, Write, and All. Default value: Write.
	EventRw pulumi.StringPtrInput
	// The name of the trail to be created, which must be unique for an account.
	Name pulumi.StringPtrInput
	// The OSS bucket to which the trail delivers logs. Ensure that this is an existing OSS bucket.
	OssBucketName pulumi.StringInput
	// The prefix of the specified OSS bucket name. This parameter can be left empty.
	OssKeyPrefix pulumi.StringPtrInput
	// The RAM role in ActionTrail permitted by the user.
	RoleName pulumi.StringInput
	// The unique ARN of the Log Service project.
	SlsProjectArn pulumi.StringPtrInput
	// The unique ARN of the Log Service role.
	SlsWriteRoleArn pulumi.StringPtrInput
}

func (TrailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*trailArgs)(nil)).Elem()
}
