// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package polardb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ClusterParameter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

type ClusterParameterInput interface {
	pulumi.Input

	ToClusterParameterOutput() ClusterParameterOutput
	ToClusterParameterOutputWithContext(context.Context) ClusterParameterOutput
}

type ClusterParameterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterParameter)(nil)).Elem()
}

func (i ClusterParameterArgs) ToClusterParameterOutput() ClusterParameterOutput {
	return i.ToClusterParameterOutputWithContext(context.Background())
}

func (i ClusterParameterArgs) ToClusterParameterOutputWithContext(ctx context.Context) ClusterParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterParameterOutput)
}

type ClusterParameterArrayInput interface {
	pulumi.Input

	ToClusterParameterArrayOutput() ClusterParameterArrayOutput
	ToClusterParameterArrayOutputWithContext(context.Context) ClusterParameterArrayOutput
}

type ClusterParameterArray []ClusterParameterInput

func (ClusterParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterParameter)(nil)).Elem()
}

func (i ClusterParameterArray) ToClusterParameterArrayOutput() ClusterParameterArrayOutput {
	return i.ToClusterParameterArrayOutputWithContext(context.Background())
}

func (i ClusterParameterArray) ToClusterParameterArrayOutputWithContext(ctx context.Context) ClusterParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterParameterArrayOutput)
}

type ClusterParameterOutput struct{ *pulumi.OutputState }

func (ClusterParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterParameter)(nil)).Elem()
}

func (o ClusterParameterOutput) ToClusterParameterOutput() ClusterParameterOutput {
	return o
}

func (o ClusterParameterOutput) ToClusterParameterOutputWithContext(ctx context.Context) ClusterParameterOutput {
	return o
}

func (o ClusterParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o ClusterParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterParameter) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterParameterArrayOutput struct{ *pulumi.OutputState }

func (ClusterParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterParameter)(nil)).Elem()
}

func (o ClusterParameterArrayOutput) ToClusterParameterArrayOutput() ClusterParameterArrayOutput {
	return o
}

func (o ClusterParameterArrayOutput) ToClusterParameterArrayOutputWithContext(ctx context.Context) ClusterParameterArrayOutput {
	return o
}

func (o ClusterParameterArrayOutput) Index(i pulumi.IntInput) ClusterParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterParameter {
		return vs[0].([]ClusterParameter)[vs[1].(int)]
	}).(ClusterParameterOutput)
}

type GetAccountsAccount struct {
	// Account description.
	AccountDescription string `pulumi:"accountDescription"`
	// Account lock state, Valid values are `Lock`, `UnLock`.
	AccountLockState string `pulumi:"accountLockState"`
	// Account name.
	AccountName string `pulumi:"accountName"`
	// Cluster address type.`Cluster`: the default address of the Cluster.`Primary`: Primary address.`Custom`: Custom cluster addresses.
	AccountStatus string `pulumi:"accountStatus"`
	// Account type, Valid values are `Normal`, `Super`.
	AccountType string `pulumi:"accountType"`
	// A list of database privilege. Each element contains the following attributes.
	DatabasePrivileges []GetAccountsAccountDatabasePrivilege `pulumi:"databasePrivileges"`
}

type GetAccountsAccountInput interface {
	pulumi.Input

	ToGetAccountsAccountOutput() GetAccountsAccountOutput
	ToGetAccountsAccountOutputWithContext(context.Context) GetAccountsAccountOutput
}

type GetAccountsAccountArgs struct {
	// Account description.
	AccountDescription pulumi.StringInput `pulumi:"accountDescription"`
	// Account lock state, Valid values are `Lock`, `UnLock`.
	AccountLockState pulumi.StringInput `pulumi:"accountLockState"`
	// Account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Cluster address type.`Cluster`: the default address of the Cluster.`Primary`: Primary address.`Custom`: Custom cluster addresses.
	AccountStatus pulumi.StringInput `pulumi:"accountStatus"`
	// Account type, Valid values are `Normal`, `Super`.
	AccountType pulumi.StringInput `pulumi:"accountType"`
	// A list of database privilege. Each element contains the following attributes.
	DatabasePrivileges GetAccountsAccountDatabasePrivilegeArrayInput `pulumi:"databasePrivileges"`
}

func (GetAccountsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccount)(nil)).Elem()
}

func (i GetAccountsAccountArgs) ToGetAccountsAccountOutput() GetAccountsAccountOutput {
	return i.ToGetAccountsAccountOutputWithContext(context.Background())
}

func (i GetAccountsAccountArgs) ToGetAccountsAccountOutputWithContext(ctx context.Context) GetAccountsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountOutput)
}

type GetAccountsAccountArrayInput interface {
	pulumi.Input

	ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput
	ToGetAccountsAccountArrayOutputWithContext(context.Context) GetAccountsAccountArrayOutput
}

type GetAccountsAccountArray []GetAccountsAccountInput

func (GetAccountsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccount)(nil)).Elem()
}

func (i GetAccountsAccountArray) ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput {
	return i.ToGetAccountsAccountArrayOutputWithContext(context.Background())
}

func (i GetAccountsAccountArray) ToGetAccountsAccountArrayOutputWithContext(ctx context.Context) GetAccountsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountArrayOutput)
}

type GetAccountsAccountOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccount)(nil)).Elem()
}

func (o GetAccountsAccountOutput) ToGetAccountsAccountOutput() GetAccountsAccountOutput {
	return o
}

func (o GetAccountsAccountOutput) ToGetAccountsAccountOutputWithContext(ctx context.Context) GetAccountsAccountOutput {
	return o
}

// Account description.
func (o GetAccountsAccountOutput) AccountDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.AccountDescription }).(pulumi.StringOutput)
}

// Account lock state, Valid values are `Lock`, `UnLock`.
func (o GetAccountsAccountOutput) AccountLockState() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.AccountLockState }).(pulumi.StringOutput)
}

// Account name.
func (o GetAccountsAccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.AccountName }).(pulumi.StringOutput)
}

// Cluster address type.`Cluster`: the default address of the Cluster.`Primary`: Primary address.`Custom`: Custom cluster addresses.
func (o GetAccountsAccountOutput) AccountStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.AccountStatus }).(pulumi.StringOutput)
}

// Account type, Valid values are `Normal`, `Super`.
func (o GetAccountsAccountOutput) AccountType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccount) string { return v.AccountType }).(pulumi.StringOutput)
}

// A list of database privilege. Each element contains the following attributes.
func (o GetAccountsAccountOutput) DatabasePrivileges() GetAccountsAccountDatabasePrivilegeArrayOutput {
	return o.ApplyT(func(v GetAccountsAccount) []GetAccountsAccountDatabasePrivilege { return v.DatabasePrivileges }).(GetAccountsAccountDatabasePrivilegeArrayOutput)
}

type GetAccountsAccountArrayOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccount)(nil)).Elem()
}

func (o GetAccountsAccountArrayOutput) ToGetAccountsAccountArrayOutput() GetAccountsAccountArrayOutput {
	return o
}

func (o GetAccountsAccountArrayOutput) ToGetAccountsAccountArrayOutputWithContext(ctx context.Context) GetAccountsAccountArrayOutput {
	return o
}

func (o GetAccountsAccountArrayOutput) Index(i pulumi.IntInput) GetAccountsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountsAccount {
		return vs[0].([]GetAccountsAccount)[vs[1].(int)]
	}).(GetAccountsAccountOutput)
}

type GetAccountsAccountDatabasePrivilege struct {
	// Account privilege of database
	AccountPrivilege string `pulumi:"accountPrivilege"`
	// The account owned database name
	DbName string `pulumi:"dbName"`
}

type GetAccountsAccountDatabasePrivilegeInput interface {
	pulumi.Input

	ToGetAccountsAccountDatabasePrivilegeOutput() GetAccountsAccountDatabasePrivilegeOutput
	ToGetAccountsAccountDatabasePrivilegeOutputWithContext(context.Context) GetAccountsAccountDatabasePrivilegeOutput
}

type GetAccountsAccountDatabasePrivilegeArgs struct {
	// Account privilege of database
	AccountPrivilege pulumi.StringInput `pulumi:"accountPrivilege"`
	// The account owned database name
	DbName pulumi.StringInput `pulumi:"dbName"`
}

func (GetAccountsAccountDatabasePrivilegeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccountDatabasePrivilege)(nil)).Elem()
}

func (i GetAccountsAccountDatabasePrivilegeArgs) ToGetAccountsAccountDatabasePrivilegeOutput() GetAccountsAccountDatabasePrivilegeOutput {
	return i.ToGetAccountsAccountDatabasePrivilegeOutputWithContext(context.Background())
}

func (i GetAccountsAccountDatabasePrivilegeArgs) ToGetAccountsAccountDatabasePrivilegeOutputWithContext(ctx context.Context) GetAccountsAccountDatabasePrivilegeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountDatabasePrivilegeOutput)
}

type GetAccountsAccountDatabasePrivilegeArrayInput interface {
	pulumi.Input

	ToGetAccountsAccountDatabasePrivilegeArrayOutput() GetAccountsAccountDatabasePrivilegeArrayOutput
	ToGetAccountsAccountDatabasePrivilegeArrayOutputWithContext(context.Context) GetAccountsAccountDatabasePrivilegeArrayOutput
}

type GetAccountsAccountDatabasePrivilegeArray []GetAccountsAccountDatabasePrivilegeInput

func (GetAccountsAccountDatabasePrivilegeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccountDatabasePrivilege)(nil)).Elem()
}

func (i GetAccountsAccountDatabasePrivilegeArray) ToGetAccountsAccountDatabasePrivilegeArrayOutput() GetAccountsAccountDatabasePrivilegeArrayOutput {
	return i.ToGetAccountsAccountDatabasePrivilegeArrayOutputWithContext(context.Background())
}

func (i GetAccountsAccountDatabasePrivilegeArray) ToGetAccountsAccountDatabasePrivilegeArrayOutputWithContext(ctx context.Context) GetAccountsAccountDatabasePrivilegeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccountsAccountDatabasePrivilegeArrayOutput)
}

type GetAccountsAccountDatabasePrivilegeOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountDatabasePrivilegeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountsAccountDatabasePrivilege)(nil)).Elem()
}

func (o GetAccountsAccountDatabasePrivilegeOutput) ToGetAccountsAccountDatabasePrivilegeOutput() GetAccountsAccountDatabasePrivilegeOutput {
	return o
}

func (o GetAccountsAccountDatabasePrivilegeOutput) ToGetAccountsAccountDatabasePrivilegeOutputWithContext(ctx context.Context) GetAccountsAccountDatabasePrivilegeOutput {
	return o
}

// Account privilege of database
func (o GetAccountsAccountDatabasePrivilegeOutput) AccountPrivilege() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccountDatabasePrivilege) string { return v.AccountPrivilege }).(pulumi.StringOutput)
}

// The account owned database name
func (o GetAccountsAccountDatabasePrivilegeOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountsAccountDatabasePrivilege) string { return v.DbName }).(pulumi.StringOutput)
}

type GetAccountsAccountDatabasePrivilegeArrayOutput struct{ *pulumi.OutputState }

func (GetAccountsAccountDatabasePrivilegeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccountsAccountDatabasePrivilege)(nil)).Elem()
}

func (o GetAccountsAccountDatabasePrivilegeArrayOutput) ToGetAccountsAccountDatabasePrivilegeArrayOutput() GetAccountsAccountDatabasePrivilegeArrayOutput {
	return o
}

func (o GetAccountsAccountDatabasePrivilegeArrayOutput) ToGetAccountsAccountDatabasePrivilegeArrayOutputWithContext(ctx context.Context) GetAccountsAccountDatabasePrivilegeArrayOutput {
	return o
}

func (o GetAccountsAccountDatabasePrivilegeArrayOutput) Index(i pulumi.IntInput) GetAccountsAccountDatabasePrivilegeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccountsAccountDatabasePrivilege {
		return vs[0].([]GetAccountsAccountDatabasePrivilege)[vs[1].(int)]
	}).(GetAccountsAccountDatabasePrivilegeOutput)
}

type GetClustersCluster struct {
	// Billing method. Value options: `PostPaid` for Pay-As-You-Go and `PrePaid` for subscription.
	ChargeType string `pulumi:"chargeType"`
	// The createTime of the db_nodes.
	CreateTime string `pulumi:"createTime"`
	// The dbNodeClass of the db_nodes.
	DbNodeClass string `pulumi:"dbNodeClass"`
	// The DBNodeNumber of the PolarDB cluster.
	DbNodeNumber int `pulumi:"dbNodeNumber"`
	// The DBNodes of the PolarDB cluster.
	DbNodes []GetClustersClusterDbNode `pulumi:"dbNodes"`
	// Database type. Options are `MySQL`, `Oracle` and `PostgreSQL`. If no value is specified, all types are returned.
	DbType string `pulumi:"dbType"`
	// The DBVersion of the PolarDB cluster.
	DbVersion string `pulumi:"dbVersion"`
	// The DeleteLock of the PolarDB cluster.
	DeleteLock int `pulumi:"deleteLock"`
	// The description of the PolarDB cluster.
	Description string `pulumi:"description"`
	// Database type. Options are `MySQL`, `Oracle` and `PostgreSQL`. If no value is specified, all types are returned.
	Engine string `pulumi:"engine"`
	// Expiration time. Pay-As-You-Go clusters never expire.
	ExpireTime string `pulumi:"expireTime"`
	// The expired of the PolarDB cluster.
	Expired string `pulumi:"expired"`
	// The ID of the PolarDB cluster.
	Id string `pulumi:"id"`
	// The LockMode of the PolarDB cluster.
	LockMode string `pulumi:"lockMode"`
	// The DBClusterNetworkType of the PolarDB cluster.
	NetworkType string `pulumi:"networkType"`
	// The regionId of the db_nodes.
	RegionId string `pulumi:"regionId"`
	// status of the cluster.
	Status string `pulumi:"status"`
	// The StorageUsed of the PolarDB cluster.
	StorageUsed int `pulumi:"storageUsed"`
	// ID of the VPC the cluster belongs to.
	VpcId string `pulumi:"vpcId"`
	// The zoneId of the db_nodes.
	ZoneId string `pulumi:"zoneId"`
}

type GetClustersClusterInput interface {
	pulumi.Input

	ToGetClustersClusterOutput() GetClustersClusterOutput
	ToGetClustersClusterOutputWithContext(context.Context) GetClustersClusterOutput
}

type GetClustersClusterArgs struct {
	// Billing method. Value options: `PostPaid` for Pay-As-You-Go and `PrePaid` for subscription.
	ChargeType pulumi.StringInput `pulumi:"chargeType"`
	// The createTime of the db_nodes.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The dbNodeClass of the db_nodes.
	DbNodeClass pulumi.StringInput `pulumi:"dbNodeClass"`
	// The DBNodeNumber of the PolarDB cluster.
	DbNodeNumber pulumi.IntInput `pulumi:"dbNodeNumber"`
	// The DBNodes of the PolarDB cluster.
	DbNodes GetClustersClusterDbNodeArrayInput `pulumi:"dbNodes"`
	// Database type. Options are `MySQL`, `Oracle` and `PostgreSQL`. If no value is specified, all types are returned.
	DbType pulumi.StringInput `pulumi:"dbType"`
	// The DBVersion of the PolarDB cluster.
	DbVersion pulumi.StringInput `pulumi:"dbVersion"`
	// The DeleteLock of the PolarDB cluster.
	DeleteLock pulumi.IntInput `pulumi:"deleteLock"`
	// The description of the PolarDB cluster.
	Description pulumi.StringInput `pulumi:"description"`
	// Database type. Options are `MySQL`, `Oracle` and `PostgreSQL`. If no value is specified, all types are returned.
	Engine pulumi.StringInput `pulumi:"engine"`
	// Expiration time. Pay-As-You-Go clusters never expire.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// The expired of the PolarDB cluster.
	Expired pulumi.StringInput `pulumi:"expired"`
	// The ID of the PolarDB cluster.
	Id pulumi.StringInput `pulumi:"id"`
	// The LockMode of the PolarDB cluster.
	LockMode pulumi.StringInput `pulumi:"lockMode"`
	// The DBClusterNetworkType of the PolarDB cluster.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// The regionId of the db_nodes.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// status of the cluster.
	Status pulumi.StringInput `pulumi:"status"`
	// The StorageUsed of the PolarDB cluster.
	StorageUsed pulumi.IntInput `pulumi:"storageUsed"`
	// ID of the VPC the cluster belongs to.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The zoneId of the db_nodes.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetClustersClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersCluster)(nil)).Elem()
}

func (i GetClustersClusterArgs) ToGetClustersClusterOutput() GetClustersClusterOutput {
	return i.ToGetClustersClusterOutputWithContext(context.Background())
}

func (i GetClustersClusterArgs) ToGetClustersClusterOutputWithContext(ctx context.Context) GetClustersClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterOutput)
}

type GetClustersClusterArrayInput interface {
	pulumi.Input

	ToGetClustersClusterArrayOutput() GetClustersClusterArrayOutput
	ToGetClustersClusterArrayOutputWithContext(context.Context) GetClustersClusterArrayOutput
}

type GetClustersClusterArray []GetClustersClusterInput

func (GetClustersClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersCluster)(nil)).Elem()
}

func (i GetClustersClusterArray) ToGetClustersClusterArrayOutput() GetClustersClusterArrayOutput {
	return i.ToGetClustersClusterArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterArray) ToGetClustersClusterArrayOutputWithContext(ctx context.Context) GetClustersClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterArrayOutput)
}

type GetClustersClusterOutput struct{ *pulumi.OutputState }

func (GetClustersClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersCluster)(nil)).Elem()
}

func (o GetClustersClusterOutput) ToGetClustersClusterOutput() GetClustersClusterOutput {
	return o
}

func (o GetClustersClusterOutput) ToGetClustersClusterOutputWithContext(ctx context.Context) GetClustersClusterOutput {
	return o
}

// Billing method. Value options: `PostPaid` for Pay-As-You-Go and `PrePaid` for subscription.
func (o GetClustersClusterOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.ChargeType }).(pulumi.StringOutput)
}

// The createTime of the db_nodes.
func (o GetClustersClusterOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The dbNodeClass of the db_nodes.
func (o GetClustersClusterOutput) DbNodeClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.DbNodeClass }).(pulumi.StringOutput)
}

// The DBNodeNumber of the PolarDB cluster.
func (o GetClustersClusterOutput) DbNodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersCluster) int { return v.DbNodeNumber }).(pulumi.IntOutput)
}

// The DBNodes of the PolarDB cluster.
func (o GetClustersClusterOutput) DbNodes() GetClustersClusterDbNodeArrayOutput {
	return o.ApplyT(func(v GetClustersCluster) []GetClustersClusterDbNode { return v.DbNodes }).(GetClustersClusterDbNodeArrayOutput)
}

// Database type. Options are `MySQL`, `Oracle` and `PostgreSQL`. If no value is specified, all types are returned.
func (o GetClustersClusterOutput) DbType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.DbType }).(pulumi.StringOutput)
}

// The DBVersion of the PolarDB cluster.
func (o GetClustersClusterOutput) DbVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.DbVersion }).(pulumi.StringOutput)
}

// The DeleteLock of the PolarDB cluster.
func (o GetClustersClusterOutput) DeleteLock() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersCluster) int { return v.DeleteLock }).(pulumi.IntOutput)
}

// The description of the PolarDB cluster.
func (o GetClustersClusterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.Description }).(pulumi.StringOutput)
}

// Database type. Options are `MySQL`, `Oracle` and `PostgreSQL`. If no value is specified, all types are returned.
func (o GetClustersClusterOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.Engine }).(pulumi.StringOutput)
}

// Expiration time. Pay-As-You-Go clusters never expire.
func (o GetClustersClusterOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// The expired of the PolarDB cluster.
func (o GetClustersClusterOutput) Expired() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.Expired }).(pulumi.StringOutput)
}

// The ID of the PolarDB cluster.
func (o GetClustersClusterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.Id }).(pulumi.StringOutput)
}

// The LockMode of the PolarDB cluster.
func (o GetClustersClusterOutput) LockMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.LockMode }).(pulumi.StringOutput)
}

// The DBClusterNetworkType of the PolarDB cluster.
func (o GetClustersClusterOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.NetworkType }).(pulumi.StringOutput)
}

// The regionId of the db_nodes.
func (o GetClustersClusterOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.RegionId }).(pulumi.StringOutput)
}

// status of the cluster.
func (o GetClustersClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.Status }).(pulumi.StringOutput)
}

// The StorageUsed of the PolarDB cluster.
func (o GetClustersClusterOutput) StorageUsed() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersCluster) int { return v.StorageUsed }).(pulumi.IntOutput)
}

// ID of the VPC the cluster belongs to.
func (o GetClustersClusterOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.VpcId }).(pulumi.StringOutput)
}

// The zoneId of the db_nodes.
func (o GetClustersClusterOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersCluster) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetClustersClusterArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersCluster)(nil)).Elem()
}

func (o GetClustersClusterArrayOutput) ToGetClustersClusterArrayOutput() GetClustersClusterArrayOutput {
	return o
}

func (o GetClustersClusterArrayOutput) ToGetClustersClusterArrayOutputWithContext(ctx context.Context) GetClustersClusterArrayOutput {
	return o
}

func (o GetClustersClusterArrayOutput) Index(i pulumi.IntInput) GetClustersClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersCluster {
		return vs[0].([]GetClustersCluster)[vs[1].(int)]
	}).(GetClustersClusterOutput)
}

type GetClustersClusterDbNode struct {
	// The createTime of the db_nodes.
	CreateTime string `pulumi:"createTime"`
	// The dbNodeClass of the db_nodes.
	DbNodeClass string `pulumi:"dbNodeClass"`
	// The dbNodeId of the db_nodes.
	DbNodeId string `pulumi:"dbNodeId"`
	// The dbNodeRole of the db_nodes.
	DbNodeRole string `pulumi:"dbNodeRole"`
	// The dbNodeStatus of the db_nodes.
	DbNodeStatus string `pulumi:"dbNodeStatus"`
	// The maxConnections of the db_nodes.
	MaxConnections int `pulumi:"maxConnections"`
	// The maxIops of the db_nodes.
	MaxIops int `pulumi:"maxIops"`
	// The regionId of the db_nodes.
	RegionId string `pulumi:"regionId"`
	// The zoneId of the db_nodes.
	ZoneId string `pulumi:"zoneId"`
}

type GetClustersClusterDbNodeInput interface {
	pulumi.Input

	ToGetClustersClusterDbNodeOutput() GetClustersClusterDbNodeOutput
	ToGetClustersClusterDbNodeOutputWithContext(context.Context) GetClustersClusterDbNodeOutput
}

type GetClustersClusterDbNodeArgs struct {
	// The createTime of the db_nodes.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The dbNodeClass of the db_nodes.
	DbNodeClass pulumi.StringInput `pulumi:"dbNodeClass"`
	// The dbNodeId of the db_nodes.
	DbNodeId pulumi.StringInput `pulumi:"dbNodeId"`
	// The dbNodeRole of the db_nodes.
	DbNodeRole pulumi.StringInput `pulumi:"dbNodeRole"`
	// The dbNodeStatus of the db_nodes.
	DbNodeStatus pulumi.StringInput `pulumi:"dbNodeStatus"`
	// The maxConnections of the db_nodes.
	MaxConnections pulumi.IntInput `pulumi:"maxConnections"`
	// The maxIops of the db_nodes.
	MaxIops pulumi.IntInput `pulumi:"maxIops"`
	// The regionId of the db_nodes.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// The zoneId of the db_nodes.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetClustersClusterDbNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterDbNode)(nil)).Elem()
}

func (i GetClustersClusterDbNodeArgs) ToGetClustersClusterDbNodeOutput() GetClustersClusterDbNodeOutput {
	return i.ToGetClustersClusterDbNodeOutputWithContext(context.Background())
}

func (i GetClustersClusterDbNodeArgs) ToGetClustersClusterDbNodeOutputWithContext(ctx context.Context) GetClustersClusterDbNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterDbNodeOutput)
}

type GetClustersClusterDbNodeArrayInput interface {
	pulumi.Input

	ToGetClustersClusterDbNodeArrayOutput() GetClustersClusterDbNodeArrayOutput
	ToGetClustersClusterDbNodeArrayOutputWithContext(context.Context) GetClustersClusterDbNodeArrayOutput
}

type GetClustersClusterDbNodeArray []GetClustersClusterDbNodeInput

func (GetClustersClusterDbNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterDbNode)(nil)).Elem()
}

func (i GetClustersClusterDbNodeArray) ToGetClustersClusterDbNodeArrayOutput() GetClustersClusterDbNodeArrayOutput {
	return i.ToGetClustersClusterDbNodeArrayOutputWithContext(context.Background())
}

func (i GetClustersClusterDbNodeArray) ToGetClustersClusterDbNodeArrayOutputWithContext(ctx context.Context) GetClustersClusterDbNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersClusterDbNodeArrayOutput)
}

type GetClustersClusterDbNodeOutput struct{ *pulumi.OutputState }

func (GetClustersClusterDbNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersClusterDbNode)(nil)).Elem()
}

func (o GetClustersClusterDbNodeOutput) ToGetClustersClusterDbNodeOutput() GetClustersClusterDbNodeOutput {
	return o
}

func (o GetClustersClusterDbNodeOutput) ToGetClustersClusterDbNodeOutputWithContext(ctx context.Context) GetClustersClusterDbNodeOutput {
	return o
}

// The createTime of the db_nodes.
func (o GetClustersClusterDbNodeOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterDbNode) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The dbNodeClass of the db_nodes.
func (o GetClustersClusterDbNodeOutput) DbNodeClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterDbNode) string { return v.DbNodeClass }).(pulumi.StringOutput)
}

// The dbNodeId of the db_nodes.
func (o GetClustersClusterDbNodeOutput) DbNodeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterDbNode) string { return v.DbNodeId }).(pulumi.StringOutput)
}

// The dbNodeRole of the db_nodes.
func (o GetClustersClusterDbNodeOutput) DbNodeRole() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterDbNode) string { return v.DbNodeRole }).(pulumi.StringOutput)
}

// The dbNodeStatus of the db_nodes.
func (o GetClustersClusterDbNodeOutput) DbNodeStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterDbNode) string { return v.DbNodeStatus }).(pulumi.StringOutput)
}

// The maxConnections of the db_nodes.
func (o GetClustersClusterDbNodeOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterDbNode) int { return v.MaxConnections }).(pulumi.IntOutput)
}

// The maxIops of the db_nodes.
func (o GetClustersClusterDbNodeOutput) MaxIops() pulumi.IntOutput {
	return o.ApplyT(func(v GetClustersClusterDbNode) int { return v.MaxIops }).(pulumi.IntOutput)
}

// The regionId of the db_nodes.
func (o GetClustersClusterDbNodeOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterDbNode) string { return v.RegionId }).(pulumi.StringOutput)
}

// The zoneId of the db_nodes.
func (o GetClustersClusterDbNodeOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersClusterDbNode) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetClustersClusterDbNodeArrayOutput struct{ *pulumi.OutputState }

func (GetClustersClusterDbNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersClusterDbNode)(nil)).Elem()
}

func (o GetClustersClusterDbNodeArrayOutput) ToGetClustersClusterDbNodeArrayOutput() GetClustersClusterDbNodeArrayOutput {
	return o
}

func (o GetClustersClusterDbNodeArrayOutput) ToGetClustersClusterDbNodeArrayOutputWithContext(ctx context.Context) GetClustersClusterDbNodeArrayOutput {
	return o
}

func (o GetClustersClusterDbNodeArrayOutput) Index(i pulumi.IntInput) GetClustersClusterDbNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersClusterDbNode {
		return vs[0].([]GetClustersClusterDbNode)[vs[1].(int)]
	}).(GetClustersClusterDbNodeOutput)
}

type GetDatabasesDatabase struct {
	// A list of accounts of database. Each element contains the following attributes.
	Accounts []GetDatabasesDatabaseAccount `pulumi:"accounts"`
	// The character set name of database.
	CharacterSetName string `pulumi:"characterSetName"`
	// Database description.
	DbDescription string `pulumi:"dbDescription"`
	// Database name.
	DbName string `pulumi:"dbName"`
	// The status of database.
	DbStatus string `pulumi:"dbStatus"`
	// The engine of database.
	Engine string `pulumi:"engine"`
}

type GetDatabasesDatabaseInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput
	ToGetDatabasesDatabaseOutputWithContext(context.Context) GetDatabasesDatabaseOutput
}

type GetDatabasesDatabaseArgs struct {
	// A list of accounts of database. Each element contains the following attributes.
	Accounts GetDatabasesDatabaseAccountArrayInput `pulumi:"accounts"`
	// The character set name of database.
	CharacterSetName pulumi.StringInput `pulumi:"characterSetName"`
	// Database description.
	DbDescription pulumi.StringInput `pulumi:"dbDescription"`
	// Database name.
	DbName pulumi.StringInput `pulumi:"dbName"`
	// The status of database.
	DbStatus pulumi.StringInput `pulumi:"dbStatus"`
	// The engine of database.
	Engine pulumi.StringInput `pulumi:"engine"`
}

func (GetDatabasesDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabase)(nil)).Elem()
}

func (i GetDatabasesDatabaseArgs) ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput {
	return i.ToGetDatabasesDatabaseOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseArgs) ToGetDatabasesDatabaseOutputWithContext(ctx context.Context) GetDatabasesDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseOutput)
}

type GetDatabasesDatabaseArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput
	ToGetDatabasesDatabaseArrayOutputWithContext(context.Context) GetDatabasesDatabaseArrayOutput
}

type GetDatabasesDatabaseArray []GetDatabasesDatabaseInput

func (GetDatabasesDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabase)(nil)).Elem()
}

func (i GetDatabasesDatabaseArray) ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput {
	return i.ToGetDatabasesDatabaseArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseArray) ToGetDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseArrayOutput)
}

type GetDatabasesDatabaseOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabase)(nil)).Elem()
}

func (o GetDatabasesDatabaseOutput) ToGetDatabasesDatabaseOutput() GetDatabasesDatabaseOutput {
	return o
}

func (o GetDatabasesDatabaseOutput) ToGetDatabasesDatabaseOutputWithContext(ctx context.Context) GetDatabasesDatabaseOutput {
	return o
}

// A list of accounts of database. Each element contains the following attributes.
func (o GetDatabasesDatabaseOutput) Accounts() GetDatabasesDatabaseAccountArrayOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) []GetDatabasesDatabaseAccount { return v.Accounts }).(GetDatabasesDatabaseAccountArrayOutput)
}

// The character set name of database.
func (o GetDatabasesDatabaseOutput) CharacterSetName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.CharacterSetName }).(pulumi.StringOutput)
}

// Database description.
func (o GetDatabasesDatabaseOutput) DbDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.DbDescription }).(pulumi.StringOutput)
}

// Database name.
func (o GetDatabasesDatabaseOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.DbName }).(pulumi.StringOutput)
}

// The status of database.
func (o GetDatabasesDatabaseOutput) DbStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.DbStatus }).(pulumi.StringOutput)
}

// The engine of database.
func (o GetDatabasesDatabaseOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabase) string { return v.Engine }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabase)(nil)).Elem()
}

func (o GetDatabasesDatabaseArrayOutput) ToGetDatabasesDatabaseArrayOutput() GetDatabasesDatabaseArrayOutput {
	return o
}

func (o GetDatabasesDatabaseArrayOutput) ToGetDatabasesDatabaseArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseArrayOutput {
	return o
}

func (o GetDatabasesDatabaseArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabase {
		return vs[0].([]GetDatabasesDatabase)[vs[1].(int)]
	}).(GetDatabasesDatabaseOutput)
}

type GetDatabasesDatabaseAccount struct {
	// Account name.
	AccountName string `pulumi:"accountName"`
	// Account status.
	AccountStatus string `pulumi:"accountStatus"`
	// The privilege status of account.
	PrivilegeStatus string `pulumi:"privilegeStatus"`
}

type GetDatabasesDatabaseAccountInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseAccountOutput() GetDatabasesDatabaseAccountOutput
	ToGetDatabasesDatabaseAccountOutputWithContext(context.Context) GetDatabasesDatabaseAccountOutput
}

type GetDatabasesDatabaseAccountArgs struct {
	// Account name.
	AccountName pulumi.StringInput `pulumi:"accountName"`
	// Account status.
	AccountStatus pulumi.StringInput `pulumi:"accountStatus"`
	// The privilege status of account.
	PrivilegeStatus pulumi.StringInput `pulumi:"privilegeStatus"`
}

func (GetDatabasesDatabaseAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseAccount)(nil)).Elem()
}

func (i GetDatabasesDatabaseAccountArgs) ToGetDatabasesDatabaseAccountOutput() GetDatabasesDatabaseAccountOutput {
	return i.ToGetDatabasesDatabaseAccountOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseAccountArgs) ToGetDatabasesDatabaseAccountOutputWithContext(ctx context.Context) GetDatabasesDatabaseAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseAccountOutput)
}

type GetDatabasesDatabaseAccountArrayInput interface {
	pulumi.Input

	ToGetDatabasesDatabaseAccountArrayOutput() GetDatabasesDatabaseAccountArrayOutput
	ToGetDatabasesDatabaseAccountArrayOutputWithContext(context.Context) GetDatabasesDatabaseAccountArrayOutput
}

type GetDatabasesDatabaseAccountArray []GetDatabasesDatabaseAccountInput

func (GetDatabasesDatabaseAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseAccount)(nil)).Elem()
}

func (i GetDatabasesDatabaseAccountArray) ToGetDatabasesDatabaseAccountArrayOutput() GetDatabasesDatabaseAccountArrayOutput {
	return i.ToGetDatabasesDatabaseAccountArrayOutputWithContext(context.Background())
}

func (i GetDatabasesDatabaseAccountArray) ToGetDatabasesDatabaseAccountArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabasesDatabaseAccountArrayOutput)
}

type GetDatabasesDatabaseAccountOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabasesDatabaseAccount)(nil)).Elem()
}

func (o GetDatabasesDatabaseAccountOutput) ToGetDatabasesDatabaseAccountOutput() GetDatabasesDatabaseAccountOutput {
	return o
}

func (o GetDatabasesDatabaseAccountOutput) ToGetDatabasesDatabaseAccountOutputWithContext(ctx context.Context) GetDatabasesDatabaseAccountOutput {
	return o
}

// Account name.
func (o GetDatabasesDatabaseAccountOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseAccount) string { return v.AccountName }).(pulumi.StringOutput)
}

// Account status.
func (o GetDatabasesDatabaseAccountOutput) AccountStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseAccount) string { return v.AccountStatus }).(pulumi.StringOutput)
}

// The privilege status of account.
func (o GetDatabasesDatabaseAccountOutput) PrivilegeStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabasesDatabaseAccount) string { return v.PrivilegeStatus }).(pulumi.StringOutput)
}

type GetDatabasesDatabaseAccountArrayOutput struct{ *pulumi.OutputState }

func (GetDatabasesDatabaseAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabasesDatabaseAccount)(nil)).Elem()
}

func (o GetDatabasesDatabaseAccountArrayOutput) ToGetDatabasesDatabaseAccountArrayOutput() GetDatabasesDatabaseAccountArrayOutput {
	return o
}

func (o GetDatabasesDatabaseAccountArrayOutput) ToGetDatabasesDatabaseAccountArrayOutputWithContext(ctx context.Context) GetDatabasesDatabaseAccountArrayOutput {
	return o
}

func (o GetDatabasesDatabaseAccountArrayOutput) Index(i pulumi.IntInput) GetDatabasesDatabaseAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabasesDatabaseAccount {
		return vs[0].([]GetDatabasesDatabaseAccount)[vs[1].(int)]
	}).(GetDatabasesDatabaseAccountOutput)
}

type GetEndpointsEndpoint struct {
	// A list of endpoint addresses. Each element contains the following attributes.
	AddressItems []GetEndpointsEndpointAddressItem `pulumi:"addressItems"`
	// Whether the new node is automatically added to the default cluster address.Options are `Enable` and `Disable`.
	AutoAddNewNodes string `pulumi:"autoAddNewNodes"`
	// endpoint of the cluster.
	DbEndpointId string `pulumi:"dbEndpointId"`
	// The Endpoint configuration. `ConsistLevel`: session consistency level, value:`0`: final consistency,`1`: session consistency;`LoadBalanceStrategy`: load balancing strategy. Based on the automatic scheduling of load, the value is: `load`.
	EndpointConfig string `pulumi:"endpointConfig"`
	// Cluster address type.`Cluster`: the default address of the Cluster.`Primary`: Primary address.`Custom`: Custom cluster addresses.
	EndpointType string `pulumi:"endpointType"`
	// A list of nodes that connect to the address configuration.
	Nodes string `pulumi:"nodes"`
	// Read-write mode:`ReadWrite`: readable and writable (automatic read-write separation).`ReadOnly`: ReadOnly.
	ReadWriteMode string `pulumi:"readWriteMode"`
}

type GetEndpointsEndpointInput interface {
	pulumi.Input

	ToGetEndpointsEndpointOutput() GetEndpointsEndpointOutput
	ToGetEndpointsEndpointOutputWithContext(context.Context) GetEndpointsEndpointOutput
}

type GetEndpointsEndpointArgs struct {
	// A list of endpoint addresses. Each element contains the following attributes.
	AddressItems GetEndpointsEndpointAddressItemArrayInput `pulumi:"addressItems"`
	// Whether the new node is automatically added to the default cluster address.Options are `Enable` and `Disable`.
	AutoAddNewNodes pulumi.StringInput `pulumi:"autoAddNewNodes"`
	// endpoint of the cluster.
	DbEndpointId pulumi.StringInput `pulumi:"dbEndpointId"`
	// The Endpoint configuration. `ConsistLevel`: session consistency level, value:`0`: final consistency,`1`: session consistency;`LoadBalanceStrategy`: load balancing strategy. Based on the automatic scheduling of load, the value is: `load`.
	EndpointConfig pulumi.StringInput `pulumi:"endpointConfig"`
	// Cluster address type.`Cluster`: the default address of the Cluster.`Primary`: Primary address.`Custom`: Custom cluster addresses.
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	// A list of nodes that connect to the address configuration.
	Nodes pulumi.StringInput `pulumi:"nodes"`
	// Read-write mode:`ReadWrite`: readable and writable (automatic read-write separation).`ReadOnly`: ReadOnly.
	ReadWriteMode pulumi.StringInput `pulumi:"readWriteMode"`
}

func (GetEndpointsEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsEndpoint)(nil)).Elem()
}

func (i GetEndpointsEndpointArgs) ToGetEndpointsEndpointOutput() GetEndpointsEndpointOutput {
	return i.ToGetEndpointsEndpointOutputWithContext(context.Background())
}

func (i GetEndpointsEndpointArgs) ToGetEndpointsEndpointOutputWithContext(ctx context.Context) GetEndpointsEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointsEndpointOutput)
}

type GetEndpointsEndpointArrayInput interface {
	pulumi.Input

	ToGetEndpointsEndpointArrayOutput() GetEndpointsEndpointArrayOutput
	ToGetEndpointsEndpointArrayOutputWithContext(context.Context) GetEndpointsEndpointArrayOutput
}

type GetEndpointsEndpointArray []GetEndpointsEndpointInput

func (GetEndpointsEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointsEndpoint)(nil)).Elem()
}

func (i GetEndpointsEndpointArray) ToGetEndpointsEndpointArrayOutput() GetEndpointsEndpointArrayOutput {
	return i.ToGetEndpointsEndpointArrayOutputWithContext(context.Background())
}

func (i GetEndpointsEndpointArray) ToGetEndpointsEndpointArrayOutputWithContext(ctx context.Context) GetEndpointsEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointsEndpointArrayOutput)
}

type GetEndpointsEndpointOutput struct{ *pulumi.OutputState }

func (GetEndpointsEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsEndpoint)(nil)).Elem()
}

func (o GetEndpointsEndpointOutput) ToGetEndpointsEndpointOutput() GetEndpointsEndpointOutput {
	return o
}

func (o GetEndpointsEndpointOutput) ToGetEndpointsEndpointOutputWithContext(ctx context.Context) GetEndpointsEndpointOutput {
	return o
}

// A list of endpoint addresses. Each element contains the following attributes.
func (o GetEndpointsEndpointOutput) AddressItems() GetEndpointsEndpointAddressItemArrayOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) []GetEndpointsEndpointAddressItem { return v.AddressItems }).(GetEndpointsEndpointAddressItemArrayOutput)
}

// Whether the new node is automatically added to the default cluster address.Options are `Enable` and `Disable`.
func (o GetEndpointsEndpointOutput) AutoAddNewNodes() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.AutoAddNewNodes }).(pulumi.StringOutput)
}

// endpoint of the cluster.
func (o GetEndpointsEndpointOutput) DbEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.DbEndpointId }).(pulumi.StringOutput)
}

// The Endpoint configuration. `ConsistLevel`: session consistency level, value:`0`: final consistency,`1`: session consistency;`LoadBalanceStrategy`: load balancing strategy. Based on the automatic scheduling of load, the value is: `load`.
func (o GetEndpointsEndpointOutput) EndpointConfig() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.EndpointConfig }).(pulumi.StringOutput)
}

// Cluster address type.`Cluster`: the default address of the Cluster.`Primary`: Primary address.`Custom`: Custom cluster addresses.
func (o GetEndpointsEndpointOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.EndpointType }).(pulumi.StringOutput)
}

// A list of nodes that connect to the address configuration.
func (o GetEndpointsEndpointOutput) Nodes() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.Nodes }).(pulumi.StringOutput)
}

// Read-write mode:`ReadWrite`: readable and writable (automatic read-write separation).`ReadOnly`: ReadOnly.
func (o GetEndpointsEndpointOutput) ReadWriteMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpoint) string { return v.ReadWriteMode }).(pulumi.StringOutput)
}

type GetEndpointsEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetEndpointsEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointsEndpoint)(nil)).Elem()
}

func (o GetEndpointsEndpointArrayOutput) ToGetEndpointsEndpointArrayOutput() GetEndpointsEndpointArrayOutput {
	return o
}

func (o GetEndpointsEndpointArrayOutput) ToGetEndpointsEndpointArrayOutputWithContext(ctx context.Context) GetEndpointsEndpointArrayOutput {
	return o
}

func (o GetEndpointsEndpointArrayOutput) Index(i pulumi.IntInput) GetEndpointsEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEndpointsEndpoint {
		return vs[0].([]GetEndpointsEndpoint)[vs[1].(int)]
	}).(GetEndpointsEndpointOutput)
}

type GetEndpointsEndpointAddressItem struct {
	// Connection instance string.
	ConnectionString string `pulumi:"connectionString"`
	// The ip address of connection string.
	IpAddress string `pulumi:"ipAddress"`
	// IP network type:`Public` or `Private`.
	NetType string `pulumi:"netType"`
	// Intranet connection port.
	Port string `pulumi:"port"`
	// ID of the VPC the instance belongs to.
	VpcId string `pulumi:"vpcId"`
	// ID of the VSwitch the cluster belongs to.
	VswitchId string `pulumi:"vswitchId"`
}

type GetEndpointsEndpointAddressItemInput interface {
	pulumi.Input

	ToGetEndpointsEndpointAddressItemOutput() GetEndpointsEndpointAddressItemOutput
	ToGetEndpointsEndpointAddressItemOutputWithContext(context.Context) GetEndpointsEndpointAddressItemOutput
}

type GetEndpointsEndpointAddressItemArgs struct {
	// Connection instance string.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The ip address of connection string.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// IP network type:`Public` or `Private`.
	NetType pulumi.StringInput `pulumi:"netType"`
	// Intranet connection port.
	Port pulumi.StringInput `pulumi:"port"`
	// ID of the VPC the instance belongs to.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// ID of the VSwitch the cluster belongs to.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
}

func (GetEndpointsEndpointAddressItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsEndpointAddressItem)(nil)).Elem()
}

func (i GetEndpointsEndpointAddressItemArgs) ToGetEndpointsEndpointAddressItemOutput() GetEndpointsEndpointAddressItemOutput {
	return i.ToGetEndpointsEndpointAddressItemOutputWithContext(context.Background())
}

func (i GetEndpointsEndpointAddressItemArgs) ToGetEndpointsEndpointAddressItemOutputWithContext(ctx context.Context) GetEndpointsEndpointAddressItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointsEndpointAddressItemOutput)
}

type GetEndpointsEndpointAddressItemArrayInput interface {
	pulumi.Input

	ToGetEndpointsEndpointAddressItemArrayOutput() GetEndpointsEndpointAddressItemArrayOutput
	ToGetEndpointsEndpointAddressItemArrayOutputWithContext(context.Context) GetEndpointsEndpointAddressItemArrayOutput
}

type GetEndpointsEndpointAddressItemArray []GetEndpointsEndpointAddressItemInput

func (GetEndpointsEndpointAddressItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointsEndpointAddressItem)(nil)).Elem()
}

func (i GetEndpointsEndpointAddressItemArray) ToGetEndpointsEndpointAddressItemArrayOutput() GetEndpointsEndpointAddressItemArrayOutput {
	return i.ToGetEndpointsEndpointAddressItemArrayOutputWithContext(context.Background())
}

func (i GetEndpointsEndpointAddressItemArray) ToGetEndpointsEndpointAddressItemArrayOutputWithContext(ctx context.Context) GetEndpointsEndpointAddressItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointsEndpointAddressItemArrayOutput)
}

type GetEndpointsEndpointAddressItemOutput struct{ *pulumi.OutputState }

func (GetEndpointsEndpointAddressItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointsEndpointAddressItem)(nil)).Elem()
}

func (o GetEndpointsEndpointAddressItemOutput) ToGetEndpointsEndpointAddressItemOutput() GetEndpointsEndpointAddressItemOutput {
	return o
}

func (o GetEndpointsEndpointAddressItemOutput) ToGetEndpointsEndpointAddressItemOutputWithContext(ctx context.Context) GetEndpointsEndpointAddressItemOutput {
	return o
}

// Connection instance string.
func (o GetEndpointsEndpointAddressItemOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointAddressItem) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The ip address of connection string.
func (o GetEndpointsEndpointAddressItemOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointAddressItem) string { return v.IpAddress }).(pulumi.StringOutput)
}

// IP network type:`Public` or `Private`.
func (o GetEndpointsEndpointAddressItemOutput) NetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointAddressItem) string { return v.NetType }).(pulumi.StringOutput)
}

// Intranet connection port.
func (o GetEndpointsEndpointAddressItemOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointAddressItem) string { return v.Port }).(pulumi.StringOutput)
}

// ID of the VPC the instance belongs to.
func (o GetEndpointsEndpointAddressItemOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointAddressItem) string { return v.VpcId }).(pulumi.StringOutput)
}

// ID of the VSwitch the cluster belongs to.
func (o GetEndpointsEndpointAddressItemOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointsEndpointAddressItem) string { return v.VswitchId }).(pulumi.StringOutput)
}

type GetEndpointsEndpointAddressItemArrayOutput struct{ *pulumi.OutputState }

func (GetEndpointsEndpointAddressItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointsEndpointAddressItem)(nil)).Elem()
}

func (o GetEndpointsEndpointAddressItemArrayOutput) ToGetEndpointsEndpointAddressItemArrayOutput() GetEndpointsEndpointAddressItemArrayOutput {
	return o
}

func (o GetEndpointsEndpointAddressItemArrayOutput) ToGetEndpointsEndpointAddressItemArrayOutputWithContext(ctx context.Context) GetEndpointsEndpointAddressItemArrayOutput {
	return o
}

func (o GetEndpointsEndpointAddressItemArrayOutput) Index(i pulumi.IntInput) GetEndpointsEndpointAddressItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEndpointsEndpointAddressItem {
		return vs[0].([]GetEndpointsEndpointAddressItem)[vs[1].(int)]
	}).(GetEndpointsEndpointAddressItemOutput)
}

type GetZonesZone struct {
	// ID of the zone.
	Id string `pulumi:"id"`
	// A list of zone ids in which the multi zone.
	MultiZoneIds []string `pulumi:"multiZoneIds"`
}

type GetZonesZoneInput interface {
	pulumi.Input

	ToGetZonesZoneOutput() GetZonesZoneOutput
	ToGetZonesZoneOutputWithContext(context.Context) GetZonesZoneOutput
}

type GetZonesZoneArgs struct {
	// ID of the zone.
	Id pulumi.StringInput `pulumi:"id"`
	// A list of zone ids in which the multi zone.
	MultiZoneIds pulumi.StringArrayInput `pulumi:"multiZoneIds"`
}

func (GetZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return i.ToGetZonesZoneOutputWithContext(context.Background())
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneOutput)
}

type GetZonesZoneArrayInput interface {
	pulumi.Input

	ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput
	ToGetZonesZoneArrayOutputWithContext(context.Context) GetZonesZoneArrayOutput
}

type GetZonesZoneArray []GetZonesZoneInput

func (GetZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return i.ToGetZonesZoneArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneArrayOutput)
}

type GetZonesZoneOutput struct{ *pulumi.OutputState }

func (GetZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return o
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return o
}

// ID of the zone.
func (o GetZonesZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Id }).(pulumi.StringOutput)
}

// A list of zone ids in which the multi zone.
func (o GetZonesZoneOutput) MultiZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []string { return v.MultiZoneIds }).(pulumi.StringArrayOutput)
}

type GetZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) Index(i pulumi.IntInput) GetZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZone {
		return vs[0].([]GetZonesZone)[vs[1].(int)]
	}).(GetZonesZoneOutput)
}

func init() {
	pulumi.RegisterOutputType(ClusterParameterOutput{})
	pulumi.RegisterOutputType(ClusterParameterArrayOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountArrayOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountDatabasePrivilegeOutput{})
	pulumi.RegisterOutputType(GetAccountsAccountDatabasePrivilegeArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterOutput{})
	pulumi.RegisterOutputType(GetClustersClusterArrayOutput{})
	pulumi.RegisterOutputType(GetClustersClusterDbNodeOutput{})
	pulumi.RegisterOutputType(GetClustersClusterDbNodeArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseAccountOutput{})
	pulumi.RegisterOutputType(GetDatabasesDatabaseAccountArrayOutput{})
	pulumi.RegisterOutputType(GetEndpointsEndpointOutput{})
	pulumi.RegisterOutputType(GetEndpointsEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetEndpointsEndpointAddressItemOutput{})
	pulumi.RegisterOutputType(GetEndpointsEndpointAddressItemArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneOutput{})
	pulumi.RegisterOutputType(GetZonesZoneArrayOutput{})
}
