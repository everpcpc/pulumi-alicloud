// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package polardb

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/polardb_backup_policy.html.markdown.
type BackupPolicy struct {
	s *pulumi.ResourceState
}

// NewBackupPolicy registers a new resource with the given unique name, arguments, and options.
func NewBackupPolicy(ctx *pulumi.Context,
	name string, args *BackupPolicyArgs, opts ...pulumi.ResourceOpt) (*BackupPolicy, error) {
	if args == nil || args.DbClusterId == nil {
		return nil, errors.New("missing required argument 'DbClusterId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["dbClusterId"] = nil
		inputs["preferredBackupPeriods"] = nil
		inputs["preferredBackupTime"] = nil
	} else {
		inputs["dbClusterId"] = args.DbClusterId
		inputs["preferredBackupPeriods"] = args.PreferredBackupPeriods
		inputs["preferredBackupTime"] = args.PreferredBackupTime
	}
	inputs["backupRetentionPeriod"] = nil
	s, err := ctx.RegisterResource("alicloud:polardb/backupPolicy:BackupPolicy", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &BackupPolicy{s: s}, nil
}

// GetBackupPolicy gets an existing BackupPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupPolicy(ctx *pulumi.Context,
	name string, id pulumi.ID, state *BackupPolicyState, opts ...pulumi.ResourceOpt) (*BackupPolicy, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["backupRetentionPeriod"] = state.BackupRetentionPeriod
		inputs["dbClusterId"] = state.DbClusterId
		inputs["preferredBackupPeriods"] = state.PreferredBackupPeriods
		inputs["preferredBackupTime"] = state.PreferredBackupTime
	}
	s, err := ctx.ReadResource("alicloud:polardb/backupPolicy:BackupPolicy", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &BackupPolicy{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *BackupPolicy) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *BackupPolicy) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Cluster backup retention days, Fixed for 7 days, not modified.
func (r *BackupPolicy) BackupRetentionPeriod() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["backupRetentionPeriod"])
}

// The Id of cluster that can run database.
func (r *BackupPolicy) DbClusterId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["dbClusterId"])
}

// PolarDB Cluster backup period. Valid values: [Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday]. Default to ["Tuesday", "Thursday", "Saturday"].
func (r *BackupPolicy) PreferredBackupPeriods() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["preferredBackupPeriods"])
}

// PolarDB Cluster backup time, in the format of HH:mmZ- HH:mmZ. Time setting interval is one hour. Default to "02:00Z-03:00Z". China time is 8 hours behind it.
func (r *BackupPolicy) PreferredBackupTime() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["preferredBackupTime"])
}

// Input properties used for looking up and filtering BackupPolicy resources.
type BackupPolicyState struct {
	// Cluster backup retention days, Fixed for 7 days, not modified.
	BackupRetentionPeriod interface{}
	// The Id of cluster that can run database.
	DbClusterId interface{}
	// PolarDB Cluster backup period. Valid values: [Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday]. Default to ["Tuesday", "Thursday", "Saturday"].
	PreferredBackupPeriods interface{}
	// PolarDB Cluster backup time, in the format of HH:mmZ- HH:mmZ. Time setting interval is one hour. Default to "02:00Z-03:00Z". China time is 8 hours behind it.
	PreferredBackupTime interface{}
}

// The set of arguments for constructing a BackupPolicy resource.
type BackupPolicyArgs struct {
	// The Id of cluster that can run database.
	DbClusterId interface{}
	// PolarDB Cluster backup period. Valid values: [Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday]. Default to ["Tuesday", "Thursday", "Saturday"].
	PreferredBackupPeriods interface{}
	// PolarDB Cluster backup time, in the format of HH:mmZ- HH:mmZ. Time setting interval is one hour. Default to "02:00Z-03:00Z". China time is 8 hours behind it.
	PreferredBackupTime interface{}
}
