// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package simpleapplicationserver

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetImagesImage struct {
	// The description of the image.
	Description string `pulumi:"description"`
	// The ID of the Instance Image.
	Id string `pulumi:"id"`
	// The ID of the image.
	ImageId string `pulumi:"imageId"`
	// The name of the resource.
	ImageName string `pulumi:"imageName"`
	// The type of the image. Valid values: `app`, `custom`, `system`.
	// * `system`: operating system (OS) image.
	// * `app`: application image.
	// * `custom`: custom image.
	ImageType string `pulumi:"imageType"`
}

// GetImagesImageInput is an input type that accepts GetImagesImageArgs and GetImagesImageOutput values.
// You can construct a concrete instance of `GetImagesImageInput` via:
//
//          GetImagesImageArgs{...}
type GetImagesImageInput interface {
	pulumi.Input

	ToGetImagesImageOutput() GetImagesImageOutput
	ToGetImagesImageOutputWithContext(context.Context) GetImagesImageOutput
}

type GetImagesImageArgs struct {
	// The description of the image.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Instance Image.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the image.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// The name of the resource.
	ImageName pulumi.StringInput `pulumi:"imageName"`
	// The type of the image. Valid values: `app`, `custom`, `system`.
	// * `system`: operating system (OS) image.
	// * `app`: application image.
	// * `custom`: custom image.
	ImageType pulumi.StringInput `pulumi:"imageType"`
}

func (GetImagesImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArgs) ToGetImagesImageOutput() GetImagesImageOutput {
	return i.ToGetImagesImageOutputWithContext(context.Background())
}

func (i GetImagesImageArgs) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageOutput)
}

// GetImagesImageArrayInput is an input type that accepts GetImagesImageArray and GetImagesImageArrayOutput values.
// You can construct a concrete instance of `GetImagesImageArrayInput` via:
//
//          GetImagesImageArray{ GetImagesImageArgs{...} }
type GetImagesImageArrayInput interface {
	pulumi.Input

	ToGetImagesImageArrayOutput() GetImagesImageArrayOutput
	ToGetImagesImageArrayOutputWithContext(context.Context) GetImagesImageArrayOutput
}

type GetImagesImageArray []GetImagesImageInput

func (GetImagesImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return i.ToGetImagesImageArrayOutputWithContext(context.Background())
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageArrayOutput)
}

type GetImagesImageOutput struct{ *pulumi.OutputState }

func (GetImagesImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageOutput) ToGetImagesImageOutput() GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return o
}

// The description of the image.
func (o GetImagesImageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Instance Image.
func (o GetImagesImageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the image.
func (o GetImagesImageOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageId }).(pulumi.StringOutput)
}

// The name of the resource.
func (o GetImagesImageOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageName }).(pulumi.StringOutput)
}

// The type of the image. Valid values: `app`, `custom`, `system`.
// * `system`: operating system (OS) image.
// * `app`: application image.
// * `custom`: custom image.
func (o GetImagesImageOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageType }).(pulumi.StringOutput)
}

type GetImagesImageArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) Index(i pulumi.IntInput) GetImagesImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImage {
		return vs[0].([]GetImagesImage)[vs[1].(int)]
	}).(GetImagesImageOutput)
}

type GetInstancesInstance struct {
	// The billing status of the simple application server. Valid values: `Normal`, `Expired` and `Overdue`.
	BusinessStatus string `pulumi:"businessStatus"`
	// The time when the simple application server was created.
	CreateTime string `pulumi:"createTime"`
	// The DDoS protection status. Valid values: `Normal`, `BlackHole`, and `Defense`.
	DdosStatus string `pulumi:"ddosStatus"`
	// The time when the simple application server expires.
	ExpiredTime string `pulumi:"expiredTime"`
	// The ID of the Instance.
	Id string `pulumi:"id"`
	// The ID of the simple application server Image.
	ImageId string `pulumi:"imageId"`
	// The internal IP address of the simple application server.
	InnerIpAddress string `pulumi:"innerIpAddress"`
	// The ID of the simple application server.
	InstanceId string `pulumi:"instanceId"`
	// The name of the resource.
	InstanceName string `pulumi:"instanceName"`
	// The billing method of the simple application server.
	PaymentType string `pulumi:"paymentType"`
	// The ID of the simple application server plan.
	PlanId string `pulumi:"planId"`
	// The public IP address of the simple application server.
	PublicIpAddress string `pulumi:"publicIpAddress"`
	// The status of the resource.
	Status string `pulumi:"status"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//          GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// The billing status of the simple application server. Valid values: `Normal`, `Expired` and `Overdue`.
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// The time when the simple application server was created.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The DDoS protection status. Valid values: `Normal`, `BlackHole`, and `Defense`.
	DdosStatus pulumi.StringInput `pulumi:"ddosStatus"`
	// The time when the simple application server expires.
	ExpiredTime pulumi.StringInput `pulumi:"expiredTime"`
	// The ID of the Instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the simple application server Image.
	ImageId pulumi.StringInput `pulumi:"imageId"`
	// The internal IP address of the simple application server.
	InnerIpAddress pulumi.StringInput `pulumi:"innerIpAddress"`
	// The ID of the simple application server.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of the resource.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The billing method of the simple application server.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// The ID of the simple application server plan.
	PlanId pulumi.StringInput `pulumi:"planId"`
	// The public IP address of the simple application server.
	PublicIpAddress pulumi.StringInput `pulumi:"publicIpAddress"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//          GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// The billing status of the simple application server. Valid values: `Normal`, `Expired` and `Overdue`.
func (o GetInstancesInstanceOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// The time when the simple application server was created.
func (o GetInstancesInstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The DDoS protection status. Valid values: `Normal`, `BlackHole`, and `Defense`.
func (o GetInstancesInstanceOutput) DdosStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DdosStatus }).(pulumi.StringOutput)
}

// The time when the simple application server expires.
func (o GetInstancesInstanceOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// The ID of the Instance.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the simple application server Image.
func (o GetInstancesInstanceOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ImageId }).(pulumi.StringOutput)
}

// The internal IP address of the simple application server.
func (o GetInstancesInstanceOutput) InnerIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InnerIpAddress }).(pulumi.StringOutput)
}

// The ID of the simple application server.
func (o GetInstancesInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of the resource.
func (o GetInstancesInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The billing method of the simple application server.
func (o GetInstancesInstanceOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PaymentType }).(pulumi.StringOutput)
}

// The ID of the simple application server plan.
func (o GetInstancesInstanceOutput) PlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PlanId }).(pulumi.StringOutput)
}

// The public IP address of the simple application server.
func (o GetInstancesInstanceOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetServerPlansPlan struct {
	// The peak bandwidth. Unit: Mbit/s.
	Bandwidth int `pulumi:"bandwidth"`
	// The number of CPU cores.
	Core int `pulumi:"core"`
	// The size of the enhanced SSD (ESSD). Unit: GB.
	DiskSize int `pulumi:"diskSize"`
	// The monthly data transfer quota. Unit: GB.
	Flow int `pulumi:"flow"`
	// The ID of the Instance Plan.
	Id string `pulumi:"id"`
	// The memory size. Unit: GB.
	Memory int `pulumi:"memory"`
	// The ID of the Instance Plan.
	PlanId string `pulumi:"planId"`
}

// GetServerPlansPlanInput is an input type that accepts GetServerPlansPlanArgs and GetServerPlansPlanOutput values.
// You can construct a concrete instance of `GetServerPlansPlanInput` via:
//
//          GetServerPlansPlanArgs{...}
type GetServerPlansPlanInput interface {
	pulumi.Input

	ToGetServerPlansPlanOutput() GetServerPlansPlanOutput
	ToGetServerPlansPlanOutputWithContext(context.Context) GetServerPlansPlanOutput
}

type GetServerPlansPlanArgs struct {
	// The peak bandwidth. Unit: Mbit/s.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The number of CPU cores.
	Core pulumi.IntInput `pulumi:"core"`
	// The size of the enhanced SSD (ESSD). Unit: GB.
	DiskSize pulumi.IntInput `pulumi:"diskSize"`
	// The monthly data transfer quota. Unit: GB.
	Flow pulumi.IntInput `pulumi:"flow"`
	// The ID of the Instance Plan.
	Id pulumi.StringInput `pulumi:"id"`
	// The memory size. Unit: GB.
	Memory pulumi.IntInput `pulumi:"memory"`
	// The ID of the Instance Plan.
	PlanId pulumi.StringInput `pulumi:"planId"`
}

func (GetServerPlansPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerPlansPlan)(nil)).Elem()
}

func (i GetServerPlansPlanArgs) ToGetServerPlansPlanOutput() GetServerPlansPlanOutput {
	return i.ToGetServerPlansPlanOutputWithContext(context.Background())
}

func (i GetServerPlansPlanArgs) ToGetServerPlansPlanOutputWithContext(ctx context.Context) GetServerPlansPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerPlansPlanOutput)
}

// GetServerPlansPlanArrayInput is an input type that accepts GetServerPlansPlanArray and GetServerPlansPlanArrayOutput values.
// You can construct a concrete instance of `GetServerPlansPlanArrayInput` via:
//
//          GetServerPlansPlanArray{ GetServerPlansPlanArgs{...} }
type GetServerPlansPlanArrayInput interface {
	pulumi.Input

	ToGetServerPlansPlanArrayOutput() GetServerPlansPlanArrayOutput
	ToGetServerPlansPlanArrayOutputWithContext(context.Context) GetServerPlansPlanArrayOutput
}

type GetServerPlansPlanArray []GetServerPlansPlanInput

func (GetServerPlansPlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerPlansPlan)(nil)).Elem()
}

func (i GetServerPlansPlanArray) ToGetServerPlansPlanArrayOutput() GetServerPlansPlanArrayOutput {
	return i.ToGetServerPlansPlanArrayOutputWithContext(context.Background())
}

func (i GetServerPlansPlanArray) ToGetServerPlansPlanArrayOutputWithContext(ctx context.Context) GetServerPlansPlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerPlansPlanArrayOutput)
}

type GetServerPlansPlanOutput struct{ *pulumi.OutputState }

func (GetServerPlansPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerPlansPlan)(nil)).Elem()
}

func (o GetServerPlansPlanOutput) ToGetServerPlansPlanOutput() GetServerPlansPlanOutput {
	return o
}

func (o GetServerPlansPlanOutput) ToGetServerPlansPlanOutputWithContext(ctx context.Context) GetServerPlansPlanOutput {
	return o
}

// The peak bandwidth. Unit: Mbit/s.
func (o GetServerPlansPlanOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerPlansPlan) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The number of CPU cores.
func (o GetServerPlansPlanOutput) Core() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerPlansPlan) int { return v.Core }).(pulumi.IntOutput)
}

// The size of the enhanced SSD (ESSD). Unit: GB.
func (o GetServerPlansPlanOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerPlansPlan) int { return v.DiskSize }).(pulumi.IntOutput)
}

// The monthly data transfer quota. Unit: GB.
func (o GetServerPlansPlanOutput) Flow() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerPlansPlan) int { return v.Flow }).(pulumi.IntOutput)
}

// The ID of the Instance Plan.
func (o GetServerPlansPlanOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerPlansPlan) string { return v.Id }).(pulumi.StringOutput)
}

// The memory size. Unit: GB.
func (o GetServerPlansPlanOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerPlansPlan) int { return v.Memory }).(pulumi.IntOutput)
}

// The ID of the Instance Plan.
func (o GetServerPlansPlanOutput) PlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerPlansPlan) string { return v.PlanId }).(pulumi.StringOutput)
}

type GetServerPlansPlanArrayOutput struct{ *pulumi.OutputState }

func (GetServerPlansPlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerPlansPlan)(nil)).Elem()
}

func (o GetServerPlansPlanArrayOutput) ToGetServerPlansPlanArrayOutput() GetServerPlansPlanArrayOutput {
	return o
}

func (o GetServerPlansPlanArrayOutput) ToGetServerPlansPlanArrayOutputWithContext(ctx context.Context) GetServerPlansPlanArrayOutput {
	return o
}

func (o GetServerPlansPlanArrayOutput) Index(i pulumi.IntInput) GetServerPlansPlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerPlansPlan {
		return vs[0].([]GetServerPlansPlan)[vs[1].(int)]
	}).(GetServerPlansPlanOutput)
}

func init() {
	pulumi.RegisterOutputType(GetImagesImageOutput{})
	pulumi.RegisterOutputType(GetImagesImageArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetServerPlansPlanOutput{})
	pulumi.RegisterOutputType(GetServerPlansPlanArrayOutput{})
}
