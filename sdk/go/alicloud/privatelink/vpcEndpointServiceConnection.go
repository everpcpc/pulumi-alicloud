// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package privatelink

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Private Link Vpc Endpoint Connection resource.
//
// For information about Private Link Vpc Endpoint Connection and how to use it, see [What is Vpc Endpoint Connection](https://help.aliyun.com/document_detail/183551.html).
//
// > **NOTE:** Available in v1.110.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/privatelink"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := privatelink.NewVpcEndpointServiceConnection(ctx, "example", &privatelink.VpcEndpointServiceConnectionArgs{
// 			Bandwidth:  pulumi.Int(1024),
// 			EndpointId: pulumi.String("example_value"),
// 			ServiceId:  pulumi.String("example_value"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Private Link Vpc Endpoint Connection can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:privatelink/vpcEndpointServiceConnection:VpcEndpointServiceConnection example <service_id>:<endpoint_id>
// ```
type VpcEndpointServiceConnection struct {
	pulumi.CustomResourceState

	// The Bandwidth.
	Bandwidth pulumi.IntPtrOutput `pulumi:"bandwidth"`
	// The dry run.
	DryRun pulumi.BoolPtrOutput `pulumi:"dryRun"`
	// The ID of the Vpc Endpoint.
	EndpointId pulumi.StringOutput `pulumi:"endpointId"`
	// The ID of the Vpc Endpoint Service.
	ServiceId pulumi.StringOutput `pulumi:"serviceId"`
	// The status of Vpc Endpoint Connection.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewVpcEndpointServiceConnection registers a new resource with the given unique name, arguments, and options.
func NewVpcEndpointServiceConnection(ctx *pulumi.Context,
	name string, args *VpcEndpointServiceConnectionArgs, opts ...pulumi.ResourceOption) (*VpcEndpointServiceConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EndpointId == nil {
		return nil, errors.New("invalid value for required argument 'EndpointId'")
	}
	if args.ServiceId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceId'")
	}
	var resource VpcEndpointServiceConnection
	err := ctx.RegisterResource("alicloud:privatelink/vpcEndpointServiceConnection:VpcEndpointServiceConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcEndpointServiceConnection gets an existing VpcEndpointServiceConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcEndpointServiceConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcEndpointServiceConnectionState, opts ...pulumi.ResourceOption) (*VpcEndpointServiceConnection, error) {
	var resource VpcEndpointServiceConnection
	err := ctx.ReadResource("alicloud:privatelink/vpcEndpointServiceConnection:VpcEndpointServiceConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcEndpointServiceConnection resources.
type vpcEndpointServiceConnectionState struct {
	// The Bandwidth.
	Bandwidth *int `pulumi:"bandwidth"`
	// The dry run.
	DryRun *bool `pulumi:"dryRun"`
	// The ID of the Vpc Endpoint.
	EndpointId *string `pulumi:"endpointId"`
	// The ID of the Vpc Endpoint Service.
	ServiceId *string `pulumi:"serviceId"`
	// The status of Vpc Endpoint Connection.
	Status *string `pulumi:"status"`
}

type VpcEndpointServiceConnectionState struct {
	// The Bandwidth.
	Bandwidth pulumi.IntPtrInput
	// The dry run.
	DryRun pulumi.BoolPtrInput
	// The ID of the Vpc Endpoint.
	EndpointId pulumi.StringPtrInput
	// The ID of the Vpc Endpoint Service.
	ServiceId pulumi.StringPtrInput
	// The status of Vpc Endpoint Connection.
	Status pulumi.StringPtrInput
}

func (VpcEndpointServiceConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointServiceConnectionState)(nil)).Elem()
}

type vpcEndpointServiceConnectionArgs struct {
	// The Bandwidth.
	Bandwidth *int `pulumi:"bandwidth"`
	// The dry run.
	DryRun *bool `pulumi:"dryRun"`
	// The ID of the Vpc Endpoint.
	EndpointId string `pulumi:"endpointId"`
	// The ID of the Vpc Endpoint Service.
	ServiceId string `pulumi:"serviceId"`
}

// The set of arguments for constructing a VpcEndpointServiceConnection resource.
type VpcEndpointServiceConnectionArgs struct {
	// The Bandwidth.
	Bandwidth pulumi.IntPtrInput
	// The dry run.
	DryRun pulumi.BoolPtrInput
	// The ID of the Vpc Endpoint.
	EndpointId pulumi.StringInput
	// The ID of the Vpc Endpoint Service.
	ServiceId pulumi.StringInput
}

func (VpcEndpointServiceConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointServiceConnectionArgs)(nil)).Elem()
}

type VpcEndpointServiceConnectionInput interface {
	pulumi.Input

	ToVpcEndpointServiceConnectionOutput() VpcEndpointServiceConnectionOutput
	ToVpcEndpointServiceConnectionOutputWithContext(ctx context.Context) VpcEndpointServiceConnectionOutput
}

func (*VpcEndpointServiceConnection) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointServiceConnection)(nil))
}

func (i *VpcEndpointServiceConnection) ToVpcEndpointServiceConnectionOutput() VpcEndpointServiceConnectionOutput {
	return i.ToVpcEndpointServiceConnectionOutputWithContext(context.Background())
}

func (i *VpcEndpointServiceConnection) ToVpcEndpointServiceConnectionOutputWithContext(ctx context.Context) VpcEndpointServiceConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointServiceConnectionOutput)
}

type VpcEndpointServiceConnectionOutput struct {
	*pulumi.OutputState
}

func (VpcEndpointServiceConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointServiceConnection)(nil))
}

func (o VpcEndpointServiceConnectionOutput) ToVpcEndpointServiceConnectionOutput() VpcEndpointServiceConnectionOutput {
	return o
}

func (o VpcEndpointServiceConnectionOutput) ToVpcEndpointServiceConnectionOutputWithContext(ctx context.Context) VpcEndpointServiceConnectionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(VpcEndpointServiceConnectionOutput{})
}
