// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package privatelink

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Private Link Vpc Endpoint Service User resource.
//
// For information about Private Link Vpc Endpoint Service User and how to use it, see [What is Vpc Endpoint Service User](https://help.aliyun.com/document_detail/183545.html).
//
// > **NOTE:** Available in v1.110.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/privatelink"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := privatelink.NewVpcEndpointServiceUser(ctx, "example", &privatelink.VpcEndpointServiceUserArgs{
// 			ServiceId: pulumi.String("epsrv-gw81c6xxxxxx"),
// 			UserId:    pulumi.String("YourRamUserId"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Private Link Vpc Endpoint Service User can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:privatelink/vpcEndpointServiceUser:VpcEndpointServiceUser example <service_id>:<user_id>
// ```
type VpcEndpointServiceUser struct {
	pulumi.CustomResourceState

	// The dry run.
	DryRun pulumi.BoolPtrOutput `pulumi:"dryRun"`
	// The Id of Vpc Endpoint Service.
	ServiceId pulumi.StringOutput `pulumi:"serviceId"`
	// The Id of Ram User.
	UserId pulumi.StringOutput `pulumi:"userId"`
}

// NewVpcEndpointServiceUser registers a new resource with the given unique name, arguments, and options.
func NewVpcEndpointServiceUser(ctx *pulumi.Context,
	name string, args *VpcEndpointServiceUserArgs, opts ...pulumi.ResourceOption) (*VpcEndpointServiceUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServiceId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceId'")
	}
	if args.UserId == nil {
		return nil, errors.New("invalid value for required argument 'UserId'")
	}
	var resource VpcEndpointServiceUser
	err := ctx.RegisterResource("alicloud:privatelink/vpcEndpointServiceUser:VpcEndpointServiceUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcEndpointServiceUser gets an existing VpcEndpointServiceUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcEndpointServiceUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcEndpointServiceUserState, opts ...pulumi.ResourceOption) (*VpcEndpointServiceUser, error) {
	var resource VpcEndpointServiceUser
	err := ctx.ReadResource("alicloud:privatelink/vpcEndpointServiceUser:VpcEndpointServiceUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcEndpointServiceUser resources.
type vpcEndpointServiceUserState struct {
	// The dry run.
	DryRun *bool `pulumi:"dryRun"`
	// The Id of Vpc Endpoint Service.
	ServiceId *string `pulumi:"serviceId"`
	// The Id of Ram User.
	UserId *string `pulumi:"userId"`
}

type VpcEndpointServiceUserState struct {
	// The dry run.
	DryRun pulumi.BoolPtrInput
	// The Id of Vpc Endpoint Service.
	ServiceId pulumi.StringPtrInput
	// The Id of Ram User.
	UserId pulumi.StringPtrInput
}

func (VpcEndpointServiceUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointServiceUserState)(nil)).Elem()
}

type vpcEndpointServiceUserArgs struct {
	// The dry run.
	DryRun *bool `pulumi:"dryRun"`
	// The Id of Vpc Endpoint Service.
	ServiceId string `pulumi:"serviceId"`
	// The Id of Ram User.
	UserId string `pulumi:"userId"`
}

// The set of arguments for constructing a VpcEndpointServiceUser resource.
type VpcEndpointServiceUserArgs struct {
	// The dry run.
	DryRun pulumi.BoolPtrInput
	// The Id of Vpc Endpoint Service.
	ServiceId pulumi.StringInput
	// The Id of Ram User.
	UserId pulumi.StringInput
}

func (VpcEndpointServiceUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointServiceUserArgs)(nil)).Elem()
}

type VpcEndpointServiceUserInput interface {
	pulumi.Input

	ToVpcEndpointServiceUserOutput() VpcEndpointServiceUserOutput
	ToVpcEndpointServiceUserOutputWithContext(ctx context.Context) VpcEndpointServiceUserOutput
}

func (*VpcEndpointServiceUser) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointServiceUser)(nil))
}

func (i *VpcEndpointServiceUser) ToVpcEndpointServiceUserOutput() VpcEndpointServiceUserOutput {
	return i.ToVpcEndpointServiceUserOutputWithContext(context.Background())
}

func (i *VpcEndpointServiceUser) ToVpcEndpointServiceUserOutputWithContext(ctx context.Context) VpcEndpointServiceUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointServiceUserOutput)
}

type VpcEndpointServiceUserOutput struct {
	*pulumi.OutputState
}

func (VpcEndpointServiceUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointServiceUser)(nil))
}

func (o VpcEndpointServiceUserOutput) ToVpcEndpointServiceUserOutput() VpcEndpointServiceUserOutput {
	return o
}

func (o VpcEndpointServiceUserOutput) ToVpcEndpointServiceUserOutputWithContext(ctx context.Context) VpcEndpointServiceUserOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(VpcEndpointServiceUserOutput{})
}
