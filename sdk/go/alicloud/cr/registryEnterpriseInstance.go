// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cr

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource will help you to manager Container Registry Enterprise Edition instances.
//
// For information about Container Registry Enterprise Edition instances and how to use it, see [Create a Instance](https://www.alibabacloud.com/help/en/doc-detail/208144.htm)
//
// > **NOTE:** Available in v1.124.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/cr"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := cr.NewRegistryEnterpriseInstance(ctx, "my_instance", &cr.RegistryEnterpriseInstanceArgs{
// 			InstanceName:  pulumi.String("test"),
// 			InstanceType:  pulumi.String("Standard"),
// 			PaymentType:   pulumi.String("Subscription"),
// 			Period:        pulumi.Int(12),
// 			RenewPeriod:   pulumi.Int(12),
// 			RenewalStatus: pulumi.String("AutoRenewal"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Container Registry Enterprise Edition instance can be imported using the `id`, e.g.
//
// ```sh
//  $ pulumi import alicloud:cr/registryEnterpriseInstance:RegistryEnterpriseInstance default cri-test
// ```
type RegistryEnterpriseInstance struct {
	pulumi.CustomResourceState

	// Time of Container Registry Enterprise Edition instance creation.
	CreatedTime pulumi.StringOutput `pulumi:"createdTime"`
	// Name of your customized oss bucket. Use this bucket as instance storage if set.
	CustomOssBucket pulumi.StringPtrOutput `pulumi:"customOssBucket"`
	// Time of Container Registry Enterprise Edition instance expiration.
	EndTime pulumi.StringOutput `pulumi:"endTime"`
	// Name of Container Registry Enterprise Edition instance.
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// Type of Container Registry Enterprise Edition instance. Valid values: `Basic`, `Standard`, `Advanced`.
	InstanceType pulumi.StringOutput `pulumi:"instanceType"`
	// Subscription of Container Registry Enterprise Edition instance. Default value: `Subscription`. Valid values: `Subscription`.
	PaymentType pulumi.StringPtrOutput `pulumi:"paymentType"`
	// Service time of Container Registry Enterprise Edition instance. Default value: `12`. Valid values: `1`, `2`, `3`, `6`, `12`, `24`, `36`, `48`, `60`. Unit: `month`.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// Renewal period of Container Registry Enterprise Edition instance. Unit: `month`.
	RenewPeriod pulumi.IntPtrOutput `pulumi:"renewPeriod"`
	// Renewal status of Container Registry Enterprise Edition instance. Valid values: `AutoRenewal`, `ManualRenewal`.
	RenewalStatus pulumi.StringPtrOutput `pulumi:"renewalStatus"`
	// Status of Container Registry Enterprise Edition instance.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewRegistryEnterpriseInstance registers a new resource with the given unique name, arguments, and options.
func NewRegistryEnterpriseInstance(ctx *pulumi.Context,
	name string, args *RegistryEnterpriseInstanceArgs, opts ...pulumi.ResourceOption) (*RegistryEnterpriseInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	if args.InstanceType == nil {
		return nil, errors.New("invalid value for required argument 'InstanceType'")
	}
	var resource RegistryEnterpriseInstance
	err := ctx.RegisterResource("alicloud:cr/registryEnterpriseInstance:RegistryEnterpriseInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegistryEnterpriseInstance gets an existing RegistryEnterpriseInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegistryEnterpriseInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegistryEnterpriseInstanceState, opts ...pulumi.ResourceOption) (*RegistryEnterpriseInstance, error) {
	var resource RegistryEnterpriseInstance
	err := ctx.ReadResource("alicloud:cr/registryEnterpriseInstance:RegistryEnterpriseInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RegistryEnterpriseInstance resources.
type registryEnterpriseInstanceState struct {
	// Time of Container Registry Enterprise Edition instance creation.
	CreatedTime *string `pulumi:"createdTime"`
	// Name of your customized oss bucket. Use this bucket as instance storage if set.
	CustomOssBucket *string `pulumi:"customOssBucket"`
	// Time of Container Registry Enterprise Edition instance expiration.
	EndTime *string `pulumi:"endTime"`
	// Name of Container Registry Enterprise Edition instance.
	InstanceName *string `pulumi:"instanceName"`
	// Type of Container Registry Enterprise Edition instance. Valid values: `Basic`, `Standard`, `Advanced`.
	InstanceType *string `pulumi:"instanceType"`
	// Subscription of Container Registry Enterprise Edition instance. Default value: `Subscription`. Valid values: `Subscription`.
	PaymentType *string `pulumi:"paymentType"`
	// Service time of Container Registry Enterprise Edition instance. Default value: `12`. Valid values: `1`, `2`, `3`, `6`, `12`, `24`, `36`, `48`, `60`. Unit: `month`.
	Period *int `pulumi:"period"`
	// Renewal period of Container Registry Enterprise Edition instance. Unit: `month`.
	RenewPeriod *int `pulumi:"renewPeriod"`
	// Renewal status of Container Registry Enterprise Edition instance. Valid values: `AutoRenewal`, `ManualRenewal`.
	RenewalStatus *string `pulumi:"renewalStatus"`
	// Status of Container Registry Enterprise Edition instance.
	Status *string `pulumi:"status"`
}

type RegistryEnterpriseInstanceState struct {
	// Time of Container Registry Enterprise Edition instance creation.
	CreatedTime pulumi.StringPtrInput
	// Name of your customized oss bucket. Use this bucket as instance storage if set.
	CustomOssBucket pulumi.StringPtrInput
	// Time of Container Registry Enterprise Edition instance expiration.
	EndTime pulumi.StringPtrInput
	// Name of Container Registry Enterprise Edition instance.
	InstanceName pulumi.StringPtrInput
	// Type of Container Registry Enterprise Edition instance. Valid values: `Basic`, `Standard`, `Advanced`.
	InstanceType pulumi.StringPtrInput
	// Subscription of Container Registry Enterprise Edition instance. Default value: `Subscription`. Valid values: `Subscription`.
	PaymentType pulumi.StringPtrInput
	// Service time of Container Registry Enterprise Edition instance. Default value: `12`. Valid values: `1`, `2`, `3`, `6`, `12`, `24`, `36`, `48`, `60`. Unit: `month`.
	Period pulumi.IntPtrInput
	// Renewal period of Container Registry Enterprise Edition instance. Unit: `month`.
	RenewPeriod pulumi.IntPtrInput
	// Renewal status of Container Registry Enterprise Edition instance. Valid values: `AutoRenewal`, `ManualRenewal`.
	RenewalStatus pulumi.StringPtrInput
	// Status of Container Registry Enterprise Edition instance.
	Status pulumi.StringPtrInput
}

func (RegistryEnterpriseInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*registryEnterpriseInstanceState)(nil)).Elem()
}

type registryEnterpriseInstanceArgs struct {
	// Name of your customized oss bucket. Use this bucket as instance storage if set.
	CustomOssBucket *string `pulumi:"customOssBucket"`
	// Name of Container Registry Enterprise Edition instance.
	InstanceName string `pulumi:"instanceName"`
	// Type of Container Registry Enterprise Edition instance. Valid values: `Basic`, `Standard`, `Advanced`.
	InstanceType string `pulumi:"instanceType"`
	// Subscription of Container Registry Enterprise Edition instance. Default value: `Subscription`. Valid values: `Subscription`.
	PaymentType *string `pulumi:"paymentType"`
	// Service time of Container Registry Enterprise Edition instance. Default value: `12`. Valid values: `1`, `2`, `3`, `6`, `12`, `24`, `36`, `48`, `60`. Unit: `month`.
	Period *int `pulumi:"period"`
	// Renewal period of Container Registry Enterprise Edition instance. Unit: `month`.
	RenewPeriod *int `pulumi:"renewPeriod"`
	// Renewal status of Container Registry Enterprise Edition instance. Valid values: `AutoRenewal`, `ManualRenewal`.
	RenewalStatus *string `pulumi:"renewalStatus"`
}

// The set of arguments for constructing a RegistryEnterpriseInstance resource.
type RegistryEnterpriseInstanceArgs struct {
	// Name of your customized oss bucket. Use this bucket as instance storage if set.
	CustomOssBucket pulumi.StringPtrInput
	// Name of Container Registry Enterprise Edition instance.
	InstanceName pulumi.StringInput
	// Type of Container Registry Enterprise Edition instance. Valid values: `Basic`, `Standard`, `Advanced`.
	InstanceType pulumi.StringInput
	// Subscription of Container Registry Enterprise Edition instance. Default value: `Subscription`. Valid values: `Subscription`.
	PaymentType pulumi.StringPtrInput
	// Service time of Container Registry Enterprise Edition instance. Default value: `12`. Valid values: `1`, `2`, `3`, `6`, `12`, `24`, `36`, `48`, `60`. Unit: `month`.
	Period pulumi.IntPtrInput
	// Renewal period of Container Registry Enterprise Edition instance. Unit: `month`.
	RenewPeriod pulumi.IntPtrInput
	// Renewal status of Container Registry Enterprise Edition instance. Valid values: `AutoRenewal`, `ManualRenewal`.
	RenewalStatus pulumi.StringPtrInput
}

func (RegistryEnterpriseInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*registryEnterpriseInstanceArgs)(nil)).Elem()
}

type RegistryEnterpriseInstanceInput interface {
	pulumi.Input

	ToRegistryEnterpriseInstanceOutput() RegistryEnterpriseInstanceOutput
	ToRegistryEnterpriseInstanceOutputWithContext(ctx context.Context) RegistryEnterpriseInstanceOutput
}

func (*RegistryEnterpriseInstance) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEnterpriseInstance)(nil))
}

func (i *RegistryEnterpriseInstance) ToRegistryEnterpriseInstanceOutput() RegistryEnterpriseInstanceOutput {
	return i.ToRegistryEnterpriseInstanceOutputWithContext(context.Background())
}

func (i *RegistryEnterpriseInstance) ToRegistryEnterpriseInstanceOutputWithContext(ctx context.Context) RegistryEnterpriseInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEnterpriseInstanceOutput)
}

func (i *RegistryEnterpriseInstance) ToRegistryEnterpriseInstancePtrOutput() RegistryEnterpriseInstancePtrOutput {
	return i.ToRegistryEnterpriseInstancePtrOutputWithContext(context.Background())
}

func (i *RegistryEnterpriseInstance) ToRegistryEnterpriseInstancePtrOutputWithContext(ctx context.Context) RegistryEnterpriseInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEnterpriseInstancePtrOutput)
}

type RegistryEnterpriseInstancePtrInput interface {
	pulumi.Input

	ToRegistryEnterpriseInstancePtrOutput() RegistryEnterpriseInstancePtrOutput
	ToRegistryEnterpriseInstancePtrOutputWithContext(ctx context.Context) RegistryEnterpriseInstancePtrOutput
}

type registryEnterpriseInstancePtrType RegistryEnterpriseInstanceArgs

func (*registryEnterpriseInstancePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEnterpriseInstance)(nil))
}

func (i *registryEnterpriseInstancePtrType) ToRegistryEnterpriseInstancePtrOutput() RegistryEnterpriseInstancePtrOutput {
	return i.ToRegistryEnterpriseInstancePtrOutputWithContext(context.Background())
}

func (i *registryEnterpriseInstancePtrType) ToRegistryEnterpriseInstancePtrOutputWithContext(ctx context.Context) RegistryEnterpriseInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEnterpriseInstancePtrOutput)
}

// RegistryEnterpriseInstanceArrayInput is an input type that accepts RegistryEnterpriseInstanceArray and RegistryEnterpriseInstanceArrayOutput values.
// You can construct a concrete instance of `RegistryEnterpriseInstanceArrayInput` via:
//
//          RegistryEnterpriseInstanceArray{ RegistryEnterpriseInstanceArgs{...} }
type RegistryEnterpriseInstanceArrayInput interface {
	pulumi.Input

	ToRegistryEnterpriseInstanceArrayOutput() RegistryEnterpriseInstanceArrayOutput
	ToRegistryEnterpriseInstanceArrayOutputWithContext(context.Context) RegistryEnterpriseInstanceArrayOutput
}

type RegistryEnterpriseInstanceArray []RegistryEnterpriseInstanceInput

func (RegistryEnterpriseInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*RegistryEnterpriseInstance)(nil))
}

func (i RegistryEnterpriseInstanceArray) ToRegistryEnterpriseInstanceArrayOutput() RegistryEnterpriseInstanceArrayOutput {
	return i.ToRegistryEnterpriseInstanceArrayOutputWithContext(context.Background())
}

func (i RegistryEnterpriseInstanceArray) ToRegistryEnterpriseInstanceArrayOutputWithContext(ctx context.Context) RegistryEnterpriseInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEnterpriseInstanceArrayOutput)
}

// RegistryEnterpriseInstanceMapInput is an input type that accepts RegistryEnterpriseInstanceMap and RegistryEnterpriseInstanceMapOutput values.
// You can construct a concrete instance of `RegistryEnterpriseInstanceMapInput` via:
//
//          RegistryEnterpriseInstanceMap{ "key": RegistryEnterpriseInstanceArgs{...} }
type RegistryEnterpriseInstanceMapInput interface {
	pulumi.Input

	ToRegistryEnterpriseInstanceMapOutput() RegistryEnterpriseInstanceMapOutput
	ToRegistryEnterpriseInstanceMapOutputWithContext(context.Context) RegistryEnterpriseInstanceMapOutput
}

type RegistryEnterpriseInstanceMap map[string]RegistryEnterpriseInstanceInput

func (RegistryEnterpriseInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*RegistryEnterpriseInstance)(nil))
}

func (i RegistryEnterpriseInstanceMap) ToRegistryEnterpriseInstanceMapOutput() RegistryEnterpriseInstanceMapOutput {
	return i.ToRegistryEnterpriseInstanceMapOutputWithContext(context.Background())
}

func (i RegistryEnterpriseInstanceMap) ToRegistryEnterpriseInstanceMapOutputWithContext(ctx context.Context) RegistryEnterpriseInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryEnterpriseInstanceMapOutput)
}

type RegistryEnterpriseInstanceOutput struct {
	*pulumi.OutputState
}

func (RegistryEnterpriseInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryEnterpriseInstance)(nil))
}

func (o RegistryEnterpriseInstanceOutput) ToRegistryEnterpriseInstanceOutput() RegistryEnterpriseInstanceOutput {
	return o
}

func (o RegistryEnterpriseInstanceOutput) ToRegistryEnterpriseInstanceOutputWithContext(ctx context.Context) RegistryEnterpriseInstanceOutput {
	return o
}

func (o RegistryEnterpriseInstanceOutput) ToRegistryEnterpriseInstancePtrOutput() RegistryEnterpriseInstancePtrOutput {
	return o.ToRegistryEnterpriseInstancePtrOutputWithContext(context.Background())
}

func (o RegistryEnterpriseInstanceOutput) ToRegistryEnterpriseInstancePtrOutputWithContext(ctx context.Context) RegistryEnterpriseInstancePtrOutput {
	return o.ApplyT(func(v RegistryEnterpriseInstance) *RegistryEnterpriseInstance {
		return &v
	}).(RegistryEnterpriseInstancePtrOutput)
}

type RegistryEnterpriseInstancePtrOutput struct {
	*pulumi.OutputState
}

func (RegistryEnterpriseInstancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryEnterpriseInstance)(nil))
}

func (o RegistryEnterpriseInstancePtrOutput) ToRegistryEnterpriseInstancePtrOutput() RegistryEnterpriseInstancePtrOutput {
	return o
}

func (o RegistryEnterpriseInstancePtrOutput) ToRegistryEnterpriseInstancePtrOutputWithContext(ctx context.Context) RegistryEnterpriseInstancePtrOutput {
	return o
}

type RegistryEnterpriseInstanceArrayOutput struct{ *pulumi.OutputState }

func (RegistryEnterpriseInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryEnterpriseInstance)(nil))
}

func (o RegistryEnterpriseInstanceArrayOutput) ToRegistryEnterpriseInstanceArrayOutput() RegistryEnterpriseInstanceArrayOutput {
	return o
}

func (o RegistryEnterpriseInstanceArrayOutput) ToRegistryEnterpriseInstanceArrayOutputWithContext(ctx context.Context) RegistryEnterpriseInstanceArrayOutput {
	return o
}

func (o RegistryEnterpriseInstanceArrayOutput) Index(i pulumi.IntInput) RegistryEnterpriseInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegistryEnterpriseInstance {
		return vs[0].([]RegistryEnterpriseInstance)[vs[1].(int)]
	}).(RegistryEnterpriseInstanceOutput)
}

type RegistryEnterpriseInstanceMapOutput struct{ *pulumi.OutputState }

func (RegistryEnterpriseInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]RegistryEnterpriseInstance)(nil))
}

func (o RegistryEnterpriseInstanceMapOutput) ToRegistryEnterpriseInstanceMapOutput() RegistryEnterpriseInstanceMapOutput {
	return o
}

func (o RegistryEnterpriseInstanceMapOutput) ToRegistryEnterpriseInstanceMapOutputWithContext(ctx context.Context) RegistryEnterpriseInstanceMapOutput {
	return o
}

func (o RegistryEnterpriseInstanceMapOutput) MapIndex(k pulumi.StringInput) RegistryEnterpriseInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) RegistryEnterpriseInstance {
		return vs[0].(map[string]RegistryEnterpriseInstance)[vs[1].(string)]
	}).(RegistryEnterpriseInstanceOutput)
}

func init() {
	pulumi.RegisterOutputType(RegistryEnterpriseInstanceOutput{})
	pulumi.RegisterOutputType(RegistryEnterpriseInstancePtrOutput{})
	pulumi.RegisterOutputType(RegistryEnterpriseInstanceArrayOutput{})
	pulumi.RegisterOutputType(RegistryEnterpriseInstanceMapOutput{})
}
