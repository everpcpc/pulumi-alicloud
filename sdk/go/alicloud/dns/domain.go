// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a DNS resource.
// 
// > **NOTE:** The domain name which you want to add must be already registered and had not added by another account. Every domain name can only exist in a unique group.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/dns.html.markdown.
type Domain struct {
	s *pulumi.ResourceState
}

// NewDomain registers a new resource with the given unique name, arguments, and options.
func NewDomain(ctx *pulumi.Context,
	name string, args *DomainArgs, opts ...pulumi.ResourceOpt) (*Domain, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["groupId"] = nil
		inputs["name"] = nil
		inputs["resourceGroupId"] = nil
	} else {
		inputs["groupId"] = args.GroupId
		inputs["name"] = args.Name
		inputs["resourceGroupId"] = args.ResourceGroupId
	}
	inputs["dnsServers"] = nil
	inputs["domainId"] = nil
	s, err := ctx.RegisterResource("alicloud:dns/domain:Domain", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Domain{s: s}, nil
}

// GetDomain gets an existing Domain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomain(ctx *pulumi.Context,
	name string, id pulumi.ID, state *DomainState, opts ...pulumi.ResourceOpt) (*Domain, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["dnsServers"] = state.DnsServers
		inputs["domainId"] = state.DomainId
		inputs["groupId"] = state.GroupId
		inputs["name"] = state.Name
		inputs["resourceGroupId"] = state.ResourceGroupId
	}
	s, err := ctx.ReadResource("alicloud:dns/domain:Domain", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Domain{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Domain) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Domain) ID() pulumi.IDOutput {
	return r.s.ID()
}

// A list of the dns server name.
func (r *Domain) DnsServers() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["dnsServers"])
}

// The domain ID.
func (r *Domain) DomainId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["domainId"])
}

// Id of the group in which the domain will add. If not supplied, then use default group.
func (r *Domain) GroupId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["groupId"])
}

// Name of the domain. This name without suffix can have a string of 1 to 63 characters, must contain only alphanumeric characters or "-", and must not begin or end with "-", and "-" must not in the 3th and 4th character positions at the same time. Suffix `.sh` and `.tel` are not supported.
func (r *Domain) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// The Id of resource group which the dns belongs.
func (r *Domain) ResourceGroupId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGroupId"])
}

// Input properties used for looking up and filtering Domain resources.
type DomainState struct {
	// A list of the dns server name.
	DnsServers interface{}
	// The domain ID.
	DomainId interface{}
	// Id of the group in which the domain will add. If not supplied, then use default group.
	GroupId interface{}
	// Name of the domain. This name without suffix can have a string of 1 to 63 characters, must contain only alphanumeric characters or "-", and must not begin or end with "-", and "-" must not in the 3th and 4th character positions at the same time. Suffix `.sh` and `.tel` are not supported.
	Name interface{}
	// The Id of resource group which the dns belongs.
	ResourceGroupId interface{}
}

// The set of arguments for constructing a Domain resource.
type DomainArgs struct {
	// Id of the group in which the domain will add. If not supplied, then use default group.
	GroupId interface{}
	// Name of the domain. This name without suffix can have a string of 1 to 63 characters, must contain only alphanumeric characters or "-", and must not begin or end with "-", and "-" must not in the 3th and 4th character positions at the same time. Suffix `.sh` and `.tel` are not supported.
	Name interface{}
	// The Id of resource group which the dns belongs.
	ResourceGroupId interface{}
}
