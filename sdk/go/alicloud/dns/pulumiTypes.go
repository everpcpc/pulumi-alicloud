// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetAlidnsDomainGroupsGroup struct {
	// Number of domain names in the group.
	DomainCount int `pulumi:"domainCount"`
	// Id of the domain group.
	GroupId string `pulumi:"groupId"`
	// The name of the domain group.
	GroupName string `pulumi:"groupName"`
	// Id of the instance.
	Id string `pulumi:"id"`
}

// GetAlidnsDomainGroupsGroupInput is an input type that accepts GetAlidnsDomainGroupsGroupArgs and GetAlidnsDomainGroupsGroupOutput values.
// You can construct a concrete instance of `GetAlidnsDomainGroupsGroupInput` via:
//
//          GetAlidnsDomainGroupsGroupArgs{...}
type GetAlidnsDomainGroupsGroupInput interface {
	pulumi.Input

	ToGetAlidnsDomainGroupsGroupOutput() GetAlidnsDomainGroupsGroupOutput
	ToGetAlidnsDomainGroupsGroupOutputWithContext(context.Context) GetAlidnsDomainGroupsGroupOutput
}

type GetAlidnsDomainGroupsGroupArgs struct {
	// Number of domain names in the group.
	DomainCount pulumi.IntInput `pulumi:"domainCount"`
	// Id of the domain group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The name of the domain group.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// Id of the instance.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetAlidnsDomainGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlidnsDomainGroupsGroup)(nil)).Elem()
}

func (i GetAlidnsDomainGroupsGroupArgs) ToGetAlidnsDomainGroupsGroupOutput() GetAlidnsDomainGroupsGroupOutput {
	return i.ToGetAlidnsDomainGroupsGroupOutputWithContext(context.Background())
}

func (i GetAlidnsDomainGroupsGroupArgs) ToGetAlidnsDomainGroupsGroupOutputWithContext(ctx context.Context) GetAlidnsDomainGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlidnsDomainGroupsGroupOutput)
}

// GetAlidnsDomainGroupsGroupArrayInput is an input type that accepts GetAlidnsDomainGroupsGroupArray and GetAlidnsDomainGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetAlidnsDomainGroupsGroupArrayInput` via:
//
//          GetAlidnsDomainGroupsGroupArray{ GetAlidnsDomainGroupsGroupArgs{...} }
type GetAlidnsDomainGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetAlidnsDomainGroupsGroupArrayOutput() GetAlidnsDomainGroupsGroupArrayOutput
	ToGetAlidnsDomainGroupsGroupArrayOutputWithContext(context.Context) GetAlidnsDomainGroupsGroupArrayOutput
}

type GetAlidnsDomainGroupsGroupArray []GetAlidnsDomainGroupsGroupInput

func (GetAlidnsDomainGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlidnsDomainGroupsGroup)(nil)).Elem()
}

func (i GetAlidnsDomainGroupsGroupArray) ToGetAlidnsDomainGroupsGroupArrayOutput() GetAlidnsDomainGroupsGroupArrayOutput {
	return i.ToGetAlidnsDomainGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetAlidnsDomainGroupsGroupArray) ToGetAlidnsDomainGroupsGroupArrayOutputWithContext(ctx context.Context) GetAlidnsDomainGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlidnsDomainGroupsGroupArrayOutput)
}

type GetAlidnsDomainGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetAlidnsDomainGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlidnsDomainGroupsGroup)(nil)).Elem()
}

func (o GetAlidnsDomainGroupsGroupOutput) ToGetAlidnsDomainGroupsGroupOutput() GetAlidnsDomainGroupsGroupOutput {
	return o
}

func (o GetAlidnsDomainGroupsGroupOutput) ToGetAlidnsDomainGroupsGroupOutputWithContext(ctx context.Context) GetAlidnsDomainGroupsGroupOutput {
	return o
}

// Number of domain names in the group.
func (o GetAlidnsDomainGroupsGroupOutput) DomainCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlidnsDomainGroupsGroup) int { return v.DomainCount }).(pulumi.IntOutput)
}

// Id of the domain group.
func (o GetAlidnsDomainGroupsGroupOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainGroupsGroup) string { return v.GroupId }).(pulumi.StringOutput)
}

// The name of the domain group.
func (o GetAlidnsDomainGroupsGroupOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainGroupsGroup) string { return v.GroupName }).(pulumi.StringOutput)
}

// Id of the instance.
func (o GetAlidnsDomainGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

type GetAlidnsDomainGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetAlidnsDomainGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlidnsDomainGroupsGroup)(nil)).Elem()
}

func (o GetAlidnsDomainGroupsGroupArrayOutput) ToGetAlidnsDomainGroupsGroupArrayOutput() GetAlidnsDomainGroupsGroupArrayOutput {
	return o
}

func (o GetAlidnsDomainGroupsGroupArrayOutput) ToGetAlidnsDomainGroupsGroupArrayOutputWithContext(ctx context.Context) GetAlidnsDomainGroupsGroupArrayOutput {
	return o
}

func (o GetAlidnsDomainGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetAlidnsDomainGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlidnsDomainGroupsGroup {
		return vs[0].([]GetAlidnsDomainGroupsGroup)[vs[1].(int)]
	}).(GetAlidnsDomainGroupsGroupOutput)
}

type GetAlidnsDomainsDomain struct {
	// Specifies whether the domain is from Alibaba Cloud or not.
	AliDomain bool `pulumi:"aliDomain"`
	// List of available TTLs.
	AvailableTtls []int `pulumi:"availableTtls"`
	// DNS list of domain names in the resolution system.
	DnsServers []string `pulumi:"dnsServers"`
	// ID of the domain.
	DomainId string `pulumi:"domainId"`
	// Name of the domain.
	DomainName string `pulumi:"domainName"`
	// Domain group ID, if not filled, the default is all groups.
	GroupId string `pulumi:"groupId"`
	// Name of group that contains the domain.
	GroupName string `pulumi:"groupName"`
	// The Id of resource.
	Id string `pulumi:"id"`
	// Whether it is in black hole.
	InBlackHole bool `pulumi:"inBlackHole"`
	// Whether it is cleaning.
	InClean bool `pulumi:"inClean"`
	// Cloud analysis product ID.
	InstanceId string `pulumi:"instanceId"`
	LineType   string `pulumi:"lineType"`
	// Minimum TTL.
	MinTtl int `pulumi:"minTtl"`
	// Punycode of the Chinese domain.
	PunyCode string `pulumi:"punyCode"`
	// Tree-like analytical line list.
	RecordLineTreeJson string `pulumi:"recordLineTreeJson"`
	// Parse the line data list.
	RecordLines []GetAlidnsDomainsDomainRecordLine `pulumi:"recordLines"`
	// Whether it is a regional route.
	RegionLines bool `pulumi:"regionLines"`
	// The Id of resource group which the dns belongs.
	Remark string `pulumi:"remark"`
	// The Id of resource group which the dns belongs.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Whether to allow auxiliary dns.
	SlaveDns bool `pulumi:"slaveDns"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// Cloud analysis version code.
	VersionCode string `pulumi:"versionCode"`
	VersionName string `pulumi:"versionName"`
}

// GetAlidnsDomainsDomainInput is an input type that accepts GetAlidnsDomainsDomainArgs and GetAlidnsDomainsDomainOutput values.
// You can construct a concrete instance of `GetAlidnsDomainsDomainInput` via:
//
//          GetAlidnsDomainsDomainArgs{...}
type GetAlidnsDomainsDomainInput interface {
	pulumi.Input

	ToGetAlidnsDomainsDomainOutput() GetAlidnsDomainsDomainOutput
	ToGetAlidnsDomainsDomainOutputWithContext(context.Context) GetAlidnsDomainsDomainOutput
}

type GetAlidnsDomainsDomainArgs struct {
	// Specifies whether the domain is from Alibaba Cloud or not.
	AliDomain pulumi.BoolInput `pulumi:"aliDomain"`
	// List of available TTLs.
	AvailableTtls pulumi.IntArrayInput `pulumi:"availableTtls"`
	// DNS list of domain names in the resolution system.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// ID of the domain.
	DomainId pulumi.StringInput `pulumi:"domainId"`
	// Name of the domain.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// Domain group ID, if not filled, the default is all groups.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Name of group that contains the domain.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// The Id of resource.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether it is in black hole.
	InBlackHole pulumi.BoolInput `pulumi:"inBlackHole"`
	// Whether it is cleaning.
	InClean pulumi.BoolInput `pulumi:"inClean"`
	// Cloud analysis product ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	LineType   pulumi.StringInput `pulumi:"lineType"`
	// Minimum TTL.
	MinTtl pulumi.IntInput `pulumi:"minTtl"`
	// Punycode of the Chinese domain.
	PunyCode pulumi.StringInput `pulumi:"punyCode"`
	// Tree-like analytical line list.
	RecordLineTreeJson pulumi.StringInput `pulumi:"recordLineTreeJson"`
	// Parse the line data list.
	RecordLines GetAlidnsDomainsDomainRecordLineArrayInput `pulumi:"recordLines"`
	// Whether it is a regional route.
	RegionLines pulumi.BoolInput `pulumi:"regionLines"`
	// The Id of resource group which the dns belongs.
	Remark pulumi.StringInput `pulumi:"remark"`
	// The Id of resource group which the dns belongs.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// Whether to allow auxiliary dns.
	SlaveDns pulumi.BoolInput `pulumi:"slaveDns"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Cloud analysis version code.
	VersionCode pulumi.StringInput `pulumi:"versionCode"`
	VersionName pulumi.StringInput `pulumi:"versionName"`
}

func (GetAlidnsDomainsDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlidnsDomainsDomain)(nil)).Elem()
}

func (i GetAlidnsDomainsDomainArgs) ToGetAlidnsDomainsDomainOutput() GetAlidnsDomainsDomainOutput {
	return i.ToGetAlidnsDomainsDomainOutputWithContext(context.Background())
}

func (i GetAlidnsDomainsDomainArgs) ToGetAlidnsDomainsDomainOutputWithContext(ctx context.Context) GetAlidnsDomainsDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlidnsDomainsDomainOutput)
}

// GetAlidnsDomainsDomainArrayInput is an input type that accepts GetAlidnsDomainsDomainArray and GetAlidnsDomainsDomainArrayOutput values.
// You can construct a concrete instance of `GetAlidnsDomainsDomainArrayInput` via:
//
//          GetAlidnsDomainsDomainArray{ GetAlidnsDomainsDomainArgs{...} }
type GetAlidnsDomainsDomainArrayInput interface {
	pulumi.Input

	ToGetAlidnsDomainsDomainArrayOutput() GetAlidnsDomainsDomainArrayOutput
	ToGetAlidnsDomainsDomainArrayOutputWithContext(context.Context) GetAlidnsDomainsDomainArrayOutput
}

type GetAlidnsDomainsDomainArray []GetAlidnsDomainsDomainInput

func (GetAlidnsDomainsDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlidnsDomainsDomain)(nil)).Elem()
}

func (i GetAlidnsDomainsDomainArray) ToGetAlidnsDomainsDomainArrayOutput() GetAlidnsDomainsDomainArrayOutput {
	return i.ToGetAlidnsDomainsDomainArrayOutputWithContext(context.Background())
}

func (i GetAlidnsDomainsDomainArray) ToGetAlidnsDomainsDomainArrayOutputWithContext(ctx context.Context) GetAlidnsDomainsDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlidnsDomainsDomainArrayOutput)
}

type GetAlidnsDomainsDomainOutput struct{ *pulumi.OutputState }

func (GetAlidnsDomainsDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlidnsDomainsDomain)(nil)).Elem()
}

func (o GetAlidnsDomainsDomainOutput) ToGetAlidnsDomainsDomainOutput() GetAlidnsDomainsDomainOutput {
	return o
}

func (o GetAlidnsDomainsDomainOutput) ToGetAlidnsDomainsDomainOutputWithContext(ctx context.Context) GetAlidnsDomainsDomainOutput {
	return o
}

// Specifies whether the domain is from Alibaba Cloud or not.
func (o GetAlidnsDomainsDomainOutput) AliDomain() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) bool { return v.AliDomain }).(pulumi.BoolOutput)
}

// List of available TTLs.
func (o GetAlidnsDomainsDomainOutput) AvailableTtls() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) []int { return v.AvailableTtls }).(pulumi.IntArrayOutput)
}

// DNS list of domain names in the resolution system.
func (o GetAlidnsDomainsDomainOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// ID of the domain.
func (o GetAlidnsDomainsDomainOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) string { return v.DomainId }).(pulumi.StringOutput)
}

// Name of the domain.
func (o GetAlidnsDomainsDomainOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) string { return v.DomainName }).(pulumi.StringOutput)
}

// Domain group ID, if not filled, the default is all groups.
func (o GetAlidnsDomainsDomainOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) string { return v.GroupId }).(pulumi.StringOutput)
}

// Name of group that contains the domain.
func (o GetAlidnsDomainsDomainOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) string { return v.GroupName }).(pulumi.StringOutput)
}

// The Id of resource.
func (o GetAlidnsDomainsDomainOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) string { return v.Id }).(pulumi.StringOutput)
}

// Whether it is in black hole.
func (o GetAlidnsDomainsDomainOutput) InBlackHole() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) bool { return v.InBlackHole }).(pulumi.BoolOutput)
}

// Whether it is cleaning.
func (o GetAlidnsDomainsDomainOutput) InClean() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) bool { return v.InClean }).(pulumi.BoolOutput)
}

// Cloud analysis product ID.
func (o GetAlidnsDomainsDomainOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetAlidnsDomainsDomainOutput) LineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) string { return v.LineType }).(pulumi.StringOutput)
}

// Minimum TTL.
func (o GetAlidnsDomainsDomainOutput) MinTtl() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) int { return v.MinTtl }).(pulumi.IntOutput)
}

// Punycode of the Chinese domain.
func (o GetAlidnsDomainsDomainOutput) PunyCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) string { return v.PunyCode }).(pulumi.StringOutput)
}

// Tree-like analytical line list.
func (o GetAlidnsDomainsDomainOutput) RecordLineTreeJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) string { return v.RecordLineTreeJson }).(pulumi.StringOutput)
}

// Parse the line data list.
func (o GetAlidnsDomainsDomainOutput) RecordLines() GetAlidnsDomainsDomainRecordLineArrayOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) []GetAlidnsDomainsDomainRecordLine { return v.RecordLines }).(GetAlidnsDomainsDomainRecordLineArrayOutput)
}

// Whether it is a regional route.
func (o GetAlidnsDomainsDomainOutput) RegionLines() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) bool { return v.RegionLines }).(pulumi.BoolOutput)
}

// The Id of resource group which the dns belongs.
func (o GetAlidnsDomainsDomainOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) string { return v.Remark }).(pulumi.StringOutput)
}

// The Id of resource group which the dns belongs.
func (o GetAlidnsDomainsDomainOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// Whether to allow auxiliary dns.
func (o GetAlidnsDomainsDomainOutput) SlaveDns() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) bool { return v.SlaveDns }).(pulumi.BoolOutput)
}

// A mapping of tags to assign to the resource.
func (o GetAlidnsDomainsDomainOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// Cloud analysis version code.
func (o GetAlidnsDomainsDomainOutput) VersionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) string { return v.VersionCode }).(pulumi.StringOutput)
}

func (o GetAlidnsDomainsDomainOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomain) string { return v.VersionName }).(pulumi.StringOutput)
}

type GetAlidnsDomainsDomainArrayOutput struct{ *pulumi.OutputState }

func (GetAlidnsDomainsDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlidnsDomainsDomain)(nil)).Elem()
}

func (o GetAlidnsDomainsDomainArrayOutput) ToGetAlidnsDomainsDomainArrayOutput() GetAlidnsDomainsDomainArrayOutput {
	return o
}

func (o GetAlidnsDomainsDomainArrayOutput) ToGetAlidnsDomainsDomainArrayOutputWithContext(ctx context.Context) GetAlidnsDomainsDomainArrayOutput {
	return o
}

func (o GetAlidnsDomainsDomainArrayOutput) Index(i pulumi.IntInput) GetAlidnsDomainsDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlidnsDomainsDomain {
		return vs[0].([]GetAlidnsDomainsDomain)[vs[1].(int)]
	}).(GetAlidnsDomainsDomainOutput)
}

type GetAlidnsDomainsDomainRecordLine struct {
	// The code of the parent line, or empty if there is none.
	FatherCode string `pulumi:"fatherCode"`
	// Sub-line Code.
	LineCode string `pulumi:"lineCode"`
	// Parent line display name.
	LineDisplayName string `pulumi:"lineDisplayName"`
	// Sub-line display name.
	LineName string `pulumi:"lineName"`
}

// GetAlidnsDomainsDomainRecordLineInput is an input type that accepts GetAlidnsDomainsDomainRecordLineArgs and GetAlidnsDomainsDomainRecordLineOutput values.
// You can construct a concrete instance of `GetAlidnsDomainsDomainRecordLineInput` via:
//
//          GetAlidnsDomainsDomainRecordLineArgs{...}
type GetAlidnsDomainsDomainRecordLineInput interface {
	pulumi.Input

	ToGetAlidnsDomainsDomainRecordLineOutput() GetAlidnsDomainsDomainRecordLineOutput
	ToGetAlidnsDomainsDomainRecordLineOutputWithContext(context.Context) GetAlidnsDomainsDomainRecordLineOutput
}

type GetAlidnsDomainsDomainRecordLineArgs struct {
	// The code of the parent line, or empty if there is none.
	FatherCode pulumi.StringInput `pulumi:"fatherCode"`
	// Sub-line Code.
	LineCode pulumi.StringInput `pulumi:"lineCode"`
	// Parent line display name.
	LineDisplayName pulumi.StringInput `pulumi:"lineDisplayName"`
	// Sub-line display name.
	LineName pulumi.StringInput `pulumi:"lineName"`
}

func (GetAlidnsDomainsDomainRecordLineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlidnsDomainsDomainRecordLine)(nil)).Elem()
}

func (i GetAlidnsDomainsDomainRecordLineArgs) ToGetAlidnsDomainsDomainRecordLineOutput() GetAlidnsDomainsDomainRecordLineOutput {
	return i.ToGetAlidnsDomainsDomainRecordLineOutputWithContext(context.Background())
}

func (i GetAlidnsDomainsDomainRecordLineArgs) ToGetAlidnsDomainsDomainRecordLineOutputWithContext(ctx context.Context) GetAlidnsDomainsDomainRecordLineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlidnsDomainsDomainRecordLineOutput)
}

// GetAlidnsDomainsDomainRecordLineArrayInput is an input type that accepts GetAlidnsDomainsDomainRecordLineArray and GetAlidnsDomainsDomainRecordLineArrayOutput values.
// You can construct a concrete instance of `GetAlidnsDomainsDomainRecordLineArrayInput` via:
//
//          GetAlidnsDomainsDomainRecordLineArray{ GetAlidnsDomainsDomainRecordLineArgs{...} }
type GetAlidnsDomainsDomainRecordLineArrayInput interface {
	pulumi.Input

	ToGetAlidnsDomainsDomainRecordLineArrayOutput() GetAlidnsDomainsDomainRecordLineArrayOutput
	ToGetAlidnsDomainsDomainRecordLineArrayOutputWithContext(context.Context) GetAlidnsDomainsDomainRecordLineArrayOutput
}

type GetAlidnsDomainsDomainRecordLineArray []GetAlidnsDomainsDomainRecordLineInput

func (GetAlidnsDomainsDomainRecordLineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlidnsDomainsDomainRecordLine)(nil)).Elem()
}

func (i GetAlidnsDomainsDomainRecordLineArray) ToGetAlidnsDomainsDomainRecordLineArrayOutput() GetAlidnsDomainsDomainRecordLineArrayOutput {
	return i.ToGetAlidnsDomainsDomainRecordLineArrayOutputWithContext(context.Background())
}

func (i GetAlidnsDomainsDomainRecordLineArray) ToGetAlidnsDomainsDomainRecordLineArrayOutputWithContext(ctx context.Context) GetAlidnsDomainsDomainRecordLineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlidnsDomainsDomainRecordLineArrayOutput)
}

type GetAlidnsDomainsDomainRecordLineOutput struct{ *pulumi.OutputState }

func (GetAlidnsDomainsDomainRecordLineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlidnsDomainsDomainRecordLine)(nil)).Elem()
}

func (o GetAlidnsDomainsDomainRecordLineOutput) ToGetAlidnsDomainsDomainRecordLineOutput() GetAlidnsDomainsDomainRecordLineOutput {
	return o
}

func (o GetAlidnsDomainsDomainRecordLineOutput) ToGetAlidnsDomainsDomainRecordLineOutputWithContext(ctx context.Context) GetAlidnsDomainsDomainRecordLineOutput {
	return o
}

// The code of the parent line, or empty if there is none.
func (o GetAlidnsDomainsDomainRecordLineOutput) FatherCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomainRecordLine) string { return v.FatherCode }).(pulumi.StringOutput)
}

// Sub-line Code.
func (o GetAlidnsDomainsDomainRecordLineOutput) LineCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomainRecordLine) string { return v.LineCode }).(pulumi.StringOutput)
}

// Parent line display name.
func (o GetAlidnsDomainsDomainRecordLineOutput) LineDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomainRecordLine) string { return v.LineDisplayName }).(pulumi.StringOutput)
}

// Sub-line display name.
func (o GetAlidnsDomainsDomainRecordLineOutput) LineName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsDomainsDomainRecordLine) string { return v.LineName }).(pulumi.StringOutput)
}

type GetAlidnsDomainsDomainRecordLineArrayOutput struct{ *pulumi.OutputState }

func (GetAlidnsDomainsDomainRecordLineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlidnsDomainsDomainRecordLine)(nil)).Elem()
}

func (o GetAlidnsDomainsDomainRecordLineArrayOutput) ToGetAlidnsDomainsDomainRecordLineArrayOutput() GetAlidnsDomainsDomainRecordLineArrayOutput {
	return o
}

func (o GetAlidnsDomainsDomainRecordLineArrayOutput) ToGetAlidnsDomainsDomainRecordLineArrayOutputWithContext(ctx context.Context) GetAlidnsDomainsDomainRecordLineArrayOutput {
	return o
}

func (o GetAlidnsDomainsDomainRecordLineArrayOutput) Index(i pulumi.IntInput) GetAlidnsDomainsDomainRecordLineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlidnsDomainsDomainRecordLine {
		return vs[0].([]GetAlidnsDomainsDomainRecordLine)[vs[1].(int)]
	}).(GetAlidnsDomainsDomainRecordLineOutput)
}

type GetAlidnsInstancesInstance struct {
	// DNS security level.
	DnsSecurity string `pulumi:"dnsSecurity"`
	// Number of domain names bound.
	DomainNumbers string `pulumi:"domainNumbers"`
	// Id of the instance.
	Id string `pulumi:"id"`
	// Id of the instance resource.
	InstanceId string `pulumi:"instanceId"`
	// Paid package version.
	VersionCode string `pulumi:"versionCode"`
	// Paid package version name.
	VersionName string `pulumi:"versionName"`
}

// GetAlidnsInstancesInstanceInput is an input type that accepts GetAlidnsInstancesInstanceArgs and GetAlidnsInstancesInstanceOutput values.
// You can construct a concrete instance of `GetAlidnsInstancesInstanceInput` via:
//
//          GetAlidnsInstancesInstanceArgs{...}
type GetAlidnsInstancesInstanceInput interface {
	pulumi.Input

	ToGetAlidnsInstancesInstanceOutput() GetAlidnsInstancesInstanceOutput
	ToGetAlidnsInstancesInstanceOutputWithContext(context.Context) GetAlidnsInstancesInstanceOutput
}

type GetAlidnsInstancesInstanceArgs struct {
	// DNS security level.
	DnsSecurity pulumi.StringInput `pulumi:"dnsSecurity"`
	// Number of domain names bound.
	DomainNumbers pulumi.StringInput `pulumi:"domainNumbers"`
	// Id of the instance.
	Id pulumi.StringInput `pulumi:"id"`
	// Id of the instance resource.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Paid package version.
	VersionCode pulumi.StringInput `pulumi:"versionCode"`
	// Paid package version name.
	VersionName pulumi.StringInput `pulumi:"versionName"`
}

func (GetAlidnsInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlidnsInstancesInstance)(nil)).Elem()
}

func (i GetAlidnsInstancesInstanceArgs) ToGetAlidnsInstancesInstanceOutput() GetAlidnsInstancesInstanceOutput {
	return i.ToGetAlidnsInstancesInstanceOutputWithContext(context.Background())
}

func (i GetAlidnsInstancesInstanceArgs) ToGetAlidnsInstancesInstanceOutputWithContext(ctx context.Context) GetAlidnsInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlidnsInstancesInstanceOutput)
}

// GetAlidnsInstancesInstanceArrayInput is an input type that accepts GetAlidnsInstancesInstanceArray and GetAlidnsInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetAlidnsInstancesInstanceArrayInput` via:
//
//          GetAlidnsInstancesInstanceArray{ GetAlidnsInstancesInstanceArgs{...} }
type GetAlidnsInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetAlidnsInstancesInstanceArrayOutput() GetAlidnsInstancesInstanceArrayOutput
	ToGetAlidnsInstancesInstanceArrayOutputWithContext(context.Context) GetAlidnsInstancesInstanceArrayOutput
}

type GetAlidnsInstancesInstanceArray []GetAlidnsInstancesInstanceInput

func (GetAlidnsInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlidnsInstancesInstance)(nil)).Elem()
}

func (i GetAlidnsInstancesInstanceArray) ToGetAlidnsInstancesInstanceArrayOutput() GetAlidnsInstancesInstanceArrayOutput {
	return i.ToGetAlidnsInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetAlidnsInstancesInstanceArray) ToGetAlidnsInstancesInstanceArrayOutputWithContext(ctx context.Context) GetAlidnsInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlidnsInstancesInstanceArrayOutput)
}

type GetAlidnsInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetAlidnsInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlidnsInstancesInstance)(nil)).Elem()
}

func (o GetAlidnsInstancesInstanceOutput) ToGetAlidnsInstancesInstanceOutput() GetAlidnsInstancesInstanceOutput {
	return o
}

func (o GetAlidnsInstancesInstanceOutput) ToGetAlidnsInstancesInstanceOutputWithContext(ctx context.Context) GetAlidnsInstancesInstanceOutput {
	return o
}

// DNS security level.
func (o GetAlidnsInstancesInstanceOutput) DnsSecurity() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsInstancesInstance) string { return v.DnsSecurity }).(pulumi.StringOutput)
}

// Number of domain names bound.
func (o GetAlidnsInstancesInstanceOutput) DomainNumbers() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsInstancesInstance) string { return v.DomainNumbers }).(pulumi.StringOutput)
}

// Id of the instance.
func (o GetAlidnsInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// Id of the instance resource.
func (o GetAlidnsInstancesInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsInstancesInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Paid package version.
func (o GetAlidnsInstancesInstanceOutput) VersionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsInstancesInstance) string { return v.VersionCode }).(pulumi.StringOutput)
}

// Paid package version name.
func (o GetAlidnsInstancesInstanceOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsInstancesInstance) string { return v.VersionName }).(pulumi.StringOutput)
}

type GetAlidnsInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetAlidnsInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlidnsInstancesInstance)(nil)).Elem()
}

func (o GetAlidnsInstancesInstanceArrayOutput) ToGetAlidnsInstancesInstanceArrayOutput() GetAlidnsInstancesInstanceArrayOutput {
	return o
}

func (o GetAlidnsInstancesInstanceArrayOutput) ToGetAlidnsInstancesInstanceArrayOutputWithContext(ctx context.Context) GetAlidnsInstancesInstanceArrayOutput {
	return o
}

func (o GetAlidnsInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetAlidnsInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlidnsInstancesInstance {
		return vs[0].([]GetAlidnsInstancesInstance)[vs[1].(int)]
	}).(GetAlidnsInstancesInstanceOutput)
}

type GetAlidnsRecordsRecord struct {
	// The domain name associated to the records.
	DomainName string `pulumi:"domainName"`
	// ID of the resource.
	Id string `pulumi:"id"`
	// ISP line. For checking all resolution lines enumeration please visit [Alibaba Cloud DNS doc](https://www.alibabacloud.com/help/doc-detail/34339.htm)
	Line string `pulumi:"line"`
	// Indicates whether the record is locked.
	Locked bool `pulumi:"locked"`
	// Priority of the `MX` record.
	Priority int `pulumi:"priority"`
	// ID of the record.
	RecordId string `pulumi:"recordId"`
	// Host record of the domain.
	Rr string `pulumi:"rr"`
	// Record status. Valid values: `ENABLE` and `DISABLE`.
	Status string `pulumi:"status"`
	// TTL of the record.
	Ttl int `pulumi:"ttl"`
	// Record type. Valid values: `A`, `NS`, `MX`, `TXT`, `CNAME`, `SRV`, `AAAA`, `REDIRECT_URL`, `FORWORD_URL` .
	Type string `pulumi:"type"`
	// Host record value of the domain.
	Value string `pulumi:"value"`
}

// GetAlidnsRecordsRecordInput is an input type that accepts GetAlidnsRecordsRecordArgs and GetAlidnsRecordsRecordOutput values.
// You can construct a concrete instance of `GetAlidnsRecordsRecordInput` via:
//
//          GetAlidnsRecordsRecordArgs{...}
type GetAlidnsRecordsRecordInput interface {
	pulumi.Input

	ToGetAlidnsRecordsRecordOutput() GetAlidnsRecordsRecordOutput
	ToGetAlidnsRecordsRecordOutputWithContext(context.Context) GetAlidnsRecordsRecordOutput
}

type GetAlidnsRecordsRecordArgs struct {
	// The domain name associated to the records.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// ID of the resource.
	Id pulumi.StringInput `pulumi:"id"`
	// ISP line. For checking all resolution lines enumeration please visit [Alibaba Cloud DNS doc](https://www.alibabacloud.com/help/doc-detail/34339.htm)
	Line pulumi.StringInput `pulumi:"line"`
	// Indicates whether the record is locked.
	Locked pulumi.BoolInput `pulumi:"locked"`
	// Priority of the `MX` record.
	Priority pulumi.IntInput `pulumi:"priority"`
	// ID of the record.
	RecordId pulumi.StringInput `pulumi:"recordId"`
	// Host record of the domain.
	Rr pulumi.StringInput `pulumi:"rr"`
	// Record status. Valid values: `ENABLE` and `DISABLE`.
	Status pulumi.StringInput `pulumi:"status"`
	// TTL of the record.
	Ttl pulumi.IntInput `pulumi:"ttl"`
	// Record type. Valid values: `A`, `NS`, `MX`, `TXT`, `CNAME`, `SRV`, `AAAA`, `REDIRECT_URL`, `FORWORD_URL` .
	Type pulumi.StringInput `pulumi:"type"`
	// Host record value of the domain.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAlidnsRecordsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlidnsRecordsRecord)(nil)).Elem()
}

func (i GetAlidnsRecordsRecordArgs) ToGetAlidnsRecordsRecordOutput() GetAlidnsRecordsRecordOutput {
	return i.ToGetAlidnsRecordsRecordOutputWithContext(context.Background())
}

func (i GetAlidnsRecordsRecordArgs) ToGetAlidnsRecordsRecordOutputWithContext(ctx context.Context) GetAlidnsRecordsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlidnsRecordsRecordOutput)
}

// GetAlidnsRecordsRecordArrayInput is an input type that accepts GetAlidnsRecordsRecordArray and GetAlidnsRecordsRecordArrayOutput values.
// You can construct a concrete instance of `GetAlidnsRecordsRecordArrayInput` via:
//
//          GetAlidnsRecordsRecordArray{ GetAlidnsRecordsRecordArgs{...} }
type GetAlidnsRecordsRecordArrayInput interface {
	pulumi.Input

	ToGetAlidnsRecordsRecordArrayOutput() GetAlidnsRecordsRecordArrayOutput
	ToGetAlidnsRecordsRecordArrayOutputWithContext(context.Context) GetAlidnsRecordsRecordArrayOutput
}

type GetAlidnsRecordsRecordArray []GetAlidnsRecordsRecordInput

func (GetAlidnsRecordsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlidnsRecordsRecord)(nil)).Elem()
}

func (i GetAlidnsRecordsRecordArray) ToGetAlidnsRecordsRecordArrayOutput() GetAlidnsRecordsRecordArrayOutput {
	return i.ToGetAlidnsRecordsRecordArrayOutputWithContext(context.Background())
}

func (i GetAlidnsRecordsRecordArray) ToGetAlidnsRecordsRecordArrayOutputWithContext(ctx context.Context) GetAlidnsRecordsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlidnsRecordsRecordArrayOutput)
}

type GetAlidnsRecordsRecordOutput struct{ *pulumi.OutputState }

func (GetAlidnsRecordsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlidnsRecordsRecord)(nil)).Elem()
}

func (o GetAlidnsRecordsRecordOutput) ToGetAlidnsRecordsRecordOutput() GetAlidnsRecordsRecordOutput {
	return o
}

func (o GetAlidnsRecordsRecordOutput) ToGetAlidnsRecordsRecordOutputWithContext(ctx context.Context) GetAlidnsRecordsRecordOutput {
	return o
}

// The domain name associated to the records.
func (o GetAlidnsRecordsRecordOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsRecordsRecord) string { return v.DomainName }).(pulumi.StringOutput)
}

// ID of the resource.
func (o GetAlidnsRecordsRecordOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsRecordsRecord) string { return v.Id }).(pulumi.StringOutput)
}

// ISP line. For checking all resolution lines enumeration please visit [Alibaba Cloud DNS doc](https://www.alibabacloud.com/help/doc-detail/34339.htm)
func (o GetAlidnsRecordsRecordOutput) Line() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsRecordsRecord) string { return v.Line }).(pulumi.StringOutput)
}

// Indicates whether the record is locked.
func (o GetAlidnsRecordsRecordOutput) Locked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlidnsRecordsRecord) bool { return v.Locked }).(pulumi.BoolOutput)
}

// Priority of the `MX` record.
func (o GetAlidnsRecordsRecordOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlidnsRecordsRecord) int { return v.Priority }).(pulumi.IntOutput)
}

// ID of the record.
func (o GetAlidnsRecordsRecordOutput) RecordId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsRecordsRecord) string { return v.RecordId }).(pulumi.StringOutput)
}

// Host record of the domain.
func (o GetAlidnsRecordsRecordOutput) Rr() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsRecordsRecord) string { return v.Rr }).(pulumi.StringOutput)
}

// Record status. Valid values: `ENABLE` and `DISABLE`.
func (o GetAlidnsRecordsRecordOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsRecordsRecord) string { return v.Status }).(pulumi.StringOutput)
}

// TTL of the record.
func (o GetAlidnsRecordsRecordOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetAlidnsRecordsRecord) int { return v.Ttl }).(pulumi.IntOutput)
}

// Record type. Valid values: `A`, `NS`, `MX`, `TXT`, `CNAME`, `SRV`, `AAAA`, `REDIRECT_URL`, `FORWORD_URL` .
func (o GetAlidnsRecordsRecordOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsRecordsRecord) string { return v.Type }).(pulumi.StringOutput)
}

// Host record value of the domain.
func (o GetAlidnsRecordsRecordOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlidnsRecordsRecord) string { return v.Value }).(pulumi.StringOutput)
}

type GetAlidnsRecordsRecordArrayOutput struct{ *pulumi.OutputState }

func (GetAlidnsRecordsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlidnsRecordsRecord)(nil)).Elem()
}

func (o GetAlidnsRecordsRecordArrayOutput) ToGetAlidnsRecordsRecordArrayOutput() GetAlidnsRecordsRecordArrayOutput {
	return o
}

func (o GetAlidnsRecordsRecordArrayOutput) ToGetAlidnsRecordsRecordArrayOutputWithContext(ctx context.Context) GetAlidnsRecordsRecordArrayOutput {
	return o
}

func (o GetAlidnsRecordsRecordArrayOutput) Index(i pulumi.IntInput) GetAlidnsRecordsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlidnsRecordsRecord {
		return vs[0].([]GetAlidnsRecordsRecord)[vs[1].(int)]
	}).(GetAlidnsRecordsRecordOutput)
}

type GetDomainGroupsGroup struct {
	GroupId   string `pulumi:"groupId"`
	GroupName string `pulumi:"groupName"`
}

// GetDomainGroupsGroupInput is an input type that accepts GetDomainGroupsGroupArgs and GetDomainGroupsGroupOutput values.
// You can construct a concrete instance of `GetDomainGroupsGroupInput` via:
//
//          GetDomainGroupsGroupArgs{...}
type GetDomainGroupsGroupInput interface {
	pulumi.Input

	ToGetDomainGroupsGroupOutput() GetDomainGroupsGroupOutput
	ToGetDomainGroupsGroupOutputWithContext(context.Context) GetDomainGroupsGroupOutput
}

type GetDomainGroupsGroupArgs struct {
	GroupId   pulumi.StringInput `pulumi:"groupId"`
	GroupName pulumi.StringInput `pulumi:"groupName"`
}

func (GetDomainGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainGroupsGroup)(nil)).Elem()
}

func (i GetDomainGroupsGroupArgs) ToGetDomainGroupsGroupOutput() GetDomainGroupsGroupOutput {
	return i.ToGetDomainGroupsGroupOutputWithContext(context.Background())
}

func (i GetDomainGroupsGroupArgs) ToGetDomainGroupsGroupOutputWithContext(ctx context.Context) GetDomainGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainGroupsGroupOutput)
}

// GetDomainGroupsGroupArrayInput is an input type that accepts GetDomainGroupsGroupArray and GetDomainGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetDomainGroupsGroupArrayInput` via:
//
//          GetDomainGroupsGroupArray{ GetDomainGroupsGroupArgs{...} }
type GetDomainGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetDomainGroupsGroupArrayOutput() GetDomainGroupsGroupArrayOutput
	ToGetDomainGroupsGroupArrayOutputWithContext(context.Context) GetDomainGroupsGroupArrayOutput
}

type GetDomainGroupsGroupArray []GetDomainGroupsGroupInput

func (GetDomainGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainGroupsGroup)(nil)).Elem()
}

func (i GetDomainGroupsGroupArray) ToGetDomainGroupsGroupArrayOutput() GetDomainGroupsGroupArrayOutput {
	return i.ToGetDomainGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetDomainGroupsGroupArray) ToGetDomainGroupsGroupArrayOutputWithContext(ctx context.Context) GetDomainGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainGroupsGroupArrayOutput)
}

type GetDomainGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetDomainGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainGroupsGroup)(nil)).Elem()
}

func (o GetDomainGroupsGroupOutput) ToGetDomainGroupsGroupOutput() GetDomainGroupsGroupOutput {
	return o
}

func (o GetDomainGroupsGroupOutput) ToGetDomainGroupsGroupOutputWithContext(ctx context.Context) GetDomainGroupsGroupOutput {
	return o
}

func (o GetDomainGroupsGroupOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGroupsGroup) string { return v.GroupId }).(pulumi.StringOutput)
}

func (o GetDomainGroupsGroupOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainGroupsGroup) string { return v.GroupName }).(pulumi.StringOutput)
}

type GetDomainGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetDomainGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainGroupsGroup)(nil)).Elem()
}

func (o GetDomainGroupsGroupArrayOutput) ToGetDomainGroupsGroupArrayOutput() GetDomainGroupsGroupArrayOutput {
	return o
}

func (o GetDomainGroupsGroupArrayOutput) ToGetDomainGroupsGroupArrayOutputWithContext(ctx context.Context) GetDomainGroupsGroupArrayOutput {
	return o
}

func (o GetDomainGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetDomainGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainGroupsGroup {
		return vs[0].([]GetDomainGroupsGroup)[vs[1].(int)]
	}).(GetDomainGroupsGroupOutput)
}

type GetDomainRecordsRecord struct {
	DomainName string  `pulumi:"domainName"`
	HostRecord string  `pulumi:"hostRecord"`
	Line       string  `pulumi:"line"`
	Locked     bool    `pulumi:"locked"`
	Priority   int     `pulumi:"priority"`
	RecordId   string  `pulumi:"recordId"`
	Status     string  `pulumi:"status"`
	Ttl        float64 `pulumi:"ttl"`
	Type       string  `pulumi:"type"`
	Value      string  `pulumi:"value"`
}

// GetDomainRecordsRecordInput is an input type that accepts GetDomainRecordsRecordArgs and GetDomainRecordsRecordOutput values.
// You can construct a concrete instance of `GetDomainRecordsRecordInput` via:
//
//          GetDomainRecordsRecordArgs{...}
type GetDomainRecordsRecordInput interface {
	pulumi.Input

	ToGetDomainRecordsRecordOutput() GetDomainRecordsRecordOutput
	ToGetDomainRecordsRecordOutputWithContext(context.Context) GetDomainRecordsRecordOutput
}

type GetDomainRecordsRecordArgs struct {
	DomainName pulumi.StringInput  `pulumi:"domainName"`
	HostRecord pulumi.StringInput  `pulumi:"hostRecord"`
	Line       pulumi.StringInput  `pulumi:"line"`
	Locked     pulumi.BoolInput    `pulumi:"locked"`
	Priority   pulumi.IntInput     `pulumi:"priority"`
	RecordId   pulumi.StringInput  `pulumi:"recordId"`
	Status     pulumi.StringInput  `pulumi:"status"`
	Ttl        pulumi.Float64Input `pulumi:"ttl"`
	Type       pulumi.StringInput  `pulumi:"type"`
	Value      pulumi.StringInput  `pulumi:"value"`
}

func (GetDomainRecordsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordsRecord)(nil)).Elem()
}

func (i GetDomainRecordsRecordArgs) ToGetDomainRecordsRecordOutput() GetDomainRecordsRecordOutput {
	return i.ToGetDomainRecordsRecordOutputWithContext(context.Background())
}

func (i GetDomainRecordsRecordArgs) ToGetDomainRecordsRecordOutputWithContext(ctx context.Context) GetDomainRecordsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainRecordsRecordOutput)
}

// GetDomainRecordsRecordArrayInput is an input type that accepts GetDomainRecordsRecordArray and GetDomainRecordsRecordArrayOutput values.
// You can construct a concrete instance of `GetDomainRecordsRecordArrayInput` via:
//
//          GetDomainRecordsRecordArray{ GetDomainRecordsRecordArgs{...} }
type GetDomainRecordsRecordArrayInput interface {
	pulumi.Input

	ToGetDomainRecordsRecordArrayOutput() GetDomainRecordsRecordArrayOutput
	ToGetDomainRecordsRecordArrayOutputWithContext(context.Context) GetDomainRecordsRecordArrayOutput
}

type GetDomainRecordsRecordArray []GetDomainRecordsRecordInput

func (GetDomainRecordsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordsRecord)(nil)).Elem()
}

func (i GetDomainRecordsRecordArray) ToGetDomainRecordsRecordArrayOutput() GetDomainRecordsRecordArrayOutput {
	return i.ToGetDomainRecordsRecordArrayOutputWithContext(context.Background())
}

func (i GetDomainRecordsRecordArray) ToGetDomainRecordsRecordArrayOutputWithContext(ctx context.Context) GetDomainRecordsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainRecordsRecordArrayOutput)
}

type GetDomainRecordsRecordOutput struct{ *pulumi.OutputState }

func (GetDomainRecordsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainRecordsRecord)(nil)).Elem()
}

func (o GetDomainRecordsRecordOutput) ToGetDomainRecordsRecordOutput() GetDomainRecordsRecordOutput {
	return o
}

func (o GetDomainRecordsRecordOutput) ToGetDomainRecordsRecordOutputWithContext(ctx context.Context) GetDomainRecordsRecordOutput {
	return o
}

func (o GetDomainRecordsRecordOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordsRecord) string { return v.DomainName }).(pulumi.StringOutput)
}

func (o GetDomainRecordsRecordOutput) HostRecord() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordsRecord) string { return v.HostRecord }).(pulumi.StringOutput)
}

func (o GetDomainRecordsRecordOutput) Line() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordsRecord) string { return v.Line }).(pulumi.StringOutput)
}

func (o GetDomainRecordsRecordOutput) Locked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainRecordsRecord) bool { return v.Locked }).(pulumi.BoolOutput)
}

func (o GetDomainRecordsRecordOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainRecordsRecord) int { return v.Priority }).(pulumi.IntOutput)
}

func (o GetDomainRecordsRecordOutput) RecordId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordsRecord) string { return v.RecordId }).(pulumi.StringOutput)
}

func (o GetDomainRecordsRecordOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordsRecord) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetDomainRecordsRecordOutput) Ttl() pulumi.Float64Output {
	return o.ApplyT(func(v GetDomainRecordsRecord) float64 { return v.Ttl }).(pulumi.Float64Output)
}

func (o GetDomainRecordsRecordOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordsRecord) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetDomainRecordsRecordOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainRecordsRecord) string { return v.Value }).(pulumi.StringOutput)
}

type GetDomainRecordsRecordArrayOutput struct{ *pulumi.OutputState }

func (GetDomainRecordsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainRecordsRecord)(nil)).Elem()
}

func (o GetDomainRecordsRecordArrayOutput) ToGetDomainRecordsRecordArrayOutput() GetDomainRecordsRecordArrayOutput {
	return o
}

func (o GetDomainRecordsRecordArrayOutput) ToGetDomainRecordsRecordArrayOutputWithContext(ctx context.Context) GetDomainRecordsRecordArrayOutput {
	return o
}

func (o GetDomainRecordsRecordArrayOutput) Index(i pulumi.IntInput) GetDomainRecordsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainRecordsRecord {
		return vs[0].([]GetDomainRecordsRecord)[vs[1].(int)]
	}).(GetDomainRecordsRecordOutput)
}

type GetDomainsDomain struct {
	// Specifies whether the domain is from Alibaba Cloud or not.
	AliDomain     bool  `pulumi:"aliDomain"`
	AvailableTtls []int `pulumi:"availableTtls"`
	// DNS list of domain names in the resolution system.
	DnsServers []string `pulumi:"dnsServers"`
	// ID of the domain.
	DomainId string `pulumi:"domainId"`
	// Name of the domain.
	DomainName string `pulumi:"domainName"`
	// Domain group ID, if not filled, the default is all groups.
	GroupId string `pulumi:"groupId"`
	// Name of group that contains the domain.
	GroupName string `pulumi:"groupName"`
	// The Id of resource.
	Id string `pulumi:"id"`
	// Whether it is in black hole.
	InBlackHole bool `pulumi:"inBlackHole"`
	// Whether it is cleaning.
	InClean bool `pulumi:"inClean"`
	// Cloud analysis product ID.
	InstanceId string `pulumi:"instanceId"`
	LineType   string `pulumi:"lineType"`
	// Minimum TTL.
	MinTtl int `pulumi:"minTtl"`
	// Punycode of the Chinese domain.
	PunyCode string `pulumi:"punyCode"`
	// Tree-like analytical line list.
	RecordLineTreeJson string                       `pulumi:"recordLineTreeJson"`
	RecordLines        []GetDomainsDomainRecordLine `pulumi:"recordLines"`
	// Whether it is a regional route.
	RegionLines bool `pulumi:"regionLines"`
	// The Id of resource group which the dns belongs.
	Remark string `pulumi:"remark"`
	// The Id of resource group which the dns belongs.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// Whether to allow auxiliary dns.
	SlaveDns bool `pulumi:"slaveDns"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// Cloud analysis version code.
	VersionCode string `pulumi:"versionCode"`
	VersionName string `pulumi:"versionName"`
}

// GetDomainsDomainInput is an input type that accepts GetDomainsDomainArgs and GetDomainsDomainOutput values.
// You can construct a concrete instance of `GetDomainsDomainInput` via:
//
//          GetDomainsDomainArgs{...}
type GetDomainsDomainInput interface {
	pulumi.Input

	ToGetDomainsDomainOutput() GetDomainsDomainOutput
	ToGetDomainsDomainOutputWithContext(context.Context) GetDomainsDomainOutput
}

type GetDomainsDomainArgs struct {
	// Specifies whether the domain is from Alibaba Cloud or not.
	AliDomain     pulumi.BoolInput     `pulumi:"aliDomain"`
	AvailableTtls pulumi.IntArrayInput `pulumi:"availableTtls"`
	// DNS list of domain names in the resolution system.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// ID of the domain.
	DomainId pulumi.StringInput `pulumi:"domainId"`
	// Name of the domain.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// Domain group ID, if not filled, the default is all groups.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Name of group that contains the domain.
	GroupName pulumi.StringInput `pulumi:"groupName"`
	// The Id of resource.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether it is in black hole.
	InBlackHole pulumi.BoolInput `pulumi:"inBlackHole"`
	// Whether it is cleaning.
	InClean pulumi.BoolInput `pulumi:"inClean"`
	// Cloud analysis product ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	LineType   pulumi.StringInput `pulumi:"lineType"`
	// Minimum TTL.
	MinTtl pulumi.IntInput `pulumi:"minTtl"`
	// Punycode of the Chinese domain.
	PunyCode pulumi.StringInput `pulumi:"punyCode"`
	// Tree-like analytical line list.
	RecordLineTreeJson pulumi.StringInput                   `pulumi:"recordLineTreeJson"`
	RecordLines        GetDomainsDomainRecordLineArrayInput `pulumi:"recordLines"`
	// Whether it is a regional route.
	RegionLines pulumi.BoolInput `pulumi:"regionLines"`
	// The Id of resource group which the dns belongs.
	Remark pulumi.StringInput `pulumi:"remark"`
	// The Id of resource group which the dns belongs.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// Whether to allow auxiliary dns.
	SlaveDns pulumi.BoolInput `pulumi:"slaveDns"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Cloud analysis version code.
	VersionCode pulumi.StringInput `pulumi:"versionCode"`
	VersionName pulumi.StringInput `pulumi:"versionName"`
}

func (GetDomainsDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomain)(nil)).Elem()
}

func (i GetDomainsDomainArgs) ToGetDomainsDomainOutput() GetDomainsDomainOutput {
	return i.ToGetDomainsDomainOutputWithContext(context.Background())
}

func (i GetDomainsDomainArgs) ToGetDomainsDomainOutputWithContext(ctx context.Context) GetDomainsDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainOutput)
}

// GetDomainsDomainArrayInput is an input type that accepts GetDomainsDomainArray and GetDomainsDomainArrayOutput values.
// You can construct a concrete instance of `GetDomainsDomainArrayInput` via:
//
//          GetDomainsDomainArray{ GetDomainsDomainArgs{...} }
type GetDomainsDomainArrayInput interface {
	pulumi.Input

	ToGetDomainsDomainArrayOutput() GetDomainsDomainArrayOutput
	ToGetDomainsDomainArrayOutputWithContext(context.Context) GetDomainsDomainArrayOutput
}

type GetDomainsDomainArray []GetDomainsDomainInput

func (GetDomainsDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomain)(nil)).Elem()
}

func (i GetDomainsDomainArray) ToGetDomainsDomainArrayOutput() GetDomainsDomainArrayOutput {
	return i.ToGetDomainsDomainArrayOutputWithContext(context.Background())
}

func (i GetDomainsDomainArray) ToGetDomainsDomainArrayOutputWithContext(ctx context.Context) GetDomainsDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainArrayOutput)
}

type GetDomainsDomainOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomain)(nil)).Elem()
}

func (o GetDomainsDomainOutput) ToGetDomainsDomainOutput() GetDomainsDomainOutput {
	return o
}

func (o GetDomainsDomainOutput) ToGetDomainsDomainOutputWithContext(ctx context.Context) GetDomainsDomainOutput {
	return o
}

// Specifies whether the domain is from Alibaba Cloud or not.
func (o GetDomainsDomainOutput) AliDomain() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainsDomain) bool { return v.AliDomain }).(pulumi.BoolOutput)
}

func (o GetDomainsDomainOutput) AvailableTtls() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetDomainsDomain) []int { return v.AvailableTtls }).(pulumi.IntArrayOutput)
}

// DNS list of domain names in the resolution system.
func (o GetDomainsDomainOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainsDomain) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// ID of the domain.
func (o GetDomainsDomainOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.DomainId }).(pulumi.StringOutput)
}

// Name of the domain.
func (o GetDomainsDomainOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.DomainName }).(pulumi.StringOutput)
}

// Domain group ID, if not filled, the default is all groups.
func (o GetDomainsDomainOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.GroupId }).(pulumi.StringOutput)
}

// Name of group that contains the domain.
func (o GetDomainsDomainOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.GroupName }).(pulumi.StringOutput)
}

// The Id of resource.
func (o GetDomainsDomainOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.Id }).(pulumi.StringOutput)
}

// Whether it is in black hole.
func (o GetDomainsDomainOutput) InBlackHole() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainsDomain) bool { return v.InBlackHole }).(pulumi.BoolOutput)
}

// Whether it is cleaning.
func (o GetDomainsDomainOutput) InClean() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainsDomain) bool { return v.InClean }).(pulumi.BoolOutput)
}

// Cloud analysis product ID.
func (o GetDomainsDomainOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetDomainsDomainOutput) LineType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.LineType }).(pulumi.StringOutput)
}

// Minimum TTL.
func (o GetDomainsDomainOutput) MinTtl() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomain) int { return v.MinTtl }).(pulumi.IntOutput)
}

// Punycode of the Chinese domain.
func (o GetDomainsDomainOutput) PunyCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.PunyCode }).(pulumi.StringOutput)
}

// Tree-like analytical line list.
func (o GetDomainsDomainOutput) RecordLineTreeJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.RecordLineTreeJson }).(pulumi.StringOutput)
}

func (o GetDomainsDomainOutput) RecordLines() GetDomainsDomainRecordLineArrayOutput {
	return o.ApplyT(func(v GetDomainsDomain) []GetDomainsDomainRecordLine { return v.RecordLines }).(GetDomainsDomainRecordLineArrayOutput)
}

// Whether it is a regional route.
func (o GetDomainsDomainOutput) RegionLines() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainsDomain) bool { return v.RegionLines }).(pulumi.BoolOutput)
}

// The Id of resource group which the dns belongs.
func (o GetDomainsDomainOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.Remark }).(pulumi.StringOutput)
}

// The Id of resource group which the dns belongs.
func (o GetDomainsDomainOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// Whether to allow auxiliary dns.
func (o GetDomainsDomainOutput) SlaveDns() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainsDomain) bool { return v.SlaveDns }).(pulumi.BoolOutput)
}

// A mapping of tags to assign to the resource.
func (o GetDomainsDomainOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetDomainsDomain) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// Cloud analysis version code.
func (o GetDomainsDomainOutput) VersionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.VersionCode }).(pulumi.StringOutput)
}

func (o GetDomainsDomainOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.VersionName }).(pulumi.StringOutput)
}

type GetDomainsDomainArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomain)(nil)).Elem()
}

func (o GetDomainsDomainArrayOutput) ToGetDomainsDomainArrayOutput() GetDomainsDomainArrayOutput {
	return o
}

func (o GetDomainsDomainArrayOutput) ToGetDomainsDomainArrayOutputWithContext(ctx context.Context) GetDomainsDomainArrayOutput {
	return o
}

func (o GetDomainsDomainArrayOutput) Index(i pulumi.IntInput) GetDomainsDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsDomain {
		return vs[0].([]GetDomainsDomain)[vs[1].(int)]
	}).(GetDomainsDomainOutput)
}

type GetDomainsDomainRecordLine struct {
	FatherCode      string `pulumi:"fatherCode"`
	LineCode        string `pulumi:"lineCode"`
	LineDisplayName string `pulumi:"lineDisplayName"`
	LineName        string `pulumi:"lineName"`
}

// GetDomainsDomainRecordLineInput is an input type that accepts GetDomainsDomainRecordLineArgs and GetDomainsDomainRecordLineOutput values.
// You can construct a concrete instance of `GetDomainsDomainRecordLineInput` via:
//
//          GetDomainsDomainRecordLineArgs{...}
type GetDomainsDomainRecordLineInput interface {
	pulumi.Input

	ToGetDomainsDomainRecordLineOutput() GetDomainsDomainRecordLineOutput
	ToGetDomainsDomainRecordLineOutputWithContext(context.Context) GetDomainsDomainRecordLineOutput
}

type GetDomainsDomainRecordLineArgs struct {
	FatherCode      pulumi.StringInput `pulumi:"fatherCode"`
	LineCode        pulumi.StringInput `pulumi:"lineCode"`
	LineDisplayName pulumi.StringInput `pulumi:"lineDisplayName"`
	LineName        pulumi.StringInput `pulumi:"lineName"`
}

func (GetDomainsDomainRecordLineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainRecordLine)(nil)).Elem()
}

func (i GetDomainsDomainRecordLineArgs) ToGetDomainsDomainRecordLineOutput() GetDomainsDomainRecordLineOutput {
	return i.ToGetDomainsDomainRecordLineOutputWithContext(context.Background())
}

func (i GetDomainsDomainRecordLineArgs) ToGetDomainsDomainRecordLineOutputWithContext(ctx context.Context) GetDomainsDomainRecordLineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainRecordLineOutput)
}

// GetDomainsDomainRecordLineArrayInput is an input type that accepts GetDomainsDomainRecordLineArray and GetDomainsDomainRecordLineArrayOutput values.
// You can construct a concrete instance of `GetDomainsDomainRecordLineArrayInput` via:
//
//          GetDomainsDomainRecordLineArray{ GetDomainsDomainRecordLineArgs{...} }
type GetDomainsDomainRecordLineArrayInput interface {
	pulumi.Input

	ToGetDomainsDomainRecordLineArrayOutput() GetDomainsDomainRecordLineArrayOutput
	ToGetDomainsDomainRecordLineArrayOutputWithContext(context.Context) GetDomainsDomainRecordLineArrayOutput
}

type GetDomainsDomainRecordLineArray []GetDomainsDomainRecordLineInput

func (GetDomainsDomainRecordLineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainRecordLine)(nil)).Elem()
}

func (i GetDomainsDomainRecordLineArray) ToGetDomainsDomainRecordLineArrayOutput() GetDomainsDomainRecordLineArrayOutput {
	return i.ToGetDomainsDomainRecordLineArrayOutputWithContext(context.Background())
}

func (i GetDomainsDomainRecordLineArray) ToGetDomainsDomainRecordLineArrayOutputWithContext(ctx context.Context) GetDomainsDomainRecordLineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainRecordLineArrayOutput)
}

type GetDomainsDomainRecordLineOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainRecordLineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainRecordLine)(nil)).Elem()
}

func (o GetDomainsDomainRecordLineOutput) ToGetDomainsDomainRecordLineOutput() GetDomainsDomainRecordLineOutput {
	return o
}

func (o GetDomainsDomainRecordLineOutput) ToGetDomainsDomainRecordLineOutputWithContext(ctx context.Context) GetDomainsDomainRecordLineOutput {
	return o
}

func (o GetDomainsDomainRecordLineOutput) FatherCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainRecordLine) string { return v.FatherCode }).(pulumi.StringOutput)
}

func (o GetDomainsDomainRecordLineOutput) LineCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainRecordLine) string { return v.LineCode }).(pulumi.StringOutput)
}

func (o GetDomainsDomainRecordLineOutput) LineDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainRecordLine) string { return v.LineDisplayName }).(pulumi.StringOutput)
}

func (o GetDomainsDomainRecordLineOutput) LineName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainRecordLine) string { return v.LineName }).(pulumi.StringOutput)
}

type GetDomainsDomainRecordLineArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainRecordLineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainRecordLine)(nil)).Elem()
}

func (o GetDomainsDomainRecordLineArrayOutput) ToGetDomainsDomainRecordLineArrayOutput() GetDomainsDomainRecordLineArrayOutput {
	return o
}

func (o GetDomainsDomainRecordLineArrayOutput) ToGetDomainsDomainRecordLineArrayOutputWithContext(ctx context.Context) GetDomainsDomainRecordLineArrayOutput {
	return o
}

func (o GetDomainsDomainRecordLineArrayOutput) Index(i pulumi.IntInput) GetDomainsDomainRecordLineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsDomainRecordLine {
		return vs[0].([]GetDomainsDomainRecordLine)[vs[1].(int)]
	}).(GetDomainsDomainRecordLineOutput)
}

type GetGroupsGroup struct {
	// Id of the group.
	GroupId string `pulumi:"groupId"`
	// Name of the group.
	GroupName string `pulumi:"groupName"`
}

// GetGroupsGroupInput is an input type that accepts GetGroupsGroupArgs and GetGroupsGroupOutput values.
// You can construct a concrete instance of `GetGroupsGroupInput` via:
//
//          GetGroupsGroupArgs{...}
type GetGroupsGroupInput interface {
	pulumi.Input

	ToGetGroupsGroupOutput() GetGroupsGroupOutput
	ToGetGroupsGroupOutputWithContext(context.Context) GetGroupsGroupOutput
}

type GetGroupsGroupArgs struct {
	// Id of the group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// Name of the group.
	GroupName pulumi.StringInput `pulumi:"groupName"`
}

func (GetGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsGroup)(nil)).Elem()
}

func (i GetGroupsGroupArgs) ToGetGroupsGroupOutput() GetGroupsGroupOutput {
	return i.ToGetGroupsGroupOutputWithContext(context.Background())
}

func (i GetGroupsGroupArgs) ToGetGroupsGroupOutputWithContext(ctx context.Context) GetGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupsGroupOutput)
}

// GetGroupsGroupArrayInput is an input type that accepts GetGroupsGroupArray and GetGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetGroupsGroupArrayInput` via:
//
//          GetGroupsGroupArray{ GetGroupsGroupArgs{...} }
type GetGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput
	ToGetGroupsGroupArrayOutputWithContext(context.Context) GetGroupsGroupArrayOutput
}

type GetGroupsGroupArray []GetGroupsGroupInput

func (GetGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupsGroup)(nil)).Elem()
}

func (i GetGroupsGroupArray) ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput {
	return i.ToGetGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetGroupsGroupArray) ToGetGroupsGroupArrayOutputWithContext(ctx context.Context) GetGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupsGroupArrayOutput)
}

type GetGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsGroup)(nil)).Elem()
}

func (o GetGroupsGroupOutput) ToGetGroupsGroupOutput() GetGroupsGroupOutput {
	return o
}

func (o GetGroupsGroupOutput) ToGetGroupsGroupOutputWithContext(ctx context.Context) GetGroupsGroupOutput {
	return o
}

// Id of the group.
func (o GetGroupsGroupOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.GroupId }).(pulumi.StringOutput)
}

// Name of the group.
func (o GetGroupsGroupOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsGroup) string { return v.GroupName }).(pulumi.StringOutput)
}

type GetGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupsGroup)(nil)).Elem()
}

func (o GetGroupsGroupArrayOutput) ToGetGroupsGroupArrayOutput() GetGroupsGroupArrayOutput {
	return o
}

func (o GetGroupsGroupArrayOutput) ToGetGroupsGroupArrayOutputWithContext(ctx context.Context) GetGroupsGroupArrayOutput {
	return o
}

func (o GetGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupsGroup {
		return vs[0].([]GetGroupsGroup)[vs[1].(int)]
	}).(GetGroupsGroupOutput)
}

type GetInstancesInstance struct {
	// DNS security level.
	DnsSecurity string `pulumi:"dnsSecurity"`
	// Number of domain names bound.
	DomainNumbers string `pulumi:"domainNumbers"`
	// Id of the instance.
	Id string `pulumi:"id"`
	// Id of the instance resource.
	InstanceId string `pulumi:"instanceId"`
	// Paid package version.
	VersionCode string `pulumi:"versionCode"`
	// Paid package version name.
	VersionName string `pulumi:"versionName"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//          GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// DNS security level.
	DnsSecurity pulumi.StringInput `pulumi:"dnsSecurity"`
	// Number of domain names bound.
	DomainNumbers pulumi.StringInput `pulumi:"domainNumbers"`
	// Id of the instance.
	Id pulumi.StringInput `pulumi:"id"`
	// Id of the instance resource.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Paid package version.
	VersionCode pulumi.StringInput `pulumi:"versionCode"`
	// Paid package version name.
	VersionName pulumi.StringInput `pulumi:"versionName"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//          GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// DNS security level.
func (o GetInstancesInstanceOutput) DnsSecurity() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DnsSecurity }).(pulumi.StringOutput)
}

// Number of domain names bound.
func (o GetInstancesInstanceOutput) DomainNumbers() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.DomainNumbers }).(pulumi.StringOutput)
}

// Id of the instance.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// Id of the instance resource.
func (o GetInstancesInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Paid package version.
func (o GetInstancesInstanceOutput) VersionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VersionCode }).(pulumi.StringOutput)
}

// Paid package version name.
func (o GetInstancesInstanceOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VersionName }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetRecordsRecord struct {
	// The domain name associated to the records.
	DomainName string `pulumi:"domainName"`
	// Host record of the domain.
	HostRecord string `pulumi:"hostRecord"`
	// ISP line. Valid items are `default`, `telecom`, `unicom`, `mobile`, `oversea`, `edu`, `drpeng`, `btvn`, .etc. For checking all resolution lines enumeration please visit [Alibaba Cloud DNS doc](https://www.alibabacloud.com/help/doc-detail/34339.htm)
	Line string `pulumi:"line"`
	// Indicates whether the record is locked.
	Locked bool `pulumi:"locked"`
	// Priority of the `MX` record.
	Priority int `pulumi:"priority"`
	// ID of the record.
	RecordId string `pulumi:"recordId"`
	// Record status. Valid items are `ENABLE` and `DISABLE`.
	Status string `pulumi:"status"`
	// TTL of the record.
	Ttl float64 `pulumi:"ttl"`
	// Record type. Valid items are `A`, `NS`, `MX`, `TXT`, `CNAME`, `SRV`, `AAAA`, `REDIRECT_URL`, `FORWORD_URL` .
	Type string `pulumi:"type"`
	// Host record value of the domain.
	Value string `pulumi:"value"`
}

// GetRecordsRecordInput is an input type that accepts GetRecordsRecordArgs and GetRecordsRecordOutput values.
// You can construct a concrete instance of `GetRecordsRecordInput` via:
//
//          GetRecordsRecordArgs{...}
type GetRecordsRecordInput interface {
	pulumi.Input

	ToGetRecordsRecordOutput() GetRecordsRecordOutput
	ToGetRecordsRecordOutputWithContext(context.Context) GetRecordsRecordOutput
}

type GetRecordsRecordArgs struct {
	// The domain name associated to the records.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// Host record of the domain.
	HostRecord pulumi.StringInput `pulumi:"hostRecord"`
	// ISP line. Valid items are `default`, `telecom`, `unicom`, `mobile`, `oversea`, `edu`, `drpeng`, `btvn`, .etc. For checking all resolution lines enumeration please visit [Alibaba Cloud DNS doc](https://www.alibabacloud.com/help/doc-detail/34339.htm)
	Line pulumi.StringInput `pulumi:"line"`
	// Indicates whether the record is locked.
	Locked pulumi.BoolInput `pulumi:"locked"`
	// Priority of the `MX` record.
	Priority pulumi.IntInput `pulumi:"priority"`
	// ID of the record.
	RecordId pulumi.StringInput `pulumi:"recordId"`
	// Record status. Valid items are `ENABLE` and `DISABLE`.
	Status pulumi.StringInput `pulumi:"status"`
	// TTL of the record.
	Ttl pulumi.Float64Input `pulumi:"ttl"`
	// Record type. Valid items are `A`, `NS`, `MX`, `TXT`, `CNAME`, `SRV`, `AAAA`, `REDIRECT_URL`, `FORWORD_URL` .
	Type pulumi.StringInput `pulumi:"type"`
	// Host record value of the domain.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetRecordsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecordsRecord)(nil)).Elem()
}

func (i GetRecordsRecordArgs) ToGetRecordsRecordOutput() GetRecordsRecordOutput {
	return i.ToGetRecordsRecordOutputWithContext(context.Background())
}

func (i GetRecordsRecordArgs) ToGetRecordsRecordOutputWithContext(ctx context.Context) GetRecordsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRecordsRecordOutput)
}

// GetRecordsRecordArrayInput is an input type that accepts GetRecordsRecordArray and GetRecordsRecordArrayOutput values.
// You can construct a concrete instance of `GetRecordsRecordArrayInput` via:
//
//          GetRecordsRecordArray{ GetRecordsRecordArgs{...} }
type GetRecordsRecordArrayInput interface {
	pulumi.Input

	ToGetRecordsRecordArrayOutput() GetRecordsRecordArrayOutput
	ToGetRecordsRecordArrayOutputWithContext(context.Context) GetRecordsRecordArrayOutput
}

type GetRecordsRecordArray []GetRecordsRecordInput

func (GetRecordsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRecordsRecord)(nil)).Elem()
}

func (i GetRecordsRecordArray) ToGetRecordsRecordArrayOutput() GetRecordsRecordArrayOutput {
	return i.ToGetRecordsRecordArrayOutputWithContext(context.Background())
}

func (i GetRecordsRecordArray) ToGetRecordsRecordArrayOutputWithContext(ctx context.Context) GetRecordsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRecordsRecordArrayOutput)
}

type GetRecordsRecordOutput struct{ *pulumi.OutputState }

func (GetRecordsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecordsRecord)(nil)).Elem()
}

func (o GetRecordsRecordOutput) ToGetRecordsRecordOutput() GetRecordsRecordOutput {
	return o
}

func (o GetRecordsRecordOutput) ToGetRecordsRecordOutputWithContext(ctx context.Context) GetRecordsRecordOutput {
	return o
}

// The domain name associated to the records.
func (o GetRecordsRecordOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsRecord) string { return v.DomainName }).(pulumi.StringOutput)
}

// Host record of the domain.
func (o GetRecordsRecordOutput) HostRecord() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsRecord) string { return v.HostRecord }).(pulumi.StringOutput)
}

// ISP line. Valid items are `default`, `telecom`, `unicom`, `mobile`, `oversea`, `edu`, `drpeng`, `btvn`, .etc. For checking all resolution lines enumeration please visit [Alibaba Cloud DNS doc](https://www.alibabacloud.com/help/doc-detail/34339.htm)
func (o GetRecordsRecordOutput) Line() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsRecord) string { return v.Line }).(pulumi.StringOutput)
}

// Indicates whether the record is locked.
func (o GetRecordsRecordOutput) Locked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRecordsRecord) bool { return v.Locked }).(pulumi.BoolOutput)
}

// Priority of the `MX` record.
func (o GetRecordsRecordOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetRecordsRecord) int { return v.Priority }).(pulumi.IntOutput)
}

// ID of the record.
func (o GetRecordsRecordOutput) RecordId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsRecord) string { return v.RecordId }).(pulumi.StringOutput)
}

// Record status. Valid items are `ENABLE` and `DISABLE`.
func (o GetRecordsRecordOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsRecord) string { return v.Status }).(pulumi.StringOutput)
}

// TTL of the record.
func (o GetRecordsRecordOutput) Ttl() pulumi.Float64Output {
	return o.ApplyT(func(v GetRecordsRecord) float64 { return v.Ttl }).(pulumi.Float64Output)
}

// Record type. Valid items are `A`, `NS`, `MX`, `TXT`, `CNAME`, `SRV`, `AAAA`, `REDIRECT_URL`, `FORWORD_URL` .
func (o GetRecordsRecordOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsRecord) string { return v.Type }).(pulumi.StringOutput)
}

// Host record value of the domain.
func (o GetRecordsRecordOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsRecord) string { return v.Value }).(pulumi.StringOutput)
}

type GetRecordsRecordArrayOutput struct{ *pulumi.OutputState }

func (GetRecordsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRecordsRecord)(nil)).Elem()
}

func (o GetRecordsRecordArrayOutput) ToGetRecordsRecordArrayOutput() GetRecordsRecordArrayOutput {
	return o
}

func (o GetRecordsRecordArrayOutput) ToGetRecordsRecordArrayOutputWithContext(ctx context.Context) GetRecordsRecordArrayOutput {
	return o
}

func (o GetRecordsRecordArrayOutput) Index(i pulumi.IntInput) GetRecordsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRecordsRecord {
		return vs[0].([]GetRecordsRecord)[vs[1].(int)]
	}).(GetRecordsRecordOutput)
}

type GetResolutionLinesLine struct {
	LineCode string `pulumi:"lineCode"`
	// Line display name.
	LineDisplayName string `pulumi:"lineDisplayName"`
	// Line name.
	LineName string `pulumi:"lineName"`
}

// GetResolutionLinesLineInput is an input type that accepts GetResolutionLinesLineArgs and GetResolutionLinesLineOutput values.
// You can construct a concrete instance of `GetResolutionLinesLineInput` via:
//
//          GetResolutionLinesLineArgs{...}
type GetResolutionLinesLineInput interface {
	pulumi.Input

	ToGetResolutionLinesLineOutput() GetResolutionLinesLineOutput
	ToGetResolutionLinesLineOutputWithContext(context.Context) GetResolutionLinesLineOutput
}

type GetResolutionLinesLineArgs struct {
	LineCode pulumi.StringInput `pulumi:"lineCode"`
	// Line display name.
	LineDisplayName pulumi.StringInput `pulumi:"lineDisplayName"`
	// Line name.
	LineName pulumi.StringInput `pulumi:"lineName"`
}

func (GetResolutionLinesLineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolutionLinesLine)(nil)).Elem()
}

func (i GetResolutionLinesLineArgs) ToGetResolutionLinesLineOutput() GetResolutionLinesLineOutput {
	return i.ToGetResolutionLinesLineOutputWithContext(context.Background())
}

func (i GetResolutionLinesLineArgs) ToGetResolutionLinesLineOutputWithContext(ctx context.Context) GetResolutionLinesLineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolutionLinesLineOutput)
}

// GetResolutionLinesLineArrayInput is an input type that accepts GetResolutionLinesLineArray and GetResolutionLinesLineArrayOutput values.
// You can construct a concrete instance of `GetResolutionLinesLineArrayInput` via:
//
//          GetResolutionLinesLineArray{ GetResolutionLinesLineArgs{...} }
type GetResolutionLinesLineArrayInput interface {
	pulumi.Input

	ToGetResolutionLinesLineArrayOutput() GetResolutionLinesLineArrayOutput
	ToGetResolutionLinesLineArrayOutputWithContext(context.Context) GetResolutionLinesLineArrayOutput
}

type GetResolutionLinesLineArray []GetResolutionLinesLineInput

func (GetResolutionLinesLineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolutionLinesLine)(nil)).Elem()
}

func (i GetResolutionLinesLineArray) ToGetResolutionLinesLineArrayOutput() GetResolutionLinesLineArrayOutput {
	return i.ToGetResolutionLinesLineArrayOutputWithContext(context.Background())
}

func (i GetResolutionLinesLineArray) ToGetResolutionLinesLineArrayOutputWithContext(ctx context.Context) GetResolutionLinesLineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResolutionLinesLineArrayOutput)
}

type GetResolutionLinesLineOutput struct{ *pulumi.OutputState }

func (GetResolutionLinesLineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResolutionLinesLine)(nil)).Elem()
}

func (o GetResolutionLinesLineOutput) ToGetResolutionLinesLineOutput() GetResolutionLinesLineOutput {
	return o
}

func (o GetResolutionLinesLineOutput) ToGetResolutionLinesLineOutputWithContext(ctx context.Context) GetResolutionLinesLineOutput {
	return o
}

func (o GetResolutionLinesLineOutput) LineCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolutionLinesLine) string { return v.LineCode }).(pulumi.StringOutput)
}

// Line display name.
func (o GetResolutionLinesLineOutput) LineDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolutionLinesLine) string { return v.LineDisplayName }).(pulumi.StringOutput)
}

// Line name.
func (o GetResolutionLinesLineOutput) LineName() pulumi.StringOutput {
	return o.ApplyT(func(v GetResolutionLinesLine) string { return v.LineName }).(pulumi.StringOutput)
}

type GetResolutionLinesLineArrayOutput struct{ *pulumi.OutputState }

func (GetResolutionLinesLineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResolutionLinesLine)(nil)).Elem()
}

func (o GetResolutionLinesLineArrayOutput) ToGetResolutionLinesLineArrayOutput() GetResolutionLinesLineArrayOutput {
	return o
}

func (o GetResolutionLinesLineArrayOutput) ToGetResolutionLinesLineArrayOutputWithContext(ctx context.Context) GetResolutionLinesLineArrayOutput {
	return o
}

func (o GetResolutionLinesLineArrayOutput) Index(i pulumi.IntInput) GetResolutionLinesLineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResolutionLinesLine {
		return vs[0].([]GetResolutionLinesLine)[vs[1].(int)]
	}).(GetResolutionLinesLineOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAlidnsDomainGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetAlidnsDomainGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetAlidnsDomainsDomainOutput{})
	pulumi.RegisterOutputType(GetAlidnsDomainsDomainArrayOutput{})
	pulumi.RegisterOutputType(GetAlidnsDomainsDomainRecordLineOutput{})
	pulumi.RegisterOutputType(GetAlidnsDomainsDomainRecordLineArrayOutput{})
	pulumi.RegisterOutputType(GetAlidnsInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetAlidnsInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetAlidnsRecordsRecordOutput{})
	pulumi.RegisterOutputType(GetAlidnsRecordsRecordArrayOutput{})
	pulumi.RegisterOutputType(GetDomainGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetDomainGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetDomainRecordsRecordOutput{})
	pulumi.RegisterOutputType(GetDomainRecordsRecordArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainRecordLineOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainRecordLineArrayOutput{})
	pulumi.RegisterOutputType(GetGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetRecordsRecordOutput{})
	pulumi.RegisterOutputType(GetRecordsRecordArrayOutput{})
	pulumi.RegisterOutputType(GetResolutionLinesLineOutput{})
	pulumi.RegisterOutputType(GetResolutionLinesLineArrayOutput{})
}
