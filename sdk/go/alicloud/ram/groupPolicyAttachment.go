// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ram

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a RAM Group Policy attachment resource. 
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/ram_group_policy_attachment.html.markdown.
type GroupPolicyAttachment struct {
	s *pulumi.ResourceState
}

// NewGroupPolicyAttachment registers a new resource with the given unique name, arguments, and options.
func NewGroupPolicyAttachment(ctx *pulumi.Context,
	name string, args *GroupPolicyAttachmentArgs, opts ...pulumi.ResourceOpt) (*GroupPolicyAttachment, error) {
	if args == nil || args.GroupName == nil {
		return nil, errors.New("missing required argument 'GroupName'")
	}
	if args == nil || args.PolicyName == nil {
		return nil, errors.New("missing required argument 'PolicyName'")
	}
	if args == nil || args.PolicyType == nil {
		return nil, errors.New("missing required argument 'PolicyType'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["groupName"] = nil
		inputs["policyName"] = nil
		inputs["policyType"] = nil
	} else {
		inputs["groupName"] = args.GroupName
		inputs["policyName"] = args.PolicyName
		inputs["policyType"] = args.PolicyType
	}
	s, err := ctx.RegisterResource("alicloud:ram/groupPolicyAttachment:GroupPolicyAttachment", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &GroupPolicyAttachment{s: s}, nil
}

// GetGroupPolicyAttachment gets an existing GroupPolicyAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroupPolicyAttachment(ctx *pulumi.Context,
	name string, id pulumi.ID, state *GroupPolicyAttachmentState, opts ...pulumi.ResourceOpt) (*GroupPolicyAttachment, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["groupName"] = state.GroupName
		inputs["policyName"] = state.PolicyName
		inputs["policyType"] = state.PolicyType
	}
	s, err := ctx.ReadResource("alicloud:ram/groupPolicyAttachment:GroupPolicyAttachment", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &GroupPolicyAttachment{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *GroupPolicyAttachment) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *GroupPolicyAttachment) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Name of the RAM group. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphen "-", and must not begin with a hyphen.
func (r *GroupPolicyAttachment) GroupName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["groupName"])
}

// Name of the RAM policy. This name can have a string of 1 to 128 characters, must contain only alphanumeric characters or hyphen "-", and must not begin with a hyphen.
func (r *GroupPolicyAttachment) PolicyName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["policyName"])
}

// Type of the RAM policy. It must be `Custom` or `System`.
func (r *GroupPolicyAttachment) PolicyType() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["policyType"])
}

// Input properties used for looking up and filtering GroupPolicyAttachment resources.
type GroupPolicyAttachmentState struct {
	// Name of the RAM group. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphen "-", and must not begin with a hyphen.
	GroupName interface{}
	// Name of the RAM policy. This name can have a string of 1 to 128 characters, must contain only alphanumeric characters or hyphen "-", and must not begin with a hyphen.
	PolicyName interface{}
	// Type of the RAM policy. It must be `Custom` or `System`.
	PolicyType interface{}
}

// The set of arguments for constructing a GroupPolicyAttachment resource.
type GroupPolicyAttachmentArgs struct {
	// Name of the RAM group. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphen "-", and must not begin with a hyphen.
	GroupName interface{}
	// Name of the RAM policy. This name can have a string of 1 to 128 characters, must contain only alphanumeric characters or hyphen "-", and must not begin with a hyphen.
	PolicyName interface{}
	// Type of the RAM policy. It must be `Custom` or `System`.
	PolicyType interface{}
}
