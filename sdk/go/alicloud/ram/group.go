// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ram

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a RAM Group resource.
// 
// ~> **NOTE:** When you want to destroy this resource forcefully(means remove all the relationships associated with it automatically and then destroy it) without set `force`  with `true` at beginning, you need add `force = true` to configuration file and run `terraform plan`, then you can delete resource forcefully. 
type Group struct {
	s *pulumi.ResourceState
}

// NewGroup registers a new resource with the given unique name, arguments, and options.
func NewGroup(ctx *pulumi.Context,
	name string, args *GroupArgs, opts ...pulumi.ResourceOpt) (*Group, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["comments"] = nil
		inputs["force"] = nil
		inputs["name"] = nil
	} else {
		inputs["comments"] = args.Comments
		inputs["force"] = args.Force
		inputs["name"] = args.Name
	}
	s, err := ctx.RegisterResource("alicloud:ram/group:Group", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Group{s: s}, nil
}

// GetGroup gets an existing Group resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroup(ctx *pulumi.Context,
	name string, id pulumi.ID, state *GroupState, opts ...pulumi.ResourceOpt) (*Group, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["comments"] = state.Comments
		inputs["force"] = state.Force
		inputs["name"] = state.Name
	}
	s, err := ctx.ReadResource("alicloud:ram/group:Group", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Group{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Group) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Group) ID() *pulumi.IDOutput {
	return r.s.ID
}

// Comment of the RAM group. This parameter can have a string of 1 to 128 characters.
func (r *Group) Comments() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["comments"])
}

// This parameter is used for resource destroy. Default value is `false`.
func (r *Group) Force() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["force"])
}

// Name of the RAM group. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphen "-", and must not begin with a hyphen.
func (r *Group) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Input properties used for looking up and filtering Group resources.
type GroupState struct {
	// Comment of the RAM group. This parameter can have a string of 1 to 128 characters.
	Comments interface{}
	// This parameter is used for resource destroy. Default value is `false`.
	Force interface{}
	// Name of the RAM group. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphen "-", and must not begin with a hyphen.
	Name interface{}
}

// The set of arguments for constructing a Group resource.
type GroupArgs struct {
	// Comment of the RAM group. This parameter can have a string of 1 to 128 characters.
	Comments interface{}
	// This parameter is used for resource destroy. Default value is `false`.
	Force interface{}
	// Name of the RAM group. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphen "-", and must not begin with a hyphen.
	Name interface{}
}
