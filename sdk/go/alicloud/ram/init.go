// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ram

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "alicloud:ram/accessKey:AccessKey":
		r, err = NewAccessKey(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:ram/accountAlias:AccountAlias":
		r, err = NewAccountAlias(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:ram/accountPasswordPolicy:AccountPasswordPolicy":
		r, err = NewAccountPasswordPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:ram/alias:Alias":
		r, err = NewAlias(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:ram/group:Group":
		r, err = NewGroup(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:ram/groupMembership:GroupMembership":
		r, err = NewGroupMembership(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:ram/groupPolicyAttachment:GroupPolicyAttachment":
		r, err = NewGroupPolicyAttachment(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:ram/loginProfile:LoginProfile":
		r, err = NewLoginProfile(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:ram/policy:Policy":
		r, err = NewPolicy(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:ram/role:Role":
		r, err = NewRole(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:ram/roleAttachment:RoleAttachment":
		r, err = NewRoleAttachment(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:ram/rolePolicyAttachment:RolePolicyAttachment":
		r, err = NewRolePolicyAttachment(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:ram/user:User":
		r, err = NewUser(ctx, name, nil, pulumi.URN_(urn))
	case "alicloud:ram/userPolicyAttachment:UserPolicyAttachment":
		r, err = NewUserPolicyAttachment(ctx, name, nil, pulumi.URN_(urn))
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	return
}

func init() {
	version, err := alicloud.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"alicloud",
		"ram/accessKey",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"ram/accountAlias",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"ram/accountPasswordPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"ram/alias",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"ram/group",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"ram/groupMembership",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"ram/groupPolicyAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"ram/loginProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"ram/policy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"ram/role",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"ram/roleAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"ram/rolePolicyAttachment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"ram/user",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"alicloud",
		"ram/userPolicyAttachment",
		&module{version},
	)
}
