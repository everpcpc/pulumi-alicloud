// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ram

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a RAM Group membership resource. 
type GroupMembership struct {
	s *pulumi.ResourceState
}

// NewGroupMembership registers a new resource with the given unique name, arguments, and options.
func NewGroupMembership(ctx *pulumi.Context,
	name string, args *GroupMembershipArgs, opts ...pulumi.ResourceOpt) (*GroupMembership, error) {
	if args == nil || args.GroupName == nil {
		return nil, errors.New("missing required argument 'GroupName'")
	}
	if args == nil || args.UserNames == nil {
		return nil, errors.New("missing required argument 'UserNames'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["groupName"] = nil
		inputs["userNames"] = nil
	} else {
		inputs["groupName"] = args.GroupName
		inputs["userNames"] = args.UserNames
	}
	s, err := ctx.RegisterResource("alicloud:ram/groupMembership:GroupMembership", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &GroupMembership{s: s}, nil
}

// GetGroupMembership gets an existing GroupMembership resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroupMembership(ctx *pulumi.Context,
	name string, id pulumi.ID, state *GroupMembershipState, opts ...pulumi.ResourceOpt) (*GroupMembership, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["groupName"] = state.GroupName
		inputs["userNames"] = state.UserNames
	}
	s, err := ctx.ReadResource("alicloud:ram/groupMembership:GroupMembership", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &GroupMembership{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *GroupMembership) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *GroupMembership) ID() *pulumi.IDOutput {
	return r.s.ID
}

// Name of the RAM group. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphen "-", and must not begin with a hyphen.
func (r *GroupMembership) GroupName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["groupName"])
}

// Set of user name which will be added to group. Each name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin with a hyphen.
func (r *GroupMembership) UserNames() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["userNames"])
}

// Input properties used for looking up and filtering GroupMembership resources.
type GroupMembershipState struct {
	// Name of the RAM group. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphen "-", and must not begin with a hyphen.
	GroupName interface{}
	// Set of user name which will be added to group. Each name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin with a hyphen.
	UserNames interface{}
}

// The set of arguments for constructing a GroupMembership resource.
type GroupMembershipArgs struct {
	// Name of the RAM group. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphen "-", and must not begin with a hyphen.
	GroupName interface{}
	// Set of user name which will be added to group. Each name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin with a hyphen.
	UserNames interface{}
}
