// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package cms

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type SiteMonitor struct {
	pulumi.CustomResourceState

	Address pulumi.StringOutput `pulumi:"address"`
	AlertIds pulumi.StringArrayOutput `pulumi:"alertIds"`
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	Interval pulumi.IntPtrOutput `pulumi:"interval"`
	OptionsJson pulumi.StringPtrOutput `pulumi:"optionsJson"`
	TaskName pulumi.StringOutput `pulumi:"taskName"`
	TaskState pulumi.StringOutput `pulumi:"taskState"`
	TaskType pulumi.StringOutput `pulumi:"taskType"`
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewSiteMonitor registers a new resource with the given unique name, arguments, and options.
func NewSiteMonitor(ctx *pulumi.Context,
	name string, args *SiteMonitorArgs, opts ...pulumi.ResourceOption) (*SiteMonitor, error) {
	if args == nil || args.Address == nil {
		return nil, errors.New("missing required argument 'Address'")
	}
	if args == nil || args.TaskName == nil {
		return nil, errors.New("missing required argument 'TaskName'")
	}
	if args == nil || args.TaskType == nil {
		return nil, errors.New("missing required argument 'TaskType'")
	}
	if args == nil {
		args = &SiteMonitorArgs{}
	}
	var resource SiteMonitor
	err := ctx.RegisterResource("alicloud:cms/siteMonitor:SiteMonitor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSiteMonitor gets an existing SiteMonitor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSiteMonitor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SiteMonitorState, opts ...pulumi.ResourceOption) (*SiteMonitor, error) {
	var resource SiteMonitor
	err := ctx.ReadResource("alicloud:cms/siteMonitor:SiteMonitor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SiteMonitor resources.
type siteMonitorState struct {
	Address *string `pulumi:"address"`
	AlertIds []string `pulumi:"alertIds"`
	CreateTime *string `pulumi:"createTime"`
	Interval *int `pulumi:"interval"`
	OptionsJson *string `pulumi:"optionsJson"`
	TaskName *string `pulumi:"taskName"`
	TaskState *string `pulumi:"taskState"`
	TaskType *string `pulumi:"taskType"`
	UpdateTime *string `pulumi:"updateTime"`
}

type SiteMonitorState struct {
	Address pulumi.StringPtrInput
	AlertIds pulumi.StringArrayInput
	CreateTime pulumi.StringPtrInput
	Interval pulumi.IntPtrInput
	OptionsJson pulumi.StringPtrInput
	TaskName pulumi.StringPtrInput
	TaskState pulumi.StringPtrInput
	TaskType pulumi.StringPtrInput
	UpdateTime pulumi.StringPtrInput
}

func (SiteMonitorState) ElementType() reflect.Type {
	return reflect.TypeOf((*siteMonitorState)(nil)).Elem()
}

type siteMonitorArgs struct {
	Address string `pulumi:"address"`
	AlertIds []string `pulumi:"alertIds"`
	Interval *int `pulumi:"interval"`
	OptionsJson *string `pulumi:"optionsJson"`
	TaskName string `pulumi:"taskName"`
	TaskType string `pulumi:"taskType"`
}

// The set of arguments for constructing a SiteMonitor resource.
type SiteMonitorArgs struct {
	Address pulumi.StringInput
	AlertIds pulumi.StringArrayInput
	Interval pulumi.IntPtrInput
	OptionsJson pulumi.StringPtrInput
	TaskName pulumi.StringInput
	TaskType pulumi.StringInput
}

func (SiteMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*siteMonitorArgs)(nil)).Elem()
}

