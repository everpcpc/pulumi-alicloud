// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cms

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Cloud Monitor Service Monitor Group Instances resource.
//
// For information about Cloud Monitor Service Monitor Group Instances and how to use it, see [What is Monitor Group Instances](https://www.alibabacloud.com/help/en/doc-detail/115031.htm).
//
// > **NOTE:** Available in v1.115.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/cms"
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/vpc"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		defaultNetwork, err := vpc.NewNetwork(ctx, "defaultNetwork", &vpc.NetworkArgs{
// 			CidrBlock: pulumi.String("192.168.0.0/16"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		defaultMonitorGroup, err := cms.NewMonitorGroup(ctx, "defaultMonitorGroup", &cms.MonitorGroupArgs{
// 			MonitorGroupName: pulumi.String("tf-testaccmonitorgroup"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = cms.NewMonitorGroupInstances(ctx, "example", &cms.MonitorGroupInstancesArgs{
// 			GroupId: defaultMonitorGroup.ID(),
// 			Instances: cms.MonitorGroupInstancesInstanceArray{
// 				&cms.MonitorGroupInstancesInstanceArgs{
// 					InstanceId:   defaultNetwork.ID(),
// 					InstanceName: pulumi.String("tf-testacc-vpcname"),
// 					RegionId:     pulumi.String("cn-hangzhou"),
// 					Category:     pulumi.String("vpc"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Cloud Monitor Service Monitor Group Instances can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:cms/monitorGroupInstances:MonitorGroupInstances example <group_id>
// ```
type MonitorGroupInstances struct {
	pulumi.CustomResourceState

	// The id of Cms Group.
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// Instance information added to the Cms Group.
	Instances MonitorGroupInstancesInstanceArrayOutput `pulumi:"instances"`
}

// NewMonitorGroupInstances registers a new resource with the given unique name, arguments, and options.
func NewMonitorGroupInstances(ctx *pulumi.Context,
	name string, args *MonitorGroupInstancesArgs, opts ...pulumi.ResourceOption) (*MonitorGroupInstances, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.Instances == nil {
		return nil, errors.New("invalid value for required argument 'Instances'")
	}
	var resource MonitorGroupInstances
	err := ctx.RegisterResource("alicloud:cms/monitorGroupInstances:MonitorGroupInstances", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMonitorGroupInstances gets an existing MonitorGroupInstances resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMonitorGroupInstances(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MonitorGroupInstancesState, opts ...pulumi.ResourceOption) (*MonitorGroupInstances, error) {
	var resource MonitorGroupInstances
	err := ctx.ReadResource("alicloud:cms/monitorGroupInstances:MonitorGroupInstances", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MonitorGroupInstances resources.
type monitorGroupInstancesState struct {
	// The id of Cms Group.
	GroupId *string `pulumi:"groupId"`
	// Instance information added to the Cms Group.
	Instances []MonitorGroupInstancesInstance `pulumi:"instances"`
}

type MonitorGroupInstancesState struct {
	// The id of Cms Group.
	GroupId pulumi.StringPtrInput
	// Instance information added to the Cms Group.
	Instances MonitorGroupInstancesInstanceArrayInput
}

func (MonitorGroupInstancesState) ElementType() reflect.Type {
	return reflect.TypeOf((*monitorGroupInstancesState)(nil)).Elem()
}

type monitorGroupInstancesArgs struct {
	// The id of Cms Group.
	GroupId string `pulumi:"groupId"`
	// Instance information added to the Cms Group.
	Instances []MonitorGroupInstancesInstance `pulumi:"instances"`
}

// The set of arguments for constructing a MonitorGroupInstances resource.
type MonitorGroupInstancesArgs struct {
	// The id of Cms Group.
	GroupId pulumi.StringInput
	// Instance information added to the Cms Group.
	Instances MonitorGroupInstancesInstanceArrayInput
}

func (MonitorGroupInstancesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*monitorGroupInstancesArgs)(nil)).Elem()
}

type MonitorGroupInstancesInput interface {
	pulumi.Input

	ToMonitorGroupInstancesOutput() MonitorGroupInstancesOutput
	ToMonitorGroupInstancesOutputWithContext(ctx context.Context) MonitorGroupInstancesOutput
}

func (*MonitorGroupInstances) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorGroupInstances)(nil))
}

func (i *MonitorGroupInstances) ToMonitorGroupInstancesOutput() MonitorGroupInstancesOutput {
	return i.ToMonitorGroupInstancesOutputWithContext(context.Background())
}

func (i *MonitorGroupInstances) ToMonitorGroupInstancesOutputWithContext(ctx context.Context) MonitorGroupInstancesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorGroupInstancesOutput)
}

type MonitorGroupInstancesOutput struct {
	*pulumi.OutputState
}

func (MonitorGroupInstancesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorGroupInstances)(nil))
}

func (o MonitorGroupInstancesOutput) ToMonitorGroupInstancesOutput() MonitorGroupInstancesOutput {
	return o
}

func (o MonitorGroupInstancesOutput) ToMonitorGroupInstancesOutputWithContext(ctx context.Context) MonitorGroupInstancesOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(MonitorGroupInstancesOutput{})
}
