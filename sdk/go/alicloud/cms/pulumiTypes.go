// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AlarmEscalationsCritical struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
	Statistics *string `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold *string `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times *int `pulumi:"times"`
}

// AlarmEscalationsCriticalInput is an input type that accepts AlarmEscalationsCriticalArgs and AlarmEscalationsCriticalOutput values.
// You can construct a concrete instance of `AlarmEscalationsCriticalInput` via:
//
//          AlarmEscalationsCriticalArgs{...}
type AlarmEscalationsCriticalInput interface {
	pulumi.Input

	ToAlarmEscalationsCriticalOutput() AlarmEscalationsCriticalOutput
	ToAlarmEscalationsCriticalOutputWithContext(context.Context) AlarmEscalationsCriticalOutput
}

type AlarmEscalationsCriticalArgs struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (AlarmEscalationsCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsCritical)(nil)).Elem()
}

func (i AlarmEscalationsCriticalArgs) ToAlarmEscalationsCriticalOutput() AlarmEscalationsCriticalOutput {
	return i.ToAlarmEscalationsCriticalOutputWithContext(context.Background())
}

func (i AlarmEscalationsCriticalArgs) ToAlarmEscalationsCriticalOutputWithContext(ctx context.Context) AlarmEscalationsCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsCriticalOutput)
}

func (i AlarmEscalationsCriticalArgs) ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput {
	return i.ToAlarmEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (i AlarmEscalationsCriticalArgs) ToAlarmEscalationsCriticalPtrOutputWithContext(ctx context.Context) AlarmEscalationsCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsCriticalOutput).ToAlarmEscalationsCriticalPtrOutputWithContext(ctx)
}

// AlarmEscalationsCriticalPtrInput is an input type that accepts AlarmEscalationsCriticalArgs, AlarmEscalationsCriticalPtr and AlarmEscalationsCriticalPtrOutput values.
// You can construct a concrete instance of `AlarmEscalationsCriticalPtrInput` via:
//
//          AlarmEscalationsCriticalArgs{...}
//
//  or:
//
//          nil
type AlarmEscalationsCriticalPtrInput interface {
	pulumi.Input

	ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput
	ToAlarmEscalationsCriticalPtrOutputWithContext(context.Context) AlarmEscalationsCriticalPtrOutput
}

type alarmEscalationsCriticalPtrType AlarmEscalationsCriticalArgs

func AlarmEscalationsCriticalPtr(v *AlarmEscalationsCriticalArgs) AlarmEscalationsCriticalPtrInput {
	return (*alarmEscalationsCriticalPtrType)(v)
}

func (*alarmEscalationsCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsCritical)(nil)).Elem()
}

func (i *alarmEscalationsCriticalPtrType) ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput {
	return i.ToAlarmEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (i *alarmEscalationsCriticalPtrType) ToAlarmEscalationsCriticalPtrOutputWithContext(ctx context.Context) AlarmEscalationsCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsCriticalPtrOutput)
}

type AlarmEscalationsCriticalOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsCritical)(nil)).Elem()
}

func (o AlarmEscalationsCriticalOutput) ToAlarmEscalationsCriticalOutput() AlarmEscalationsCriticalOutput {
	return o
}

func (o AlarmEscalationsCriticalOutput) ToAlarmEscalationsCriticalOutputWithContext(ctx context.Context) AlarmEscalationsCriticalOutput {
	return o
}

func (o AlarmEscalationsCriticalOutput) ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput {
	return o.ToAlarmEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (o AlarmEscalationsCriticalOutput) ToAlarmEscalationsCriticalPtrOutputWithContext(ctx context.Context) AlarmEscalationsCriticalPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsCritical) *AlarmEscalationsCritical {
		return &v
	}).(AlarmEscalationsCriticalPtrOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsCriticalOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsCritical) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
func (o AlarmEscalationsCriticalOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsCritical) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsCriticalOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsCritical) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsCriticalOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsCritical) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type AlarmEscalationsCriticalPtrOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsCritical)(nil)).Elem()
}

func (o AlarmEscalationsCriticalPtrOutput) ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput {
	return o
}

func (o AlarmEscalationsCriticalPtrOutput) ToAlarmEscalationsCriticalPtrOutputWithContext(ctx context.Context) AlarmEscalationsCriticalPtrOutput {
	return o
}

func (o AlarmEscalationsCriticalPtrOutput) Elem() AlarmEscalationsCriticalOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) AlarmEscalationsCritical { return *v }).(AlarmEscalationsCriticalOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsCriticalPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
func (o AlarmEscalationsCriticalPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsCriticalPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsCriticalPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type AlarmEscalationsInfo struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
	Statistics *string `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold *string `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times *int `pulumi:"times"`
}

// AlarmEscalationsInfoInput is an input type that accepts AlarmEscalationsInfoArgs and AlarmEscalationsInfoOutput values.
// You can construct a concrete instance of `AlarmEscalationsInfoInput` via:
//
//          AlarmEscalationsInfoArgs{...}
type AlarmEscalationsInfoInput interface {
	pulumi.Input

	ToAlarmEscalationsInfoOutput() AlarmEscalationsInfoOutput
	ToAlarmEscalationsInfoOutputWithContext(context.Context) AlarmEscalationsInfoOutput
}

type AlarmEscalationsInfoArgs struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (AlarmEscalationsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsInfo)(nil)).Elem()
}

func (i AlarmEscalationsInfoArgs) ToAlarmEscalationsInfoOutput() AlarmEscalationsInfoOutput {
	return i.ToAlarmEscalationsInfoOutputWithContext(context.Background())
}

func (i AlarmEscalationsInfoArgs) ToAlarmEscalationsInfoOutputWithContext(ctx context.Context) AlarmEscalationsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsInfoOutput)
}

func (i AlarmEscalationsInfoArgs) ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput {
	return i.ToAlarmEscalationsInfoPtrOutputWithContext(context.Background())
}

func (i AlarmEscalationsInfoArgs) ToAlarmEscalationsInfoPtrOutputWithContext(ctx context.Context) AlarmEscalationsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsInfoOutput).ToAlarmEscalationsInfoPtrOutputWithContext(ctx)
}

// AlarmEscalationsInfoPtrInput is an input type that accepts AlarmEscalationsInfoArgs, AlarmEscalationsInfoPtr and AlarmEscalationsInfoPtrOutput values.
// You can construct a concrete instance of `AlarmEscalationsInfoPtrInput` via:
//
//          AlarmEscalationsInfoArgs{...}
//
//  or:
//
//          nil
type AlarmEscalationsInfoPtrInput interface {
	pulumi.Input

	ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput
	ToAlarmEscalationsInfoPtrOutputWithContext(context.Context) AlarmEscalationsInfoPtrOutput
}

type alarmEscalationsInfoPtrType AlarmEscalationsInfoArgs

func AlarmEscalationsInfoPtr(v *AlarmEscalationsInfoArgs) AlarmEscalationsInfoPtrInput {
	return (*alarmEscalationsInfoPtrType)(v)
}

func (*alarmEscalationsInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsInfo)(nil)).Elem()
}

func (i *alarmEscalationsInfoPtrType) ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput {
	return i.ToAlarmEscalationsInfoPtrOutputWithContext(context.Background())
}

func (i *alarmEscalationsInfoPtrType) ToAlarmEscalationsInfoPtrOutputWithContext(ctx context.Context) AlarmEscalationsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsInfoPtrOutput)
}

type AlarmEscalationsInfoOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsInfo)(nil)).Elem()
}

func (o AlarmEscalationsInfoOutput) ToAlarmEscalationsInfoOutput() AlarmEscalationsInfoOutput {
	return o
}

func (o AlarmEscalationsInfoOutput) ToAlarmEscalationsInfoOutputWithContext(ctx context.Context) AlarmEscalationsInfoOutput {
	return o
}

func (o AlarmEscalationsInfoOutput) ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput {
	return o.ToAlarmEscalationsInfoPtrOutputWithContext(context.Background())
}

func (o AlarmEscalationsInfoOutput) ToAlarmEscalationsInfoPtrOutputWithContext(ctx context.Context) AlarmEscalationsInfoPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsInfo) *AlarmEscalationsInfo {
		return &v
	}).(AlarmEscalationsInfoPtrOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsInfoOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsInfo) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
func (o AlarmEscalationsInfoOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsInfo) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsInfoOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsInfo) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsInfoOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsInfo) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type AlarmEscalationsInfoPtrOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsInfo)(nil)).Elem()
}

func (o AlarmEscalationsInfoPtrOutput) ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput {
	return o
}

func (o AlarmEscalationsInfoPtrOutput) ToAlarmEscalationsInfoPtrOutputWithContext(ctx context.Context) AlarmEscalationsInfoPtrOutput {
	return o
}

func (o AlarmEscalationsInfoPtrOutput) Elem() AlarmEscalationsInfoOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) AlarmEscalationsInfo { return *v }).(AlarmEscalationsInfoOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsInfoPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
func (o AlarmEscalationsInfoPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsInfoPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsInfoPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type AlarmEscalationsWarn struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
	Statistics *string `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold *string `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times *int `pulumi:"times"`
}

// AlarmEscalationsWarnInput is an input type that accepts AlarmEscalationsWarnArgs and AlarmEscalationsWarnOutput values.
// You can construct a concrete instance of `AlarmEscalationsWarnInput` via:
//
//          AlarmEscalationsWarnArgs{...}
type AlarmEscalationsWarnInput interface {
	pulumi.Input

	ToAlarmEscalationsWarnOutput() AlarmEscalationsWarnOutput
	ToAlarmEscalationsWarnOutputWithContext(context.Context) AlarmEscalationsWarnOutput
}

type AlarmEscalationsWarnArgs struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (AlarmEscalationsWarnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsWarn)(nil)).Elem()
}

func (i AlarmEscalationsWarnArgs) ToAlarmEscalationsWarnOutput() AlarmEscalationsWarnOutput {
	return i.ToAlarmEscalationsWarnOutputWithContext(context.Background())
}

func (i AlarmEscalationsWarnArgs) ToAlarmEscalationsWarnOutputWithContext(ctx context.Context) AlarmEscalationsWarnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsWarnOutput)
}

func (i AlarmEscalationsWarnArgs) ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput {
	return i.ToAlarmEscalationsWarnPtrOutputWithContext(context.Background())
}

func (i AlarmEscalationsWarnArgs) ToAlarmEscalationsWarnPtrOutputWithContext(ctx context.Context) AlarmEscalationsWarnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsWarnOutput).ToAlarmEscalationsWarnPtrOutputWithContext(ctx)
}

// AlarmEscalationsWarnPtrInput is an input type that accepts AlarmEscalationsWarnArgs, AlarmEscalationsWarnPtr and AlarmEscalationsWarnPtrOutput values.
// You can construct a concrete instance of `AlarmEscalationsWarnPtrInput` via:
//
//          AlarmEscalationsWarnArgs{...}
//
//  or:
//
//          nil
type AlarmEscalationsWarnPtrInput interface {
	pulumi.Input

	ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput
	ToAlarmEscalationsWarnPtrOutputWithContext(context.Context) AlarmEscalationsWarnPtrOutput
}

type alarmEscalationsWarnPtrType AlarmEscalationsWarnArgs

func AlarmEscalationsWarnPtr(v *AlarmEscalationsWarnArgs) AlarmEscalationsWarnPtrInput {
	return (*alarmEscalationsWarnPtrType)(v)
}

func (*alarmEscalationsWarnPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsWarn)(nil)).Elem()
}

func (i *alarmEscalationsWarnPtrType) ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput {
	return i.ToAlarmEscalationsWarnPtrOutputWithContext(context.Background())
}

func (i *alarmEscalationsWarnPtrType) ToAlarmEscalationsWarnPtrOutputWithContext(ctx context.Context) AlarmEscalationsWarnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsWarnPtrOutput)
}

type AlarmEscalationsWarnOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsWarnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsWarn)(nil)).Elem()
}

func (o AlarmEscalationsWarnOutput) ToAlarmEscalationsWarnOutput() AlarmEscalationsWarnOutput {
	return o
}

func (o AlarmEscalationsWarnOutput) ToAlarmEscalationsWarnOutputWithContext(ctx context.Context) AlarmEscalationsWarnOutput {
	return o
}

func (o AlarmEscalationsWarnOutput) ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput {
	return o.ToAlarmEscalationsWarnPtrOutputWithContext(context.Background())
}

func (o AlarmEscalationsWarnOutput) ToAlarmEscalationsWarnPtrOutputWithContext(ctx context.Context) AlarmEscalationsWarnPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsWarn) *AlarmEscalationsWarn {
		return &v
	}).(AlarmEscalationsWarnPtrOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsWarnOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsWarn) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
func (o AlarmEscalationsWarnOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsWarn) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsWarnOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsWarn) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsWarnOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsWarn) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type AlarmEscalationsWarnPtrOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsWarnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsWarn)(nil)).Elem()
}

func (o AlarmEscalationsWarnPtrOutput) ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput {
	return o
}

func (o AlarmEscalationsWarnPtrOutput) ToAlarmEscalationsWarnPtrOutputWithContext(ctx context.Context) AlarmEscalationsWarnPtrOutput {
	return o
}

func (o AlarmEscalationsWarnPtrOutput) Elem() AlarmEscalationsWarnOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) AlarmEscalationsWarn { return *v }).(AlarmEscalationsWarnOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsWarnPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
func (o AlarmEscalationsWarnPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsWarnPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsWarnPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type SiteMonitorIspCity struct {
	City string `pulumi:"city"`
	Isp  string `pulumi:"isp"`
}

// SiteMonitorIspCityInput is an input type that accepts SiteMonitorIspCityArgs and SiteMonitorIspCityOutput values.
// You can construct a concrete instance of `SiteMonitorIspCityInput` via:
//
//          SiteMonitorIspCityArgs{...}
type SiteMonitorIspCityInput interface {
	pulumi.Input

	ToSiteMonitorIspCityOutput() SiteMonitorIspCityOutput
	ToSiteMonitorIspCityOutputWithContext(context.Context) SiteMonitorIspCityOutput
}

type SiteMonitorIspCityArgs struct {
	City pulumi.StringInput `pulumi:"city"`
	Isp  pulumi.StringInput `pulumi:"isp"`
}

func (SiteMonitorIspCityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMonitorIspCity)(nil)).Elem()
}

func (i SiteMonitorIspCityArgs) ToSiteMonitorIspCityOutput() SiteMonitorIspCityOutput {
	return i.ToSiteMonitorIspCityOutputWithContext(context.Background())
}

func (i SiteMonitorIspCityArgs) ToSiteMonitorIspCityOutputWithContext(ctx context.Context) SiteMonitorIspCityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMonitorIspCityOutput)
}

// SiteMonitorIspCityArrayInput is an input type that accepts SiteMonitorIspCityArray and SiteMonitorIspCityArrayOutput values.
// You can construct a concrete instance of `SiteMonitorIspCityArrayInput` via:
//
//          SiteMonitorIspCityArray{ SiteMonitorIspCityArgs{...} }
type SiteMonitorIspCityArrayInput interface {
	pulumi.Input

	ToSiteMonitorIspCityArrayOutput() SiteMonitorIspCityArrayOutput
	ToSiteMonitorIspCityArrayOutputWithContext(context.Context) SiteMonitorIspCityArrayOutput
}

type SiteMonitorIspCityArray []SiteMonitorIspCityInput

func (SiteMonitorIspCityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SiteMonitorIspCity)(nil)).Elem()
}

func (i SiteMonitorIspCityArray) ToSiteMonitorIspCityArrayOutput() SiteMonitorIspCityArrayOutput {
	return i.ToSiteMonitorIspCityArrayOutputWithContext(context.Background())
}

func (i SiteMonitorIspCityArray) ToSiteMonitorIspCityArrayOutputWithContext(ctx context.Context) SiteMonitorIspCityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMonitorIspCityArrayOutput)
}

type SiteMonitorIspCityOutput struct{ *pulumi.OutputState }

func (SiteMonitorIspCityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMonitorIspCity)(nil)).Elem()
}

func (o SiteMonitorIspCityOutput) ToSiteMonitorIspCityOutput() SiteMonitorIspCityOutput {
	return o
}

func (o SiteMonitorIspCityOutput) ToSiteMonitorIspCityOutputWithContext(ctx context.Context) SiteMonitorIspCityOutput {
	return o
}

func (o SiteMonitorIspCityOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v SiteMonitorIspCity) string { return v.City }).(pulumi.StringOutput)
}

func (o SiteMonitorIspCityOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v SiteMonitorIspCity) string { return v.Isp }).(pulumi.StringOutput)
}

type SiteMonitorIspCityArrayOutput struct{ *pulumi.OutputState }

func (SiteMonitorIspCityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SiteMonitorIspCity)(nil)).Elem()
}

func (o SiteMonitorIspCityArrayOutput) ToSiteMonitorIspCityArrayOutput() SiteMonitorIspCityArrayOutput {
	return o
}

func (o SiteMonitorIspCityArrayOutput) ToSiteMonitorIspCityArrayOutputWithContext(ctx context.Context) SiteMonitorIspCityArrayOutput {
	return o
}

func (o SiteMonitorIspCityArrayOutput) Index(i pulumi.IntInput) SiteMonitorIspCityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SiteMonitorIspCity {
		return vs[0].([]SiteMonitorIspCity)[vs[1].(int)]
	}).(SiteMonitorIspCityOutput)
}

type GetAlarmContactGroupsGroup struct {
	// The name of Alarm Contact Group.
	AlarmContactGroupName string `pulumi:"alarmContactGroupName"`
	// The alarm contacts in the alarm group.
	Contacts []string `pulumi:"contacts"`
	// The description of the Alarm Group.
	Describe string `pulumi:"describe"`
	// Indicates whether the alarm group subscribes to weekly reports.
	EnableSubscribed bool `pulumi:"enableSubscribed"`
	// The ID of the CMS.
	Id string `pulumi:"id"`
}

// GetAlarmContactGroupsGroupInput is an input type that accepts GetAlarmContactGroupsGroupArgs and GetAlarmContactGroupsGroupOutput values.
// You can construct a concrete instance of `GetAlarmContactGroupsGroupInput` via:
//
//          GetAlarmContactGroupsGroupArgs{...}
type GetAlarmContactGroupsGroupInput interface {
	pulumi.Input

	ToGetAlarmContactGroupsGroupOutput() GetAlarmContactGroupsGroupOutput
	ToGetAlarmContactGroupsGroupOutputWithContext(context.Context) GetAlarmContactGroupsGroupOutput
}

type GetAlarmContactGroupsGroupArgs struct {
	// The name of Alarm Contact Group.
	AlarmContactGroupName pulumi.StringInput `pulumi:"alarmContactGroupName"`
	// The alarm contacts in the alarm group.
	Contacts pulumi.StringArrayInput `pulumi:"contacts"`
	// The description of the Alarm Group.
	Describe pulumi.StringInput `pulumi:"describe"`
	// Indicates whether the alarm group subscribes to weekly reports.
	EnableSubscribed pulumi.BoolInput `pulumi:"enableSubscribed"`
	// The ID of the CMS.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetAlarmContactGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmContactGroupsGroup)(nil)).Elem()
}

func (i GetAlarmContactGroupsGroupArgs) ToGetAlarmContactGroupsGroupOutput() GetAlarmContactGroupsGroupOutput {
	return i.ToGetAlarmContactGroupsGroupOutputWithContext(context.Background())
}

func (i GetAlarmContactGroupsGroupArgs) ToGetAlarmContactGroupsGroupOutputWithContext(ctx context.Context) GetAlarmContactGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlarmContactGroupsGroupOutput)
}

// GetAlarmContactGroupsGroupArrayInput is an input type that accepts GetAlarmContactGroupsGroupArray and GetAlarmContactGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetAlarmContactGroupsGroupArrayInput` via:
//
//          GetAlarmContactGroupsGroupArray{ GetAlarmContactGroupsGroupArgs{...} }
type GetAlarmContactGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetAlarmContactGroupsGroupArrayOutput() GetAlarmContactGroupsGroupArrayOutput
	ToGetAlarmContactGroupsGroupArrayOutputWithContext(context.Context) GetAlarmContactGroupsGroupArrayOutput
}

type GetAlarmContactGroupsGroupArray []GetAlarmContactGroupsGroupInput

func (GetAlarmContactGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlarmContactGroupsGroup)(nil)).Elem()
}

func (i GetAlarmContactGroupsGroupArray) ToGetAlarmContactGroupsGroupArrayOutput() GetAlarmContactGroupsGroupArrayOutput {
	return i.ToGetAlarmContactGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetAlarmContactGroupsGroupArray) ToGetAlarmContactGroupsGroupArrayOutputWithContext(ctx context.Context) GetAlarmContactGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlarmContactGroupsGroupArrayOutput)
}

type GetAlarmContactGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetAlarmContactGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmContactGroupsGroup)(nil)).Elem()
}

func (o GetAlarmContactGroupsGroupOutput) ToGetAlarmContactGroupsGroupOutput() GetAlarmContactGroupsGroupOutput {
	return o
}

func (o GetAlarmContactGroupsGroupOutput) ToGetAlarmContactGroupsGroupOutputWithContext(ctx context.Context) GetAlarmContactGroupsGroupOutput {
	return o
}

// The name of Alarm Contact Group.
func (o GetAlarmContactGroupsGroupOutput) AlarmContactGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) string { return v.AlarmContactGroupName }).(pulumi.StringOutput)
}

// The alarm contacts in the alarm group.
func (o GetAlarmContactGroupsGroupOutput) Contacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) []string { return v.Contacts }).(pulumi.StringArrayOutput)
}

// The description of the Alarm Group.
func (o GetAlarmContactGroupsGroupOutput) Describe() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) string { return v.Describe }).(pulumi.StringOutput)
}

// Indicates whether the alarm group subscribes to weekly reports.
func (o GetAlarmContactGroupsGroupOutput) EnableSubscribed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) bool { return v.EnableSubscribed }).(pulumi.BoolOutput)
}

// The ID of the CMS.
func (o GetAlarmContactGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

type GetAlarmContactGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetAlarmContactGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlarmContactGroupsGroup)(nil)).Elem()
}

func (o GetAlarmContactGroupsGroupArrayOutput) ToGetAlarmContactGroupsGroupArrayOutput() GetAlarmContactGroupsGroupArrayOutput {
	return o
}

func (o GetAlarmContactGroupsGroupArrayOutput) ToGetAlarmContactGroupsGroupArrayOutputWithContext(ctx context.Context) GetAlarmContactGroupsGroupArrayOutput {
	return o
}

func (o GetAlarmContactGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetAlarmContactGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlarmContactGroupsGroup {
		return vs[0].([]GetAlarmContactGroupsGroup)[vs[1].(int)]
	}).(GetAlarmContactGroupsGroupOutput)
}

type GetAlarmContactsContact struct {
	// The name of the alarm contact.
	AlarmContactName string `pulumi:"alarmContactName"`
	// The TradeManager ID of the alarm contact.
	ChannelsAliim string `pulumi:"channelsAliim"`
	// The webhook URL of the DingTalk chatbot.
	ChannelsDingWebHook string `pulumi:"channelsDingWebHook"`
	// The email address of the alarm contact.
	ChannelsMail string `pulumi:"channelsMail"`
	// The phone number of the alarm contact.
	ChannelsSms string `pulumi:"channelsSms"`
	// Indicates whether the TradeManager ID is valid.
	ChannelsStateAliim string `pulumi:"channelsStateAliim"`
	// Indicates whether the DingTalk chatbot is normal.
	ChannelsStateDingWebHook string `pulumi:"channelsStateDingWebHook"`
	// The status of the email address.
	ChannelsStateMail string `pulumi:"channelsStateMail"`
	// The status of the phone number.
	ChannelsStatusSms string `pulumi:"channelsStatusSms"`
	// The alert groups to which the alarm contact is added.
	ContactGroups []string `pulumi:"contactGroups"`
	// The description of the alarm contact.
	Describe string `pulumi:"describe"`
	// The ID of the alarm contact.
	Id   string `pulumi:"id"`
	Lang string `pulumi:"lang"`
}

// GetAlarmContactsContactInput is an input type that accepts GetAlarmContactsContactArgs and GetAlarmContactsContactOutput values.
// You can construct a concrete instance of `GetAlarmContactsContactInput` via:
//
//          GetAlarmContactsContactArgs{...}
type GetAlarmContactsContactInput interface {
	pulumi.Input

	ToGetAlarmContactsContactOutput() GetAlarmContactsContactOutput
	ToGetAlarmContactsContactOutputWithContext(context.Context) GetAlarmContactsContactOutput
}

type GetAlarmContactsContactArgs struct {
	// The name of the alarm contact.
	AlarmContactName pulumi.StringInput `pulumi:"alarmContactName"`
	// The TradeManager ID of the alarm contact.
	ChannelsAliim pulumi.StringInput `pulumi:"channelsAliim"`
	// The webhook URL of the DingTalk chatbot.
	ChannelsDingWebHook pulumi.StringInput `pulumi:"channelsDingWebHook"`
	// The email address of the alarm contact.
	ChannelsMail pulumi.StringInput `pulumi:"channelsMail"`
	// The phone number of the alarm contact.
	ChannelsSms pulumi.StringInput `pulumi:"channelsSms"`
	// Indicates whether the TradeManager ID is valid.
	ChannelsStateAliim pulumi.StringInput `pulumi:"channelsStateAliim"`
	// Indicates whether the DingTalk chatbot is normal.
	ChannelsStateDingWebHook pulumi.StringInput `pulumi:"channelsStateDingWebHook"`
	// The status of the email address.
	ChannelsStateMail pulumi.StringInput `pulumi:"channelsStateMail"`
	// The status of the phone number.
	ChannelsStatusSms pulumi.StringInput `pulumi:"channelsStatusSms"`
	// The alert groups to which the alarm contact is added.
	ContactGroups pulumi.StringArrayInput `pulumi:"contactGroups"`
	// The description of the alarm contact.
	Describe pulumi.StringInput `pulumi:"describe"`
	// The ID of the alarm contact.
	Id   pulumi.StringInput `pulumi:"id"`
	Lang pulumi.StringInput `pulumi:"lang"`
}

func (GetAlarmContactsContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmContactsContact)(nil)).Elem()
}

func (i GetAlarmContactsContactArgs) ToGetAlarmContactsContactOutput() GetAlarmContactsContactOutput {
	return i.ToGetAlarmContactsContactOutputWithContext(context.Background())
}

func (i GetAlarmContactsContactArgs) ToGetAlarmContactsContactOutputWithContext(ctx context.Context) GetAlarmContactsContactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlarmContactsContactOutput)
}

// GetAlarmContactsContactArrayInput is an input type that accepts GetAlarmContactsContactArray and GetAlarmContactsContactArrayOutput values.
// You can construct a concrete instance of `GetAlarmContactsContactArrayInput` via:
//
//          GetAlarmContactsContactArray{ GetAlarmContactsContactArgs{...} }
type GetAlarmContactsContactArrayInput interface {
	pulumi.Input

	ToGetAlarmContactsContactArrayOutput() GetAlarmContactsContactArrayOutput
	ToGetAlarmContactsContactArrayOutputWithContext(context.Context) GetAlarmContactsContactArrayOutput
}

type GetAlarmContactsContactArray []GetAlarmContactsContactInput

func (GetAlarmContactsContactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlarmContactsContact)(nil)).Elem()
}

func (i GetAlarmContactsContactArray) ToGetAlarmContactsContactArrayOutput() GetAlarmContactsContactArrayOutput {
	return i.ToGetAlarmContactsContactArrayOutputWithContext(context.Background())
}

func (i GetAlarmContactsContactArray) ToGetAlarmContactsContactArrayOutputWithContext(ctx context.Context) GetAlarmContactsContactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlarmContactsContactArrayOutput)
}

type GetAlarmContactsContactOutput struct{ *pulumi.OutputState }

func (GetAlarmContactsContactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmContactsContact)(nil)).Elem()
}

func (o GetAlarmContactsContactOutput) ToGetAlarmContactsContactOutput() GetAlarmContactsContactOutput {
	return o
}

func (o GetAlarmContactsContactOutput) ToGetAlarmContactsContactOutputWithContext(ctx context.Context) GetAlarmContactsContactOutput {
	return o
}

// The name of the alarm contact.
func (o GetAlarmContactsContactOutput) AlarmContactName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.AlarmContactName }).(pulumi.StringOutput)
}

// The TradeManager ID of the alarm contact.
func (o GetAlarmContactsContactOutput) ChannelsAliim() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsAliim }).(pulumi.StringOutput)
}

// The webhook URL of the DingTalk chatbot.
func (o GetAlarmContactsContactOutput) ChannelsDingWebHook() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsDingWebHook }).(pulumi.StringOutput)
}

// The email address of the alarm contact.
func (o GetAlarmContactsContactOutput) ChannelsMail() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsMail }).(pulumi.StringOutput)
}

// The phone number of the alarm contact.
func (o GetAlarmContactsContactOutput) ChannelsSms() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsSms }).(pulumi.StringOutput)
}

// Indicates whether the TradeManager ID is valid.
func (o GetAlarmContactsContactOutput) ChannelsStateAliim() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsStateAliim }).(pulumi.StringOutput)
}

// Indicates whether the DingTalk chatbot is normal.
func (o GetAlarmContactsContactOutput) ChannelsStateDingWebHook() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsStateDingWebHook }).(pulumi.StringOutput)
}

// The status of the email address.
func (o GetAlarmContactsContactOutput) ChannelsStateMail() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsStateMail }).(pulumi.StringOutput)
}

// The status of the phone number.
func (o GetAlarmContactsContactOutput) ChannelsStatusSms() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsStatusSms }).(pulumi.StringOutput)
}

// The alert groups to which the alarm contact is added.
func (o GetAlarmContactsContactOutput) ContactGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) []string { return v.ContactGroups }).(pulumi.StringArrayOutput)
}

// The description of the alarm contact.
func (o GetAlarmContactsContactOutput) Describe() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.Describe }).(pulumi.StringOutput)
}

// The ID of the alarm contact.
func (o GetAlarmContactsContactOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAlarmContactsContactOutput) Lang() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.Lang }).(pulumi.StringOutput)
}

type GetAlarmContactsContactArrayOutput struct{ *pulumi.OutputState }

func (GetAlarmContactsContactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlarmContactsContact)(nil)).Elem()
}

func (o GetAlarmContactsContactArrayOutput) ToGetAlarmContactsContactArrayOutput() GetAlarmContactsContactArrayOutput {
	return o
}

func (o GetAlarmContactsContactArrayOutput) ToGetAlarmContactsContactArrayOutputWithContext(ctx context.Context) GetAlarmContactsContactArrayOutput {
	return o
}

func (o GetAlarmContactsContactArrayOutput) Index(i pulumi.IntInput) GetAlarmContactsContactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlarmContactsContact {
		return vs[0].([]GetAlarmContactsContact)[vs[1].(int)]
	}).(GetAlarmContactsContactOutput)
}

func init() {
	pulumi.RegisterOutputType(AlarmEscalationsCriticalOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsCriticalPtrOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsInfoOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsInfoPtrOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsWarnOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsWarnPtrOutput{})
	pulumi.RegisterOutputType(SiteMonitorIspCityOutput{})
	pulumi.RegisterOutputType(SiteMonitorIspCityArrayOutput{})
	pulumi.RegisterOutputType(GetAlarmContactGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetAlarmContactGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetAlarmContactsContactOutput{})
	pulumi.RegisterOutputType(GetAlarmContactsContactArrayOutput{})
}
