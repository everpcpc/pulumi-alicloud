// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AlarmEscalationsCritical struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
	Statistics *string `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold *string `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times *int `pulumi:"times"`
}

// AlarmEscalationsCriticalInput is an input type that accepts AlarmEscalationsCriticalArgs and AlarmEscalationsCriticalOutput values.
// You can construct a concrete instance of `AlarmEscalationsCriticalInput` via:
//
//          AlarmEscalationsCriticalArgs{...}
type AlarmEscalationsCriticalInput interface {
	pulumi.Input

	ToAlarmEscalationsCriticalOutput() AlarmEscalationsCriticalOutput
	ToAlarmEscalationsCriticalOutputWithContext(context.Context) AlarmEscalationsCriticalOutput
}

type AlarmEscalationsCriticalArgs struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (AlarmEscalationsCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsCritical)(nil)).Elem()
}

func (i AlarmEscalationsCriticalArgs) ToAlarmEscalationsCriticalOutput() AlarmEscalationsCriticalOutput {
	return i.ToAlarmEscalationsCriticalOutputWithContext(context.Background())
}

func (i AlarmEscalationsCriticalArgs) ToAlarmEscalationsCriticalOutputWithContext(ctx context.Context) AlarmEscalationsCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsCriticalOutput)
}

func (i AlarmEscalationsCriticalArgs) ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput {
	return i.ToAlarmEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (i AlarmEscalationsCriticalArgs) ToAlarmEscalationsCriticalPtrOutputWithContext(ctx context.Context) AlarmEscalationsCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsCriticalOutput).ToAlarmEscalationsCriticalPtrOutputWithContext(ctx)
}

// AlarmEscalationsCriticalPtrInput is an input type that accepts AlarmEscalationsCriticalArgs, AlarmEscalationsCriticalPtr and AlarmEscalationsCriticalPtrOutput values.
// You can construct a concrete instance of `AlarmEscalationsCriticalPtrInput` via:
//
//          AlarmEscalationsCriticalArgs{...}
//
//  or:
//
//          nil
type AlarmEscalationsCriticalPtrInput interface {
	pulumi.Input

	ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput
	ToAlarmEscalationsCriticalPtrOutputWithContext(context.Context) AlarmEscalationsCriticalPtrOutput
}

type alarmEscalationsCriticalPtrType AlarmEscalationsCriticalArgs

func AlarmEscalationsCriticalPtr(v *AlarmEscalationsCriticalArgs) AlarmEscalationsCriticalPtrInput {
	return (*alarmEscalationsCriticalPtrType)(v)
}

func (*alarmEscalationsCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsCritical)(nil)).Elem()
}

func (i *alarmEscalationsCriticalPtrType) ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput {
	return i.ToAlarmEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (i *alarmEscalationsCriticalPtrType) ToAlarmEscalationsCriticalPtrOutputWithContext(ctx context.Context) AlarmEscalationsCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsCriticalPtrOutput)
}

type AlarmEscalationsCriticalOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsCritical)(nil)).Elem()
}

func (o AlarmEscalationsCriticalOutput) ToAlarmEscalationsCriticalOutput() AlarmEscalationsCriticalOutput {
	return o
}

func (o AlarmEscalationsCriticalOutput) ToAlarmEscalationsCriticalOutputWithContext(ctx context.Context) AlarmEscalationsCriticalOutput {
	return o
}

func (o AlarmEscalationsCriticalOutput) ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput {
	return o.ToAlarmEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (o AlarmEscalationsCriticalOutput) ToAlarmEscalationsCriticalPtrOutputWithContext(ctx context.Context) AlarmEscalationsCriticalPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsCritical) *AlarmEscalationsCritical {
		return &v
	}).(AlarmEscalationsCriticalPtrOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsCriticalOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsCritical) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
func (o AlarmEscalationsCriticalOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsCritical) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsCriticalOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsCritical) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsCriticalOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsCritical) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type AlarmEscalationsCriticalPtrOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsCritical)(nil)).Elem()
}

func (o AlarmEscalationsCriticalPtrOutput) ToAlarmEscalationsCriticalPtrOutput() AlarmEscalationsCriticalPtrOutput {
	return o
}

func (o AlarmEscalationsCriticalPtrOutput) ToAlarmEscalationsCriticalPtrOutputWithContext(ctx context.Context) AlarmEscalationsCriticalPtrOutput {
	return o
}

func (o AlarmEscalationsCriticalPtrOutput) Elem() AlarmEscalationsCriticalOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) AlarmEscalationsCritical { return *v }).(AlarmEscalationsCriticalOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsCriticalPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
func (o AlarmEscalationsCriticalPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsCriticalPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsCriticalPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsCritical) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type AlarmEscalationsInfo struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
	Statistics *string `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold *string `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times *int `pulumi:"times"`
}

// AlarmEscalationsInfoInput is an input type that accepts AlarmEscalationsInfoArgs and AlarmEscalationsInfoOutput values.
// You can construct a concrete instance of `AlarmEscalationsInfoInput` via:
//
//          AlarmEscalationsInfoArgs{...}
type AlarmEscalationsInfoInput interface {
	pulumi.Input

	ToAlarmEscalationsInfoOutput() AlarmEscalationsInfoOutput
	ToAlarmEscalationsInfoOutputWithContext(context.Context) AlarmEscalationsInfoOutput
}

type AlarmEscalationsInfoArgs struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (AlarmEscalationsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsInfo)(nil)).Elem()
}

func (i AlarmEscalationsInfoArgs) ToAlarmEscalationsInfoOutput() AlarmEscalationsInfoOutput {
	return i.ToAlarmEscalationsInfoOutputWithContext(context.Background())
}

func (i AlarmEscalationsInfoArgs) ToAlarmEscalationsInfoOutputWithContext(ctx context.Context) AlarmEscalationsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsInfoOutput)
}

func (i AlarmEscalationsInfoArgs) ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput {
	return i.ToAlarmEscalationsInfoPtrOutputWithContext(context.Background())
}

func (i AlarmEscalationsInfoArgs) ToAlarmEscalationsInfoPtrOutputWithContext(ctx context.Context) AlarmEscalationsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsInfoOutput).ToAlarmEscalationsInfoPtrOutputWithContext(ctx)
}

// AlarmEscalationsInfoPtrInput is an input type that accepts AlarmEscalationsInfoArgs, AlarmEscalationsInfoPtr and AlarmEscalationsInfoPtrOutput values.
// You can construct a concrete instance of `AlarmEscalationsInfoPtrInput` via:
//
//          AlarmEscalationsInfoArgs{...}
//
//  or:
//
//          nil
type AlarmEscalationsInfoPtrInput interface {
	pulumi.Input

	ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput
	ToAlarmEscalationsInfoPtrOutputWithContext(context.Context) AlarmEscalationsInfoPtrOutput
}

type alarmEscalationsInfoPtrType AlarmEscalationsInfoArgs

func AlarmEscalationsInfoPtr(v *AlarmEscalationsInfoArgs) AlarmEscalationsInfoPtrInput {
	return (*alarmEscalationsInfoPtrType)(v)
}

func (*alarmEscalationsInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsInfo)(nil)).Elem()
}

func (i *alarmEscalationsInfoPtrType) ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput {
	return i.ToAlarmEscalationsInfoPtrOutputWithContext(context.Background())
}

func (i *alarmEscalationsInfoPtrType) ToAlarmEscalationsInfoPtrOutputWithContext(ctx context.Context) AlarmEscalationsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsInfoPtrOutput)
}

type AlarmEscalationsInfoOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsInfo)(nil)).Elem()
}

func (o AlarmEscalationsInfoOutput) ToAlarmEscalationsInfoOutput() AlarmEscalationsInfoOutput {
	return o
}

func (o AlarmEscalationsInfoOutput) ToAlarmEscalationsInfoOutputWithContext(ctx context.Context) AlarmEscalationsInfoOutput {
	return o
}

func (o AlarmEscalationsInfoOutput) ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput {
	return o.ToAlarmEscalationsInfoPtrOutputWithContext(context.Background())
}

func (o AlarmEscalationsInfoOutput) ToAlarmEscalationsInfoPtrOutputWithContext(ctx context.Context) AlarmEscalationsInfoPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsInfo) *AlarmEscalationsInfo {
		return &v
	}).(AlarmEscalationsInfoPtrOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsInfoOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsInfo) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
func (o AlarmEscalationsInfoOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsInfo) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsInfoOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsInfo) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsInfoOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsInfo) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type AlarmEscalationsInfoPtrOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsInfo)(nil)).Elem()
}

func (o AlarmEscalationsInfoPtrOutput) ToAlarmEscalationsInfoPtrOutput() AlarmEscalationsInfoPtrOutput {
	return o
}

func (o AlarmEscalationsInfoPtrOutput) ToAlarmEscalationsInfoPtrOutputWithContext(ctx context.Context) AlarmEscalationsInfoPtrOutput {
	return o
}

func (o AlarmEscalationsInfoPtrOutput) Elem() AlarmEscalationsInfoOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) AlarmEscalationsInfo { return *v }).(AlarmEscalationsInfoOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsInfoPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
func (o AlarmEscalationsInfoPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsInfoPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsInfoPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsInfo) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type AlarmEscalationsWarn struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
	Statistics *string `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold *string `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times *int `pulumi:"times"`
}

// AlarmEscalationsWarnInput is an input type that accepts AlarmEscalationsWarnArgs and AlarmEscalationsWarnOutput values.
// You can construct a concrete instance of `AlarmEscalationsWarnInput` via:
//
//          AlarmEscalationsWarnArgs{...}
type AlarmEscalationsWarnInput interface {
	pulumi.Input

	ToAlarmEscalationsWarnOutput() AlarmEscalationsWarnOutput
	ToAlarmEscalationsWarnOutputWithContext(context.Context) AlarmEscalationsWarnOutput
}

type AlarmEscalationsWarnArgs struct {
	// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// Critical level alarm threshold value, which must be a numeric value currently.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// Critical level alarm retry times. Default to 3.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (AlarmEscalationsWarnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsWarn)(nil)).Elem()
}

func (i AlarmEscalationsWarnArgs) ToAlarmEscalationsWarnOutput() AlarmEscalationsWarnOutput {
	return i.ToAlarmEscalationsWarnOutputWithContext(context.Background())
}

func (i AlarmEscalationsWarnArgs) ToAlarmEscalationsWarnOutputWithContext(ctx context.Context) AlarmEscalationsWarnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsWarnOutput)
}

func (i AlarmEscalationsWarnArgs) ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput {
	return i.ToAlarmEscalationsWarnPtrOutputWithContext(context.Background())
}

func (i AlarmEscalationsWarnArgs) ToAlarmEscalationsWarnPtrOutputWithContext(ctx context.Context) AlarmEscalationsWarnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsWarnOutput).ToAlarmEscalationsWarnPtrOutputWithContext(ctx)
}

// AlarmEscalationsWarnPtrInput is an input type that accepts AlarmEscalationsWarnArgs, AlarmEscalationsWarnPtr and AlarmEscalationsWarnPtrOutput values.
// You can construct a concrete instance of `AlarmEscalationsWarnPtrInput` via:
//
//          AlarmEscalationsWarnArgs{...}
//
//  or:
//
//          nil
type AlarmEscalationsWarnPtrInput interface {
	pulumi.Input

	ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput
	ToAlarmEscalationsWarnPtrOutputWithContext(context.Context) AlarmEscalationsWarnPtrOutput
}

type alarmEscalationsWarnPtrType AlarmEscalationsWarnArgs

func AlarmEscalationsWarnPtr(v *AlarmEscalationsWarnArgs) AlarmEscalationsWarnPtrInput {
	return (*alarmEscalationsWarnPtrType)(v)
}

func (*alarmEscalationsWarnPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsWarn)(nil)).Elem()
}

func (i *alarmEscalationsWarnPtrType) ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput {
	return i.ToAlarmEscalationsWarnPtrOutputWithContext(context.Background())
}

func (i *alarmEscalationsWarnPtrType) ToAlarmEscalationsWarnPtrOutputWithContext(ctx context.Context) AlarmEscalationsWarnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmEscalationsWarnPtrOutput)
}

type AlarmEscalationsWarnOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsWarnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmEscalationsWarn)(nil)).Elem()
}

func (o AlarmEscalationsWarnOutput) ToAlarmEscalationsWarnOutput() AlarmEscalationsWarnOutput {
	return o
}

func (o AlarmEscalationsWarnOutput) ToAlarmEscalationsWarnOutputWithContext(ctx context.Context) AlarmEscalationsWarnOutput {
	return o
}

func (o AlarmEscalationsWarnOutput) ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput {
	return o.ToAlarmEscalationsWarnPtrOutputWithContext(context.Background())
}

func (o AlarmEscalationsWarnOutput) ToAlarmEscalationsWarnPtrOutputWithContext(ctx context.Context) AlarmEscalationsWarnPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsWarn) *AlarmEscalationsWarn {
		return &v
	}).(AlarmEscalationsWarnPtrOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsWarnOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsWarn) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
func (o AlarmEscalationsWarnOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsWarn) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsWarnOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsWarn) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsWarnOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmEscalationsWarn) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type AlarmEscalationsWarnPtrOutput struct{ *pulumi.OutputState }

func (AlarmEscalationsWarnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmEscalationsWarn)(nil)).Elem()
}

func (o AlarmEscalationsWarnPtrOutput) ToAlarmEscalationsWarnPtrOutput() AlarmEscalationsWarnPtrOutput {
	return o
}

func (o AlarmEscalationsWarnPtrOutput) ToAlarmEscalationsWarnPtrOutputWithContext(ctx context.Context) AlarmEscalationsWarnPtrOutput {
	return o
}

func (o AlarmEscalationsWarnPtrOutput) Elem() AlarmEscalationsWarnOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) AlarmEscalationsWarn { return *v }).(AlarmEscalationsWarnOutput)
}

// Critical level alarm comparison operator. Valid values: ["<=", "<", ">", ">=", "==", "!="]. Default to "==".
func (o AlarmEscalationsWarnPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm statistics method.. It must be consistent with that defined for metrics. Valid values: ["Average", "Minimum", "Maximum"]. Default to "Average".
func (o AlarmEscalationsWarnPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm threshold value, which must be a numeric value currently.
func (o AlarmEscalationsWarnPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// Critical level alarm retry times. Default to 3.
func (o AlarmEscalationsWarnPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmEscalationsWarn) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type GroupMetricRuleEscalations struct {
	// The critical level.
	Critical *GroupMetricRuleEscalationsCritical `pulumi:"critical"`
	// The info level.
	Info *GroupMetricRuleEscalationsInfo `pulumi:"info"`
	// The warn level.
	Warn *GroupMetricRuleEscalationsWarn `pulumi:"warn"`
}

// GroupMetricRuleEscalationsInput is an input type that accepts GroupMetricRuleEscalationsArgs and GroupMetricRuleEscalationsOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsInput` via:
//
//          GroupMetricRuleEscalationsArgs{...}
type GroupMetricRuleEscalationsInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsOutput() GroupMetricRuleEscalationsOutput
	ToGroupMetricRuleEscalationsOutputWithContext(context.Context) GroupMetricRuleEscalationsOutput
}

type GroupMetricRuleEscalationsArgs struct {
	// The critical level.
	Critical GroupMetricRuleEscalationsCriticalPtrInput `pulumi:"critical"`
	// The info level.
	Info GroupMetricRuleEscalationsInfoPtrInput `pulumi:"info"`
	// The warn level.
	Warn GroupMetricRuleEscalationsWarnPtrInput `pulumi:"warn"`
}

func (GroupMetricRuleEscalationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalations)(nil)).Elem()
}

func (i GroupMetricRuleEscalationsArgs) ToGroupMetricRuleEscalationsOutput() GroupMetricRuleEscalationsOutput {
	return i.ToGroupMetricRuleEscalationsOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsArgs) ToGroupMetricRuleEscalationsOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsOutput)
}

func (i GroupMetricRuleEscalationsArgs) ToGroupMetricRuleEscalationsPtrOutput() GroupMetricRuleEscalationsPtrOutput {
	return i.ToGroupMetricRuleEscalationsPtrOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsArgs) ToGroupMetricRuleEscalationsPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsOutput).ToGroupMetricRuleEscalationsPtrOutputWithContext(ctx)
}

// GroupMetricRuleEscalationsPtrInput is an input type that accepts GroupMetricRuleEscalationsArgs, GroupMetricRuleEscalationsPtr and GroupMetricRuleEscalationsPtrOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsPtrInput` via:
//
//          GroupMetricRuleEscalationsArgs{...}
//
//  or:
//
//          nil
type GroupMetricRuleEscalationsPtrInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsPtrOutput() GroupMetricRuleEscalationsPtrOutput
	ToGroupMetricRuleEscalationsPtrOutputWithContext(context.Context) GroupMetricRuleEscalationsPtrOutput
}

type groupMetricRuleEscalationsPtrType GroupMetricRuleEscalationsArgs

func GroupMetricRuleEscalationsPtr(v *GroupMetricRuleEscalationsArgs) GroupMetricRuleEscalationsPtrInput {
	return (*groupMetricRuleEscalationsPtrType)(v)
}

func (*groupMetricRuleEscalationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalations)(nil)).Elem()
}

func (i *groupMetricRuleEscalationsPtrType) ToGroupMetricRuleEscalationsPtrOutput() GroupMetricRuleEscalationsPtrOutput {
	return i.ToGroupMetricRuleEscalationsPtrOutputWithContext(context.Background())
}

func (i *groupMetricRuleEscalationsPtrType) ToGroupMetricRuleEscalationsPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsPtrOutput)
}

type GroupMetricRuleEscalationsOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalations)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsOutput) ToGroupMetricRuleEscalationsOutput() GroupMetricRuleEscalationsOutput {
	return o
}

func (o GroupMetricRuleEscalationsOutput) ToGroupMetricRuleEscalationsOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsOutput {
	return o
}

func (o GroupMetricRuleEscalationsOutput) ToGroupMetricRuleEscalationsPtrOutput() GroupMetricRuleEscalationsPtrOutput {
	return o.ToGroupMetricRuleEscalationsPtrOutputWithContext(context.Background())
}

func (o GroupMetricRuleEscalationsOutput) ToGroupMetricRuleEscalationsPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalations) *GroupMetricRuleEscalations {
		return &v
	}).(GroupMetricRuleEscalationsPtrOutput)
}

// The critical level.
func (o GroupMetricRuleEscalationsOutput) Critical() GroupMetricRuleEscalationsCriticalPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalations) *GroupMetricRuleEscalationsCritical { return v.Critical }).(GroupMetricRuleEscalationsCriticalPtrOutput)
}

// The info level.
func (o GroupMetricRuleEscalationsOutput) Info() GroupMetricRuleEscalationsInfoPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalations) *GroupMetricRuleEscalationsInfo { return v.Info }).(GroupMetricRuleEscalationsInfoPtrOutput)
}

// The warn level.
func (o GroupMetricRuleEscalationsOutput) Warn() GroupMetricRuleEscalationsWarnPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalations) *GroupMetricRuleEscalationsWarn { return v.Warn }).(GroupMetricRuleEscalationsWarnPtrOutput)
}

type GroupMetricRuleEscalationsPtrOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalations)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsPtrOutput) ToGroupMetricRuleEscalationsPtrOutput() GroupMetricRuleEscalationsPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsPtrOutput) ToGroupMetricRuleEscalationsPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsPtrOutput) Elem() GroupMetricRuleEscalationsOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalations) GroupMetricRuleEscalations { return *v }).(GroupMetricRuleEscalationsOutput)
}

// The critical level.
func (o GroupMetricRuleEscalationsPtrOutput) Critical() GroupMetricRuleEscalationsCriticalPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalations) *GroupMetricRuleEscalationsCritical {
		if v == nil {
			return nil
		}
		return v.Critical
	}).(GroupMetricRuleEscalationsCriticalPtrOutput)
}

// The info level.
func (o GroupMetricRuleEscalationsPtrOutput) Info() GroupMetricRuleEscalationsInfoPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalations) *GroupMetricRuleEscalationsInfo {
		if v == nil {
			return nil
		}
		return v.Info
	}).(GroupMetricRuleEscalationsInfoPtrOutput)
}

// The warn level.
func (o GroupMetricRuleEscalationsPtrOutput) Warn() GroupMetricRuleEscalationsWarnPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalations) *GroupMetricRuleEscalationsWarn {
		if v == nil {
			return nil
		}
		return v.Warn
	}).(GroupMetricRuleEscalationsWarnPtrOutput)
}

type GroupMetricRuleEscalationsCritical struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics *string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold *string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times *int `pulumi:"times"`
}

// GroupMetricRuleEscalationsCriticalInput is an input type that accepts GroupMetricRuleEscalationsCriticalArgs and GroupMetricRuleEscalationsCriticalOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsCriticalInput` via:
//
//          GroupMetricRuleEscalationsCriticalArgs{...}
type GroupMetricRuleEscalationsCriticalInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsCriticalOutput() GroupMetricRuleEscalationsCriticalOutput
	ToGroupMetricRuleEscalationsCriticalOutputWithContext(context.Context) GroupMetricRuleEscalationsCriticalOutput
}

type GroupMetricRuleEscalationsCriticalArgs struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (GroupMetricRuleEscalationsCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalationsCritical)(nil)).Elem()
}

func (i GroupMetricRuleEscalationsCriticalArgs) ToGroupMetricRuleEscalationsCriticalOutput() GroupMetricRuleEscalationsCriticalOutput {
	return i.ToGroupMetricRuleEscalationsCriticalOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsCriticalArgs) ToGroupMetricRuleEscalationsCriticalOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsCriticalOutput)
}

func (i GroupMetricRuleEscalationsCriticalArgs) ToGroupMetricRuleEscalationsCriticalPtrOutput() GroupMetricRuleEscalationsCriticalPtrOutput {
	return i.ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsCriticalArgs) ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsCriticalOutput).ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(ctx)
}

// GroupMetricRuleEscalationsCriticalPtrInput is an input type that accepts GroupMetricRuleEscalationsCriticalArgs, GroupMetricRuleEscalationsCriticalPtr and GroupMetricRuleEscalationsCriticalPtrOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsCriticalPtrInput` via:
//
//          GroupMetricRuleEscalationsCriticalArgs{...}
//
//  or:
//
//          nil
type GroupMetricRuleEscalationsCriticalPtrInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsCriticalPtrOutput() GroupMetricRuleEscalationsCriticalPtrOutput
	ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(context.Context) GroupMetricRuleEscalationsCriticalPtrOutput
}

type groupMetricRuleEscalationsCriticalPtrType GroupMetricRuleEscalationsCriticalArgs

func GroupMetricRuleEscalationsCriticalPtr(v *GroupMetricRuleEscalationsCriticalArgs) GroupMetricRuleEscalationsCriticalPtrInput {
	return (*groupMetricRuleEscalationsCriticalPtrType)(v)
}

func (*groupMetricRuleEscalationsCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalationsCritical)(nil)).Elem()
}

func (i *groupMetricRuleEscalationsCriticalPtrType) ToGroupMetricRuleEscalationsCriticalPtrOutput() GroupMetricRuleEscalationsCriticalPtrOutput {
	return i.ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (i *groupMetricRuleEscalationsCriticalPtrType) ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsCriticalPtrOutput)
}

type GroupMetricRuleEscalationsCriticalOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalationsCritical)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsCriticalOutput) ToGroupMetricRuleEscalationsCriticalOutput() GroupMetricRuleEscalationsCriticalOutput {
	return o
}

func (o GroupMetricRuleEscalationsCriticalOutput) ToGroupMetricRuleEscalationsCriticalOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsCriticalOutput {
	return o
}

func (o GroupMetricRuleEscalationsCriticalOutput) ToGroupMetricRuleEscalationsCriticalPtrOutput() GroupMetricRuleEscalationsCriticalPtrOutput {
	return o.ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(context.Background())
}

func (o GroupMetricRuleEscalationsCriticalOutput) ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsCriticalPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsCritical) *GroupMetricRuleEscalationsCritical {
		return &v
	}).(GroupMetricRuleEscalationsCriticalPtrOutput)
}

// The comparison operator of the threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsCriticalOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsCritical) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GroupMetricRuleEscalationsCriticalOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsCritical) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// The threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsCriticalOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsCritical) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GroupMetricRuleEscalationsCriticalOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsCritical) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type GroupMetricRuleEscalationsCriticalPtrOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalationsCritical)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsCriticalPtrOutput) ToGroupMetricRuleEscalationsCriticalPtrOutput() GroupMetricRuleEscalationsCriticalPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsCriticalPtrOutput) ToGroupMetricRuleEscalationsCriticalPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsCriticalPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsCriticalPtrOutput) Elem() GroupMetricRuleEscalationsCriticalOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsCritical) GroupMetricRuleEscalationsCritical { return *v }).(GroupMetricRuleEscalationsCriticalOutput)
}

// The comparison operator of the threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsCriticalPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GroupMetricRuleEscalationsCriticalPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// The threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsCriticalPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsCritical) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GroupMetricRuleEscalationsCriticalPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsCritical) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type GroupMetricRuleEscalationsInfo struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics *string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold *string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times *int `pulumi:"times"`
}

// GroupMetricRuleEscalationsInfoInput is an input type that accepts GroupMetricRuleEscalationsInfoArgs and GroupMetricRuleEscalationsInfoOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsInfoInput` via:
//
//          GroupMetricRuleEscalationsInfoArgs{...}
type GroupMetricRuleEscalationsInfoInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsInfoOutput() GroupMetricRuleEscalationsInfoOutput
	ToGroupMetricRuleEscalationsInfoOutputWithContext(context.Context) GroupMetricRuleEscalationsInfoOutput
}

type GroupMetricRuleEscalationsInfoArgs struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (GroupMetricRuleEscalationsInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalationsInfo)(nil)).Elem()
}

func (i GroupMetricRuleEscalationsInfoArgs) ToGroupMetricRuleEscalationsInfoOutput() GroupMetricRuleEscalationsInfoOutput {
	return i.ToGroupMetricRuleEscalationsInfoOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsInfoArgs) ToGroupMetricRuleEscalationsInfoOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsInfoOutput)
}

func (i GroupMetricRuleEscalationsInfoArgs) ToGroupMetricRuleEscalationsInfoPtrOutput() GroupMetricRuleEscalationsInfoPtrOutput {
	return i.ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsInfoArgs) ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsInfoOutput).ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(ctx)
}

// GroupMetricRuleEscalationsInfoPtrInput is an input type that accepts GroupMetricRuleEscalationsInfoArgs, GroupMetricRuleEscalationsInfoPtr and GroupMetricRuleEscalationsInfoPtrOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsInfoPtrInput` via:
//
//          GroupMetricRuleEscalationsInfoArgs{...}
//
//  or:
//
//          nil
type GroupMetricRuleEscalationsInfoPtrInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsInfoPtrOutput() GroupMetricRuleEscalationsInfoPtrOutput
	ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(context.Context) GroupMetricRuleEscalationsInfoPtrOutput
}

type groupMetricRuleEscalationsInfoPtrType GroupMetricRuleEscalationsInfoArgs

func GroupMetricRuleEscalationsInfoPtr(v *GroupMetricRuleEscalationsInfoArgs) GroupMetricRuleEscalationsInfoPtrInput {
	return (*groupMetricRuleEscalationsInfoPtrType)(v)
}

func (*groupMetricRuleEscalationsInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalationsInfo)(nil)).Elem()
}

func (i *groupMetricRuleEscalationsInfoPtrType) ToGroupMetricRuleEscalationsInfoPtrOutput() GroupMetricRuleEscalationsInfoPtrOutput {
	return i.ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(context.Background())
}

func (i *groupMetricRuleEscalationsInfoPtrType) ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsInfoPtrOutput)
}

type GroupMetricRuleEscalationsInfoOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalationsInfo)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsInfoOutput) ToGroupMetricRuleEscalationsInfoOutput() GroupMetricRuleEscalationsInfoOutput {
	return o
}

func (o GroupMetricRuleEscalationsInfoOutput) ToGroupMetricRuleEscalationsInfoOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsInfoOutput {
	return o
}

func (o GroupMetricRuleEscalationsInfoOutput) ToGroupMetricRuleEscalationsInfoPtrOutput() GroupMetricRuleEscalationsInfoPtrOutput {
	return o.ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(context.Background())
}

func (o GroupMetricRuleEscalationsInfoOutput) ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsInfoPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsInfo) *GroupMetricRuleEscalationsInfo {
		return &v
	}).(GroupMetricRuleEscalationsInfoPtrOutput)
}

// The comparison operator of the threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsInfoOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsInfo) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GroupMetricRuleEscalationsInfoOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsInfo) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// The threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsInfoOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsInfo) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GroupMetricRuleEscalationsInfoOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsInfo) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type GroupMetricRuleEscalationsInfoPtrOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalationsInfo)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsInfoPtrOutput) ToGroupMetricRuleEscalationsInfoPtrOutput() GroupMetricRuleEscalationsInfoPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsInfoPtrOutput) ToGroupMetricRuleEscalationsInfoPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsInfoPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsInfoPtrOutput) Elem() GroupMetricRuleEscalationsInfoOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsInfo) GroupMetricRuleEscalationsInfo { return *v }).(GroupMetricRuleEscalationsInfoOutput)
}

// The comparison operator of the threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsInfoPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GroupMetricRuleEscalationsInfoPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// The threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsInfoPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsInfo) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GroupMetricRuleEscalationsInfoPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsInfo) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type GroupMetricRuleEscalationsWarn struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator *string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics *string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold *string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times *int `pulumi:"times"`
}

// GroupMetricRuleEscalationsWarnInput is an input type that accepts GroupMetricRuleEscalationsWarnArgs and GroupMetricRuleEscalationsWarnOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsWarnInput` via:
//
//          GroupMetricRuleEscalationsWarnArgs{...}
type GroupMetricRuleEscalationsWarnInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsWarnOutput() GroupMetricRuleEscalationsWarnOutput
	ToGroupMetricRuleEscalationsWarnOutputWithContext(context.Context) GroupMetricRuleEscalationsWarnOutput
}

type GroupMetricRuleEscalationsWarnArgs struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator pulumi.StringPtrInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringPtrInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringPtrInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times pulumi.IntPtrInput `pulumi:"times"`
}

func (GroupMetricRuleEscalationsWarnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalationsWarn)(nil)).Elem()
}

func (i GroupMetricRuleEscalationsWarnArgs) ToGroupMetricRuleEscalationsWarnOutput() GroupMetricRuleEscalationsWarnOutput {
	return i.ToGroupMetricRuleEscalationsWarnOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsWarnArgs) ToGroupMetricRuleEscalationsWarnOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsWarnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsWarnOutput)
}

func (i GroupMetricRuleEscalationsWarnArgs) ToGroupMetricRuleEscalationsWarnPtrOutput() GroupMetricRuleEscalationsWarnPtrOutput {
	return i.ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(context.Background())
}

func (i GroupMetricRuleEscalationsWarnArgs) ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsWarnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsWarnOutput).ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(ctx)
}

// GroupMetricRuleEscalationsWarnPtrInput is an input type that accepts GroupMetricRuleEscalationsWarnArgs, GroupMetricRuleEscalationsWarnPtr and GroupMetricRuleEscalationsWarnPtrOutput values.
// You can construct a concrete instance of `GroupMetricRuleEscalationsWarnPtrInput` via:
//
//          GroupMetricRuleEscalationsWarnArgs{...}
//
//  or:
//
//          nil
type GroupMetricRuleEscalationsWarnPtrInput interface {
	pulumi.Input

	ToGroupMetricRuleEscalationsWarnPtrOutput() GroupMetricRuleEscalationsWarnPtrOutput
	ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(context.Context) GroupMetricRuleEscalationsWarnPtrOutput
}

type groupMetricRuleEscalationsWarnPtrType GroupMetricRuleEscalationsWarnArgs

func GroupMetricRuleEscalationsWarnPtr(v *GroupMetricRuleEscalationsWarnArgs) GroupMetricRuleEscalationsWarnPtrInput {
	return (*groupMetricRuleEscalationsWarnPtrType)(v)
}

func (*groupMetricRuleEscalationsWarnPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalationsWarn)(nil)).Elem()
}

func (i *groupMetricRuleEscalationsWarnPtrType) ToGroupMetricRuleEscalationsWarnPtrOutput() GroupMetricRuleEscalationsWarnPtrOutput {
	return i.ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(context.Background())
}

func (i *groupMetricRuleEscalationsWarnPtrType) ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsWarnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMetricRuleEscalationsWarnPtrOutput)
}

type GroupMetricRuleEscalationsWarnOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsWarnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMetricRuleEscalationsWarn)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsWarnOutput) ToGroupMetricRuleEscalationsWarnOutput() GroupMetricRuleEscalationsWarnOutput {
	return o
}

func (o GroupMetricRuleEscalationsWarnOutput) ToGroupMetricRuleEscalationsWarnOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsWarnOutput {
	return o
}

func (o GroupMetricRuleEscalationsWarnOutput) ToGroupMetricRuleEscalationsWarnPtrOutput() GroupMetricRuleEscalationsWarnPtrOutput {
	return o.ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(context.Background())
}

func (o GroupMetricRuleEscalationsWarnOutput) ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsWarnPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsWarn) *GroupMetricRuleEscalationsWarn {
		return &v
	}).(GroupMetricRuleEscalationsWarnPtrOutput)
}

// The comparison operator of the threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsWarnOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsWarn) *string { return v.ComparisonOperator }).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GroupMetricRuleEscalationsWarnOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsWarn) *string { return v.Statistics }).(pulumi.StringPtrOutput)
}

// The threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsWarnOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsWarn) *string { return v.Threshold }).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GroupMetricRuleEscalationsWarnOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupMetricRuleEscalationsWarn) *int { return v.Times }).(pulumi.IntPtrOutput)
}

type GroupMetricRuleEscalationsWarnPtrOutput struct{ *pulumi.OutputState }

func (GroupMetricRuleEscalationsWarnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMetricRuleEscalationsWarn)(nil)).Elem()
}

func (o GroupMetricRuleEscalationsWarnPtrOutput) ToGroupMetricRuleEscalationsWarnPtrOutput() GroupMetricRuleEscalationsWarnPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsWarnPtrOutput) ToGroupMetricRuleEscalationsWarnPtrOutputWithContext(ctx context.Context) GroupMetricRuleEscalationsWarnPtrOutput {
	return o
}

func (o GroupMetricRuleEscalationsWarnPtrOutput) Elem() GroupMetricRuleEscalationsWarnOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsWarn) GroupMetricRuleEscalationsWarn { return *v }).(GroupMetricRuleEscalationsWarnOutput)
}

// The comparison operator of the threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsWarnPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GroupMetricRuleEscalationsWarnPtrOutput) Statistics() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Statistics
	}).(pulumi.StringPtrOutput)
}

// The threshold for warn-level alerts.
func (o GroupMetricRuleEscalationsWarnPtrOutput) Threshold() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsWarn) *string {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.StringPtrOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GroupMetricRuleEscalationsWarnPtrOutput) Times() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GroupMetricRuleEscalationsWarn) *int {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.IntPtrOutput)
}

type MonitorGroupInstancesInstance struct {
	// The category of instance.
	Category string `pulumi:"category"`
	// The id of instance.
	InstanceId string `pulumi:"instanceId"`
	// The name of instance.
	InstanceName string `pulumi:"instanceName"`
	// The region id of instance.
	RegionId string `pulumi:"regionId"`
}

// MonitorGroupInstancesInstanceInput is an input type that accepts MonitorGroupInstancesInstanceArgs and MonitorGroupInstancesInstanceOutput values.
// You can construct a concrete instance of `MonitorGroupInstancesInstanceInput` via:
//
//          MonitorGroupInstancesInstanceArgs{...}
type MonitorGroupInstancesInstanceInput interface {
	pulumi.Input

	ToMonitorGroupInstancesInstanceOutput() MonitorGroupInstancesInstanceOutput
	ToMonitorGroupInstancesInstanceOutputWithContext(context.Context) MonitorGroupInstancesInstanceOutput
}

type MonitorGroupInstancesInstanceArgs struct {
	// The category of instance.
	Category pulumi.StringInput `pulumi:"category"`
	// The id of instance.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The name of instance.
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	// The region id of instance.
	RegionId pulumi.StringInput `pulumi:"regionId"`
}

func (MonitorGroupInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorGroupInstancesInstance)(nil)).Elem()
}

func (i MonitorGroupInstancesInstanceArgs) ToMonitorGroupInstancesInstanceOutput() MonitorGroupInstancesInstanceOutput {
	return i.ToMonitorGroupInstancesInstanceOutputWithContext(context.Background())
}

func (i MonitorGroupInstancesInstanceArgs) ToMonitorGroupInstancesInstanceOutputWithContext(ctx context.Context) MonitorGroupInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorGroupInstancesInstanceOutput)
}

// MonitorGroupInstancesInstanceArrayInput is an input type that accepts MonitorGroupInstancesInstanceArray and MonitorGroupInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `MonitorGroupInstancesInstanceArrayInput` via:
//
//          MonitorGroupInstancesInstanceArray{ MonitorGroupInstancesInstanceArgs{...} }
type MonitorGroupInstancesInstanceArrayInput interface {
	pulumi.Input

	ToMonitorGroupInstancesInstanceArrayOutput() MonitorGroupInstancesInstanceArrayOutput
	ToMonitorGroupInstancesInstanceArrayOutputWithContext(context.Context) MonitorGroupInstancesInstanceArrayOutput
}

type MonitorGroupInstancesInstanceArray []MonitorGroupInstancesInstanceInput

func (MonitorGroupInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorGroupInstancesInstance)(nil)).Elem()
}

func (i MonitorGroupInstancesInstanceArray) ToMonitorGroupInstancesInstanceArrayOutput() MonitorGroupInstancesInstanceArrayOutput {
	return i.ToMonitorGroupInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i MonitorGroupInstancesInstanceArray) ToMonitorGroupInstancesInstanceArrayOutputWithContext(ctx context.Context) MonitorGroupInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorGroupInstancesInstanceArrayOutput)
}

type MonitorGroupInstancesInstanceOutput struct{ *pulumi.OutputState }

func (MonitorGroupInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorGroupInstancesInstance)(nil)).Elem()
}

func (o MonitorGroupInstancesInstanceOutput) ToMonitorGroupInstancesInstanceOutput() MonitorGroupInstancesInstanceOutput {
	return o
}

func (o MonitorGroupInstancesInstanceOutput) ToMonitorGroupInstancesInstanceOutputWithContext(ctx context.Context) MonitorGroupInstancesInstanceOutput {
	return o
}

// The category of instance.
func (o MonitorGroupInstancesInstanceOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorGroupInstancesInstance) string { return v.Category }).(pulumi.StringOutput)
}

// The id of instance.
func (o MonitorGroupInstancesInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorGroupInstancesInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The name of instance.
func (o MonitorGroupInstancesInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorGroupInstancesInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

// The region id of instance.
func (o MonitorGroupInstancesInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorGroupInstancesInstance) string { return v.RegionId }).(pulumi.StringOutput)
}

type MonitorGroupInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (MonitorGroupInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorGroupInstancesInstance)(nil)).Elem()
}

func (o MonitorGroupInstancesInstanceArrayOutput) ToMonitorGroupInstancesInstanceArrayOutput() MonitorGroupInstancesInstanceArrayOutput {
	return o
}

func (o MonitorGroupInstancesInstanceArrayOutput) ToMonitorGroupInstancesInstanceArrayOutputWithContext(ctx context.Context) MonitorGroupInstancesInstanceArrayOutput {
	return o
}

func (o MonitorGroupInstancesInstanceArrayOutput) Index(i pulumi.IntInput) MonitorGroupInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorGroupInstancesInstance {
		return vs[0].([]MonitorGroupInstancesInstance)[vs[1].(int)]
	}).(MonitorGroupInstancesInstanceOutput)
}

type SiteMonitorIspCity struct {
	City string `pulumi:"city"`
	Isp  string `pulumi:"isp"`
}

// SiteMonitorIspCityInput is an input type that accepts SiteMonitorIspCityArgs and SiteMonitorIspCityOutput values.
// You can construct a concrete instance of `SiteMonitorIspCityInput` via:
//
//          SiteMonitorIspCityArgs{...}
type SiteMonitorIspCityInput interface {
	pulumi.Input

	ToSiteMonitorIspCityOutput() SiteMonitorIspCityOutput
	ToSiteMonitorIspCityOutputWithContext(context.Context) SiteMonitorIspCityOutput
}

type SiteMonitorIspCityArgs struct {
	City pulumi.StringInput `pulumi:"city"`
	Isp  pulumi.StringInput `pulumi:"isp"`
}

func (SiteMonitorIspCityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMonitorIspCity)(nil)).Elem()
}

func (i SiteMonitorIspCityArgs) ToSiteMonitorIspCityOutput() SiteMonitorIspCityOutput {
	return i.ToSiteMonitorIspCityOutputWithContext(context.Background())
}

func (i SiteMonitorIspCityArgs) ToSiteMonitorIspCityOutputWithContext(ctx context.Context) SiteMonitorIspCityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMonitorIspCityOutput)
}

// SiteMonitorIspCityArrayInput is an input type that accepts SiteMonitorIspCityArray and SiteMonitorIspCityArrayOutput values.
// You can construct a concrete instance of `SiteMonitorIspCityArrayInput` via:
//
//          SiteMonitorIspCityArray{ SiteMonitorIspCityArgs{...} }
type SiteMonitorIspCityArrayInput interface {
	pulumi.Input

	ToSiteMonitorIspCityArrayOutput() SiteMonitorIspCityArrayOutput
	ToSiteMonitorIspCityArrayOutputWithContext(context.Context) SiteMonitorIspCityArrayOutput
}

type SiteMonitorIspCityArray []SiteMonitorIspCityInput

func (SiteMonitorIspCityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SiteMonitorIspCity)(nil)).Elem()
}

func (i SiteMonitorIspCityArray) ToSiteMonitorIspCityArrayOutput() SiteMonitorIspCityArrayOutput {
	return i.ToSiteMonitorIspCityArrayOutputWithContext(context.Background())
}

func (i SiteMonitorIspCityArray) ToSiteMonitorIspCityArrayOutputWithContext(ctx context.Context) SiteMonitorIspCityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteMonitorIspCityArrayOutput)
}

type SiteMonitorIspCityOutput struct{ *pulumi.OutputState }

func (SiteMonitorIspCityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteMonitorIspCity)(nil)).Elem()
}

func (o SiteMonitorIspCityOutput) ToSiteMonitorIspCityOutput() SiteMonitorIspCityOutput {
	return o
}

func (o SiteMonitorIspCityOutput) ToSiteMonitorIspCityOutputWithContext(ctx context.Context) SiteMonitorIspCityOutput {
	return o
}

func (o SiteMonitorIspCityOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v SiteMonitorIspCity) string { return v.City }).(pulumi.StringOutput)
}

func (o SiteMonitorIspCityOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v SiteMonitorIspCity) string { return v.Isp }).(pulumi.StringOutput)
}

type SiteMonitorIspCityArrayOutput struct{ *pulumi.OutputState }

func (SiteMonitorIspCityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SiteMonitorIspCity)(nil)).Elem()
}

func (o SiteMonitorIspCityArrayOutput) ToSiteMonitorIspCityArrayOutput() SiteMonitorIspCityArrayOutput {
	return o
}

func (o SiteMonitorIspCityArrayOutput) ToSiteMonitorIspCityArrayOutputWithContext(ctx context.Context) SiteMonitorIspCityArrayOutput {
	return o
}

func (o SiteMonitorIspCityArrayOutput) Index(i pulumi.IntInput) SiteMonitorIspCityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SiteMonitorIspCity {
		return vs[0].([]SiteMonitorIspCity)[vs[1].(int)]
	}).(SiteMonitorIspCityOutput)
}

type GetAlarmContactGroupsGroup struct {
	// The name of Alarm Contact Group.
	AlarmContactGroupName string `pulumi:"alarmContactGroupName"`
	// The alarm contacts in the alarm group.
	Contacts []string `pulumi:"contacts"`
	// The description of the Alarm Group.
	Describe string `pulumi:"describe"`
	// Indicates whether the alarm group subscribes to weekly reports.
	EnableSubscribed bool `pulumi:"enableSubscribed"`
	// The ID of the CMS.
	Id string `pulumi:"id"`
}

// GetAlarmContactGroupsGroupInput is an input type that accepts GetAlarmContactGroupsGroupArgs and GetAlarmContactGroupsGroupOutput values.
// You can construct a concrete instance of `GetAlarmContactGroupsGroupInput` via:
//
//          GetAlarmContactGroupsGroupArgs{...}
type GetAlarmContactGroupsGroupInput interface {
	pulumi.Input

	ToGetAlarmContactGroupsGroupOutput() GetAlarmContactGroupsGroupOutput
	ToGetAlarmContactGroupsGroupOutputWithContext(context.Context) GetAlarmContactGroupsGroupOutput
}

type GetAlarmContactGroupsGroupArgs struct {
	// The name of Alarm Contact Group.
	AlarmContactGroupName pulumi.StringInput `pulumi:"alarmContactGroupName"`
	// The alarm contacts in the alarm group.
	Contacts pulumi.StringArrayInput `pulumi:"contacts"`
	// The description of the Alarm Group.
	Describe pulumi.StringInput `pulumi:"describe"`
	// Indicates whether the alarm group subscribes to weekly reports.
	EnableSubscribed pulumi.BoolInput `pulumi:"enableSubscribed"`
	// The ID of the CMS.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetAlarmContactGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmContactGroupsGroup)(nil)).Elem()
}

func (i GetAlarmContactGroupsGroupArgs) ToGetAlarmContactGroupsGroupOutput() GetAlarmContactGroupsGroupOutput {
	return i.ToGetAlarmContactGroupsGroupOutputWithContext(context.Background())
}

func (i GetAlarmContactGroupsGroupArgs) ToGetAlarmContactGroupsGroupOutputWithContext(ctx context.Context) GetAlarmContactGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlarmContactGroupsGroupOutput)
}

// GetAlarmContactGroupsGroupArrayInput is an input type that accepts GetAlarmContactGroupsGroupArray and GetAlarmContactGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetAlarmContactGroupsGroupArrayInput` via:
//
//          GetAlarmContactGroupsGroupArray{ GetAlarmContactGroupsGroupArgs{...} }
type GetAlarmContactGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetAlarmContactGroupsGroupArrayOutput() GetAlarmContactGroupsGroupArrayOutput
	ToGetAlarmContactGroupsGroupArrayOutputWithContext(context.Context) GetAlarmContactGroupsGroupArrayOutput
}

type GetAlarmContactGroupsGroupArray []GetAlarmContactGroupsGroupInput

func (GetAlarmContactGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlarmContactGroupsGroup)(nil)).Elem()
}

func (i GetAlarmContactGroupsGroupArray) ToGetAlarmContactGroupsGroupArrayOutput() GetAlarmContactGroupsGroupArrayOutput {
	return i.ToGetAlarmContactGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetAlarmContactGroupsGroupArray) ToGetAlarmContactGroupsGroupArrayOutputWithContext(ctx context.Context) GetAlarmContactGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlarmContactGroupsGroupArrayOutput)
}

type GetAlarmContactGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetAlarmContactGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmContactGroupsGroup)(nil)).Elem()
}

func (o GetAlarmContactGroupsGroupOutput) ToGetAlarmContactGroupsGroupOutput() GetAlarmContactGroupsGroupOutput {
	return o
}

func (o GetAlarmContactGroupsGroupOutput) ToGetAlarmContactGroupsGroupOutputWithContext(ctx context.Context) GetAlarmContactGroupsGroupOutput {
	return o
}

// The name of Alarm Contact Group.
func (o GetAlarmContactGroupsGroupOutput) AlarmContactGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) string { return v.AlarmContactGroupName }).(pulumi.StringOutput)
}

// The alarm contacts in the alarm group.
func (o GetAlarmContactGroupsGroupOutput) Contacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) []string { return v.Contacts }).(pulumi.StringArrayOutput)
}

// The description of the Alarm Group.
func (o GetAlarmContactGroupsGroupOutput) Describe() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) string { return v.Describe }).(pulumi.StringOutput)
}

// Indicates whether the alarm group subscribes to weekly reports.
func (o GetAlarmContactGroupsGroupOutput) EnableSubscribed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) bool { return v.EnableSubscribed }).(pulumi.BoolOutput)
}

// The ID of the CMS.
func (o GetAlarmContactGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

type GetAlarmContactGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetAlarmContactGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlarmContactGroupsGroup)(nil)).Elem()
}

func (o GetAlarmContactGroupsGroupArrayOutput) ToGetAlarmContactGroupsGroupArrayOutput() GetAlarmContactGroupsGroupArrayOutput {
	return o
}

func (o GetAlarmContactGroupsGroupArrayOutput) ToGetAlarmContactGroupsGroupArrayOutputWithContext(ctx context.Context) GetAlarmContactGroupsGroupArrayOutput {
	return o
}

func (o GetAlarmContactGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetAlarmContactGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlarmContactGroupsGroup {
		return vs[0].([]GetAlarmContactGroupsGroup)[vs[1].(int)]
	}).(GetAlarmContactGroupsGroupOutput)
}

type GetAlarmContactsContact struct {
	// The name of the alarm contact.
	AlarmContactName string `pulumi:"alarmContactName"`
	// The TradeManager ID of the alarm contact.
	ChannelsAliim string `pulumi:"channelsAliim"`
	// The webhook URL of the DingTalk chatbot.
	ChannelsDingWebHook string `pulumi:"channelsDingWebHook"`
	// The email address of the alarm contact.
	ChannelsMail string `pulumi:"channelsMail"`
	// The phone number of the alarm contact.
	ChannelsSms string `pulumi:"channelsSms"`
	// Indicates whether the TradeManager ID is valid.
	ChannelsStateAliim string `pulumi:"channelsStateAliim"`
	// Indicates whether the DingTalk chatbot is normal.
	ChannelsStateDingWebHook string `pulumi:"channelsStateDingWebHook"`
	// The status of the email address.
	ChannelsStateMail string `pulumi:"channelsStateMail"`
	// The status of the phone number.
	ChannelsStatusSms string `pulumi:"channelsStatusSms"`
	// The alert groups to which the alarm contact is added.
	ContactGroups []string `pulumi:"contactGroups"`
	// The description of the alarm contact.
	Describe string `pulumi:"describe"`
	// The ID of the alarm contact.
	Id   string `pulumi:"id"`
	Lang string `pulumi:"lang"`
}

// GetAlarmContactsContactInput is an input type that accepts GetAlarmContactsContactArgs and GetAlarmContactsContactOutput values.
// You can construct a concrete instance of `GetAlarmContactsContactInput` via:
//
//          GetAlarmContactsContactArgs{...}
type GetAlarmContactsContactInput interface {
	pulumi.Input

	ToGetAlarmContactsContactOutput() GetAlarmContactsContactOutput
	ToGetAlarmContactsContactOutputWithContext(context.Context) GetAlarmContactsContactOutput
}

type GetAlarmContactsContactArgs struct {
	// The name of the alarm contact.
	AlarmContactName pulumi.StringInput `pulumi:"alarmContactName"`
	// The TradeManager ID of the alarm contact.
	ChannelsAliim pulumi.StringInput `pulumi:"channelsAliim"`
	// The webhook URL of the DingTalk chatbot.
	ChannelsDingWebHook pulumi.StringInput `pulumi:"channelsDingWebHook"`
	// The email address of the alarm contact.
	ChannelsMail pulumi.StringInput `pulumi:"channelsMail"`
	// The phone number of the alarm contact.
	ChannelsSms pulumi.StringInput `pulumi:"channelsSms"`
	// Indicates whether the TradeManager ID is valid.
	ChannelsStateAliim pulumi.StringInput `pulumi:"channelsStateAliim"`
	// Indicates whether the DingTalk chatbot is normal.
	ChannelsStateDingWebHook pulumi.StringInput `pulumi:"channelsStateDingWebHook"`
	// The status of the email address.
	ChannelsStateMail pulumi.StringInput `pulumi:"channelsStateMail"`
	// The status of the phone number.
	ChannelsStatusSms pulumi.StringInput `pulumi:"channelsStatusSms"`
	// The alert groups to which the alarm contact is added.
	ContactGroups pulumi.StringArrayInput `pulumi:"contactGroups"`
	// The description of the alarm contact.
	Describe pulumi.StringInput `pulumi:"describe"`
	// The ID of the alarm contact.
	Id   pulumi.StringInput `pulumi:"id"`
	Lang pulumi.StringInput `pulumi:"lang"`
}

func (GetAlarmContactsContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmContactsContact)(nil)).Elem()
}

func (i GetAlarmContactsContactArgs) ToGetAlarmContactsContactOutput() GetAlarmContactsContactOutput {
	return i.ToGetAlarmContactsContactOutputWithContext(context.Background())
}

func (i GetAlarmContactsContactArgs) ToGetAlarmContactsContactOutputWithContext(ctx context.Context) GetAlarmContactsContactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlarmContactsContactOutput)
}

// GetAlarmContactsContactArrayInput is an input type that accepts GetAlarmContactsContactArray and GetAlarmContactsContactArrayOutput values.
// You can construct a concrete instance of `GetAlarmContactsContactArrayInput` via:
//
//          GetAlarmContactsContactArray{ GetAlarmContactsContactArgs{...} }
type GetAlarmContactsContactArrayInput interface {
	pulumi.Input

	ToGetAlarmContactsContactArrayOutput() GetAlarmContactsContactArrayOutput
	ToGetAlarmContactsContactArrayOutputWithContext(context.Context) GetAlarmContactsContactArrayOutput
}

type GetAlarmContactsContactArray []GetAlarmContactsContactInput

func (GetAlarmContactsContactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlarmContactsContact)(nil)).Elem()
}

func (i GetAlarmContactsContactArray) ToGetAlarmContactsContactArrayOutput() GetAlarmContactsContactArrayOutput {
	return i.ToGetAlarmContactsContactArrayOutputWithContext(context.Background())
}

func (i GetAlarmContactsContactArray) ToGetAlarmContactsContactArrayOutputWithContext(ctx context.Context) GetAlarmContactsContactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlarmContactsContactArrayOutput)
}

type GetAlarmContactsContactOutput struct{ *pulumi.OutputState }

func (GetAlarmContactsContactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlarmContactsContact)(nil)).Elem()
}

func (o GetAlarmContactsContactOutput) ToGetAlarmContactsContactOutput() GetAlarmContactsContactOutput {
	return o
}

func (o GetAlarmContactsContactOutput) ToGetAlarmContactsContactOutputWithContext(ctx context.Context) GetAlarmContactsContactOutput {
	return o
}

// The name of the alarm contact.
func (o GetAlarmContactsContactOutput) AlarmContactName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.AlarmContactName }).(pulumi.StringOutput)
}

// The TradeManager ID of the alarm contact.
func (o GetAlarmContactsContactOutput) ChannelsAliim() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsAliim }).(pulumi.StringOutput)
}

// The webhook URL of the DingTalk chatbot.
func (o GetAlarmContactsContactOutput) ChannelsDingWebHook() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsDingWebHook }).(pulumi.StringOutput)
}

// The email address of the alarm contact.
func (o GetAlarmContactsContactOutput) ChannelsMail() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsMail }).(pulumi.StringOutput)
}

// The phone number of the alarm contact.
func (o GetAlarmContactsContactOutput) ChannelsSms() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsSms }).(pulumi.StringOutput)
}

// Indicates whether the TradeManager ID is valid.
func (o GetAlarmContactsContactOutput) ChannelsStateAliim() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsStateAliim }).(pulumi.StringOutput)
}

// Indicates whether the DingTalk chatbot is normal.
func (o GetAlarmContactsContactOutput) ChannelsStateDingWebHook() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsStateDingWebHook }).(pulumi.StringOutput)
}

// The status of the email address.
func (o GetAlarmContactsContactOutput) ChannelsStateMail() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsStateMail }).(pulumi.StringOutput)
}

// The status of the phone number.
func (o GetAlarmContactsContactOutput) ChannelsStatusSms() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.ChannelsStatusSms }).(pulumi.StringOutput)
}

// The alert groups to which the alarm contact is added.
func (o GetAlarmContactsContactOutput) ContactGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) []string { return v.ContactGroups }).(pulumi.StringArrayOutput)
}

// The description of the alarm contact.
func (o GetAlarmContactsContactOutput) Describe() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.Describe }).(pulumi.StringOutput)
}

// The ID of the alarm contact.
func (o GetAlarmContactsContactOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAlarmContactsContactOutput) Lang() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlarmContactsContact) string { return v.Lang }).(pulumi.StringOutput)
}

type GetAlarmContactsContactArrayOutput struct{ *pulumi.OutputState }

func (GetAlarmContactsContactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlarmContactsContact)(nil)).Elem()
}

func (o GetAlarmContactsContactArrayOutput) ToGetAlarmContactsContactArrayOutput() GetAlarmContactsContactArrayOutput {
	return o
}

func (o GetAlarmContactsContactArrayOutput) ToGetAlarmContactsContactArrayOutputWithContext(ctx context.Context) GetAlarmContactsContactArrayOutput {
	return o
}

func (o GetAlarmContactsContactArrayOutput) Index(i pulumi.IntInput) GetAlarmContactsContactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlarmContactsContact {
		return vs[0].([]GetAlarmContactsContact)[vs[1].(int)]
	}).(GetAlarmContactsContactOutput)
}

type GetGroupMetricRulesRule struct {
	// Alarm contact group.
	ContactGroups string `pulumi:"contactGroups"`
	// The dimensions that specify the resources to be associated with the alert rule.
	Dimensions string `pulumi:"dimensions"`
	// The time period during which the alert rule is effective.
	EffectiveInterval string `pulumi:"effectiveInterval"`
	// The subject of the alert notification email.
	EmailSubject string `pulumi:"emailSubject"`
	// Indicates whether the alert rule is enabled.
	EnableState bool `pulumi:"enableState"`
	// Alarm level.
	Escalations []GetGroupMetricRulesRuleEscalation `pulumi:"escalations"`
	// The ID of the application group.
	GroupId string `pulumi:"groupId"`
	// The name of the alert rule.
	GroupMetricRuleName string `pulumi:"groupMetricRuleName"`
	// The ID of the Group Metric Rule.
	Id string `pulumi:"id"`
	// The name of the metric.
	MetricName string `pulumi:"metricName"`
	// The namespace of the service.
	Namespace string `pulumi:"namespace"`
	// The time period during which the alert rule is ineffective.
	NoEffectiveInterval string `pulumi:"noEffectiveInterval"`
	// The aggregation period of the monitoring data. Unit: seconds. The value is an integral multiple of 60. Default value: `300`.
	Period int `pulumi:"period"`
	// The resources that are associated with the alert rule.
	Resources string `pulumi:"resources"`
	// The ID of the alert rule.
	RuleId string `pulumi:"ruleId"`
	// The mute period during which new alerts are not reported even if the alert trigger conditions are met. Unit: seconds. Default value: `86400`, which is equivalent to one day.
	SilenceTime int `pulumi:"silenceTime"`
	// The type of the alert rule. The value is fixed to METRIC, indicating an alert rule for time series metrics.
	SourceType string `pulumi:"sourceType"`
	// The status of Group Metric Rule..
	Status string `pulumi:"status"`
	// The callback URL.
	Webhook string `pulumi:"webhook"`
}

// GetGroupMetricRulesRuleInput is an input type that accepts GetGroupMetricRulesRuleArgs and GetGroupMetricRulesRuleOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleInput` via:
//
//          GetGroupMetricRulesRuleArgs{...}
type GetGroupMetricRulesRuleInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleOutput() GetGroupMetricRulesRuleOutput
	ToGetGroupMetricRulesRuleOutputWithContext(context.Context) GetGroupMetricRulesRuleOutput
}

type GetGroupMetricRulesRuleArgs struct {
	// Alarm contact group.
	ContactGroups pulumi.StringInput `pulumi:"contactGroups"`
	// The dimensions that specify the resources to be associated with the alert rule.
	Dimensions pulumi.StringInput `pulumi:"dimensions"`
	// The time period during which the alert rule is effective.
	EffectiveInterval pulumi.StringInput `pulumi:"effectiveInterval"`
	// The subject of the alert notification email.
	EmailSubject pulumi.StringInput `pulumi:"emailSubject"`
	// Indicates whether the alert rule is enabled.
	EnableState pulumi.BoolInput `pulumi:"enableState"`
	// Alarm level.
	Escalations GetGroupMetricRulesRuleEscalationArrayInput `pulumi:"escalations"`
	// The ID of the application group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The name of the alert rule.
	GroupMetricRuleName pulumi.StringInput `pulumi:"groupMetricRuleName"`
	// The ID of the Group Metric Rule.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the metric.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// The namespace of the service.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The time period during which the alert rule is ineffective.
	NoEffectiveInterval pulumi.StringInput `pulumi:"noEffectiveInterval"`
	// The aggregation period of the monitoring data. Unit: seconds. The value is an integral multiple of 60. Default value: `300`.
	Period pulumi.IntInput `pulumi:"period"`
	// The resources that are associated with the alert rule.
	Resources pulumi.StringInput `pulumi:"resources"`
	// The ID of the alert rule.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// The mute period during which new alerts are not reported even if the alert trigger conditions are met. Unit: seconds. Default value: `86400`, which is equivalent to one day.
	SilenceTime pulumi.IntInput `pulumi:"silenceTime"`
	// The type of the alert rule. The value is fixed to METRIC, indicating an alert rule for time series metrics.
	SourceType pulumi.StringInput `pulumi:"sourceType"`
	// The status of Group Metric Rule..
	Status pulumi.StringInput `pulumi:"status"`
	// The callback URL.
	Webhook pulumi.StringInput `pulumi:"webhook"`
}

func (GetGroupMetricRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRule)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleArgs) ToGetGroupMetricRulesRuleOutput() GetGroupMetricRulesRuleOutput {
	return i.ToGetGroupMetricRulesRuleOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleArgs) ToGetGroupMetricRulesRuleOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleOutput)
}

// GetGroupMetricRulesRuleArrayInput is an input type that accepts GetGroupMetricRulesRuleArray and GetGroupMetricRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleArrayInput` via:
//
//          GetGroupMetricRulesRuleArray{ GetGroupMetricRulesRuleArgs{...} }
type GetGroupMetricRulesRuleArrayInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleArrayOutput() GetGroupMetricRulesRuleArrayOutput
	ToGetGroupMetricRulesRuleArrayOutputWithContext(context.Context) GetGroupMetricRulesRuleArrayOutput
}

type GetGroupMetricRulesRuleArray []GetGroupMetricRulesRuleInput

func (GetGroupMetricRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRule)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleArray) ToGetGroupMetricRulesRuleArrayOutput() GetGroupMetricRulesRuleArrayOutput {
	return i.ToGetGroupMetricRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleArray) ToGetGroupMetricRulesRuleArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleArrayOutput)
}

type GetGroupMetricRulesRuleOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRule)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleOutput) ToGetGroupMetricRulesRuleOutput() GetGroupMetricRulesRuleOutput {
	return o
}

func (o GetGroupMetricRulesRuleOutput) ToGetGroupMetricRulesRuleOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleOutput {
	return o
}

// Alarm contact group.
func (o GetGroupMetricRulesRuleOutput) ContactGroups() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.ContactGroups }).(pulumi.StringOutput)
}

// The dimensions that specify the resources to be associated with the alert rule.
func (o GetGroupMetricRulesRuleOutput) Dimensions() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.Dimensions }).(pulumi.StringOutput)
}

// The time period during which the alert rule is effective.
func (o GetGroupMetricRulesRuleOutput) EffectiveInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.EffectiveInterval }).(pulumi.StringOutput)
}

// The subject of the alert notification email.
func (o GetGroupMetricRulesRuleOutput) EmailSubject() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.EmailSubject }).(pulumi.StringOutput)
}

// Indicates whether the alert rule is enabled.
func (o GetGroupMetricRulesRuleOutput) EnableState() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) bool { return v.EnableState }).(pulumi.BoolOutput)
}

// Alarm level.
func (o GetGroupMetricRulesRuleOutput) Escalations() GetGroupMetricRulesRuleEscalationArrayOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) []GetGroupMetricRulesRuleEscalation { return v.Escalations }).(GetGroupMetricRulesRuleEscalationArrayOutput)
}

// The ID of the application group.
func (o GetGroupMetricRulesRuleOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.GroupId }).(pulumi.StringOutput)
}

// The name of the alert rule.
func (o GetGroupMetricRulesRuleOutput) GroupMetricRuleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.GroupMetricRuleName }).(pulumi.StringOutput)
}

// The ID of the Group Metric Rule.
func (o GetGroupMetricRulesRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the metric.
func (o GetGroupMetricRulesRuleOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.MetricName }).(pulumi.StringOutput)
}

// The namespace of the service.
func (o GetGroupMetricRulesRuleOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.Namespace }).(pulumi.StringOutput)
}

// The time period during which the alert rule is ineffective.
func (o GetGroupMetricRulesRuleOutput) NoEffectiveInterval() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.NoEffectiveInterval }).(pulumi.StringOutput)
}

// The aggregation period of the monitoring data. Unit: seconds. The value is an integral multiple of 60. Default value: `300`.
func (o GetGroupMetricRulesRuleOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) int { return v.Period }).(pulumi.IntOutput)
}

// The resources that are associated with the alert rule.
func (o GetGroupMetricRulesRuleOutput) Resources() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.Resources }).(pulumi.StringOutput)
}

// The ID of the alert rule.
func (o GetGroupMetricRulesRuleOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.RuleId }).(pulumi.StringOutput)
}

// The mute period during which new alerts are not reported even if the alert trigger conditions are met. Unit: seconds. Default value: `86400`, which is equivalent to one day.
func (o GetGroupMetricRulesRuleOutput) SilenceTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) int { return v.SilenceTime }).(pulumi.IntOutput)
}

// The type of the alert rule. The value is fixed to METRIC, indicating an alert rule for time series metrics.
func (o GetGroupMetricRulesRuleOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.SourceType }).(pulumi.StringOutput)
}

// The status of Group Metric Rule..
func (o GetGroupMetricRulesRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.Status }).(pulumi.StringOutput)
}

// The callback URL.
func (o GetGroupMetricRulesRuleOutput) Webhook() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRule) string { return v.Webhook }).(pulumi.StringOutput)
}

type GetGroupMetricRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRule)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleArrayOutput) ToGetGroupMetricRulesRuleArrayOutput() GetGroupMetricRulesRuleArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleArrayOutput) ToGetGroupMetricRulesRuleArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleArrayOutput) Index(i pulumi.IntInput) GetGroupMetricRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMetricRulesRule {
		return vs[0].([]GetGroupMetricRulesRule)[vs[1].(int)]
	}).(GetGroupMetricRulesRuleOutput)
}

type GetGroupMetricRulesRuleEscalation struct {
	// The critical level.
	Criticals []GetGroupMetricRulesRuleEscalationCritical `pulumi:"criticals"`
	// The info level.
	Infos []GetGroupMetricRulesRuleEscalationInfo `pulumi:"infos"`
	// The warn level.
	Warns []GetGroupMetricRulesRuleEscalationWarn `pulumi:"warns"`
}

// GetGroupMetricRulesRuleEscalationInput is an input type that accepts GetGroupMetricRulesRuleEscalationArgs and GetGroupMetricRulesRuleEscalationOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationInput` via:
//
//          GetGroupMetricRulesRuleEscalationArgs{...}
type GetGroupMetricRulesRuleEscalationInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationOutput() GetGroupMetricRulesRuleEscalationOutput
	ToGetGroupMetricRulesRuleEscalationOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationOutput
}

type GetGroupMetricRulesRuleEscalationArgs struct {
	// The critical level.
	Criticals GetGroupMetricRulesRuleEscalationCriticalArrayInput `pulumi:"criticals"`
	// The info level.
	Infos GetGroupMetricRulesRuleEscalationInfoArrayInput `pulumi:"infos"`
	// The warn level.
	Warns GetGroupMetricRulesRuleEscalationWarnArrayInput `pulumi:"warns"`
}

func (GetGroupMetricRulesRuleEscalationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalation)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationArgs) ToGetGroupMetricRulesRuleEscalationOutput() GetGroupMetricRulesRuleEscalationOutput {
	return i.ToGetGroupMetricRulesRuleEscalationOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationArgs) ToGetGroupMetricRulesRuleEscalationOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationOutput)
}

// GetGroupMetricRulesRuleEscalationArrayInput is an input type that accepts GetGroupMetricRulesRuleEscalationArray and GetGroupMetricRulesRuleEscalationArrayOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationArrayInput` via:
//
//          GetGroupMetricRulesRuleEscalationArray{ GetGroupMetricRulesRuleEscalationArgs{...} }
type GetGroupMetricRulesRuleEscalationArrayInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationArrayOutput() GetGroupMetricRulesRuleEscalationArrayOutput
	ToGetGroupMetricRulesRuleEscalationArrayOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationArrayOutput
}

type GetGroupMetricRulesRuleEscalationArray []GetGroupMetricRulesRuleEscalationInput

func (GetGroupMetricRulesRuleEscalationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalation)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationArray) ToGetGroupMetricRulesRuleEscalationArrayOutput() GetGroupMetricRulesRuleEscalationArrayOutput {
	return i.ToGetGroupMetricRulesRuleEscalationArrayOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationArray) ToGetGroupMetricRulesRuleEscalationArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationArrayOutput)
}

type GetGroupMetricRulesRuleEscalationOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalation)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationOutput) ToGetGroupMetricRulesRuleEscalationOutput() GetGroupMetricRulesRuleEscalationOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationOutput) ToGetGroupMetricRulesRuleEscalationOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationOutput {
	return o
}

// The critical level.
func (o GetGroupMetricRulesRuleEscalationOutput) Criticals() GetGroupMetricRulesRuleEscalationCriticalArrayOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalation) []GetGroupMetricRulesRuleEscalationCritical {
		return v.Criticals
	}).(GetGroupMetricRulesRuleEscalationCriticalArrayOutput)
}

// The info level.
func (o GetGroupMetricRulesRuleEscalationOutput) Infos() GetGroupMetricRulesRuleEscalationInfoArrayOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalation) []GetGroupMetricRulesRuleEscalationInfo { return v.Infos }).(GetGroupMetricRulesRuleEscalationInfoArrayOutput)
}

// The warn level.
func (o GetGroupMetricRulesRuleEscalationOutput) Warns() GetGroupMetricRulesRuleEscalationWarnArrayOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalation) []GetGroupMetricRulesRuleEscalationWarn { return v.Warns }).(GetGroupMetricRulesRuleEscalationWarnArrayOutput)
}

type GetGroupMetricRulesRuleEscalationArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalation)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationArrayOutput) ToGetGroupMetricRulesRuleEscalationArrayOutput() GetGroupMetricRulesRuleEscalationArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationArrayOutput) ToGetGroupMetricRulesRuleEscalationArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationArrayOutput) Index(i pulumi.IntInput) GetGroupMetricRulesRuleEscalationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMetricRulesRuleEscalation {
		return vs[0].([]GetGroupMetricRulesRuleEscalation)[vs[1].(int)]
	}).(GetGroupMetricRulesRuleEscalationOutput)
}

type GetGroupMetricRulesRuleEscalationCritical struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times int `pulumi:"times"`
}

// GetGroupMetricRulesRuleEscalationCriticalInput is an input type that accepts GetGroupMetricRulesRuleEscalationCriticalArgs and GetGroupMetricRulesRuleEscalationCriticalOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationCriticalInput` via:
//
//          GetGroupMetricRulesRuleEscalationCriticalArgs{...}
type GetGroupMetricRulesRuleEscalationCriticalInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationCriticalOutput() GetGroupMetricRulesRuleEscalationCriticalOutput
	ToGetGroupMetricRulesRuleEscalationCriticalOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationCriticalOutput
}

type GetGroupMetricRulesRuleEscalationCriticalArgs struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times pulumi.IntInput `pulumi:"times"`
}

func (GetGroupMetricRulesRuleEscalationCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalationCritical)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationCriticalArgs) ToGetGroupMetricRulesRuleEscalationCriticalOutput() GetGroupMetricRulesRuleEscalationCriticalOutput {
	return i.ToGetGroupMetricRulesRuleEscalationCriticalOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationCriticalArgs) ToGetGroupMetricRulesRuleEscalationCriticalOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationCriticalOutput)
}

// GetGroupMetricRulesRuleEscalationCriticalArrayInput is an input type that accepts GetGroupMetricRulesRuleEscalationCriticalArray and GetGroupMetricRulesRuleEscalationCriticalArrayOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationCriticalArrayInput` via:
//
//          GetGroupMetricRulesRuleEscalationCriticalArray{ GetGroupMetricRulesRuleEscalationCriticalArgs{...} }
type GetGroupMetricRulesRuleEscalationCriticalArrayInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationCriticalArrayOutput() GetGroupMetricRulesRuleEscalationCriticalArrayOutput
	ToGetGroupMetricRulesRuleEscalationCriticalArrayOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationCriticalArrayOutput
}

type GetGroupMetricRulesRuleEscalationCriticalArray []GetGroupMetricRulesRuleEscalationCriticalInput

func (GetGroupMetricRulesRuleEscalationCriticalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalationCritical)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationCriticalArray) ToGetGroupMetricRulesRuleEscalationCriticalArrayOutput() GetGroupMetricRulesRuleEscalationCriticalArrayOutput {
	return i.ToGetGroupMetricRulesRuleEscalationCriticalArrayOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationCriticalArray) ToGetGroupMetricRulesRuleEscalationCriticalArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationCriticalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationCriticalArrayOutput)
}

type GetGroupMetricRulesRuleEscalationCriticalOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalationCritical)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationCriticalOutput) ToGetGroupMetricRulesRuleEscalationCriticalOutput() GetGroupMetricRulesRuleEscalationCriticalOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationCriticalOutput) ToGetGroupMetricRulesRuleEscalationCriticalOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationCriticalOutput {
	return o
}

// The comparison operator of the threshold for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationCriticalOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationCritical) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationCriticalOutput) Statistics() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationCritical) string { return v.Statistics }).(pulumi.StringOutput)
}

// The threshold for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationCriticalOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationCritical) string { return v.Threshold }).(pulumi.StringOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GetGroupMetricRulesRuleEscalationCriticalOutput) Times() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationCritical) int { return v.Times }).(pulumi.IntOutput)
}

type GetGroupMetricRulesRuleEscalationCriticalArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationCriticalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalationCritical)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationCriticalArrayOutput) ToGetGroupMetricRulesRuleEscalationCriticalArrayOutput() GetGroupMetricRulesRuleEscalationCriticalArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationCriticalArrayOutput) ToGetGroupMetricRulesRuleEscalationCriticalArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationCriticalArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationCriticalArrayOutput) Index(i pulumi.IntInput) GetGroupMetricRulesRuleEscalationCriticalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMetricRulesRuleEscalationCritical {
		return vs[0].([]GetGroupMetricRulesRuleEscalationCritical)[vs[1].(int)]
	}).(GetGroupMetricRulesRuleEscalationCriticalOutput)
}

type GetGroupMetricRulesRuleEscalationInfo struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times int `pulumi:"times"`
}

// GetGroupMetricRulesRuleEscalationInfoInput is an input type that accepts GetGroupMetricRulesRuleEscalationInfoArgs and GetGroupMetricRulesRuleEscalationInfoOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationInfoInput` via:
//
//          GetGroupMetricRulesRuleEscalationInfoArgs{...}
type GetGroupMetricRulesRuleEscalationInfoInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationInfoOutput() GetGroupMetricRulesRuleEscalationInfoOutput
	ToGetGroupMetricRulesRuleEscalationInfoOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationInfoOutput
}

type GetGroupMetricRulesRuleEscalationInfoArgs struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times pulumi.IntInput `pulumi:"times"`
}

func (GetGroupMetricRulesRuleEscalationInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalationInfo)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationInfoArgs) ToGetGroupMetricRulesRuleEscalationInfoOutput() GetGroupMetricRulesRuleEscalationInfoOutput {
	return i.ToGetGroupMetricRulesRuleEscalationInfoOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationInfoArgs) ToGetGroupMetricRulesRuleEscalationInfoOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationInfoOutput)
}

// GetGroupMetricRulesRuleEscalationInfoArrayInput is an input type that accepts GetGroupMetricRulesRuleEscalationInfoArray and GetGroupMetricRulesRuleEscalationInfoArrayOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationInfoArrayInput` via:
//
//          GetGroupMetricRulesRuleEscalationInfoArray{ GetGroupMetricRulesRuleEscalationInfoArgs{...} }
type GetGroupMetricRulesRuleEscalationInfoArrayInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationInfoArrayOutput() GetGroupMetricRulesRuleEscalationInfoArrayOutput
	ToGetGroupMetricRulesRuleEscalationInfoArrayOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationInfoArrayOutput
}

type GetGroupMetricRulesRuleEscalationInfoArray []GetGroupMetricRulesRuleEscalationInfoInput

func (GetGroupMetricRulesRuleEscalationInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalationInfo)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationInfoArray) ToGetGroupMetricRulesRuleEscalationInfoArrayOutput() GetGroupMetricRulesRuleEscalationInfoArrayOutput {
	return i.ToGetGroupMetricRulesRuleEscalationInfoArrayOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationInfoArray) ToGetGroupMetricRulesRuleEscalationInfoArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationInfoArrayOutput)
}

type GetGroupMetricRulesRuleEscalationInfoOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalationInfo)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationInfoOutput) ToGetGroupMetricRulesRuleEscalationInfoOutput() GetGroupMetricRulesRuleEscalationInfoOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationInfoOutput) ToGetGroupMetricRulesRuleEscalationInfoOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationInfoOutput {
	return o
}

// The comparison operator of the threshold for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationInfoOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationInfo) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationInfoOutput) Statistics() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationInfo) string { return v.Statistics }).(pulumi.StringOutput)
}

// The threshold for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationInfoOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationInfo) string { return v.Threshold }).(pulumi.StringOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GetGroupMetricRulesRuleEscalationInfoOutput) Times() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationInfo) int { return v.Times }).(pulumi.IntOutput)
}

type GetGroupMetricRulesRuleEscalationInfoArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalationInfo)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationInfoArrayOutput) ToGetGroupMetricRulesRuleEscalationInfoArrayOutput() GetGroupMetricRulesRuleEscalationInfoArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationInfoArrayOutput) ToGetGroupMetricRulesRuleEscalationInfoArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationInfoArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationInfoArrayOutput) Index(i pulumi.IntInput) GetGroupMetricRulesRuleEscalationInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMetricRulesRuleEscalationInfo {
		return vs[0].([]GetGroupMetricRulesRuleEscalationInfo)[vs[1].(int)]
	}).(GetGroupMetricRulesRuleEscalationInfoOutput)
}

type GetGroupMetricRulesRuleEscalationWarn struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics string `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold string `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times int `pulumi:"times"`
}

// GetGroupMetricRulesRuleEscalationWarnInput is an input type that accepts GetGroupMetricRulesRuleEscalationWarnArgs and GetGroupMetricRulesRuleEscalationWarnOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationWarnInput` via:
//
//          GetGroupMetricRulesRuleEscalationWarnArgs{...}
type GetGroupMetricRulesRuleEscalationWarnInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationWarnOutput() GetGroupMetricRulesRuleEscalationWarnOutput
	ToGetGroupMetricRulesRuleEscalationWarnOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationWarnOutput
}

type GetGroupMetricRulesRuleEscalationWarnArgs struct {
	// The comparison operator of the threshold for warn-level alerts.
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// The statistical aggregation method for warn-level alerts.
	Statistics pulumi.StringInput `pulumi:"statistics"`
	// The threshold for warn-level alerts.
	Threshold pulumi.StringInput `pulumi:"threshold"`
	// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
	Times pulumi.IntInput `pulumi:"times"`
}

func (GetGroupMetricRulesRuleEscalationWarnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalationWarn)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationWarnArgs) ToGetGroupMetricRulesRuleEscalationWarnOutput() GetGroupMetricRulesRuleEscalationWarnOutput {
	return i.ToGetGroupMetricRulesRuleEscalationWarnOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationWarnArgs) ToGetGroupMetricRulesRuleEscalationWarnOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationWarnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationWarnOutput)
}

// GetGroupMetricRulesRuleEscalationWarnArrayInput is an input type that accepts GetGroupMetricRulesRuleEscalationWarnArray and GetGroupMetricRulesRuleEscalationWarnArrayOutput values.
// You can construct a concrete instance of `GetGroupMetricRulesRuleEscalationWarnArrayInput` via:
//
//          GetGroupMetricRulesRuleEscalationWarnArray{ GetGroupMetricRulesRuleEscalationWarnArgs{...} }
type GetGroupMetricRulesRuleEscalationWarnArrayInput interface {
	pulumi.Input

	ToGetGroupMetricRulesRuleEscalationWarnArrayOutput() GetGroupMetricRulesRuleEscalationWarnArrayOutput
	ToGetGroupMetricRulesRuleEscalationWarnArrayOutputWithContext(context.Context) GetGroupMetricRulesRuleEscalationWarnArrayOutput
}

type GetGroupMetricRulesRuleEscalationWarnArray []GetGroupMetricRulesRuleEscalationWarnInput

func (GetGroupMetricRulesRuleEscalationWarnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalationWarn)(nil)).Elem()
}

func (i GetGroupMetricRulesRuleEscalationWarnArray) ToGetGroupMetricRulesRuleEscalationWarnArrayOutput() GetGroupMetricRulesRuleEscalationWarnArrayOutput {
	return i.ToGetGroupMetricRulesRuleEscalationWarnArrayOutputWithContext(context.Background())
}

func (i GetGroupMetricRulesRuleEscalationWarnArray) ToGetGroupMetricRulesRuleEscalationWarnArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationWarnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupMetricRulesRuleEscalationWarnArrayOutput)
}

type GetGroupMetricRulesRuleEscalationWarnOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationWarnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupMetricRulesRuleEscalationWarn)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationWarnOutput) ToGetGroupMetricRulesRuleEscalationWarnOutput() GetGroupMetricRulesRuleEscalationWarnOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationWarnOutput) ToGetGroupMetricRulesRuleEscalationWarnOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationWarnOutput {
	return o
}

// The comparison operator of the threshold for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationWarnOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationWarn) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

// The statistical aggregation method for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationWarnOutput) Statistics() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationWarn) string { return v.Statistics }).(pulumi.StringOutput)
}

// The threshold for warn-level alerts.
func (o GetGroupMetricRulesRuleEscalationWarnOutput) Threshold() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationWarn) string { return v.Threshold }).(pulumi.StringOutput)
}

// The consecutive number of times for which the metric value is measured before a warn-level alert is triggered.
func (o GetGroupMetricRulesRuleEscalationWarnOutput) Times() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupMetricRulesRuleEscalationWarn) int { return v.Times }).(pulumi.IntOutput)
}

type GetGroupMetricRulesRuleEscalationWarnArrayOutput struct{ *pulumi.OutputState }

func (GetGroupMetricRulesRuleEscalationWarnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupMetricRulesRuleEscalationWarn)(nil)).Elem()
}

func (o GetGroupMetricRulesRuleEscalationWarnArrayOutput) ToGetGroupMetricRulesRuleEscalationWarnArrayOutput() GetGroupMetricRulesRuleEscalationWarnArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationWarnArrayOutput) ToGetGroupMetricRulesRuleEscalationWarnArrayOutputWithContext(ctx context.Context) GetGroupMetricRulesRuleEscalationWarnArrayOutput {
	return o
}

func (o GetGroupMetricRulesRuleEscalationWarnArrayOutput) Index(i pulumi.IntInput) GetGroupMetricRulesRuleEscalationWarnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupMetricRulesRuleEscalationWarn {
		return vs[0].([]GetGroupMetricRulesRuleEscalationWarn)[vs[1].(int)]
	}).(GetGroupMetricRulesRuleEscalationWarnOutput)
}

type GetMonitorGroupInstancesInstance struct {
	Instances []GetMonitorGroupInstancesInstanceInstance `pulumi:"instances"`
}

// GetMonitorGroupInstancesInstanceInput is an input type that accepts GetMonitorGroupInstancesInstanceArgs and GetMonitorGroupInstancesInstanceOutput values.
// You can construct a concrete instance of `GetMonitorGroupInstancesInstanceInput` via:
//
//          GetMonitorGroupInstancesInstanceArgs{...}
type GetMonitorGroupInstancesInstanceInput interface {
	pulumi.Input

	ToGetMonitorGroupInstancesInstanceOutput() GetMonitorGroupInstancesInstanceOutput
	ToGetMonitorGroupInstancesInstanceOutputWithContext(context.Context) GetMonitorGroupInstancesInstanceOutput
}

type GetMonitorGroupInstancesInstanceArgs struct {
	Instances GetMonitorGroupInstancesInstanceInstanceArrayInput `pulumi:"instances"`
}

func (GetMonitorGroupInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorGroupInstancesInstance)(nil)).Elem()
}

func (i GetMonitorGroupInstancesInstanceArgs) ToGetMonitorGroupInstancesInstanceOutput() GetMonitorGroupInstancesInstanceOutput {
	return i.ToGetMonitorGroupInstancesInstanceOutputWithContext(context.Background())
}

func (i GetMonitorGroupInstancesInstanceArgs) ToGetMonitorGroupInstancesInstanceOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorGroupInstancesInstanceOutput)
}

// GetMonitorGroupInstancesInstanceArrayInput is an input type that accepts GetMonitorGroupInstancesInstanceArray and GetMonitorGroupInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetMonitorGroupInstancesInstanceArrayInput` via:
//
//          GetMonitorGroupInstancesInstanceArray{ GetMonitorGroupInstancesInstanceArgs{...} }
type GetMonitorGroupInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetMonitorGroupInstancesInstanceArrayOutput() GetMonitorGroupInstancesInstanceArrayOutput
	ToGetMonitorGroupInstancesInstanceArrayOutputWithContext(context.Context) GetMonitorGroupInstancesInstanceArrayOutput
}

type GetMonitorGroupInstancesInstanceArray []GetMonitorGroupInstancesInstanceInput

func (GetMonitorGroupInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorGroupInstancesInstance)(nil)).Elem()
}

func (i GetMonitorGroupInstancesInstanceArray) ToGetMonitorGroupInstancesInstanceArrayOutput() GetMonitorGroupInstancesInstanceArrayOutput {
	return i.ToGetMonitorGroupInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetMonitorGroupInstancesInstanceArray) ToGetMonitorGroupInstancesInstanceArrayOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorGroupInstancesInstanceArrayOutput)
}

type GetMonitorGroupInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetMonitorGroupInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorGroupInstancesInstance)(nil)).Elem()
}

func (o GetMonitorGroupInstancesInstanceOutput) ToGetMonitorGroupInstancesInstanceOutput() GetMonitorGroupInstancesInstanceOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceOutput) ToGetMonitorGroupInstancesInstanceOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceOutput) Instances() GetMonitorGroupInstancesInstanceInstanceArrayOutput {
	return o.ApplyT(func(v GetMonitorGroupInstancesInstance) []GetMonitorGroupInstancesInstanceInstance {
		return v.Instances
	}).(GetMonitorGroupInstancesInstanceInstanceArrayOutput)
}

type GetMonitorGroupInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorGroupInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorGroupInstancesInstance)(nil)).Elem()
}

func (o GetMonitorGroupInstancesInstanceArrayOutput) ToGetMonitorGroupInstancesInstanceArrayOutput() GetMonitorGroupInstancesInstanceArrayOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceArrayOutput) ToGetMonitorGroupInstancesInstanceArrayOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceArrayOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetMonitorGroupInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorGroupInstancesInstance {
		return vs[0].([]GetMonitorGroupInstancesInstance)[vs[1].(int)]
	}).(GetMonitorGroupInstancesInstanceOutput)
}

type GetMonitorGroupInstancesInstanceInstance struct {
	Category     string `pulumi:"category"`
	InstanceId   string `pulumi:"instanceId"`
	InstanceName string `pulumi:"instanceName"`
	RegionId     string `pulumi:"regionId"`
}

// GetMonitorGroupInstancesInstanceInstanceInput is an input type that accepts GetMonitorGroupInstancesInstanceInstanceArgs and GetMonitorGroupInstancesInstanceInstanceOutput values.
// You can construct a concrete instance of `GetMonitorGroupInstancesInstanceInstanceInput` via:
//
//          GetMonitorGroupInstancesInstanceInstanceArgs{...}
type GetMonitorGroupInstancesInstanceInstanceInput interface {
	pulumi.Input

	ToGetMonitorGroupInstancesInstanceInstanceOutput() GetMonitorGroupInstancesInstanceInstanceOutput
	ToGetMonitorGroupInstancesInstanceInstanceOutputWithContext(context.Context) GetMonitorGroupInstancesInstanceInstanceOutput
}

type GetMonitorGroupInstancesInstanceInstanceArgs struct {
	Category     pulumi.StringInput `pulumi:"category"`
	InstanceId   pulumi.StringInput `pulumi:"instanceId"`
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	RegionId     pulumi.StringInput `pulumi:"regionId"`
}

func (GetMonitorGroupInstancesInstanceInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorGroupInstancesInstanceInstance)(nil)).Elem()
}

func (i GetMonitorGroupInstancesInstanceInstanceArgs) ToGetMonitorGroupInstancesInstanceInstanceOutput() GetMonitorGroupInstancesInstanceInstanceOutput {
	return i.ToGetMonitorGroupInstancesInstanceInstanceOutputWithContext(context.Background())
}

func (i GetMonitorGroupInstancesInstanceInstanceArgs) ToGetMonitorGroupInstancesInstanceInstanceOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorGroupInstancesInstanceInstanceOutput)
}

// GetMonitorGroupInstancesInstanceInstanceArrayInput is an input type that accepts GetMonitorGroupInstancesInstanceInstanceArray and GetMonitorGroupInstancesInstanceInstanceArrayOutput values.
// You can construct a concrete instance of `GetMonitorGroupInstancesInstanceInstanceArrayInput` via:
//
//          GetMonitorGroupInstancesInstanceInstanceArray{ GetMonitorGroupInstancesInstanceInstanceArgs{...} }
type GetMonitorGroupInstancesInstanceInstanceArrayInput interface {
	pulumi.Input

	ToGetMonitorGroupInstancesInstanceInstanceArrayOutput() GetMonitorGroupInstancesInstanceInstanceArrayOutput
	ToGetMonitorGroupInstancesInstanceInstanceArrayOutputWithContext(context.Context) GetMonitorGroupInstancesInstanceInstanceArrayOutput
}

type GetMonitorGroupInstancesInstanceInstanceArray []GetMonitorGroupInstancesInstanceInstanceInput

func (GetMonitorGroupInstancesInstanceInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorGroupInstancesInstanceInstance)(nil)).Elem()
}

func (i GetMonitorGroupInstancesInstanceInstanceArray) ToGetMonitorGroupInstancesInstanceInstanceArrayOutput() GetMonitorGroupInstancesInstanceInstanceArrayOutput {
	return i.ToGetMonitorGroupInstancesInstanceInstanceArrayOutputWithContext(context.Background())
}

func (i GetMonitorGroupInstancesInstanceInstanceArray) ToGetMonitorGroupInstancesInstanceInstanceArrayOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorGroupInstancesInstanceInstanceArrayOutput)
}

type GetMonitorGroupInstancesInstanceInstanceOutput struct{ *pulumi.OutputState }

func (GetMonitorGroupInstancesInstanceInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorGroupInstancesInstanceInstance)(nil)).Elem()
}

func (o GetMonitorGroupInstancesInstanceInstanceOutput) ToGetMonitorGroupInstancesInstanceInstanceOutput() GetMonitorGroupInstancesInstanceInstanceOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceInstanceOutput) ToGetMonitorGroupInstancesInstanceInstanceOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceInstanceOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceInstanceOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupInstancesInstanceInstance) string { return v.Category }).(pulumi.StringOutput)
}

func (o GetMonitorGroupInstancesInstanceInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupInstancesInstanceInstance) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetMonitorGroupInstancesInstanceInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupInstancesInstanceInstance) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o GetMonitorGroupInstancesInstanceInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupInstancesInstanceInstance) string { return v.RegionId }).(pulumi.StringOutput)
}

type GetMonitorGroupInstancesInstanceInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorGroupInstancesInstanceInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorGroupInstancesInstanceInstance)(nil)).Elem()
}

func (o GetMonitorGroupInstancesInstanceInstanceArrayOutput) ToGetMonitorGroupInstancesInstanceInstanceArrayOutput() GetMonitorGroupInstancesInstanceInstanceArrayOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceInstanceArrayOutput) ToGetMonitorGroupInstancesInstanceInstanceArrayOutputWithContext(ctx context.Context) GetMonitorGroupInstancesInstanceInstanceArrayOutput {
	return o
}

func (o GetMonitorGroupInstancesInstanceInstanceArrayOutput) Index(i pulumi.IntInput) GetMonitorGroupInstancesInstanceInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorGroupInstancesInstanceInstance {
		return vs[0].([]GetMonitorGroupInstancesInstanceInstance)[vs[1].(int)]
	}).(GetMonitorGroupInstancesInstanceInstanceOutput)
}

type GetMonitorGroupsGroup struct {
	// The URL of the Kubernetes cluster from which the application group is synchronized.
	BindUrl string `pulumi:"bindUrl"`
	// The list of  alert groups that receive alert notifications for the application group.
	ContactGroups []string `pulumi:"contactGroups"`
	// The ID of the tag rule.
	DynamicTagRuleId string `pulumi:"dynamicTagRuleId"`
	// The time when the application group was created.
	GmtCreate int `pulumi:"gmtCreate"`
	// The time when the application group was modified.
	GmtModified int `pulumi:"gmtModified"`
	// The ID of the application group.
	GroupId string `pulumi:"groupId"`
	// The ID of the Monitor Group.
	Id string `pulumi:"id"`
	// The name of the application group.
	MonitorGroupName string `pulumi:"monitorGroupName"`
	// The ID of the Alibaba Cloud service.
	ServiceId string `pulumi:"serviceId"`
	// A map of tags assigned to the Cms Monitor Group.
	Tags map[string]interface{} `pulumi:"tags"`
	// The alert templates applied to the application group.
	TemplateIds []string `pulumi:"templateIds"`
	// The type of the application group.
	Type string `pulumi:"type"`
}

// GetMonitorGroupsGroupInput is an input type that accepts GetMonitorGroupsGroupArgs and GetMonitorGroupsGroupOutput values.
// You can construct a concrete instance of `GetMonitorGroupsGroupInput` via:
//
//          GetMonitorGroupsGroupArgs{...}
type GetMonitorGroupsGroupInput interface {
	pulumi.Input

	ToGetMonitorGroupsGroupOutput() GetMonitorGroupsGroupOutput
	ToGetMonitorGroupsGroupOutputWithContext(context.Context) GetMonitorGroupsGroupOutput
}

type GetMonitorGroupsGroupArgs struct {
	// The URL of the Kubernetes cluster from which the application group is synchronized.
	BindUrl pulumi.StringInput `pulumi:"bindUrl"`
	// The list of  alert groups that receive alert notifications for the application group.
	ContactGroups pulumi.StringArrayInput `pulumi:"contactGroups"`
	// The ID of the tag rule.
	DynamicTagRuleId pulumi.StringInput `pulumi:"dynamicTagRuleId"`
	// The time when the application group was created.
	GmtCreate pulumi.IntInput `pulumi:"gmtCreate"`
	// The time when the application group was modified.
	GmtModified pulumi.IntInput `pulumi:"gmtModified"`
	// The ID of the application group.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The ID of the Monitor Group.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the application group.
	MonitorGroupName pulumi.StringInput `pulumi:"monitorGroupName"`
	// The ID of the Alibaba Cloud service.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
	// A map of tags assigned to the Cms Monitor Group.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The alert templates applied to the application group.
	TemplateIds pulumi.StringArrayInput `pulumi:"templateIds"`
	// The type of the application group.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMonitorGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorGroupsGroup)(nil)).Elem()
}

func (i GetMonitorGroupsGroupArgs) ToGetMonitorGroupsGroupOutput() GetMonitorGroupsGroupOutput {
	return i.ToGetMonitorGroupsGroupOutputWithContext(context.Background())
}

func (i GetMonitorGroupsGroupArgs) ToGetMonitorGroupsGroupOutputWithContext(ctx context.Context) GetMonitorGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorGroupsGroupOutput)
}

// GetMonitorGroupsGroupArrayInput is an input type that accepts GetMonitorGroupsGroupArray and GetMonitorGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetMonitorGroupsGroupArrayInput` via:
//
//          GetMonitorGroupsGroupArray{ GetMonitorGroupsGroupArgs{...} }
type GetMonitorGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetMonitorGroupsGroupArrayOutput() GetMonitorGroupsGroupArrayOutput
	ToGetMonitorGroupsGroupArrayOutputWithContext(context.Context) GetMonitorGroupsGroupArrayOutput
}

type GetMonitorGroupsGroupArray []GetMonitorGroupsGroupInput

func (GetMonitorGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorGroupsGroup)(nil)).Elem()
}

func (i GetMonitorGroupsGroupArray) ToGetMonitorGroupsGroupArrayOutput() GetMonitorGroupsGroupArrayOutput {
	return i.ToGetMonitorGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetMonitorGroupsGroupArray) ToGetMonitorGroupsGroupArrayOutputWithContext(ctx context.Context) GetMonitorGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorGroupsGroupArrayOutput)
}

type GetMonitorGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetMonitorGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorGroupsGroup)(nil)).Elem()
}

func (o GetMonitorGroupsGroupOutput) ToGetMonitorGroupsGroupOutput() GetMonitorGroupsGroupOutput {
	return o
}

func (o GetMonitorGroupsGroupOutput) ToGetMonitorGroupsGroupOutputWithContext(ctx context.Context) GetMonitorGroupsGroupOutput {
	return o
}

// The URL of the Kubernetes cluster from which the application group is synchronized.
func (o GetMonitorGroupsGroupOutput) BindUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.BindUrl }).(pulumi.StringOutput)
}

// The list of  alert groups that receive alert notifications for the application group.
func (o GetMonitorGroupsGroupOutput) ContactGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) []string { return v.ContactGroups }).(pulumi.StringArrayOutput)
}

// The ID of the tag rule.
func (o GetMonitorGroupsGroupOutput) DynamicTagRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.DynamicTagRuleId }).(pulumi.StringOutput)
}

// The time when the application group was created.
func (o GetMonitorGroupsGroupOutput) GmtCreate() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) int { return v.GmtCreate }).(pulumi.IntOutput)
}

// The time when the application group was modified.
func (o GetMonitorGroupsGroupOutput) GmtModified() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) int { return v.GmtModified }).(pulumi.IntOutput)
}

// The ID of the application group.
func (o GetMonitorGroupsGroupOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.GroupId }).(pulumi.StringOutput)
}

// The ID of the Monitor Group.
func (o GetMonitorGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the application group.
func (o GetMonitorGroupsGroupOutput) MonitorGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.MonitorGroupName }).(pulumi.StringOutput)
}

// The ID of the Alibaba Cloud service.
func (o GetMonitorGroupsGroupOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.ServiceId }).(pulumi.StringOutput)
}

// A map of tags assigned to the Cms Monitor Group.
func (o GetMonitorGroupsGroupOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// The alert templates applied to the application group.
func (o GetMonitorGroupsGroupOutput) TemplateIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) []string { return v.TemplateIds }).(pulumi.StringArrayOutput)
}

// The type of the application group.
func (o GetMonitorGroupsGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorGroupsGroup) string { return v.Type }).(pulumi.StringOutput)
}

type GetMonitorGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorGroupsGroup)(nil)).Elem()
}

func (o GetMonitorGroupsGroupArrayOutput) ToGetMonitorGroupsGroupArrayOutput() GetMonitorGroupsGroupArrayOutput {
	return o
}

func (o GetMonitorGroupsGroupArrayOutput) ToGetMonitorGroupsGroupArrayOutputWithContext(ctx context.Context) GetMonitorGroupsGroupArrayOutput {
	return o
}

func (o GetMonitorGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetMonitorGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorGroupsGroup {
		return vs[0].([]GetMonitorGroupsGroup)[vs[1].(int)]
	}).(GetMonitorGroupsGroupOutput)
}

func init() {
	pulumi.RegisterOutputType(AlarmEscalationsCriticalOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsCriticalPtrOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsInfoOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsInfoPtrOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsWarnOutput{})
	pulumi.RegisterOutputType(AlarmEscalationsWarnPtrOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsPtrOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsCriticalOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsCriticalPtrOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsInfoOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsInfoPtrOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsWarnOutput{})
	pulumi.RegisterOutputType(GroupMetricRuleEscalationsWarnPtrOutput{})
	pulumi.RegisterOutputType(MonitorGroupInstancesInstanceOutput{})
	pulumi.RegisterOutputType(MonitorGroupInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(SiteMonitorIspCityOutput{})
	pulumi.RegisterOutputType(SiteMonitorIspCityArrayOutput{})
	pulumi.RegisterOutputType(GetAlarmContactGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetAlarmContactGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetAlarmContactsContactOutput{})
	pulumi.RegisterOutputType(GetAlarmContactsContactArrayOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationArrayOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationCriticalOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationCriticalArrayOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationInfoOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationInfoArrayOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationWarnOutput{})
	pulumi.RegisterOutputType(GetGroupMetricRulesRuleEscalationWarnArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorGroupInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetMonitorGroupInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorGroupInstancesInstanceInstanceOutput{})
	pulumi.RegisterOutputType(GetMonitorGroupInstancesInstanceInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetMonitorGroupsGroupArrayOutput{})
}
