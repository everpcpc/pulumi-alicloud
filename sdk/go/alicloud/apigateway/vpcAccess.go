// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/api_gateway_vpc_access.html.markdown.
type VpcAccess struct {
	s *pulumi.ResourceState
}

// NewVpcAccess registers a new resource with the given unique name, arguments, and options.
func NewVpcAccess(ctx *pulumi.Context,
	name string, args *VpcAccessArgs, opts ...pulumi.ResourceOpt) (*VpcAccess, error) {
	if args == nil || args.InstanceId == nil {
		return nil, errors.New("missing required argument 'InstanceId'")
	}
	if args == nil || args.Port == nil {
		return nil, errors.New("missing required argument 'Port'")
	}
	if args == nil || args.VpcId == nil {
		return nil, errors.New("missing required argument 'VpcId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["instanceId"] = nil
		inputs["name"] = nil
		inputs["port"] = nil
		inputs["vpcId"] = nil
	} else {
		inputs["instanceId"] = args.InstanceId
		inputs["name"] = args.Name
		inputs["port"] = args.Port
		inputs["vpcId"] = args.VpcId
	}
	s, err := ctx.RegisterResource("alicloud:apigateway/vpcAccess:VpcAccess", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &VpcAccess{s: s}, nil
}

// GetVpcAccess gets an existing VpcAccess resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcAccess(ctx *pulumi.Context,
	name string, id pulumi.ID, state *VpcAccessState, opts ...pulumi.ResourceOpt) (*VpcAccess, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["instanceId"] = state.InstanceId
		inputs["name"] = state.Name
		inputs["port"] = state.Port
		inputs["vpcId"] = state.VpcId
	}
	s, err := ctx.ReadResource("alicloud:apigateway/vpcAccess:VpcAccess", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &VpcAccess{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *VpcAccess) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *VpcAccess) ID() pulumi.IDOutput {
	return r.s.ID()
}

// ID of the instance in VPC (ECS/Server Load Balance).
func (r *VpcAccess) InstanceId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["instanceId"])
}

// The name of the vpc authorization. 
func (r *VpcAccess) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// ID of the port corresponding to the instance.
func (r *VpcAccess) Port() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["port"])
}

// The vpc id of the vpc authorization. 
func (r *VpcAccess) VpcId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["vpcId"])
}

// Input properties used for looking up and filtering VpcAccess resources.
type VpcAccessState struct {
	// ID of the instance in VPC (ECS/Server Load Balance).
	InstanceId interface{}
	// The name of the vpc authorization. 
	Name interface{}
	// ID of the port corresponding to the instance.
	Port interface{}
	// The vpc id of the vpc authorization. 
	VpcId interface{}
}

// The set of arguments for constructing a VpcAccess resource.
type VpcAccessArgs struct {
	// ID of the instance in VPC (ECS/Server Load Balance).
	InstanceId interface{}
	// The name of the vpc authorization. 
	Name interface{}
	// ID of the port corresponding to the instance.
	Port interface{}
	// The vpc id of the vpc authorization. 
	VpcId interface{}
}
