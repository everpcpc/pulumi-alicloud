// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/api_gateway_app_attachment.html.markdown.
type AppAttachment struct {
	s *pulumi.ResourceState
}

// NewAppAttachment registers a new resource with the given unique name, arguments, and options.
func NewAppAttachment(ctx *pulumi.Context,
	name string, args *AppAttachmentArgs, opts ...pulumi.ResourceOpt) (*AppAttachment, error) {
	if args == nil || args.ApiId == nil {
		return nil, errors.New("missing required argument 'ApiId'")
	}
	if args == nil || args.AppId == nil {
		return nil, errors.New("missing required argument 'AppId'")
	}
	if args == nil || args.GroupId == nil {
		return nil, errors.New("missing required argument 'GroupId'")
	}
	if args == nil || args.StageName == nil {
		return nil, errors.New("missing required argument 'StageName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["apiId"] = nil
		inputs["appId"] = nil
		inputs["groupId"] = nil
		inputs["stageName"] = nil
	} else {
		inputs["apiId"] = args.ApiId
		inputs["appId"] = args.AppId
		inputs["groupId"] = args.GroupId
		inputs["stageName"] = args.StageName
	}
	s, err := ctx.RegisterResource("alicloud:apigateway/appAttachment:AppAttachment", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &AppAttachment{s: s}, nil
}

// GetAppAttachment gets an existing AppAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppAttachment(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AppAttachmentState, opts ...pulumi.ResourceOpt) (*AppAttachment, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["apiId"] = state.ApiId
		inputs["appId"] = state.AppId
		inputs["groupId"] = state.GroupId
		inputs["stageName"] = state.StageName
	}
	s, err := ctx.ReadResource("alicloud:apigateway/appAttachment:AppAttachment", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &AppAttachment{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *AppAttachment) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *AppAttachment) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The apiId that app apply to access.
func (r *AppAttachment) ApiId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["apiId"])
}

// The app that apply to the authorization.
func (r *AppAttachment) AppId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["appId"])
}

// The group that the api belongs to.
func (r *AppAttachment) GroupId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["groupId"])
}

// Stage that the app apply to access.
func (r *AppAttachment) StageName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["stageName"])
}

// Input properties used for looking up and filtering AppAttachment resources.
type AppAttachmentState struct {
	// The apiId that app apply to access.
	ApiId interface{}
	// The app that apply to the authorization.
	AppId interface{}
	// The group that the api belongs to.
	GroupId interface{}
	// Stage that the app apply to access.
	StageName interface{}
}

// The set of arguments for constructing a AppAttachment resource.
type AppAttachmentArgs struct {
	// The apiId that app apply to access.
	ApiId interface{}
	// The app that apply to the authorization.
	AppId interface{}
	// The group that the api belongs to.
	GroupId interface{}
	// Stage that the app apply to access.
	StageName interface{}
}
