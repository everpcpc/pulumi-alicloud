// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package nas

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Nas Access Group resource.
//
// In NAS, the permission group acts as a whitelist that allows you to restrict file system access. You can allow specified IP addresses or CIDR blocks to access the file system, and assign different levels of access permission to different IP addresses or CIDR blocks by adding rules to the permission group.
//
// > **NOTE:** Available in v1.33.0+.
//
//
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/nas_access_group.html.markdown.
type AccessGroup struct {
	pulumi.CustomResourceState

	// The Access Group description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A Name of one Access Group.
	Name pulumi.StringOutput `pulumi:"name"`
	// A Type of one Access Group. Valid values: `Vpc` and `Classic`.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAccessGroup registers a new resource with the given unique name, arguments, and options.
func NewAccessGroup(ctx *pulumi.Context,
	name string, args *AccessGroupArgs, opts ...pulumi.ResourceOption) (*AccessGroup, error) {
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	if args == nil {
		args = &AccessGroupArgs{}
	}
	var resource AccessGroup
	err := ctx.RegisterResource("alicloud:nas/accessGroup:AccessGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessGroup gets an existing AccessGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessGroupState, opts ...pulumi.ResourceOption) (*AccessGroup, error) {
	var resource AccessGroup
	err := ctx.ReadResource("alicloud:nas/accessGroup:AccessGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessGroup resources.
type accessGroupState struct {
	// The Access Group description.
	Description *string `pulumi:"description"`
	// A Name of one Access Group.
	Name *string `pulumi:"name"`
	// A Type of one Access Group. Valid values: `Vpc` and `Classic`.
	Type *string `pulumi:"type"`
}

type AccessGroupState struct {
	// The Access Group description.
	Description pulumi.StringPtrInput
	// A Name of one Access Group.
	Name pulumi.StringPtrInput
	// A Type of one Access Group. Valid values: `Vpc` and `Classic`.
	Type pulumi.StringPtrInput
}

func (AccessGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessGroupState)(nil)).Elem()
}

type accessGroupArgs struct {
	// The Access Group description.
	Description *string `pulumi:"description"`
	// A Name of one Access Group.
	Name *string `pulumi:"name"`
	// A Type of one Access Group. Valid values: `Vpc` and `Classic`.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a AccessGroup resource.
type AccessGroupArgs struct {
	// The Access Group description.
	Description pulumi.StringPtrInput
	// A Name of one Access Group.
	Name pulumi.StringPtrInput
	// A Type of one Access Group. Valid values: `Vpc` and `Classic`.
	Type pulumi.StringInput
}

func (AccessGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessGroupArgs)(nil)).Elem()
}
