// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package hbase

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type GetInstancesInstance struct {
	// the Backup Status of the instance.
	BackupStatus string `pulumi:"backupStatus"`
	// core node disk size, unit:GB.
	CoreDiskSize int `pulumi:"coreDiskSize"`
	// cloud_ssd or cloud_efficiency
	CoreDiskType string `pulumi:"coreDiskType"`
	// hbase.sn1.large, hbase.sn1.large, hbase.n1.2xlarge and so on.
	CoreInstanceType string `pulumi:"coreInstanceType"`
	// same with "coreInstanceQuantity"
	CoreNodeCount int    `pulumi:"coreNodeCount"`
	CreatedTime   string `pulumi:"createdTime"`
	// the switch of delete protection.
	DeletionProtection bool `pulumi:"deletionProtection"`
	// the engine of the instance.
	Engine string `pulumi:"engine"`
	// the engineVersion of the instance.
	EngineVersion string `pulumi:"engineVersion"`
	// the expire time of the instance.
	ExpireTime string `pulumi:"expireTime"`
	// The ID of the HBase instance.
	Id string `pulumi:"id"`
	// hbase.sn1.large, hbase.sn1.large, hbase.n1.2xlarge and so on.
	MasterInstanceType string `pulumi:"masterInstanceType"`
	// the node count of master
	MasterNodeCount int `pulumi:"masterNodeCount"`
	// The name of the HBase instance.
	Name string `pulumi:"name"`
	// Classic network or VPC.
	NetworkType string `pulumi:"networkType"`
	// Billing method. Value options are `PostPaid` for  Pay-As-You-Go and `PrePaid` for yearly or monthly subscription.
	PayType string `pulumi:"payType"`
	// Region ID the instance belongs to.
	RegionId string `pulumi:"regionId"`
	// Status of the instance.
	Status string `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// VPC ID the instance belongs to.
	VpcId string `pulumi:"vpcId"`
	// VSwitch ID the instance belongs to.
	VswitchId string `pulumi:"vswitchId"`
	// Zone ID the instance belongs to.
	ZoneId string `pulumi:"zoneId"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//          GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// the Backup Status of the instance.
	BackupStatus pulumi.StringInput `pulumi:"backupStatus"`
	// core node disk size, unit:GB.
	CoreDiskSize pulumi.IntInput `pulumi:"coreDiskSize"`
	// cloud_ssd or cloud_efficiency
	CoreDiskType pulumi.StringInput `pulumi:"coreDiskType"`
	// hbase.sn1.large, hbase.sn1.large, hbase.n1.2xlarge and so on.
	CoreInstanceType pulumi.StringInput `pulumi:"coreInstanceType"`
	// same with "coreInstanceQuantity"
	CoreNodeCount pulumi.IntInput    `pulumi:"coreNodeCount"`
	CreatedTime   pulumi.StringInput `pulumi:"createdTime"`
	// the switch of delete protection.
	DeletionProtection pulumi.BoolInput `pulumi:"deletionProtection"`
	// the engine of the instance.
	Engine pulumi.StringInput `pulumi:"engine"`
	// the engineVersion of the instance.
	EngineVersion pulumi.StringInput `pulumi:"engineVersion"`
	// the expire time of the instance.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// The ID of the HBase instance.
	Id pulumi.StringInput `pulumi:"id"`
	// hbase.sn1.large, hbase.sn1.large, hbase.n1.2xlarge and so on.
	MasterInstanceType pulumi.StringInput `pulumi:"masterInstanceType"`
	// the node count of master
	MasterNodeCount pulumi.IntInput `pulumi:"masterNodeCount"`
	// The name of the HBase instance.
	Name pulumi.StringInput `pulumi:"name"`
	// Classic network or VPC.
	NetworkType pulumi.StringInput `pulumi:"networkType"`
	// Billing method. Value options are `PostPaid` for  Pay-As-You-Go and `PrePaid` for yearly or monthly subscription.
	PayType pulumi.StringInput `pulumi:"payType"`
	// Region ID the instance belongs to.
	RegionId pulumi.StringInput `pulumi:"regionId"`
	// Status of the instance.
	Status pulumi.StringInput `pulumi:"status"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// VPC ID the instance belongs to.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// VSwitch ID the instance belongs to.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
	// Zone ID the instance belongs to.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//          GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// the Backup Status of the instance.
func (o GetInstancesInstanceOutput) BackupStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.BackupStatus }).(pulumi.StringOutput)
}

// core node disk size, unit:GB.
func (o GetInstancesInstanceOutput) CoreDiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.CoreDiskSize }).(pulumi.IntOutput)
}

// cloud_ssd or cloud_efficiency
func (o GetInstancesInstanceOutput) CoreDiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CoreDiskType }).(pulumi.StringOutput)
}

// hbase.sn1.large, hbase.sn1.large, hbase.n1.2xlarge and so on.
func (o GetInstancesInstanceOutput) CoreInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CoreInstanceType }).(pulumi.StringOutput)
}

// same with "coreInstanceQuantity"
func (o GetInstancesInstanceOutput) CoreNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.CoreNodeCount }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// the switch of delete protection.
func (o GetInstancesInstanceOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstance) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// the engine of the instance.
func (o GetInstancesInstanceOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Engine }).(pulumi.StringOutput)
}

// the engineVersion of the instance.
func (o GetInstancesInstanceOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// the expire time of the instance.
func (o GetInstancesInstanceOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// The ID of the HBase instance.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// hbase.sn1.large, hbase.sn1.large, hbase.n1.2xlarge and so on.
func (o GetInstancesInstanceOutput) MasterInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.MasterInstanceType }).(pulumi.StringOutput)
}

// the node count of master
func (o GetInstancesInstanceOutput) MasterNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstance) int { return v.MasterNodeCount }).(pulumi.IntOutput)
}

// The name of the HBase instance.
func (o GetInstancesInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Name }).(pulumi.StringOutput)
}

// Classic network or VPC.
func (o GetInstancesInstanceOutput) NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.NetworkType }).(pulumi.StringOutput)
}

// Billing method. Value options are `PostPaid` for  Pay-As-You-Go and `PrePaid` for yearly or monthly subscription.
func (o GetInstancesInstanceOutput) PayType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PayType }).(pulumi.StringOutput)
}

// Region ID the instance belongs to.
func (o GetInstancesInstanceOutput) RegionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.RegionId }).(pulumi.StringOutput)
}

// Status of the instance.
func (o GetInstancesInstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Status }).(pulumi.StringOutput)
}

// A mapping of tags to assign to the resource.
func (o GetInstancesInstanceOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetInstancesInstance) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// VPC ID the instance belongs to.
func (o GetInstancesInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VpcId }).(pulumi.StringOutput)
}

// VSwitch ID the instance belongs to.
func (o GetInstancesInstanceOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.VswitchId }).(pulumi.StringOutput)
}

// Zone ID the instance belongs to.
func (o GetInstancesInstanceOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetZonesZone struct {
	// ID of the zone.
	Id string `pulumi:"id"`
	// A list of zone ids in which the multi zone.
	MultiZoneIds []string `pulumi:"multiZoneIds"`
}

// GetZonesZoneInput is an input type that accepts GetZonesZoneArgs and GetZonesZoneOutput values.
// You can construct a concrete instance of `GetZonesZoneInput` via:
//
//          GetZonesZoneArgs{...}
type GetZonesZoneInput interface {
	pulumi.Input

	ToGetZonesZoneOutput() GetZonesZoneOutput
	ToGetZonesZoneOutputWithContext(context.Context) GetZonesZoneOutput
}

type GetZonesZoneArgs struct {
	// ID of the zone.
	Id pulumi.StringInput `pulumi:"id"`
	// A list of zone ids in which the multi zone.
	MultiZoneIds pulumi.StringArrayInput `pulumi:"multiZoneIds"`
}

func (GetZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return i.ToGetZonesZoneOutputWithContext(context.Background())
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneOutput)
}

// GetZonesZoneArrayInput is an input type that accepts GetZonesZoneArray and GetZonesZoneArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneArrayInput` via:
//
//          GetZonesZoneArray{ GetZonesZoneArgs{...} }
type GetZonesZoneArrayInput interface {
	pulumi.Input

	ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput
	ToGetZonesZoneArrayOutputWithContext(context.Context) GetZonesZoneArrayOutput
}

type GetZonesZoneArray []GetZonesZoneInput

func (GetZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return i.ToGetZonesZoneArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneArrayOutput)
}

type GetZonesZoneOutput struct{ *pulumi.OutputState }

func (GetZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return o
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return o
}

// ID of the zone.
func (o GetZonesZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Id }).(pulumi.StringOutput)
}

// A list of zone ids in which the multi zone.
func (o GetZonesZoneOutput) MultiZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetZonesZone) []string { return v.MultiZoneIds }).(pulumi.StringArrayOutput)
}

type GetZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) Index(i pulumi.IntInput) GetZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZone {
		return vs[0].([]GetZonesZone)[vs[1].(int)]
	}).(GetZonesZoneOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneOutput{})
	pulumi.RegisterOutputType(GetZonesZoneArrayOutput{})
}
