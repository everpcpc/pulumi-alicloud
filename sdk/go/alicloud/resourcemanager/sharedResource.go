// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package resourcemanager

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Resource Manager Shared Resource resource.
//
// For information about Resource Manager Shared Resource and how to use it, see [What is Shared Resource](https://www.alibabacloud.com/help/en/doc-detail/94475.htm).
//
// > **NOTE:** Available in v1.111.0+.
//
// ## Import
//
// Resource Manager Shared Resource can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:resourcemanager/sharedResource:SharedResource example <resource_share_id>:<resource_id>:<resource_type>
// ```
type SharedResource struct {
	pulumi.CustomResourceState

	// The resource ID need shared.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
	// The resource share ID of resource manager.
	ResourceShareId pulumi.StringOutput `pulumi:"resourceShareId"`
	// The resource type of should shared, valid value `VSwitch`.
	ResourceType pulumi.StringOutput `pulumi:"resourceType"`
	// status.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewSharedResource registers a new resource with the given unique name, arguments, and options.
func NewSharedResource(ctx *pulumi.Context,
	name string, args *SharedResourceArgs, opts ...pulumi.ResourceOption) (*SharedResource, error) {
	if args == nil || args.ResourceId == nil {
		return nil, errors.New("missing required argument 'ResourceId'")
	}
	if args == nil || args.ResourceShareId == nil {
		return nil, errors.New("missing required argument 'ResourceShareId'")
	}
	if args == nil || args.ResourceType == nil {
		return nil, errors.New("missing required argument 'ResourceType'")
	}
	if args == nil {
		args = &SharedResourceArgs{}
	}
	var resource SharedResource
	err := ctx.RegisterResource("alicloud:resourcemanager/sharedResource:SharedResource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSharedResource gets an existing SharedResource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSharedResource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SharedResourceState, opts ...pulumi.ResourceOption) (*SharedResource, error) {
	var resource SharedResource
	err := ctx.ReadResource("alicloud:resourcemanager/sharedResource:SharedResource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SharedResource resources.
type sharedResourceState struct {
	// The resource ID need shared.
	ResourceId *string `pulumi:"resourceId"`
	// The resource share ID of resource manager.
	ResourceShareId *string `pulumi:"resourceShareId"`
	// The resource type of should shared, valid value `VSwitch`.
	ResourceType *string `pulumi:"resourceType"`
	// status.
	Status *string `pulumi:"status"`
}

type SharedResourceState struct {
	// The resource ID need shared.
	ResourceId pulumi.StringPtrInput
	// The resource share ID of resource manager.
	ResourceShareId pulumi.StringPtrInput
	// The resource type of should shared, valid value `VSwitch`.
	ResourceType pulumi.StringPtrInput
	// status.
	Status pulumi.StringPtrInput
}

func (SharedResourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*sharedResourceState)(nil)).Elem()
}

type sharedResourceArgs struct {
	// The resource ID need shared.
	ResourceId string `pulumi:"resourceId"`
	// The resource share ID of resource manager.
	ResourceShareId string `pulumi:"resourceShareId"`
	// The resource type of should shared, valid value `VSwitch`.
	ResourceType string `pulumi:"resourceType"`
}

// The set of arguments for constructing a SharedResource resource.
type SharedResourceArgs struct {
	// The resource ID need shared.
	ResourceId pulumi.StringInput
	// The resource share ID of resource manager.
	ResourceShareId pulumi.StringInput
	// The resource type of should shared, valid value `VSwitch`.
	ResourceType pulumi.StringInput
}

func (SharedResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sharedResourceArgs)(nil)).Elem()
}

type SharedResourceInput interface {
	pulumi.Input

	ToSharedResourceOutput() SharedResourceOutput
	ToSharedResourceOutputWithContext(ctx context.Context) SharedResourceOutput
}

func (SharedResource) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedResource)(nil)).Elem()
}

func (i SharedResource) ToSharedResourceOutput() SharedResourceOutput {
	return i.ToSharedResourceOutputWithContext(context.Background())
}

func (i SharedResource) ToSharedResourceOutputWithContext(ctx context.Context) SharedResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SharedResourceOutput)
}

type SharedResourceOutput struct {
	*pulumi.OutputState
}

func (SharedResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SharedResourceOutput)(nil)).Elem()
}

func (o SharedResourceOutput) ToSharedResourceOutput() SharedResourceOutput {
	return o
}

func (o SharedResourceOutput) ToSharedResourceOutputWithContext(ctx context.Context) SharedResourceOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(SharedResourceOutput{})
}
