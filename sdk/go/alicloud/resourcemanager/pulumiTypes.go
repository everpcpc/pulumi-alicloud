// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package resourcemanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ResourceGroupRegionStatus struct {
	RegionId *string `pulumi:"regionId"`
	// The status of the resource group.
	Status *string `pulumi:"status"`
}

// ResourceGroupRegionStatusInput is an input type that accepts ResourceGroupRegionStatusArgs and ResourceGroupRegionStatusOutput values.
// You can construct a concrete instance of `ResourceGroupRegionStatusInput` via:
//
// 		 ResourceGroupRegionStatusArgs{...}
//
type ResourceGroupRegionStatusInput interface {
	pulumi.Input

	ToResourceGroupRegionStatusOutput() ResourceGroupRegionStatusOutput
	ToResourceGroupRegionStatusOutputWithContext(context.Context) ResourceGroupRegionStatusOutput
}

type ResourceGroupRegionStatusArgs struct {
	RegionId pulumi.StringPtrInput `pulumi:"regionId"`
	// The status of the resource group.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ResourceGroupRegionStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupRegionStatus)(nil)).Elem()
}

func (i ResourceGroupRegionStatusArgs) ToResourceGroupRegionStatusOutput() ResourceGroupRegionStatusOutput {
	return i.ToResourceGroupRegionStatusOutputWithContext(context.Background())
}

func (i ResourceGroupRegionStatusArgs) ToResourceGroupRegionStatusOutputWithContext(ctx context.Context) ResourceGroupRegionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupRegionStatusOutput)
}

// ResourceGroupRegionStatusArrayInput is an input type that accepts ResourceGroupRegionStatusArray and ResourceGroupRegionStatusArrayOutput values.
// You can construct a concrete instance of `ResourceGroupRegionStatusArrayInput` via:
//
// 		 ResourceGroupRegionStatusArray{ ResourceGroupRegionStatusArgs{...} }
//
type ResourceGroupRegionStatusArrayInput interface {
	pulumi.Input

	ToResourceGroupRegionStatusArrayOutput() ResourceGroupRegionStatusArrayOutput
	ToResourceGroupRegionStatusArrayOutputWithContext(context.Context) ResourceGroupRegionStatusArrayOutput
}

type ResourceGroupRegionStatusArray []ResourceGroupRegionStatusInput

func (ResourceGroupRegionStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupRegionStatus)(nil)).Elem()
}

func (i ResourceGroupRegionStatusArray) ToResourceGroupRegionStatusArrayOutput() ResourceGroupRegionStatusArrayOutput {
	return i.ToResourceGroupRegionStatusArrayOutputWithContext(context.Background())
}

func (i ResourceGroupRegionStatusArray) ToResourceGroupRegionStatusArrayOutputWithContext(ctx context.Context) ResourceGroupRegionStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupRegionStatusArrayOutput)
}

type ResourceGroupRegionStatusOutput struct{ *pulumi.OutputState }

func (ResourceGroupRegionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceGroupRegionStatus)(nil)).Elem()
}

func (o ResourceGroupRegionStatusOutput) ToResourceGroupRegionStatusOutput() ResourceGroupRegionStatusOutput {
	return o
}

func (o ResourceGroupRegionStatusOutput) ToResourceGroupRegionStatusOutputWithContext(ctx context.Context) ResourceGroupRegionStatusOutput {
	return o
}

func (o ResourceGroupRegionStatusOutput) RegionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupRegionStatus) *string { return v.RegionId }).(pulumi.StringPtrOutput)
}

// The status of the resource group.
func (o ResourceGroupRegionStatusOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceGroupRegionStatus) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ResourceGroupRegionStatusArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupRegionStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceGroupRegionStatus)(nil)).Elem()
}

func (o ResourceGroupRegionStatusArrayOutput) ToResourceGroupRegionStatusArrayOutput() ResourceGroupRegionStatusArrayOutput {
	return o
}

func (o ResourceGroupRegionStatusArrayOutput) ToResourceGroupRegionStatusArrayOutputWithContext(ctx context.Context) ResourceGroupRegionStatusArrayOutput {
	return o
}

func (o ResourceGroupRegionStatusArrayOutput) Index(i pulumi.IntInput) ResourceGroupRegionStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceGroupRegionStatus {
		return vs[0].([]ResourceGroupRegionStatus)[vs[1].(int)]
	}).(ResourceGroupRegionStatusOutput)
}

func init() {
	pulumi.RegisterOutputType(ResourceGroupRegionStatusOutput{})
	pulumi.RegisterOutputType(ResourceGroupRegionStatusArrayOutput{})
}
