// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eci

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type OpenApiImageCacheImageRegistryCredential struct {
	// The password of the Image Registry.
	Password *string `pulumi:"password"`
	// The address of Image Registry without `http://` or `https://`.
	Server *string `pulumi:"server"`
	// The user name of Image Registry.
	UserName *string `pulumi:"userName"`
}

// OpenApiImageCacheImageRegistryCredentialInput is an input type that accepts OpenApiImageCacheImageRegistryCredentialArgs and OpenApiImageCacheImageRegistryCredentialOutput values.
// You can construct a concrete instance of `OpenApiImageCacheImageRegistryCredentialInput` via:
//
// 		 OpenApiImageCacheImageRegistryCredentialArgs{...}
//
type OpenApiImageCacheImageRegistryCredentialInput interface {
	pulumi.Input

	ToOpenApiImageCacheImageRegistryCredentialOutput() OpenApiImageCacheImageRegistryCredentialOutput
	ToOpenApiImageCacheImageRegistryCredentialOutputWithContext(context.Context) OpenApiImageCacheImageRegistryCredentialOutput
}

type OpenApiImageCacheImageRegistryCredentialArgs struct {
	// The password of the Image Registry.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The address of Image Registry without `http://` or `https://`.
	Server pulumi.StringPtrInput `pulumi:"server"`
	// The user name of Image Registry.
	UserName pulumi.StringPtrInput `pulumi:"userName"`
}

func (OpenApiImageCacheImageRegistryCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenApiImageCacheImageRegistryCredential)(nil)).Elem()
}

func (i OpenApiImageCacheImageRegistryCredentialArgs) ToOpenApiImageCacheImageRegistryCredentialOutput() OpenApiImageCacheImageRegistryCredentialOutput {
	return i.ToOpenApiImageCacheImageRegistryCredentialOutputWithContext(context.Background())
}

func (i OpenApiImageCacheImageRegistryCredentialArgs) ToOpenApiImageCacheImageRegistryCredentialOutputWithContext(ctx context.Context) OpenApiImageCacheImageRegistryCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenApiImageCacheImageRegistryCredentialOutput)
}

// OpenApiImageCacheImageRegistryCredentialArrayInput is an input type that accepts OpenApiImageCacheImageRegistryCredentialArray and OpenApiImageCacheImageRegistryCredentialArrayOutput values.
// You can construct a concrete instance of `OpenApiImageCacheImageRegistryCredentialArrayInput` via:
//
// 		 OpenApiImageCacheImageRegistryCredentialArray{ OpenApiImageCacheImageRegistryCredentialArgs{...} }
//
type OpenApiImageCacheImageRegistryCredentialArrayInput interface {
	pulumi.Input

	ToOpenApiImageCacheImageRegistryCredentialArrayOutput() OpenApiImageCacheImageRegistryCredentialArrayOutput
	ToOpenApiImageCacheImageRegistryCredentialArrayOutputWithContext(context.Context) OpenApiImageCacheImageRegistryCredentialArrayOutput
}

type OpenApiImageCacheImageRegistryCredentialArray []OpenApiImageCacheImageRegistryCredentialInput

func (OpenApiImageCacheImageRegistryCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenApiImageCacheImageRegistryCredential)(nil)).Elem()
}

func (i OpenApiImageCacheImageRegistryCredentialArray) ToOpenApiImageCacheImageRegistryCredentialArrayOutput() OpenApiImageCacheImageRegistryCredentialArrayOutput {
	return i.ToOpenApiImageCacheImageRegistryCredentialArrayOutputWithContext(context.Background())
}

func (i OpenApiImageCacheImageRegistryCredentialArray) ToOpenApiImageCacheImageRegistryCredentialArrayOutputWithContext(ctx context.Context) OpenApiImageCacheImageRegistryCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenApiImageCacheImageRegistryCredentialArrayOutput)
}

type OpenApiImageCacheImageRegistryCredentialOutput struct{ *pulumi.OutputState }

func (OpenApiImageCacheImageRegistryCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenApiImageCacheImageRegistryCredential)(nil)).Elem()
}

func (o OpenApiImageCacheImageRegistryCredentialOutput) ToOpenApiImageCacheImageRegistryCredentialOutput() OpenApiImageCacheImageRegistryCredentialOutput {
	return o
}

func (o OpenApiImageCacheImageRegistryCredentialOutput) ToOpenApiImageCacheImageRegistryCredentialOutputWithContext(ctx context.Context) OpenApiImageCacheImageRegistryCredentialOutput {
	return o
}

// The password of the Image Registry.
func (o OpenApiImageCacheImageRegistryCredentialOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenApiImageCacheImageRegistryCredential) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The address of Image Registry without `http://` or `https://`.
func (o OpenApiImageCacheImageRegistryCredentialOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenApiImageCacheImageRegistryCredential) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// The user name of Image Registry.
func (o OpenApiImageCacheImageRegistryCredentialOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenApiImageCacheImageRegistryCredential) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type OpenApiImageCacheImageRegistryCredentialArrayOutput struct{ *pulumi.OutputState }

func (OpenApiImageCacheImageRegistryCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenApiImageCacheImageRegistryCredential)(nil)).Elem()
}

func (o OpenApiImageCacheImageRegistryCredentialArrayOutput) ToOpenApiImageCacheImageRegistryCredentialArrayOutput() OpenApiImageCacheImageRegistryCredentialArrayOutput {
	return o
}

func (o OpenApiImageCacheImageRegistryCredentialArrayOutput) ToOpenApiImageCacheImageRegistryCredentialArrayOutputWithContext(ctx context.Context) OpenApiImageCacheImageRegistryCredentialArrayOutput {
	return o
}

func (o OpenApiImageCacheImageRegistryCredentialArrayOutput) Index(i pulumi.IntInput) OpenApiImageCacheImageRegistryCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenApiImageCacheImageRegistryCredential {
		return vs[0].([]OpenApiImageCacheImageRegistryCredential)[vs[1].(int)]
	}).(OpenApiImageCacheImageRegistryCredentialOutput)
}

func init() {
	pulumi.RegisterOutputType(OpenApiImageCacheImageRegistryCredentialOutput{})
	pulumi.RegisterOutputType(OpenApiImageCacheImageRegistryCredentialArrayOutput{})
}
