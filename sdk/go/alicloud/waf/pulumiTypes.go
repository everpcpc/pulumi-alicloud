// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DomainLogHeader struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// DomainLogHeaderInput is an input type that accepts DomainLogHeaderArgs and DomainLogHeaderOutput values.
// You can construct a concrete instance of `DomainLogHeaderInput` via:
//
// 		 DomainLogHeaderArgs{...}
//
type DomainLogHeaderInput interface {
	pulumi.Input

	ToDomainLogHeaderOutput() DomainLogHeaderOutput
	ToDomainLogHeaderOutputWithContext(context.Context) DomainLogHeaderOutput
}

type DomainLogHeaderArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DomainLogHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainLogHeader)(nil)).Elem()
}

func (i DomainLogHeaderArgs) ToDomainLogHeaderOutput() DomainLogHeaderOutput {
	return i.ToDomainLogHeaderOutputWithContext(context.Background())
}

func (i DomainLogHeaderArgs) ToDomainLogHeaderOutputWithContext(ctx context.Context) DomainLogHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainLogHeaderOutput)
}

// DomainLogHeaderArrayInput is an input type that accepts DomainLogHeaderArray and DomainLogHeaderArrayOutput values.
// You can construct a concrete instance of `DomainLogHeaderArrayInput` via:
//
// 		 DomainLogHeaderArray{ DomainLogHeaderArgs{...} }
//
type DomainLogHeaderArrayInput interface {
	pulumi.Input

	ToDomainLogHeaderArrayOutput() DomainLogHeaderArrayOutput
	ToDomainLogHeaderArrayOutputWithContext(context.Context) DomainLogHeaderArrayOutput
}

type DomainLogHeaderArray []DomainLogHeaderInput

func (DomainLogHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainLogHeader)(nil)).Elem()
}

func (i DomainLogHeaderArray) ToDomainLogHeaderArrayOutput() DomainLogHeaderArrayOutput {
	return i.ToDomainLogHeaderArrayOutputWithContext(context.Background())
}

func (i DomainLogHeaderArray) ToDomainLogHeaderArrayOutputWithContext(ctx context.Context) DomainLogHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainLogHeaderArrayOutput)
}

type DomainLogHeaderOutput struct{ *pulumi.OutputState }

func (DomainLogHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainLogHeader)(nil)).Elem()
}

func (o DomainLogHeaderOutput) ToDomainLogHeaderOutput() DomainLogHeaderOutput {
	return o
}

func (o DomainLogHeaderOutput) ToDomainLogHeaderOutputWithContext(ctx context.Context) DomainLogHeaderOutput {
	return o
}

func (o DomainLogHeaderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainLogHeader) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o DomainLogHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainLogHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DomainLogHeaderArrayOutput struct{ *pulumi.OutputState }

func (DomainLogHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainLogHeader)(nil)).Elem()
}

func (o DomainLogHeaderArrayOutput) ToDomainLogHeaderArrayOutput() DomainLogHeaderArrayOutput {
	return o
}

func (o DomainLogHeaderArrayOutput) ToDomainLogHeaderArrayOutputWithContext(ctx context.Context) DomainLogHeaderArrayOutput {
	return o
}

func (o DomainLogHeaderArrayOutput) Index(i pulumi.IntInput) DomainLogHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainLogHeader {
		return vs[0].([]DomainLogHeader)[vs[1].(int)]
	}).(DomainLogHeaderOutput)
}

func init() {
	pulumi.RegisterOutputType(DomainLogHeaderOutput{})
	pulumi.RegisterOutputType(DomainLogHeaderArrayOutput{})
}
