// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dts

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a DTS Synchronization Job resource.
//
// For information about DTS Synchronization Job and how to use it, see [What is Synchronization Job](https://www.alibabacloud.com/product/data-transmission-service).
//
// > **NOTE:** Available in v1.138.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/dts"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		defaultSynchronizationInstance, err := dts.NewSynchronizationInstance(ctx, "defaultSynchronizationInstance", &dts.SynchronizationInstanceArgs{
// 			PaymentType:                   pulumi.String("PayAsYouGo"),
// 			SourceEndpointEngineName:      pulumi.String("PolarDB"),
// 			SourceEndpointRegion:          pulumi.String("cn-hangzhou"),
// 			DestinationEndpointEngineName: pulumi.String("ADB30"),
// 			DestinationEndpointRegion:     pulumi.String("cn-hangzhou"),
// 			InstanceClass:                 pulumi.String("small"),
// 			SyncArchitecture:              pulumi.String("oneway"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = dts.NewSynchronizationJob(ctx, "defaultSynchronizationJob", &dts.SynchronizationJobArgs{
// 			DtsInstanceId:                   defaultSynchronizationInstance.ID(),
// 			DtsJobName:                      pulumi.String("tf-testAccCase1"),
// 			SourceEndpointInstanceType:      pulumi.String("PolarDB"),
// 			SourceEndpointInstanceId:        pulumi.String("pc-xxxxxxxx"),
// 			SourceEndpointEngineName:        pulumi.String("PolarDB"),
// 			SourceEndpointRegion:            pulumi.String("cn-hangzhou"),
// 			SourceEndpointDatabaseName:      pulumi.String("tf-testacc"),
// 			SourceEndpointUserName:          pulumi.String("root"),
// 			SourceEndpointPassword:          pulumi.String("password"),
// 			DestinationEndpointInstanceType: pulumi.String("ads"),
// 			DestinationEndpointInstanceId:   pulumi.String("am-xxxxxxxx"),
// 			DestinationEndpointEngineName:   pulumi.String("ADB30"),
// 			DestinationEndpointRegion:       pulumi.String("cn-hangzhou"),
// 			DestinationEndpointDatabaseName: pulumi.String("tf-testacc"),
// 			DestinationEndpointUserName:     pulumi.String("root"),
// 			DestinationEndpointPassword:     pulumi.String("password"),
// 			DbList:                          pulumi.String("{\"tf-testacc\":{\"name\":\"tf-test\",\"all\":true,\"state\":\"normal\"}}"),
// 			StructureInitialization:         pulumi.Bool(true),
// 			DataInitialization:              pulumi.Bool(true),
// 			DataSynchronization:             pulumi.Bool(true),
// 			Status:                          pulumi.String("Synchronizing"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ## Notice
//
// 1. The expiration time cannot be changed after the work of the annual and monthly subscription suspended;
// 2. After the pay-as-you-go type job suspended, your job configuration fee will still be charged;
// 3. If the task suspended for more than 6 hours, the task will not start successfully.
// 4. Suspending the task will only stop writing to the target library, but will still continue to obtain the incremental log of the source, so that the task can be quickly resumed after the suspension is cancelled. Therefore, some resources of the source library, such as bandwidth resources, will continue to be occupied during the period.
// 5. Charges will continue during the task suspension period. If you need to stop charging, please release the instance
// 6. When a DTS instance suspended for more than 7 days, the instance cannot be resumed, and the status will change from suspended to failed.
//
// ## Import
//
// DTS Synchronization Job can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:dts/synchronizationJob:SynchronizationJob example <id>
// ```
type SynchronizationJob struct {
	pulumi.CustomResourceState

	// Start time in Unix timestamp format.
	Checkpoint pulumi.StringOutput `pulumi:"checkpoint"`
	// Whether or not to execute DTS supports schema migration, full data migration, or full-data initialization values include:
	DataInitialization pulumi.BoolOutput `pulumi:"dataInitialization"`
	// Whether to perform incremental data migration for migration types or synchronization values include:
	DataSynchronization pulumi.BoolOutput `pulumi:"dataSynchronization"`
	// Migration object, in the format of JSON strings. For detailed definition instructions, please refer to [the description of migration, synchronization or subscription objects](https://help.aliyun.com/document_detail/209545.html).
	DbList pulumi.StringOutput `pulumi:"dbList"`
	// The delay notice. Valid values: `true`, `false`.
	DelayNotice pulumi.BoolPtrOutput `pulumi:"delayNotice"`
	// The delay phone. The mobile phone number of the contact who delayed the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	DelayPhone pulumi.StringPtrOutput `pulumi:"delayPhone"`
	// The delay rule time. When `delayNotice` is set to `true`, this parameter must be passed in. The threshold for triggering the delay alarm. The unit is second and needs to be an integer. The threshold can be set according to business needs. It is recommended to set it above 10 seconds to avoid delay fluctuations caused by network and database load.
	DelayRuleTime                   pulumi.StringPtrOutput `pulumi:"delayRuleTime"`
	DestinationEndpointDatabaseName pulumi.StringPtrOutput `pulumi:"destinationEndpointDatabaseName"`
	// The type of destination database. Valid values: `ADB20`, `ADB30`, `AS400`, `DATAHUB`, `DB2`, `GREENPLUM`, `KAFKA`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `PostgreSQL`.
	DestinationEndpointEngineName pulumi.StringOutput `pulumi:"destinationEndpointEngineName"`
	// The ID of destination instance.
	DestinationEndpointInstanceId pulumi.StringPtrOutput `pulumi:"destinationEndpointInstanceId"`
	// The type of destination instance. Valid values: `ads`, `CEN`, `DATAHUB`, `DG`, `ECS`, `EXPRESS`, `GREENPLUM`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
	DestinationEndpointInstanceType pulumi.StringOutput `pulumi:"destinationEndpointInstanceType"`
	// The ip of source endpoint.
	DestinationEndpointIp pulumi.StringPtrOutput `pulumi:"destinationEndpointIp"`
	// The SID of Oracle database.
	DestinationEndpointOracleSid pulumi.StringPtrOutput `pulumi:"destinationEndpointOracleSid"`
	// The password of database account.
	DestinationEndpointPassword pulumi.StringPtrOutput `pulumi:"destinationEndpointPassword"`
	// The port of source endpoint.
	DestinationEndpointPort pulumi.StringPtrOutput `pulumi:"destinationEndpointPort"`
	// The region of destination instance.
	DestinationEndpointRegion pulumi.StringPtrOutput `pulumi:"destinationEndpointRegion"`
	// The username of database account.
	DestinationEndpointUserName pulumi.StringPtrOutput `pulumi:"destinationEndpointUserName"`
	// Synchronizing instance ID. The ID of `dts.SynchronizationInstance`.
	DtsInstanceId pulumi.StringOutput `pulumi:"dtsInstanceId"`
	// The name of synchronization job.
	DtsJobName pulumi.StringOutput `pulumi:"dtsJobName"`
	// The error notice. Valid values: `true`, `false`.
	ErrorNotice pulumi.BoolPtrOutput `pulumi:"errorNotice"`
	// The error phone. The mobile phone number of the contact who error the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	ErrorPhone pulumi.StringPtrOutput `pulumi:"errorPhone"`
	// The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`, `xxlarge`. You can only upgrade the configuration, not downgrade the configuration. If you downgrade the instance, you need to [submit a ticket](https://selfservice.console.aliyun.com/ticket/category/dts/today).
	InstanceClass pulumi.StringOutput `pulumi:"instanceClass"`
	// DTS reserves parameters, the format is a JSON string, you can pass in this parameter to complete the source and target database information (such as the data storage format of the target Kafka database, the instance ID of the cloud enterprise network CEN). For more information, please refer to the parameter [description of the Reserve parameter](https://help.aliyun.com/document_detail/273111.html).
	Reserve pulumi.StringPtrOutput `pulumi:"reserve"`
	// The name of migrate the database.
	SourceEndpointDatabaseName pulumi.StringPtrOutput `pulumi:"sourceEndpointDatabaseName"`
	// The type of source database. Valid values: `AS400`, `DB2`, `DMSPOLARDB`, `HBASE`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `POSTGRESQL`, `TERADATA`.
	SourceEndpointEngineName pulumi.StringOutput `pulumi:"sourceEndpointEngineName"`
	// The ID of source instance.
	SourceEndpointInstanceId pulumi.StringPtrOutput `pulumi:"sourceEndpointInstanceId"`
	// The type of source instance. Valid values: `CEN`, `DG`, `DISTRIBUTED_DMSLOGICDB`, `ECS`, `EXPRESS`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
	SourceEndpointInstanceType pulumi.StringOutput `pulumi:"sourceEndpointInstanceType"`
	// The ip of source endpoint.
	SourceEndpointIp pulumi.StringPtrOutput `pulumi:"sourceEndpointIp"`
	// The SID of Oracle database.
	SourceEndpointOracleSid pulumi.StringPtrOutput `pulumi:"sourceEndpointOracleSid"`
	// The Alibaba Cloud account ID to which the source instance belongs.
	SourceEndpointOwnerId pulumi.StringPtrOutput `pulumi:"sourceEndpointOwnerId"`
	// The password of database account.
	SourceEndpointPassword pulumi.StringPtrOutput `pulumi:"sourceEndpointPassword"`
	// The port of source endpoint.
	SourceEndpointPort pulumi.StringPtrOutput `pulumi:"sourceEndpointPort"`
	// The region of source instance.
	SourceEndpointRegion pulumi.StringPtrOutput `pulumi:"sourceEndpointRegion"`
	// The name of the role configured for the cloud account to which the source instance belongs.
	SourceEndpointRole pulumi.StringPtrOutput `pulumi:"sourceEndpointRole"`
	// The username of database account.
	SourceEndpointUserName pulumi.StringPtrOutput `pulumi:"sourceEndpointUserName"`
	// The status of the resource. Valid values: `Synchronizing`, `Suspending`. You can stop the task by specifying `Suspending` and start the task by specifying `Synchronizing`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Whether to perform a database table structure to migrate or initialization values include:
	StructureInitialization pulumi.BoolOutput `pulumi:"structureInitialization"`
	// Synchronization direction. Valid values: `Forward`, `Reverse`. Only when the property `syncArchitecture` of the `dts.SynchronizationInstance` was `bidirectional` this parameter should be passed, otherwise this parameter should not be specified.
	SynchronizationDirection pulumi.StringOutput `pulumi:"synchronizationDirection"`
}

// NewSynchronizationJob registers a new resource with the given unique name, arguments, and options.
func NewSynchronizationJob(ctx *pulumi.Context,
	name string, args *SynchronizationJobArgs, opts ...pulumi.ResourceOption) (*SynchronizationJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DataInitialization == nil {
		return nil, errors.New("invalid value for required argument 'DataInitialization'")
	}
	if args.DataSynchronization == nil {
		return nil, errors.New("invalid value for required argument 'DataSynchronization'")
	}
	if args.DbList == nil {
		return nil, errors.New("invalid value for required argument 'DbList'")
	}
	if args.DestinationEndpointEngineName == nil {
		return nil, errors.New("invalid value for required argument 'DestinationEndpointEngineName'")
	}
	if args.DestinationEndpointInstanceType == nil {
		return nil, errors.New("invalid value for required argument 'DestinationEndpointInstanceType'")
	}
	if args.DtsInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'DtsInstanceId'")
	}
	if args.SourceEndpointEngineName == nil {
		return nil, errors.New("invalid value for required argument 'SourceEndpointEngineName'")
	}
	if args.SourceEndpointInstanceType == nil {
		return nil, errors.New("invalid value for required argument 'SourceEndpointInstanceType'")
	}
	if args.StructureInitialization == nil {
		return nil, errors.New("invalid value for required argument 'StructureInitialization'")
	}
	var resource SynchronizationJob
	err := ctx.RegisterResource("alicloud:dts/synchronizationJob:SynchronizationJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSynchronizationJob gets an existing SynchronizationJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSynchronizationJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SynchronizationJobState, opts ...pulumi.ResourceOption) (*SynchronizationJob, error) {
	var resource SynchronizationJob
	err := ctx.ReadResource("alicloud:dts/synchronizationJob:SynchronizationJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SynchronizationJob resources.
type synchronizationJobState struct {
	// Start time in Unix timestamp format.
	Checkpoint *string `pulumi:"checkpoint"`
	// Whether or not to execute DTS supports schema migration, full data migration, or full-data initialization values include:
	DataInitialization *bool `pulumi:"dataInitialization"`
	// Whether to perform incremental data migration for migration types or synchronization values include:
	DataSynchronization *bool `pulumi:"dataSynchronization"`
	// Migration object, in the format of JSON strings. For detailed definition instructions, please refer to [the description of migration, synchronization or subscription objects](https://help.aliyun.com/document_detail/209545.html).
	DbList *string `pulumi:"dbList"`
	// The delay notice. Valid values: `true`, `false`.
	DelayNotice *bool `pulumi:"delayNotice"`
	// The delay phone. The mobile phone number of the contact who delayed the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	DelayPhone *string `pulumi:"delayPhone"`
	// The delay rule time. When `delayNotice` is set to `true`, this parameter must be passed in. The threshold for triggering the delay alarm. The unit is second and needs to be an integer. The threshold can be set according to business needs. It is recommended to set it above 10 seconds to avoid delay fluctuations caused by network and database load.
	DelayRuleTime                   *string `pulumi:"delayRuleTime"`
	DestinationEndpointDatabaseName *string `pulumi:"destinationEndpointDatabaseName"`
	// The type of destination database. Valid values: `ADB20`, `ADB30`, `AS400`, `DATAHUB`, `DB2`, `GREENPLUM`, `KAFKA`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `PostgreSQL`.
	DestinationEndpointEngineName *string `pulumi:"destinationEndpointEngineName"`
	// The ID of destination instance.
	DestinationEndpointInstanceId *string `pulumi:"destinationEndpointInstanceId"`
	// The type of destination instance. Valid values: `ads`, `CEN`, `DATAHUB`, `DG`, `ECS`, `EXPRESS`, `GREENPLUM`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
	DestinationEndpointInstanceType *string `pulumi:"destinationEndpointInstanceType"`
	// The ip of source endpoint.
	DestinationEndpointIp *string `pulumi:"destinationEndpointIp"`
	// The SID of Oracle database.
	DestinationEndpointOracleSid *string `pulumi:"destinationEndpointOracleSid"`
	// The password of database account.
	DestinationEndpointPassword *string `pulumi:"destinationEndpointPassword"`
	// The port of source endpoint.
	DestinationEndpointPort *string `pulumi:"destinationEndpointPort"`
	// The region of destination instance.
	DestinationEndpointRegion *string `pulumi:"destinationEndpointRegion"`
	// The username of database account.
	DestinationEndpointUserName *string `pulumi:"destinationEndpointUserName"`
	// Synchronizing instance ID. The ID of `dts.SynchronizationInstance`.
	DtsInstanceId *string `pulumi:"dtsInstanceId"`
	// The name of synchronization job.
	DtsJobName *string `pulumi:"dtsJobName"`
	// The error notice. Valid values: `true`, `false`.
	ErrorNotice *bool `pulumi:"errorNotice"`
	// The error phone. The mobile phone number of the contact who error the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	ErrorPhone *string `pulumi:"errorPhone"`
	// The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`, `xxlarge`. You can only upgrade the configuration, not downgrade the configuration. If you downgrade the instance, you need to [submit a ticket](https://selfservice.console.aliyun.com/ticket/category/dts/today).
	InstanceClass *string `pulumi:"instanceClass"`
	// DTS reserves parameters, the format is a JSON string, you can pass in this parameter to complete the source and target database information (such as the data storage format of the target Kafka database, the instance ID of the cloud enterprise network CEN). For more information, please refer to the parameter [description of the Reserve parameter](https://help.aliyun.com/document_detail/273111.html).
	Reserve *string `pulumi:"reserve"`
	// The name of migrate the database.
	SourceEndpointDatabaseName *string `pulumi:"sourceEndpointDatabaseName"`
	// The type of source database. Valid values: `AS400`, `DB2`, `DMSPOLARDB`, `HBASE`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `POSTGRESQL`, `TERADATA`.
	SourceEndpointEngineName *string `pulumi:"sourceEndpointEngineName"`
	// The ID of source instance.
	SourceEndpointInstanceId *string `pulumi:"sourceEndpointInstanceId"`
	// The type of source instance. Valid values: `CEN`, `DG`, `DISTRIBUTED_DMSLOGICDB`, `ECS`, `EXPRESS`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
	SourceEndpointInstanceType *string `pulumi:"sourceEndpointInstanceType"`
	// The ip of source endpoint.
	SourceEndpointIp *string `pulumi:"sourceEndpointIp"`
	// The SID of Oracle database.
	SourceEndpointOracleSid *string `pulumi:"sourceEndpointOracleSid"`
	// The Alibaba Cloud account ID to which the source instance belongs.
	SourceEndpointOwnerId *string `pulumi:"sourceEndpointOwnerId"`
	// The password of database account.
	SourceEndpointPassword *string `pulumi:"sourceEndpointPassword"`
	// The port of source endpoint.
	SourceEndpointPort *string `pulumi:"sourceEndpointPort"`
	// The region of source instance.
	SourceEndpointRegion *string `pulumi:"sourceEndpointRegion"`
	// The name of the role configured for the cloud account to which the source instance belongs.
	SourceEndpointRole *string `pulumi:"sourceEndpointRole"`
	// The username of database account.
	SourceEndpointUserName *string `pulumi:"sourceEndpointUserName"`
	// The status of the resource. Valid values: `Synchronizing`, `Suspending`. You can stop the task by specifying `Suspending` and start the task by specifying `Synchronizing`.
	Status *string `pulumi:"status"`
	// Whether to perform a database table structure to migrate or initialization values include:
	StructureInitialization *bool `pulumi:"structureInitialization"`
	// Synchronization direction. Valid values: `Forward`, `Reverse`. Only when the property `syncArchitecture` of the `dts.SynchronizationInstance` was `bidirectional` this parameter should be passed, otherwise this parameter should not be specified.
	SynchronizationDirection *string `pulumi:"synchronizationDirection"`
}

type SynchronizationJobState struct {
	// Start time in Unix timestamp format.
	Checkpoint pulumi.StringPtrInput
	// Whether or not to execute DTS supports schema migration, full data migration, or full-data initialization values include:
	DataInitialization pulumi.BoolPtrInput
	// Whether to perform incremental data migration for migration types or synchronization values include:
	DataSynchronization pulumi.BoolPtrInput
	// Migration object, in the format of JSON strings. For detailed definition instructions, please refer to [the description of migration, synchronization or subscription objects](https://help.aliyun.com/document_detail/209545.html).
	DbList pulumi.StringPtrInput
	// The delay notice. Valid values: `true`, `false`.
	DelayNotice pulumi.BoolPtrInput
	// The delay phone. The mobile phone number of the contact who delayed the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	DelayPhone pulumi.StringPtrInput
	// The delay rule time. When `delayNotice` is set to `true`, this parameter must be passed in. The threshold for triggering the delay alarm. The unit is second and needs to be an integer. The threshold can be set according to business needs. It is recommended to set it above 10 seconds to avoid delay fluctuations caused by network and database load.
	DelayRuleTime                   pulumi.StringPtrInput
	DestinationEndpointDatabaseName pulumi.StringPtrInput
	// The type of destination database. Valid values: `ADB20`, `ADB30`, `AS400`, `DATAHUB`, `DB2`, `GREENPLUM`, `KAFKA`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `PostgreSQL`.
	DestinationEndpointEngineName pulumi.StringPtrInput
	// The ID of destination instance.
	DestinationEndpointInstanceId pulumi.StringPtrInput
	// The type of destination instance. Valid values: `ads`, `CEN`, `DATAHUB`, `DG`, `ECS`, `EXPRESS`, `GREENPLUM`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
	DestinationEndpointInstanceType pulumi.StringPtrInput
	// The ip of source endpoint.
	DestinationEndpointIp pulumi.StringPtrInput
	// The SID of Oracle database.
	DestinationEndpointOracleSid pulumi.StringPtrInput
	// The password of database account.
	DestinationEndpointPassword pulumi.StringPtrInput
	// The port of source endpoint.
	DestinationEndpointPort pulumi.StringPtrInput
	// The region of destination instance.
	DestinationEndpointRegion pulumi.StringPtrInput
	// The username of database account.
	DestinationEndpointUserName pulumi.StringPtrInput
	// Synchronizing instance ID. The ID of `dts.SynchronizationInstance`.
	DtsInstanceId pulumi.StringPtrInput
	// The name of synchronization job.
	DtsJobName pulumi.StringPtrInput
	// The error notice. Valid values: `true`, `false`.
	ErrorNotice pulumi.BoolPtrInput
	// The error phone. The mobile phone number of the contact who error the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	ErrorPhone pulumi.StringPtrInput
	// The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`, `xxlarge`. You can only upgrade the configuration, not downgrade the configuration. If you downgrade the instance, you need to [submit a ticket](https://selfservice.console.aliyun.com/ticket/category/dts/today).
	InstanceClass pulumi.StringPtrInput
	// DTS reserves parameters, the format is a JSON string, you can pass in this parameter to complete the source and target database information (such as the data storage format of the target Kafka database, the instance ID of the cloud enterprise network CEN). For more information, please refer to the parameter [description of the Reserve parameter](https://help.aliyun.com/document_detail/273111.html).
	Reserve pulumi.StringPtrInput
	// The name of migrate the database.
	SourceEndpointDatabaseName pulumi.StringPtrInput
	// The type of source database. Valid values: `AS400`, `DB2`, `DMSPOLARDB`, `HBASE`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `POSTGRESQL`, `TERADATA`.
	SourceEndpointEngineName pulumi.StringPtrInput
	// The ID of source instance.
	SourceEndpointInstanceId pulumi.StringPtrInput
	// The type of source instance. Valid values: `CEN`, `DG`, `DISTRIBUTED_DMSLOGICDB`, `ECS`, `EXPRESS`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
	SourceEndpointInstanceType pulumi.StringPtrInput
	// The ip of source endpoint.
	SourceEndpointIp pulumi.StringPtrInput
	// The SID of Oracle database.
	SourceEndpointOracleSid pulumi.StringPtrInput
	// The Alibaba Cloud account ID to which the source instance belongs.
	SourceEndpointOwnerId pulumi.StringPtrInput
	// The password of database account.
	SourceEndpointPassword pulumi.StringPtrInput
	// The port of source endpoint.
	SourceEndpointPort pulumi.StringPtrInput
	// The region of source instance.
	SourceEndpointRegion pulumi.StringPtrInput
	// The name of the role configured for the cloud account to which the source instance belongs.
	SourceEndpointRole pulumi.StringPtrInput
	// The username of database account.
	SourceEndpointUserName pulumi.StringPtrInput
	// The status of the resource. Valid values: `Synchronizing`, `Suspending`. You can stop the task by specifying `Suspending` and start the task by specifying `Synchronizing`.
	Status pulumi.StringPtrInput
	// Whether to perform a database table structure to migrate or initialization values include:
	StructureInitialization pulumi.BoolPtrInput
	// Synchronization direction. Valid values: `Forward`, `Reverse`. Only when the property `syncArchitecture` of the `dts.SynchronizationInstance` was `bidirectional` this parameter should be passed, otherwise this parameter should not be specified.
	SynchronizationDirection pulumi.StringPtrInput
}

func (SynchronizationJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*synchronizationJobState)(nil)).Elem()
}

type synchronizationJobArgs struct {
	// Start time in Unix timestamp format.
	Checkpoint *string `pulumi:"checkpoint"`
	// Whether or not to execute DTS supports schema migration, full data migration, or full-data initialization values include:
	DataInitialization bool `pulumi:"dataInitialization"`
	// Whether to perform incremental data migration for migration types or synchronization values include:
	DataSynchronization bool `pulumi:"dataSynchronization"`
	// Migration object, in the format of JSON strings. For detailed definition instructions, please refer to [the description of migration, synchronization or subscription objects](https://help.aliyun.com/document_detail/209545.html).
	DbList string `pulumi:"dbList"`
	// The delay notice. Valid values: `true`, `false`.
	DelayNotice *bool `pulumi:"delayNotice"`
	// The delay phone. The mobile phone number of the contact who delayed the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	DelayPhone *string `pulumi:"delayPhone"`
	// The delay rule time. When `delayNotice` is set to `true`, this parameter must be passed in. The threshold for triggering the delay alarm. The unit is second and needs to be an integer. The threshold can be set according to business needs. It is recommended to set it above 10 seconds to avoid delay fluctuations caused by network and database load.
	DelayRuleTime                   *string `pulumi:"delayRuleTime"`
	DestinationEndpointDatabaseName *string `pulumi:"destinationEndpointDatabaseName"`
	// The type of destination database. Valid values: `ADB20`, `ADB30`, `AS400`, `DATAHUB`, `DB2`, `GREENPLUM`, `KAFKA`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `PostgreSQL`.
	DestinationEndpointEngineName string `pulumi:"destinationEndpointEngineName"`
	// The ID of destination instance.
	DestinationEndpointInstanceId *string `pulumi:"destinationEndpointInstanceId"`
	// The type of destination instance. Valid values: `ads`, `CEN`, `DATAHUB`, `DG`, `ECS`, `EXPRESS`, `GREENPLUM`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
	DestinationEndpointInstanceType string `pulumi:"destinationEndpointInstanceType"`
	// The ip of source endpoint.
	DestinationEndpointIp *string `pulumi:"destinationEndpointIp"`
	// The SID of Oracle database.
	DestinationEndpointOracleSid *string `pulumi:"destinationEndpointOracleSid"`
	// The password of database account.
	DestinationEndpointPassword *string `pulumi:"destinationEndpointPassword"`
	// The port of source endpoint.
	DestinationEndpointPort *string `pulumi:"destinationEndpointPort"`
	// The region of destination instance.
	DestinationEndpointRegion *string `pulumi:"destinationEndpointRegion"`
	// The username of database account.
	DestinationEndpointUserName *string `pulumi:"destinationEndpointUserName"`
	// Synchronizing instance ID. The ID of `dts.SynchronizationInstance`.
	DtsInstanceId string `pulumi:"dtsInstanceId"`
	// The name of synchronization job.
	DtsJobName *string `pulumi:"dtsJobName"`
	// The error notice. Valid values: `true`, `false`.
	ErrorNotice *bool `pulumi:"errorNotice"`
	// The error phone. The mobile phone number of the contact who error the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	ErrorPhone *string `pulumi:"errorPhone"`
	// The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`, `xxlarge`. You can only upgrade the configuration, not downgrade the configuration. If you downgrade the instance, you need to [submit a ticket](https://selfservice.console.aliyun.com/ticket/category/dts/today).
	InstanceClass *string `pulumi:"instanceClass"`
	// DTS reserves parameters, the format is a JSON string, you can pass in this parameter to complete the source and target database information (such as the data storage format of the target Kafka database, the instance ID of the cloud enterprise network CEN). For more information, please refer to the parameter [description of the Reserve parameter](https://help.aliyun.com/document_detail/273111.html).
	Reserve *string `pulumi:"reserve"`
	// The name of migrate the database.
	SourceEndpointDatabaseName *string `pulumi:"sourceEndpointDatabaseName"`
	// The type of source database. Valid values: `AS400`, `DB2`, `DMSPOLARDB`, `HBASE`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `POSTGRESQL`, `TERADATA`.
	SourceEndpointEngineName string `pulumi:"sourceEndpointEngineName"`
	// The ID of source instance.
	SourceEndpointInstanceId *string `pulumi:"sourceEndpointInstanceId"`
	// The type of source instance. Valid values: `CEN`, `DG`, `DISTRIBUTED_DMSLOGICDB`, `ECS`, `EXPRESS`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
	SourceEndpointInstanceType string `pulumi:"sourceEndpointInstanceType"`
	// The ip of source endpoint.
	SourceEndpointIp *string `pulumi:"sourceEndpointIp"`
	// The SID of Oracle database.
	SourceEndpointOracleSid *string `pulumi:"sourceEndpointOracleSid"`
	// The Alibaba Cloud account ID to which the source instance belongs.
	SourceEndpointOwnerId *string `pulumi:"sourceEndpointOwnerId"`
	// The password of database account.
	SourceEndpointPassword *string `pulumi:"sourceEndpointPassword"`
	// The port of source endpoint.
	SourceEndpointPort *string `pulumi:"sourceEndpointPort"`
	// The region of source instance.
	SourceEndpointRegion *string `pulumi:"sourceEndpointRegion"`
	// The name of the role configured for the cloud account to which the source instance belongs.
	SourceEndpointRole *string `pulumi:"sourceEndpointRole"`
	// The username of database account.
	SourceEndpointUserName *string `pulumi:"sourceEndpointUserName"`
	// The status of the resource. Valid values: `Synchronizing`, `Suspending`. You can stop the task by specifying `Suspending` and start the task by specifying `Synchronizing`.
	Status *string `pulumi:"status"`
	// Whether to perform a database table structure to migrate or initialization values include:
	StructureInitialization bool `pulumi:"structureInitialization"`
	// Synchronization direction. Valid values: `Forward`, `Reverse`. Only when the property `syncArchitecture` of the `dts.SynchronizationInstance` was `bidirectional` this parameter should be passed, otherwise this parameter should not be specified.
	SynchronizationDirection *string `pulumi:"synchronizationDirection"`
}

// The set of arguments for constructing a SynchronizationJob resource.
type SynchronizationJobArgs struct {
	// Start time in Unix timestamp format.
	Checkpoint pulumi.StringPtrInput
	// Whether or not to execute DTS supports schema migration, full data migration, or full-data initialization values include:
	DataInitialization pulumi.BoolInput
	// Whether to perform incremental data migration for migration types or synchronization values include:
	DataSynchronization pulumi.BoolInput
	// Migration object, in the format of JSON strings. For detailed definition instructions, please refer to [the description of migration, synchronization or subscription objects](https://help.aliyun.com/document_detail/209545.html).
	DbList pulumi.StringInput
	// The delay notice. Valid values: `true`, `false`.
	DelayNotice pulumi.BoolPtrInput
	// The delay phone. The mobile phone number of the contact who delayed the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	DelayPhone pulumi.StringPtrInput
	// The delay rule time. When `delayNotice` is set to `true`, this parameter must be passed in. The threshold for triggering the delay alarm. The unit is second and needs to be an integer. The threshold can be set according to business needs. It is recommended to set it above 10 seconds to avoid delay fluctuations caused by network and database load.
	DelayRuleTime                   pulumi.StringPtrInput
	DestinationEndpointDatabaseName pulumi.StringPtrInput
	// The type of destination database. Valid values: `ADB20`, `ADB30`, `AS400`, `DATAHUB`, `DB2`, `GREENPLUM`, `KAFKA`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `PostgreSQL`.
	DestinationEndpointEngineName pulumi.StringInput
	// The ID of destination instance.
	DestinationEndpointInstanceId pulumi.StringPtrInput
	// The type of destination instance. Valid values: `ads`, `CEN`, `DATAHUB`, `DG`, `ECS`, `EXPRESS`, `GREENPLUM`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
	DestinationEndpointInstanceType pulumi.StringInput
	// The ip of source endpoint.
	DestinationEndpointIp pulumi.StringPtrInput
	// The SID of Oracle database.
	DestinationEndpointOracleSid pulumi.StringPtrInput
	// The password of database account.
	DestinationEndpointPassword pulumi.StringPtrInput
	// The port of source endpoint.
	DestinationEndpointPort pulumi.StringPtrInput
	// The region of destination instance.
	DestinationEndpointRegion pulumi.StringPtrInput
	// The username of database account.
	DestinationEndpointUserName pulumi.StringPtrInput
	// Synchronizing instance ID. The ID of `dts.SynchronizationInstance`.
	DtsInstanceId pulumi.StringInput
	// The name of synchronization job.
	DtsJobName pulumi.StringPtrInput
	// The error notice. Valid values: `true`, `false`.
	ErrorNotice pulumi.BoolPtrInput
	// The error phone. The mobile phone number of the contact who error the alarm. Multiple mobile phone numbers separated by English commas `,`. This parameter currently only supports China stations, and only supports mainland mobile phone numbers, and up to 10 mobile phone numbers can be passed in.
	ErrorPhone pulumi.StringPtrInput
	// The instance class. Valid values: `large`, `medium`, `micro`, `small`, `xlarge`, `xxlarge`. You can only upgrade the configuration, not downgrade the configuration. If you downgrade the instance, you need to [submit a ticket](https://selfservice.console.aliyun.com/ticket/category/dts/today).
	InstanceClass pulumi.StringPtrInput
	// DTS reserves parameters, the format is a JSON string, you can pass in this parameter to complete the source and target database information (such as the data storage format of the target Kafka database, the instance ID of the cloud enterprise network CEN). For more information, please refer to the parameter [description of the Reserve parameter](https://help.aliyun.com/document_detail/273111.html).
	Reserve pulumi.StringPtrInput
	// The name of migrate the database.
	SourceEndpointDatabaseName pulumi.StringPtrInput
	// The type of source database. Valid values: `AS400`, `DB2`, `DMSPOLARDB`, `HBASE`, `MONGODB`, `MSSQL`, `MySQL`, `ORACLE`, `PolarDB`, `POLARDBX20`, `POLARDB_O`, `POSTGRESQL`, `TERADATA`.
	SourceEndpointEngineName pulumi.StringInput
	// The ID of source instance.
	SourceEndpointInstanceId pulumi.StringPtrInput
	// The type of source instance. Valid values: `CEN`, `DG`, `DISTRIBUTED_DMSLOGICDB`, `ECS`, `EXPRESS`, `MONGODB`, `OTHER`, `PolarDB`, `POLARDBX20`, `RDS`.
	SourceEndpointInstanceType pulumi.StringInput
	// The ip of source endpoint.
	SourceEndpointIp pulumi.StringPtrInput
	// The SID of Oracle database.
	SourceEndpointOracleSid pulumi.StringPtrInput
	// The Alibaba Cloud account ID to which the source instance belongs.
	SourceEndpointOwnerId pulumi.StringPtrInput
	// The password of database account.
	SourceEndpointPassword pulumi.StringPtrInput
	// The port of source endpoint.
	SourceEndpointPort pulumi.StringPtrInput
	// The region of source instance.
	SourceEndpointRegion pulumi.StringPtrInput
	// The name of the role configured for the cloud account to which the source instance belongs.
	SourceEndpointRole pulumi.StringPtrInput
	// The username of database account.
	SourceEndpointUserName pulumi.StringPtrInput
	// The status of the resource. Valid values: `Synchronizing`, `Suspending`. You can stop the task by specifying `Suspending` and start the task by specifying `Synchronizing`.
	Status pulumi.StringPtrInput
	// Whether to perform a database table structure to migrate or initialization values include:
	StructureInitialization pulumi.BoolInput
	// Synchronization direction. Valid values: `Forward`, `Reverse`. Only when the property `syncArchitecture` of the `dts.SynchronizationInstance` was `bidirectional` this parameter should be passed, otherwise this parameter should not be specified.
	SynchronizationDirection pulumi.StringPtrInput
}

func (SynchronizationJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*synchronizationJobArgs)(nil)).Elem()
}

type SynchronizationJobInput interface {
	pulumi.Input

	ToSynchronizationJobOutput() SynchronizationJobOutput
	ToSynchronizationJobOutputWithContext(ctx context.Context) SynchronizationJobOutput
}

func (*SynchronizationJob) ElementType() reflect.Type {
	return reflect.TypeOf((*SynchronizationJob)(nil))
}

func (i *SynchronizationJob) ToSynchronizationJobOutput() SynchronizationJobOutput {
	return i.ToSynchronizationJobOutputWithContext(context.Background())
}

func (i *SynchronizationJob) ToSynchronizationJobOutputWithContext(ctx context.Context) SynchronizationJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SynchronizationJobOutput)
}

func (i *SynchronizationJob) ToSynchronizationJobPtrOutput() SynchronizationJobPtrOutput {
	return i.ToSynchronizationJobPtrOutputWithContext(context.Background())
}

func (i *SynchronizationJob) ToSynchronizationJobPtrOutputWithContext(ctx context.Context) SynchronizationJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SynchronizationJobPtrOutput)
}

type SynchronizationJobPtrInput interface {
	pulumi.Input

	ToSynchronizationJobPtrOutput() SynchronizationJobPtrOutput
	ToSynchronizationJobPtrOutputWithContext(ctx context.Context) SynchronizationJobPtrOutput
}

type synchronizationJobPtrType SynchronizationJobArgs

func (*synchronizationJobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SynchronizationJob)(nil))
}

func (i *synchronizationJobPtrType) ToSynchronizationJobPtrOutput() SynchronizationJobPtrOutput {
	return i.ToSynchronizationJobPtrOutputWithContext(context.Background())
}

func (i *synchronizationJobPtrType) ToSynchronizationJobPtrOutputWithContext(ctx context.Context) SynchronizationJobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SynchronizationJobPtrOutput)
}

// SynchronizationJobArrayInput is an input type that accepts SynchronizationJobArray and SynchronizationJobArrayOutput values.
// You can construct a concrete instance of `SynchronizationJobArrayInput` via:
//
//          SynchronizationJobArray{ SynchronizationJobArgs{...} }
type SynchronizationJobArrayInput interface {
	pulumi.Input

	ToSynchronizationJobArrayOutput() SynchronizationJobArrayOutput
	ToSynchronizationJobArrayOutputWithContext(context.Context) SynchronizationJobArrayOutput
}

type SynchronizationJobArray []SynchronizationJobInput

func (SynchronizationJobArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*SynchronizationJob)(nil))
}

func (i SynchronizationJobArray) ToSynchronizationJobArrayOutput() SynchronizationJobArrayOutput {
	return i.ToSynchronizationJobArrayOutputWithContext(context.Background())
}

func (i SynchronizationJobArray) ToSynchronizationJobArrayOutputWithContext(ctx context.Context) SynchronizationJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SynchronizationJobArrayOutput)
}

// SynchronizationJobMapInput is an input type that accepts SynchronizationJobMap and SynchronizationJobMapOutput values.
// You can construct a concrete instance of `SynchronizationJobMapInput` via:
//
//          SynchronizationJobMap{ "key": SynchronizationJobArgs{...} }
type SynchronizationJobMapInput interface {
	pulumi.Input

	ToSynchronizationJobMapOutput() SynchronizationJobMapOutput
	ToSynchronizationJobMapOutputWithContext(context.Context) SynchronizationJobMapOutput
}

type SynchronizationJobMap map[string]SynchronizationJobInput

func (SynchronizationJobMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*SynchronizationJob)(nil))
}

func (i SynchronizationJobMap) ToSynchronizationJobMapOutput() SynchronizationJobMapOutput {
	return i.ToSynchronizationJobMapOutputWithContext(context.Background())
}

func (i SynchronizationJobMap) ToSynchronizationJobMapOutputWithContext(ctx context.Context) SynchronizationJobMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SynchronizationJobMapOutput)
}

type SynchronizationJobOutput struct {
	*pulumi.OutputState
}

func (SynchronizationJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SynchronizationJob)(nil))
}

func (o SynchronizationJobOutput) ToSynchronizationJobOutput() SynchronizationJobOutput {
	return o
}

func (o SynchronizationJobOutput) ToSynchronizationJobOutputWithContext(ctx context.Context) SynchronizationJobOutput {
	return o
}

func (o SynchronizationJobOutput) ToSynchronizationJobPtrOutput() SynchronizationJobPtrOutput {
	return o.ToSynchronizationJobPtrOutputWithContext(context.Background())
}

func (o SynchronizationJobOutput) ToSynchronizationJobPtrOutputWithContext(ctx context.Context) SynchronizationJobPtrOutput {
	return o.ApplyT(func(v SynchronizationJob) *SynchronizationJob {
		return &v
	}).(SynchronizationJobPtrOutput)
}

type SynchronizationJobPtrOutput struct {
	*pulumi.OutputState
}

func (SynchronizationJobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SynchronizationJob)(nil))
}

func (o SynchronizationJobPtrOutput) ToSynchronizationJobPtrOutput() SynchronizationJobPtrOutput {
	return o
}

func (o SynchronizationJobPtrOutput) ToSynchronizationJobPtrOutputWithContext(ctx context.Context) SynchronizationJobPtrOutput {
	return o
}

type SynchronizationJobArrayOutput struct{ *pulumi.OutputState }

func (SynchronizationJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SynchronizationJob)(nil))
}

func (o SynchronizationJobArrayOutput) ToSynchronizationJobArrayOutput() SynchronizationJobArrayOutput {
	return o
}

func (o SynchronizationJobArrayOutput) ToSynchronizationJobArrayOutputWithContext(ctx context.Context) SynchronizationJobArrayOutput {
	return o
}

func (o SynchronizationJobArrayOutput) Index(i pulumi.IntInput) SynchronizationJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SynchronizationJob {
		return vs[0].([]SynchronizationJob)[vs[1].(int)]
	}).(SynchronizationJobOutput)
}

type SynchronizationJobMapOutput struct{ *pulumi.OutputState }

func (SynchronizationJobMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]SynchronizationJob)(nil))
}

func (o SynchronizationJobMapOutput) ToSynchronizationJobMapOutput() SynchronizationJobMapOutput {
	return o
}

func (o SynchronizationJobMapOutput) ToSynchronizationJobMapOutputWithContext(ctx context.Context) SynchronizationJobMapOutput {
	return o
}

func (o SynchronizationJobMapOutput) MapIndex(k pulumi.StringInput) SynchronizationJobOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) SynchronizationJob {
		return vs[0].(map[string]SynchronizationJob)[vs[1].(string)]
	}).(SynchronizationJobOutput)
}

func init() {
	pulumi.RegisterOutputType(SynchronizationJobOutput{})
	pulumi.RegisterOutputType(SynchronizationJobPtrOutput{})
	pulumi.RegisterOutputType(SynchronizationJobArrayOutput{})
	pulumi.RegisterOutputType(SynchronizationJobMapOutput{})
}
