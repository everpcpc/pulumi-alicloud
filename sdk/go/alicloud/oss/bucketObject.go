// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package oss

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a resource to put a object(content or file) to a oss bucket.
type BucketObject struct {
	s *pulumi.ResourceState
}

// NewBucketObject registers a new resource with the given unique name, arguments, and options.
func NewBucketObject(ctx *pulumi.Context,
	name string, args *BucketObjectArgs, opts ...pulumi.ResourceOpt) (*BucketObject, error) {
	if args == nil || args.Bucket == nil {
		return nil, errors.New("missing required argument 'Bucket'")
	}
	if args == nil || args.Key == nil {
		return nil, errors.New("missing required argument 'Key'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["acl"] = nil
		inputs["bucket"] = nil
		inputs["cacheControl"] = nil
		inputs["content"] = nil
		inputs["contentDisposition"] = nil
		inputs["contentEncoding"] = nil
		inputs["contentMd5"] = nil
		inputs["contentType"] = nil
		inputs["expires"] = nil
		inputs["key"] = nil
		inputs["serverSideEncryption"] = nil
		inputs["source"] = nil
	} else {
		inputs["acl"] = args.Acl
		inputs["bucket"] = args.Bucket
		inputs["cacheControl"] = args.CacheControl
		inputs["content"] = args.Content
		inputs["contentDisposition"] = args.ContentDisposition
		inputs["contentEncoding"] = args.ContentEncoding
		inputs["contentMd5"] = args.ContentMd5
		inputs["contentType"] = args.ContentType
		inputs["expires"] = args.Expires
		inputs["key"] = args.Key
		inputs["serverSideEncryption"] = args.ServerSideEncryption
		inputs["source"] = args.Source
	}
	inputs["contentLength"] = nil
	inputs["etag"] = nil
	s, err := ctx.RegisterResource("alicloud:oss/bucketObject:BucketObject", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &BucketObject{s: s}, nil
}

// GetBucketObject gets an existing BucketObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketObject(ctx *pulumi.Context,
	name string, id pulumi.ID, state *BucketObjectState, opts ...pulumi.ResourceOpt) (*BucketObject, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["acl"] = state.Acl
		inputs["bucket"] = state.Bucket
		inputs["cacheControl"] = state.CacheControl
		inputs["content"] = state.Content
		inputs["contentDisposition"] = state.ContentDisposition
		inputs["contentEncoding"] = state.ContentEncoding
		inputs["contentLength"] = state.ContentLength
		inputs["contentMd5"] = state.ContentMd5
		inputs["contentType"] = state.ContentType
		inputs["etag"] = state.Etag
		inputs["expires"] = state.Expires
		inputs["key"] = state.Key
		inputs["serverSideEncryption"] = state.ServerSideEncryption
		inputs["source"] = state.Source
	}
	s, err := ctx.ReadResource("alicloud:oss/bucketObject:BucketObject", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &BucketObject{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *BucketObject) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *BucketObject) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The [canned ACL](https://www.alibabacloud.com/help/doc-detail/52284.htm) to apply. Defaults to "private".
func (r *BucketObject) Acl() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["acl"])
}

// The name of the bucket to put the file in.
func (r *BucketObject) Bucket() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["bucket"])
}

// Specifies caching behavior along the request/reply chain. Read [RFC2616 Cache-Control](https://www.ietf.org/rfc/rfc2616.txt) for further details.
func (r *BucketObject) CacheControl() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["cacheControl"])
}

// The literal content being uploaded to the bucket.
func (r *BucketObject) Content() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["content"])
}

// Specifies presentational information for the object. Read [RFC2616 Content-Disposition](https://www.ietf.org/rfc/rfc2616.txt) for further details.
func (r *BucketObject) ContentDisposition() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["contentDisposition"])
}

// Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read [RFC2616 Content-Encoding](https://www.ietf.org/rfc/rfc2616.txt) for further details.
func (r *BucketObject) ContentEncoding() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["contentEncoding"])
}

// the content length of request.
func (r *BucketObject) ContentLength() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["contentLength"])
}

// The MD5 value of the content. Read [MD5](https://www.alibabacloud.com/help/doc-detail/31978.htm) for computing method.
func (r *BucketObject) ContentMd5() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["contentMd5"])
}

// A standard MIME type describing the format of the object data, e.g. application/octet-stream. All Valid MIME Types are valid for this input.
func (r *BucketObject) ContentType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["contentType"])
}

// the ETag generated for the object (an MD5 sum of the object content).
func (r *BucketObject) Etag() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["etag"])
}

// Specifies expire date for the the request/response. Read [RFC2616 Expires](https://www.ietf.org/rfc/rfc2616.txt) for further details.
func (r *BucketObject) Expires() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["expires"])
}

// The name of the object once it is in the bucket.
func (r *BucketObject) Key() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["key"])
}

// Specifies server-side encryption of the object in OSS. At present, it valid value is "`AES256`".
func (r *BucketObject) ServerSideEncryption() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["serverSideEncryption"])
}

// The path to the source file being uploaded to the bucket.
func (r *BucketObject) Source() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["source"])
}

// Input properties used for looking up and filtering BucketObject resources.
type BucketObjectState struct {
	// The [canned ACL](https://www.alibabacloud.com/help/doc-detail/52284.htm) to apply. Defaults to "private".
	Acl interface{}
	// The name of the bucket to put the file in.
	Bucket interface{}
	// Specifies caching behavior along the request/reply chain. Read [RFC2616 Cache-Control](https://www.ietf.org/rfc/rfc2616.txt) for further details.
	CacheControl interface{}
	// The literal content being uploaded to the bucket.
	Content interface{}
	// Specifies presentational information for the object. Read [RFC2616 Content-Disposition](https://www.ietf.org/rfc/rfc2616.txt) for further details.
	ContentDisposition interface{}
	// Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read [RFC2616 Content-Encoding](https://www.ietf.org/rfc/rfc2616.txt) for further details.
	ContentEncoding interface{}
	// the content length of request.
	ContentLength interface{}
	// The MD5 value of the content. Read [MD5](https://www.alibabacloud.com/help/doc-detail/31978.htm) for computing method.
	ContentMd5 interface{}
	// A standard MIME type describing the format of the object data, e.g. application/octet-stream. All Valid MIME Types are valid for this input.
	ContentType interface{}
	// the ETag generated for the object (an MD5 sum of the object content).
	Etag interface{}
	// Specifies expire date for the the request/response. Read [RFC2616 Expires](https://www.ietf.org/rfc/rfc2616.txt) for further details.
	Expires interface{}
	// The name of the object once it is in the bucket.
	Key interface{}
	// Specifies server-side encryption of the object in OSS. At present, it valid value is "`AES256`".
	ServerSideEncryption interface{}
	// The path to the source file being uploaded to the bucket.
	Source interface{}
}

// The set of arguments for constructing a BucketObject resource.
type BucketObjectArgs struct {
	// The [canned ACL](https://www.alibabacloud.com/help/doc-detail/52284.htm) to apply. Defaults to "private".
	Acl interface{}
	// The name of the bucket to put the file in.
	Bucket interface{}
	// Specifies caching behavior along the request/reply chain. Read [RFC2616 Cache-Control](https://www.ietf.org/rfc/rfc2616.txt) for further details.
	CacheControl interface{}
	// The literal content being uploaded to the bucket.
	Content interface{}
	// Specifies presentational information for the object. Read [RFC2616 Content-Disposition](https://www.ietf.org/rfc/rfc2616.txt) for further details.
	ContentDisposition interface{}
	// Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read [RFC2616 Content-Encoding](https://www.ietf.org/rfc/rfc2616.txt) for further details.
	ContentEncoding interface{}
	// The MD5 value of the content. Read [MD5](https://www.alibabacloud.com/help/doc-detail/31978.htm) for computing method.
	ContentMd5 interface{}
	// A standard MIME type describing the format of the object data, e.g. application/octet-stream. All Valid MIME Types are valid for this input.
	ContentType interface{}
	// Specifies expire date for the the request/response. Read [RFC2616 Expires](https://www.ietf.org/rfc/rfc2616.txt) for further details.
	Expires interface{}
	// The name of the object once it is in the bucket.
	Key interface{}
	// Specifies server-side encryption of the object in OSS. At present, it valid value is "`AES256`".
	ServerSideEncryption interface{}
	// The path to the source file being uploaded to the bucket.
	Source interface{}
}
