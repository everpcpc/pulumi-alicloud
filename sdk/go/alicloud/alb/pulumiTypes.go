// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package alb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LoadBalancerAccessLogConfig struct {
	// The log service that access logs are shipped to.
	LogProject *string `pulumi:"logProject"`
	// The log service that access logs are shipped to.
	LogStore *string `pulumi:"logStore"`
}

// LoadBalancerAccessLogConfigInput is an input type that accepts LoadBalancerAccessLogConfigArgs and LoadBalancerAccessLogConfigOutput values.
// You can construct a concrete instance of `LoadBalancerAccessLogConfigInput` via:
//
//          LoadBalancerAccessLogConfigArgs{...}
type LoadBalancerAccessLogConfigInput interface {
	pulumi.Input

	ToLoadBalancerAccessLogConfigOutput() LoadBalancerAccessLogConfigOutput
	ToLoadBalancerAccessLogConfigOutputWithContext(context.Context) LoadBalancerAccessLogConfigOutput
}

type LoadBalancerAccessLogConfigArgs struct {
	// The log service that access logs are shipped to.
	LogProject pulumi.StringPtrInput `pulumi:"logProject"`
	// The log service that access logs are shipped to.
	LogStore pulumi.StringPtrInput `pulumi:"logStore"`
}

func (LoadBalancerAccessLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAccessLogConfig)(nil)).Elem()
}

func (i LoadBalancerAccessLogConfigArgs) ToLoadBalancerAccessLogConfigOutput() LoadBalancerAccessLogConfigOutput {
	return i.ToLoadBalancerAccessLogConfigOutputWithContext(context.Background())
}

func (i LoadBalancerAccessLogConfigArgs) ToLoadBalancerAccessLogConfigOutputWithContext(ctx context.Context) LoadBalancerAccessLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAccessLogConfigOutput)
}

func (i LoadBalancerAccessLogConfigArgs) ToLoadBalancerAccessLogConfigPtrOutput() LoadBalancerAccessLogConfigPtrOutput {
	return i.ToLoadBalancerAccessLogConfigPtrOutputWithContext(context.Background())
}

func (i LoadBalancerAccessLogConfigArgs) ToLoadBalancerAccessLogConfigPtrOutputWithContext(ctx context.Context) LoadBalancerAccessLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAccessLogConfigOutput).ToLoadBalancerAccessLogConfigPtrOutputWithContext(ctx)
}

// LoadBalancerAccessLogConfigPtrInput is an input type that accepts LoadBalancerAccessLogConfigArgs, LoadBalancerAccessLogConfigPtr and LoadBalancerAccessLogConfigPtrOutput values.
// You can construct a concrete instance of `LoadBalancerAccessLogConfigPtrInput` via:
//
//          LoadBalancerAccessLogConfigArgs{...}
//
//  or:
//
//          nil
type LoadBalancerAccessLogConfigPtrInput interface {
	pulumi.Input

	ToLoadBalancerAccessLogConfigPtrOutput() LoadBalancerAccessLogConfigPtrOutput
	ToLoadBalancerAccessLogConfigPtrOutputWithContext(context.Context) LoadBalancerAccessLogConfigPtrOutput
}

type loadBalancerAccessLogConfigPtrType LoadBalancerAccessLogConfigArgs

func LoadBalancerAccessLogConfigPtr(v *LoadBalancerAccessLogConfigArgs) LoadBalancerAccessLogConfigPtrInput {
	return (*loadBalancerAccessLogConfigPtrType)(v)
}

func (*loadBalancerAccessLogConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerAccessLogConfig)(nil)).Elem()
}

func (i *loadBalancerAccessLogConfigPtrType) ToLoadBalancerAccessLogConfigPtrOutput() LoadBalancerAccessLogConfigPtrOutput {
	return i.ToLoadBalancerAccessLogConfigPtrOutputWithContext(context.Background())
}

func (i *loadBalancerAccessLogConfigPtrType) ToLoadBalancerAccessLogConfigPtrOutputWithContext(ctx context.Context) LoadBalancerAccessLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAccessLogConfigPtrOutput)
}

type LoadBalancerAccessLogConfigOutput struct{ *pulumi.OutputState }

func (LoadBalancerAccessLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAccessLogConfig)(nil)).Elem()
}

func (o LoadBalancerAccessLogConfigOutput) ToLoadBalancerAccessLogConfigOutput() LoadBalancerAccessLogConfigOutput {
	return o
}

func (o LoadBalancerAccessLogConfigOutput) ToLoadBalancerAccessLogConfigOutputWithContext(ctx context.Context) LoadBalancerAccessLogConfigOutput {
	return o
}

func (o LoadBalancerAccessLogConfigOutput) ToLoadBalancerAccessLogConfigPtrOutput() LoadBalancerAccessLogConfigPtrOutput {
	return o.ToLoadBalancerAccessLogConfigPtrOutputWithContext(context.Background())
}

func (o LoadBalancerAccessLogConfigOutput) ToLoadBalancerAccessLogConfigPtrOutputWithContext(ctx context.Context) LoadBalancerAccessLogConfigPtrOutput {
	return o.ApplyT(func(v LoadBalancerAccessLogConfig) *LoadBalancerAccessLogConfig {
		return &v
	}).(LoadBalancerAccessLogConfigPtrOutput)
}

// The log service that access logs are shipped to.
func (o LoadBalancerAccessLogConfigOutput) LogProject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAccessLogConfig) *string { return v.LogProject }).(pulumi.StringPtrOutput)
}

// The log service that access logs are shipped to.
func (o LoadBalancerAccessLogConfigOutput) LogStore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAccessLogConfig) *string { return v.LogStore }).(pulumi.StringPtrOutput)
}

type LoadBalancerAccessLogConfigPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerAccessLogConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerAccessLogConfig)(nil)).Elem()
}

func (o LoadBalancerAccessLogConfigPtrOutput) ToLoadBalancerAccessLogConfigPtrOutput() LoadBalancerAccessLogConfigPtrOutput {
	return o
}

func (o LoadBalancerAccessLogConfigPtrOutput) ToLoadBalancerAccessLogConfigPtrOutputWithContext(ctx context.Context) LoadBalancerAccessLogConfigPtrOutput {
	return o
}

func (o LoadBalancerAccessLogConfigPtrOutput) Elem() LoadBalancerAccessLogConfigOutput {
	return o.ApplyT(func(v *LoadBalancerAccessLogConfig) LoadBalancerAccessLogConfig { return *v }).(LoadBalancerAccessLogConfigOutput)
}

// The log service that access logs are shipped to.
func (o LoadBalancerAccessLogConfigPtrOutput) LogProject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerAccessLogConfig) *string {
		if v == nil {
			return nil
		}
		return v.LogProject
	}).(pulumi.StringPtrOutput)
}

// The log service that access logs are shipped to.
func (o LoadBalancerAccessLogConfigPtrOutput) LogStore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerAccessLogConfig) *string {
		if v == nil {
			return nil
		}
		return v.LogStore
	}).(pulumi.StringPtrOutput)
}

type LoadBalancerLoadBalancerBillingConfig struct {
	// The billing method of the ALB instance. Valid value: `PayAsYouGo`.
	PayType string `pulumi:"payType"`
}

// LoadBalancerLoadBalancerBillingConfigInput is an input type that accepts LoadBalancerLoadBalancerBillingConfigArgs and LoadBalancerLoadBalancerBillingConfigOutput values.
// You can construct a concrete instance of `LoadBalancerLoadBalancerBillingConfigInput` via:
//
//          LoadBalancerLoadBalancerBillingConfigArgs{...}
type LoadBalancerLoadBalancerBillingConfigInput interface {
	pulumi.Input

	ToLoadBalancerLoadBalancerBillingConfigOutput() LoadBalancerLoadBalancerBillingConfigOutput
	ToLoadBalancerLoadBalancerBillingConfigOutputWithContext(context.Context) LoadBalancerLoadBalancerBillingConfigOutput
}

type LoadBalancerLoadBalancerBillingConfigArgs struct {
	// The billing method of the ALB instance. Valid value: `PayAsYouGo`.
	PayType pulumi.StringInput `pulumi:"payType"`
}

func (LoadBalancerLoadBalancerBillingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerLoadBalancerBillingConfig)(nil)).Elem()
}

func (i LoadBalancerLoadBalancerBillingConfigArgs) ToLoadBalancerLoadBalancerBillingConfigOutput() LoadBalancerLoadBalancerBillingConfigOutput {
	return i.ToLoadBalancerLoadBalancerBillingConfigOutputWithContext(context.Background())
}

func (i LoadBalancerLoadBalancerBillingConfigArgs) ToLoadBalancerLoadBalancerBillingConfigOutputWithContext(ctx context.Context) LoadBalancerLoadBalancerBillingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerLoadBalancerBillingConfigOutput)
}

func (i LoadBalancerLoadBalancerBillingConfigArgs) ToLoadBalancerLoadBalancerBillingConfigPtrOutput() LoadBalancerLoadBalancerBillingConfigPtrOutput {
	return i.ToLoadBalancerLoadBalancerBillingConfigPtrOutputWithContext(context.Background())
}

func (i LoadBalancerLoadBalancerBillingConfigArgs) ToLoadBalancerLoadBalancerBillingConfigPtrOutputWithContext(ctx context.Context) LoadBalancerLoadBalancerBillingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerLoadBalancerBillingConfigOutput).ToLoadBalancerLoadBalancerBillingConfigPtrOutputWithContext(ctx)
}

// LoadBalancerLoadBalancerBillingConfigPtrInput is an input type that accepts LoadBalancerLoadBalancerBillingConfigArgs, LoadBalancerLoadBalancerBillingConfigPtr and LoadBalancerLoadBalancerBillingConfigPtrOutput values.
// You can construct a concrete instance of `LoadBalancerLoadBalancerBillingConfigPtrInput` via:
//
//          LoadBalancerLoadBalancerBillingConfigArgs{...}
//
//  or:
//
//          nil
type LoadBalancerLoadBalancerBillingConfigPtrInput interface {
	pulumi.Input

	ToLoadBalancerLoadBalancerBillingConfigPtrOutput() LoadBalancerLoadBalancerBillingConfigPtrOutput
	ToLoadBalancerLoadBalancerBillingConfigPtrOutputWithContext(context.Context) LoadBalancerLoadBalancerBillingConfigPtrOutput
}

type loadBalancerLoadBalancerBillingConfigPtrType LoadBalancerLoadBalancerBillingConfigArgs

func LoadBalancerLoadBalancerBillingConfigPtr(v *LoadBalancerLoadBalancerBillingConfigArgs) LoadBalancerLoadBalancerBillingConfigPtrInput {
	return (*loadBalancerLoadBalancerBillingConfigPtrType)(v)
}

func (*loadBalancerLoadBalancerBillingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerLoadBalancerBillingConfig)(nil)).Elem()
}

func (i *loadBalancerLoadBalancerBillingConfigPtrType) ToLoadBalancerLoadBalancerBillingConfigPtrOutput() LoadBalancerLoadBalancerBillingConfigPtrOutput {
	return i.ToLoadBalancerLoadBalancerBillingConfigPtrOutputWithContext(context.Background())
}

func (i *loadBalancerLoadBalancerBillingConfigPtrType) ToLoadBalancerLoadBalancerBillingConfigPtrOutputWithContext(ctx context.Context) LoadBalancerLoadBalancerBillingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerLoadBalancerBillingConfigPtrOutput)
}

type LoadBalancerLoadBalancerBillingConfigOutput struct{ *pulumi.OutputState }

func (LoadBalancerLoadBalancerBillingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerLoadBalancerBillingConfig)(nil)).Elem()
}

func (o LoadBalancerLoadBalancerBillingConfigOutput) ToLoadBalancerLoadBalancerBillingConfigOutput() LoadBalancerLoadBalancerBillingConfigOutput {
	return o
}

func (o LoadBalancerLoadBalancerBillingConfigOutput) ToLoadBalancerLoadBalancerBillingConfigOutputWithContext(ctx context.Context) LoadBalancerLoadBalancerBillingConfigOutput {
	return o
}

func (o LoadBalancerLoadBalancerBillingConfigOutput) ToLoadBalancerLoadBalancerBillingConfigPtrOutput() LoadBalancerLoadBalancerBillingConfigPtrOutput {
	return o.ToLoadBalancerLoadBalancerBillingConfigPtrOutputWithContext(context.Background())
}

func (o LoadBalancerLoadBalancerBillingConfigOutput) ToLoadBalancerLoadBalancerBillingConfigPtrOutputWithContext(ctx context.Context) LoadBalancerLoadBalancerBillingConfigPtrOutput {
	return o.ApplyT(func(v LoadBalancerLoadBalancerBillingConfig) *LoadBalancerLoadBalancerBillingConfig {
		return &v
	}).(LoadBalancerLoadBalancerBillingConfigPtrOutput)
}

// The billing method of the ALB instance. Valid value: `PayAsYouGo`.
func (o LoadBalancerLoadBalancerBillingConfigOutput) PayType() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerLoadBalancerBillingConfig) string { return v.PayType }).(pulumi.StringOutput)
}

type LoadBalancerLoadBalancerBillingConfigPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerLoadBalancerBillingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerLoadBalancerBillingConfig)(nil)).Elem()
}

func (o LoadBalancerLoadBalancerBillingConfigPtrOutput) ToLoadBalancerLoadBalancerBillingConfigPtrOutput() LoadBalancerLoadBalancerBillingConfigPtrOutput {
	return o
}

func (o LoadBalancerLoadBalancerBillingConfigPtrOutput) ToLoadBalancerLoadBalancerBillingConfigPtrOutputWithContext(ctx context.Context) LoadBalancerLoadBalancerBillingConfigPtrOutput {
	return o
}

func (o LoadBalancerLoadBalancerBillingConfigPtrOutput) Elem() LoadBalancerLoadBalancerBillingConfigOutput {
	return o.ApplyT(func(v *LoadBalancerLoadBalancerBillingConfig) LoadBalancerLoadBalancerBillingConfig { return *v }).(LoadBalancerLoadBalancerBillingConfigOutput)
}

// The billing method of the ALB instance. Valid value: `PayAsYouGo`.
func (o LoadBalancerLoadBalancerBillingConfigPtrOutput) PayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerLoadBalancerBillingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.PayType
	}).(pulumi.StringPtrOutput)
}

type LoadBalancerModificationProtectionConfig struct {
	// The reason for modification protection. This parameter must be 2 to 128 characters in length, and can contain letters, digits, periods, underscores, and hyphens. The reason must start with a letter. This parameter is required only if `ModificationProtectionStatus` is set to `ConsoleProtection`.
	Reason *string `pulumi:"reason"`
	// Specifies whether to enable the configuration read-only mode for the ALB instance. Valid values: `NonProtection` and `ConsoleProtection`.
	Status *string `pulumi:"status"`
}

// LoadBalancerModificationProtectionConfigInput is an input type that accepts LoadBalancerModificationProtectionConfigArgs and LoadBalancerModificationProtectionConfigOutput values.
// You can construct a concrete instance of `LoadBalancerModificationProtectionConfigInput` via:
//
//          LoadBalancerModificationProtectionConfigArgs{...}
type LoadBalancerModificationProtectionConfigInput interface {
	pulumi.Input

	ToLoadBalancerModificationProtectionConfigOutput() LoadBalancerModificationProtectionConfigOutput
	ToLoadBalancerModificationProtectionConfigOutputWithContext(context.Context) LoadBalancerModificationProtectionConfigOutput
}

type LoadBalancerModificationProtectionConfigArgs struct {
	// The reason for modification protection. This parameter must be 2 to 128 characters in length, and can contain letters, digits, periods, underscores, and hyphens. The reason must start with a letter. This parameter is required only if `ModificationProtectionStatus` is set to `ConsoleProtection`.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// Specifies whether to enable the configuration read-only mode for the ALB instance. Valid values: `NonProtection` and `ConsoleProtection`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (LoadBalancerModificationProtectionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerModificationProtectionConfig)(nil)).Elem()
}

func (i LoadBalancerModificationProtectionConfigArgs) ToLoadBalancerModificationProtectionConfigOutput() LoadBalancerModificationProtectionConfigOutput {
	return i.ToLoadBalancerModificationProtectionConfigOutputWithContext(context.Background())
}

func (i LoadBalancerModificationProtectionConfigArgs) ToLoadBalancerModificationProtectionConfigOutputWithContext(ctx context.Context) LoadBalancerModificationProtectionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerModificationProtectionConfigOutput)
}

func (i LoadBalancerModificationProtectionConfigArgs) ToLoadBalancerModificationProtectionConfigPtrOutput() LoadBalancerModificationProtectionConfigPtrOutput {
	return i.ToLoadBalancerModificationProtectionConfigPtrOutputWithContext(context.Background())
}

func (i LoadBalancerModificationProtectionConfigArgs) ToLoadBalancerModificationProtectionConfigPtrOutputWithContext(ctx context.Context) LoadBalancerModificationProtectionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerModificationProtectionConfigOutput).ToLoadBalancerModificationProtectionConfigPtrOutputWithContext(ctx)
}

// LoadBalancerModificationProtectionConfigPtrInput is an input type that accepts LoadBalancerModificationProtectionConfigArgs, LoadBalancerModificationProtectionConfigPtr and LoadBalancerModificationProtectionConfigPtrOutput values.
// You can construct a concrete instance of `LoadBalancerModificationProtectionConfigPtrInput` via:
//
//          LoadBalancerModificationProtectionConfigArgs{...}
//
//  or:
//
//          nil
type LoadBalancerModificationProtectionConfigPtrInput interface {
	pulumi.Input

	ToLoadBalancerModificationProtectionConfigPtrOutput() LoadBalancerModificationProtectionConfigPtrOutput
	ToLoadBalancerModificationProtectionConfigPtrOutputWithContext(context.Context) LoadBalancerModificationProtectionConfigPtrOutput
}

type loadBalancerModificationProtectionConfigPtrType LoadBalancerModificationProtectionConfigArgs

func LoadBalancerModificationProtectionConfigPtr(v *LoadBalancerModificationProtectionConfigArgs) LoadBalancerModificationProtectionConfigPtrInput {
	return (*loadBalancerModificationProtectionConfigPtrType)(v)
}

func (*loadBalancerModificationProtectionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerModificationProtectionConfig)(nil)).Elem()
}

func (i *loadBalancerModificationProtectionConfigPtrType) ToLoadBalancerModificationProtectionConfigPtrOutput() LoadBalancerModificationProtectionConfigPtrOutput {
	return i.ToLoadBalancerModificationProtectionConfigPtrOutputWithContext(context.Background())
}

func (i *loadBalancerModificationProtectionConfigPtrType) ToLoadBalancerModificationProtectionConfigPtrOutputWithContext(ctx context.Context) LoadBalancerModificationProtectionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerModificationProtectionConfigPtrOutput)
}

type LoadBalancerModificationProtectionConfigOutput struct{ *pulumi.OutputState }

func (LoadBalancerModificationProtectionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerModificationProtectionConfig)(nil)).Elem()
}

func (o LoadBalancerModificationProtectionConfigOutput) ToLoadBalancerModificationProtectionConfigOutput() LoadBalancerModificationProtectionConfigOutput {
	return o
}

func (o LoadBalancerModificationProtectionConfigOutput) ToLoadBalancerModificationProtectionConfigOutputWithContext(ctx context.Context) LoadBalancerModificationProtectionConfigOutput {
	return o
}

func (o LoadBalancerModificationProtectionConfigOutput) ToLoadBalancerModificationProtectionConfigPtrOutput() LoadBalancerModificationProtectionConfigPtrOutput {
	return o.ToLoadBalancerModificationProtectionConfigPtrOutputWithContext(context.Background())
}

func (o LoadBalancerModificationProtectionConfigOutput) ToLoadBalancerModificationProtectionConfigPtrOutputWithContext(ctx context.Context) LoadBalancerModificationProtectionConfigPtrOutput {
	return o.ApplyT(func(v LoadBalancerModificationProtectionConfig) *LoadBalancerModificationProtectionConfig {
		return &v
	}).(LoadBalancerModificationProtectionConfigPtrOutput)
}

// The reason for modification protection. This parameter must be 2 to 128 characters in length, and can contain letters, digits, periods, underscores, and hyphens. The reason must start with a letter. This parameter is required only if `ModificationProtectionStatus` is set to `ConsoleProtection`.
func (o LoadBalancerModificationProtectionConfigOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerModificationProtectionConfig) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// Specifies whether to enable the configuration read-only mode for the ALB instance. Valid values: `NonProtection` and `ConsoleProtection`.
func (o LoadBalancerModificationProtectionConfigOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerModificationProtectionConfig) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type LoadBalancerModificationProtectionConfigPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerModificationProtectionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerModificationProtectionConfig)(nil)).Elem()
}

func (o LoadBalancerModificationProtectionConfigPtrOutput) ToLoadBalancerModificationProtectionConfigPtrOutput() LoadBalancerModificationProtectionConfigPtrOutput {
	return o
}

func (o LoadBalancerModificationProtectionConfigPtrOutput) ToLoadBalancerModificationProtectionConfigPtrOutputWithContext(ctx context.Context) LoadBalancerModificationProtectionConfigPtrOutput {
	return o
}

func (o LoadBalancerModificationProtectionConfigPtrOutput) Elem() LoadBalancerModificationProtectionConfigOutput {
	return o.ApplyT(func(v *LoadBalancerModificationProtectionConfig) LoadBalancerModificationProtectionConfig { return *v }).(LoadBalancerModificationProtectionConfigOutput)
}

// The reason for modification protection. This parameter must be 2 to 128 characters in length, and can contain letters, digits, periods, underscores, and hyphens. The reason must start with a letter. This parameter is required only if `ModificationProtectionStatus` is set to `ConsoleProtection`.
func (o LoadBalancerModificationProtectionConfigPtrOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerModificationProtectionConfig) *string {
		if v == nil {
			return nil
		}
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

// Specifies whether to enable the configuration read-only mode for the ALB instance. Valid values: `NonProtection` and `ConsoleProtection`.
func (o LoadBalancerModificationProtectionConfigPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerModificationProtectionConfig) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type LoadBalancerZoneMapping struct {
	// The ID of the vSwitch that corresponds to the zone. Each zone can use only one vSwitch and subnet.
	VswitchId string `pulumi:"vswitchId"`
	// The ID of the zone to which the ALB instance belongs.
	ZoneId string `pulumi:"zoneId"`
}

// LoadBalancerZoneMappingInput is an input type that accepts LoadBalancerZoneMappingArgs and LoadBalancerZoneMappingOutput values.
// You can construct a concrete instance of `LoadBalancerZoneMappingInput` via:
//
//          LoadBalancerZoneMappingArgs{...}
type LoadBalancerZoneMappingInput interface {
	pulumi.Input

	ToLoadBalancerZoneMappingOutput() LoadBalancerZoneMappingOutput
	ToLoadBalancerZoneMappingOutputWithContext(context.Context) LoadBalancerZoneMappingOutput
}

type LoadBalancerZoneMappingArgs struct {
	// The ID of the vSwitch that corresponds to the zone. Each zone can use only one vSwitch and subnet.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
	// The ID of the zone to which the ALB instance belongs.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LoadBalancerZoneMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerZoneMapping)(nil)).Elem()
}

func (i LoadBalancerZoneMappingArgs) ToLoadBalancerZoneMappingOutput() LoadBalancerZoneMappingOutput {
	return i.ToLoadBalancerZoneMappingOutputWithContext(context.Background())
}

func (i LoadBalancerZoneMappingArgs) ToLoadBalancerZoneMappingOutputWithContext(ctx context.Context) LoadBalancerZoneMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerZoneMappingOutput)
}

// LoadBalancerZoneMappingArrayInput is an input type that accepts LoadBalancerZoneMappingArray and LoadBalancerZoneMappingArrayOutput values.
// You can construct a concrete instance of `LoadBalancerZoneMappingArrayInput` via:
//
//          LoadBalancerZoneMappingArray{ LoadBalancerZoneMappingArgs{...} }
type LoadBalancerZoneMappingArrayInput interface {
	pulumi.Input

	ToLoadBalancerZoneMappingArrayOutput() LoadBalancerZoneMappingArrayOutput
	ToLoadBalancerZoneMappingArrayOutputWithContext(context.Context) LoadBalancerZoneMappingArrayOutput
}

type LoadBalancerZoneMappingArray []LoadBalancerZoneMappingInput

func (LoadBalancerZoneMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerZoneMapping)(nil)).Elem()
}

func (i LoadBalancerZoneMappingArray) ToLoadBalancerZoneMappingArrayOutput() LoadBalancerZoneMappingArrayOutput {
	return i.ToLoadBalancerZoneMappingArrayOutputWithContext(context.Background())
}

func (i LoadBalancerZoneMappingArray) ToLoadBalancerZoneMappingArrayOutputWithContext(ctx context.Context) LoadBalancerZoneMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerZoneMappingArrayOutput)
}

type LoadBalancerZoneMappingOutput struct{ *pulumi.OutputState }

func (LoadBalancerZoneMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerZoneMapping)(nil)).Elem()
}

func (o LoadBalancerZoneMappingOutput) ToLoadBalancerZoneMappingOutput() LoadBalancerZoneMappingOutput {
	return o
}

func (o LoadBalancerZoneMappingOutput) ToLoadBalancerZoneMappingOutputWithContext(ctx context.Context) LoadBalancerZoneMappingOutput {
	return o
}

// The ID of the vSwitch that corresponds to the zone. Each zone can use only one vSwitch and subnet.
func (o LoadBalancerZoneMappingOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerZoneMapping) string { return v.VswitchId }).(pulumi.StringOutput)
}

// The ID of the zone to which the ALB instance belongs.
func (o LoadBalancerZoneMappingOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerZoneMapping) string { return v.ZoneId }).(pulumi.StringOutput)
}

type LoadBalancerZoneMappingArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerZoneMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerZoneMapping)(nil)).Elem()
}

func (o LoadBalancerZoneMappingArrayOutput) ToLoadBalancerZoneMappingArrayOutput() LoadBalancerZoneMappingArrayOutput {
	return o
}

func (o LoadBalancerZoneMappingArrayOutput) ToLoadBalancerZoneMappingArrayOutputWithContext(ctx context.Context) LoadBalancerZoneMappingArrayOutput {
	return o
}

func (o LoadBalancerZoneMappingArrayOutput) Index(i pulumi.IntInput) LoadBalancerZoneMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerZoneMapping {
		return vs[0].([]LoadBalancerZoneMapping)[vs[1].(int)]
	}).(LoadBalancerZoneMappingOutput)
}

type ServerGroupHealthCheckConfig struct {
	// The status code for a successful health check. Multiple status codes can be specified as a list. Valid values: `http2xx`, `http3xx`, `http4xx`, and `http5xx`. Default value: `http2xx`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
	HealthCheckCodes []string `pulumi:"healthCheckCodes"`
	// The port of the backend server that is used for health checks. Valid values: `0` to `65535`. Default value: `0`. A value of 0 indicates that a backend server port is used for health checks.
	HealthCheckConnectPort *int `pulumi:"healthCheckConnectPort"`
	// Indicates whether health checks are enabled. Valid values: `true`, `false`. Default value: `true`.
	HealthCheckEnabled *bool `pulumi:"healthCheckEnabled"`
	// The domain name that is used for health checks.
	HealthCheckHost *string `pulumi:"healthCheckHost"`
	// HTTP protocol version. Valid values: `HTTP1.0` and `HTTP1.1`. Default value: `HTTP1.1`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
	HealthCheckHttpVersion *string `pulumi:"healthCheckHttpVersion"`
	// The time interval between two consecutive health checks. Unit: seconds. Valid values: `1` to `50`. Default value: `2`.
	HealthCheckInterval *int `pulumi:"healthCheckInterval"`
	// Health check method. Valid values: `GET` and `HEAD`. Default: `GET`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
	HealthCheckMethod *string `pulumi:"healthCheckMethod"`
	// The forwarding rule path of health checks. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
	HealthCheckPath *string `pulumi:"healthCheckPath"`
	// Health check protocol. Valid values: `HTTP` and `TCP`.
	HealthCheckProtocol *string `pulumi:"healthCheckProtocol"`
	// The timeout period of a health check response. If a backend Elastic Compute Service (ECS) instance does not send an expected response within the specified period of time, the ECS instance is considered unhealthy. Unit: seconds. Valid values: 1 to 300. Default value: 5. **NOTE:** If the value of the `HealthCHeckTimeout` parameter is smaller than that of the `HealthCheckInterval` parameter, the value of the `HealthCHeckTimeout` parameter is ignored and the value of the `HealthCheckInterval` parameter is regarded as the timeout period.
	HealthCheckTimeout *int `pulumi:"healthCheckTimeout"`
	// The number of health checks that an unhealthy backend server must pass consecutively before it is declared healthy. In this case, the health check state is changed from fail to success. Valid values: 2 to 10. Default value: 3.
	HealthyThreshold *int `pulumi:"healthyThreshold"`
	// The number of consecutive health checks that a healthy backend server must consecutively fail before it is declared unhealthy. In this case, the health check state is changed from success to fail. Valid values: `2` to `10`. Default value: `3`.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// ServerGroupHealthCheckConfigInput is an input type that accepts ServerGroupHealthCheckConfigArgs and ServerGroupHealthCheckConfigOutput values.
// You can construct a concrete instance of `ServerGroupHealthCheckConfigInput` via:
//
//          ServerGroupHealthCheckConfigArgs{...}
type ServerGroupHealthCheckConfigInput interface {
	pulumi.Input

	ToServerGroupHealthCheckConfigOutput() ServerGroupHealthCheckConfigOutput
	ToServerGroupHealthCheckConfigOutputWithContext(context.Context) ServerGroupHealthCheckConfigOutput
}

type ServerGroupHealthCheckConfigArgs struct {
	// The status code for a successful health check. Multiple status codes can be specified as a list. Valid values: `http2xx`, `http3xx`, `http4xx`, and `http5xx`. Default value: `http2xx`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
	HealthCheckCodes pulumi.StringArrayInput `pulumi:"healthCheckCodes"`
	// The port of the backend server that is used for health checks. Valid values: `0` to `65535`. Default value: `0`. A value of 0 indicates that a backend server port is used for health checks.
	HealthCheckConnectPort pulumi.IntPtrInput `pulumi:"healthCheckConnectPort"`
	// Indicates whether health checks are enabled. Valid values: `true`, `false`. Default value: `true`.
	HealthCheckEnabled pulumi.BoolPtrInput `pulumi:"healthCheckEnabled"`
	// The domain name that is used for health checks.
	HealthCheckHost pulumi.StringPtrInput `pulumi:"healthCheckHost"`
	// HTTP protocol version. Valid values: `HTTP1.0` and `HTTP1.1`. Default value: `HTTP1.1`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
	HealthCheckHttpVersion pulumi.StringPtrInput `pulumi:"healthCheckHttpVersion"`
	// The time interval between two consecutive health checks. Unit: seconds. Valid values: `1` to `50`. Default value: `2`.
	HealthCheckInterval pulumi.IntPtrInput `pulumi:"healthCheckInterval"`
	// Health check method. Valid values: `GET` and `HEAD`. Default: `GET`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
	HealthCheckMethod pulumi.StringPtrInput `pulumi:"healthCheckMethod"`
	// The forwarding rule path of health checks. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
	HealthCheckPath pulumi.StringPtrInput `pulumi:"healthCheckPath"`
	// Health check protocol. Valid values: `HTTP` and `TCP`.
	HealthCheckProtocol pulumi.StringPtrInput `pulumi:"healthCheckProtocol"`
	// The timeout period of a health check response. If a backend Elastic Compute Service (ECS) instance does not send an expected response within the specified period of time, the ECS instance is considered unhealthy. Unit: seconds. Valid values: 1 to 300. Default value: 5. **NOTE:** If the value of the `HealthCHeckTimeout` parameter is smaller than that of the `HealthCheckInterval` parameter, the value of the `HealthCHeckTimeout` parameter is ignored and the value of the `HealthCheckInterval` parameter is regarded as the timeout period.
	HealthCheckTimeout pulumi.IntPtrInput `pulumi:"healthCheckTimeout"`
	// The number of health checks that an unhealthy backend server must pass consecutively before it is declared healthy. In this case, the health check state is changed from fail to success. Valid values: 2 to 10. Default value: 3.
	HealthyThreshold pulumi.IntPtrInput `pulumi:"healthyThreshold"`
	// The number of consecutive health checks that a healthy backend server must consecutively fail before it is declared unhealthy. In this case, the health check state is changed from success to fail. Valid values: `2` to `10`. Default value: `3`.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (ServerGroupHealthCheckConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupHealthCheckConfig)(nil)).Elem()
}

func (i ServerGroupHealthCheckConfigArgs) ToServerGroupHealthCheckConfigOutput() ServerGroupHealthCheckConfigOutput {
	return i.ToServerGroupHealthCheckConfigOutputWithContext(context.Background())
}

func (i ServerGroupHealthCheckConfigArgs) ToServerGroupHealthCheckConfigOutputWithContext(ctx context.Context) ServerGroupHealthCheckConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupHealthCheckConfigOutput)
}

func (i ServerGroupHealthCheckConfigArgs) ToServerGroupHealthCheckConfigPtrOutput() ServerGroupHealthCheckConfigPtrOutput {
	return i.ToServerGroupHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (i ServerGroupHealthCheckConfigArgs) ToServerGroupHealthCheckConfigPtrOutputWithContext(ctx context.Context) ServerGroupHealthCheckConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupHealthCheckConfigOutput).ToServerGroupHealthCheckConfigPtrOutputWithContext(ctx)
}

// ServerGroupHealthCheckConfigPtrInput is an input type that accepts ServerGroupHealthCheckConfigArgs, ServerGroupHealthCheckConfigPtr and ServerGroupHealthCheckConfigPtrOutput values.
// You can construct a concrete instance of `ServerGroupHealthCheckConfigPtrInput` via:
//
//          ServerGroupHealthCheckConfigArgs{...}
//
//  or:
//
//          nil
type ServerGroupHealthCheckConfigPtrInput interface {
	pulumi.Input

	ToServerGroupHealthCheckConfigPtrOutput() ServerGroupHealthCheckConfigPtrOutput
	ToServerGroupHealthCheckConfigPtrOutputWithContext(context.Context) ServerGroupHealthCheckConfigPtrOutput
}

type serverGroupHealthCheckConfigPtrType ServerGroupHealthCheckConfigArgs

func ServerGroupHealthCheckConfigPtr(v *ServerGroupHealthCheckConfigArgs) ServerGroupHealthCheckConfigPtrInput {
	return (*serverGroupHealthCheckConfigPtrType)(v)
}

func (*serverGroupHealthCheckConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerGroupHealthCheckConfig)(nil)).Elem()
}

func (i *serverGroupHealthCheckConfigPtrType) ToServerGroupHealthCheckConfigPtrOutput() ServerGroupHealthCheckConfigPtrOutput {
	return i.ToServerGroupHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (i *serverGroupHealthCheckConfigPtrType) ToServerGroupHealthCheckConfigPtrOutputWithContext(ctx context.Context) ServerGroupHealthCheckConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupHealthCheckConfigPtrOutput)
}

type ServerGroupHealthCheckConfigOutput struct{ *pulumi.OutputState }

func (ServerGroupHealthCheckConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupHealthCheckConfig)(nil)).Elem()
}

func (o ServerGroupHealthCheckConfigOutput) ToServerGroupHealthCheckConfigOutput() ServerGroupHealthCheckConfigOutput {
	return o
}

func (o ServerGroupHealthCheckConfigOutput) ToServerGroupHealthCheckConfigOutputWithContext(ctx context.Context) ServerGroupHealthCheckConfigOutput {
	return o
}

func (o ServerGroupHealthCheckConfigOutput) ToServerGroupHealthCheckConfigPtrOutput() ServerGroupHealthCheckConfigPtrOutput {
	return o.ToServerGroupHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (o ServerGroupHealthCheckConfigOutput) ToServerGroupHealthCheckConfigPtrOutputWithContext(ctx context.Context) ServerGroupHealthCheckConfigPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheckConfig) *ServerGroupHealthCheckConfig {
		return &v
	}).(ServerGroupHealthCheckConfigPtrOutput)
}

// The status code for a successful health check. Multiple status codes can be specified as a list. Valid values: `http2xx`, `http3xx`, `http4xx`, and `http5xx`. Default value: `http2xx`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
func (o ServerGroupHealthCheckConfigOutput) HealthCheckCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerGroupHealthCheckConfig) []string { return v.HealthCheckCodes }).(pulumi.StringArrayOutput)
}

// The port of the backend server that is used for health checks. Valid values: `0` to `65535`. Default value: `0`. A value of 0 indicates that a backend server port is used for health checks.
func (o ServerGroupHealthCheckConfigOutput) HealthCheckConnectPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheckConfig) *int { return v.HealthCheckConnectPort }).(pulumi.IntPtrOutput)
}

// Indicates whether health checks are enabled. Valid values: `true`, `false`. Default value: `true`.
func (o ServerGroupHealthCheckConfigOutput) HealthCheckEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheckConfig) *bool { return v.HealthCheckEnabled }).(pulumi.BoolPtrOutput)
}

// The domain name that is used for health checks.
func (o ServerGroupHealthCheckConfigOutput) HealthCheckHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheckConfig) *string { return v.HealthCheckHost }).(pulumi.StringPtrOutput)
}

// HTTP protocol version. Valid values: `HTTP1.0` and `HTTP1.1`. Default value: `HTTP1.1`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
func (o ServerGroupHealthCheckConfigOutput) HealthCheckHttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheckConfig) *string { return v.HealthCheckHttpVersion }).(pulumi.StringPtrOutput)
}

// The time interval between two consecutive health checks. Unit: seconds. Valid values: `1` to `50`. Default value: `2`.
func (o ServerGroupHealthCheckConfigOutput) HealthCheckInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheckConfig) *int { return v.HealthCheckInterval }).(pulumi.IntPtrOutput)
}

// Health check method. Valid values: `GET` and `HEAD`. Default: `GET`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
func (o ServerGroupHealthCheckConfigOutput) HealthCheckMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheckConfig) *string { return v.HealthCheckMethod }).(pulumi.StringPtrOutput)
}

// The forwarding rule path of health checks. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
func (o ServerGroupHealthCheckConfigOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheckConfig) *string { return v.HealthCheckPath }).(pulumi.StringPtrOutput)
}

// Health check protocol. Valid values: `HTTP` and `TCP`.
func (o ServerGroupHealthCheckConfigOutput) HealthCheckProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheckConfig) *string { return v.HealthCheckProtocol }).(pulumi.StringPtrOutput)
}

// The timeout period of a health check response. If a backend Elastic Compute Service (ECS) instance does not send an expected response within the specified period of time, the ECS instance is considered unhealthy. Unit: seconds. Valid values: 1 to 300. Default value: 5. **NOTE:** If the value of the `HealthCHeckTimeout` parameter is smaller than that of the `HealthCheckInterval` parameter, the value of the `HealthCHeckTimeout` parameter is ignored and the value of the `HealthCheckInterval` parameter is regarded as the timeout period.
func (o ServerGroupHealthCheckConfigOutput) HealthCheckTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheckConfig) *int { return v.HealthCheckTimeout }).(pulumi.IntPtrOutput)
}

// The number of health checks that an unhealthy backend server must pass consecutively before it is declared healthy. In this case, the health check state is changed from fail to success. Valid values: 2 to 10. Default value: 3.
func (o ServerGroupHealthCheckConfigOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheckConfig) *int { return v.HealthyThreshold }).(pulumi.IntPtrOutput)
}

// The number of consecutive health checks that a healthy backend server must consecutively fail before it is declared unhealthy. In this case, the health check state is changed from success to fail. Valid values: `2` to `10`. Default value: `3`.
func (o ServerGroupHealthCheckConfigOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupHealthCheckConfig) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type ServerGroupHealthCheckConfigPtrOutput struct{ *pulumi.OutputState }

func (ServerGroupHealthCheckConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerGroupHealthCheckConfig)(nil)).Elem()
}

func (o ServerGroupHealthCheckConfigPtrOutput) ToServerGroupHealthCheckConfigPtrOutput() ServerGroupHealthCheckConfigPtrOutput {
	return o
}

func (o ServerGroupHealthCheckConfigPtrOutput) ToServerGroupHealthCheckConfigPtrOutputWithContext(ctx context.Context) ServerGroupHealthCheckConfigPtrOutput {
	return o
}

func (o ServerGroupHealthCheckConfigPtrOutput) Elem() ServerGroupHealthCheckConfigOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheckConfig) ServerGroupHealthCheckConfig { return *v }).(ServerGroupHealthCheckConfigOutput)
}

// The status code for a successful health check. Multiple status codes can be specified as a list. Valid values: `http2xx`, `http3xx`, `http4xx`, and `http5xx`. Default value: `http2xx`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
func (o ServerGroupHealthCheckConfigPtrOutput) HealthCheckCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheckConfig) []string {
		if v == nil {
			return nil
		}
		return v.HealthCheckCodes
	}).(pulumi.StringArrayOutput)
}

// The port of the backend server that is used for health checks. Valid values: `0` to `65535`. Default value: `0`. A value of 0 indicates that a backend server port is used for health checks.
func (o ServerGroupHealthCheckConfigPtrOutput) HealthCheckConnectPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheckConfig) *int {
		if v == nil {
			return nil
		}
		return v.HealthCheckConnectPort
	}).(pulumi.IntPtrOutput)
}

// Indicates whether health checks are enabled. Valid values: `true`, `false`. Default value: `true`.
func (o ServerGroupHealthCheckConfigPtrOutput) HealthCheckEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheckConfig) *bool {
		if v == nil {
			return nil
		}
		return v.HealthCheckEnabled
	}).(pulumi.BoolPtrOutput)
}

// The domain name that is used for health checks.
func (o ServerGroupHealthCheckConfigPtrOutput) HealthCheckHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckHost
	}).(pulumi.StringPtrOutput)
}

// HTTP protocol version. Valid values: `HTTP1.0` and `HTTP1.1`. Default value: `HTTP1.1`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
func (o ServerGroupHealthCheckConfigPtrOutput) HealthCheckHttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckHttpVersion
	}).(pulumi.StringPtrOutput)
}

// The time interval between two consecutive health checks. Unit: seconds. Valid values: `1` to `50`. Default value: `2`.
func (o ServerGroupHealthCheckConfigPtrOutput) HealthCheckInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheckConfig) *int {
		if v == nil {
			return nil
		}
		return v.HealthCheckInterval
	}).(pulumi.IntPtrOutput)
}

// Health check method. Valid values: `GET` and `HEAD`. Default: `GET`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
func (o ServerGroupHealthCheckConfigPtrOutput) HealthCheckMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckMethod
	}).(pulumi.StringPtrOutput)
}

// The forwarding rule path of health checks. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
func (o ServerGroupHealthCheckConfigPtrOutput) HealthCheckPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckPath
	}).(pulumi.StringPtrOutput)
}

// Health check protocol. Valid values: `HTTP` and `TCP`.
func (o ServerGroupHealthCheckConfigPtrOutput) HealthCheckProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheckProtocol
	}).(pulumi.StringPtrOutput)
}

// The timeout period of a health check response. If a backend Elastic Compute Service (ECS) instance does not send an expected response within the specified period of time, the ECS instance is considered unhealthy. Unit: seconds. Valid values: 1 to 300. Default value: 5. **NOTE:** If the value of the `HealthCHeckTimeout` parameter is smaller than that of the `HealthCheckInterval` parameter, the value of the `HealthCHeckTimeout` parameter is ignored and the value of the `HealthCheckInterval` parameter is regarded as the timeout period.
func (o ServerGroupHealthCheckConfigPtrOutput) HealthCheckTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheckConfig) *int {
		if v == nil {
			return nil
		}
		return v.HealthCheckTimeout
	}).(pulumi.IntPtrOutput)
}

// The number of health checks that an unhealthy backend server must pass consecutively before it is declared healthy. In this case, the health check state is changed from fail to success. Valid values: 2 to 10. Default value: 3.
func (o ServerGroupHealthCheckConfigPtrOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheckConfig) *int {
		if v == nil {
			return nil
		}
		return v.HealthyThreshold
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive health checks that a healthy backend server must consecutively fail before it is declared unhealthy. In this case, the health check state is changed from success to fail. Valid values: `2` to `10`. Default value: `3`.
func (o ServerGroupHealthCheckConfigPtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerGroupHealthCheckConfig) *int {
		if v == nil {
			return nil
		}
		return v.UnhealthyThreshold
	}).(pulumi.IntPtrOutput)
}

type ServerGroupServer struct {
	// The description of the server.
	Description *string `pulumi:"description"`
	// The port that is used by the server. Valid values: `1` to `65535`.
	Port *int `pulumi:"port"`
	// The ID of the ECS instance, ENI instance or ECI instance.
	ServerId *string `pulumi:"serverId"`
	// The IP address of the ENI instance when it is in the inclusive ENI mode.
	ServerIp *string `pulumi:"serverIp"`
	// The type of the server. The type of the server. Valid values: `Ecs`, `Eni` and `Eci`.
	ServerType *string `pulumi:"serverType"`
	// The status of the resource.
	Status *string `pulumi:"status"`
	// The weight of the server.  Valid values: `0` to `100`. Default value: `100`. If the value is set to `0`, no requests are forwarded to the server.
	Weight *int `pulumi:"weight"`
}

// ServerGroupServerInput is an input type that accepts ServerGroupServerArgs and ServerGroupServerOutput values.
// You can construct a concrete instance of `ServerGroupServerInput` via:
//
//          ServerGroupServerArgs{...}
type ServerGroupServerInput interface {
	pulumi.Input

	ToServerGroupServerOutput() ServerGroupServerOutput
	ToServerGroupServerOutputWithContext(context.Context) ServerGroupServerOutput
}

type ServerGroupServerArgs struct {
	// The description of the server.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The port that is used by the server. Valid values: `1` to `65535`.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The ID of the ECS instance, ENI instance or ECI instance.
	ServerId pulumi.StringPtrInput `pulumi:"serverId"`
	// The IP address of the ENI instance when it is in the inclusive ENI mode.
	ServerIp pulumi.StringPtrInput `pulumi:"serverIp"`
	// The type of the server. The type of the server. Valid values: `Ecs`, `Eni` and `Eci`.
	ServerType pulumi.StringPtrInput `pulumi:"serverType"`
	// The status of the resource.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The weight of the server.  Valid values: `0` to `100`. Default value: `100`. If the value is set to `0`, no requests are forwarded to the server.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (ServerGroupServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupServer)(nil)).Elem()
}

func (i ServerGroupServerArgs) ToServerGroupServerOutput() ServerGroupServerOutput {
	return i.ToServerGroupServerOutputWithContext(context.Background())
}

func (i ServerGroupServerArgs) ToServerGroupServerOutputWithContext(ctx context.Context) ServerGroupServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupServerOutput)
}

// ServerGroupServerArrayInput is an input type that accepts ServerGroupServerArray and ServerGroupServerArrayOutput values.
// You can construct a concrete instance of `ServerGroupServerArrayInput` via:
//
//          ServerGroupServerArray{ ServerGroupServerArgs{...} }
type ServerGroupServerArrayInput interface {
	pulumi.Input

	ToServerGroupServerArrayOutput() ServerGroupServerArrayOutput
	ToServerGroupServerArrayOutputWithContext(context.Context) ServerGroupServerArrayOutput
}

type ServerGroupServerArray []ServerGroupServerInput

func (ServerGroupServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerGroupServer)(nil)).Elem()
}

func (i ServerGroupServerArray) ToServerGroupServerArrayOutput() ServerGroupServerArrayOutput {
	return i.ToServerGroupServerArrayOutputWithContext(context.Background())
}

func (i ServerGroupServerArray) ToServerGroupServerArrayOutputWithContext(ctx context.Context) ServerGroupServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupServerArrayOutput)
}

type ServerGroupServerOutput struct{ *pulumi.OutputState }

func (ServerGroupServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupServer)(nil)).Elem()
}

func (o ServerGroupServerOutput) ToServerGroupServerOutput() ServerGroupServerOutput {
	return o
}

func (o ServerGroupServerOutput) ToServerGroupServerOutputWithContext(ctx context.Context) ServerGroupServerOutput {
	return o
}

// The description of the server.
func (o ServerGroupServerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupServer) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The port that is used by the server. Valid values: `1` to `65535`.
func (o ServerGroupServerOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupServer) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The ID of the ECS instance, ENI instance or ECI instance.
func (o ServerGroupServerOutput) ServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupServer) *string { return v.ServerId }).(pulumi.StringPtrOutput)
}

// The IP address of the ENI instance when it is in the inclusive ENI mode.
func (o ServerGroupServerOutput) ServerIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupServer) *string { return v.ServerIp }).(pulumi.StringPtrOutput)
}

// The type of the server. The type of the server. Valid values: `Ecs`, `Eni` and `Eci`.
func (o ServerGroupServerOutput) ServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupServer) *string { return v.ServerType }).(pulumi.StringPtrOutput)
}

// The status of the resource.
func (o ServerGroupServerOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupServer) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The weight of the server.  Valid values: `0` to `100`. Default value: `100`. If the value is set to `0`, no requests are forwarded to the server.
func (o ServerGroupServerOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupServer) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ServerGroupServerArrayOutput struct{ *pulumi.OutputState }

func (ServerGroupServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerGroupServer)(nil)).Elem()
}

func (o ServerGroupServerArrayOutput) ToServerGroupServerArrayOutput() ServerGroupServerArrayOutput {
	return o
}

func (o ServerGroupServerArrayOutput) ToServerGroupServerArrayOutputWithContext(ctx context.Context) ServerGroupServerArrayOutput {
	return o
}

func (o ServerGroupServerArrayOutput) Index(i pulumi.IntInput) ServerGroupServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerGroupServer {
		return vs[0].([]ServerGroupServer)[vs[1].(int)]
	}).(ServerGroupServerOutput)
}

type ServerGroupStickySessionConfig struct {
	// the cookie that is configured on the server. **NOTE:** This parameter exists if the `StickySession` parameter is set to `On` and the `StickySessionType` parameter is set to `server`.
	Cookie *string `pulumi:"cookie"`
	// The timeout period of a cookie. The timeout period of a cookie. Unit: seconds. Valid values: `1` to `86400`. Default value: `1000`.
	CookieTimeout *int `pulumi:"cookieTimeout"`
	// Indicates whether sticky session is enabled. Values: `true` and `false`. Default value: `false`.  **NOTE:** This parameter exists if the `StickySession` parameter is set to `On`.
	StickySessionEnabled *bool `pulumi:"stickySessionEnabled"`
	// The method that is used to handle a cookie. Values: `Server` and `Insert`.
	StickySessionType *string `pulumi:"stickySessionType"`
}

// ServerGroupStickySessionConfigInput is an input type that accepts ServerGroupStickySessionConfigArgs and ServerGroupStickySessionConfigOutput values.
// You can construct a concrete instance of `ServerGroupStickySessionConfigInput` via:
//
//          ServerGroupStickySessionConfigArgs{...}
type ServerGroupStickySessionConfigInput interface {
	pulumi.Input

	ToServerGroupStickySessionConfigOutput() ServerGroupStickySessionConfigOutput
	ToServerGroupStickySessionConfigOutputWithContext(context.Context) ServerGroupStickySessionConfigOutput
}

type ServerGroupStickySessionConfigArgs struct {
	// the cookie that is configured on the server. **NOTE:** This parameter exists if the `StickySession` parameter is set to `On` and the `StickySessionType` parameter is set to `server`.
	Cookie pulumi.StringPtrInput `pulumi:"cookie"`
	// The timeout period of a cookie. The timeout period of a cookie. Unit: seconds. Valid values: `1` to `86400`. Default value: `1000`.
	CookieTimeout pulumi.IntPtrInput `pulumi:"cookieTimeout"`
	// Indicates whether sticky session is enabled. Values: `true` and `false`. Default value: `false`.  **NOTE:** This parameter exists if the `StickySession` parameter is set to `On`.
	StickySessionEnabled pulumi.BoolPtrInput `pulumi:"stickySessionEnabled"`
	// The method that is used to handle a cookie. Values: `Server` and `Insert`.
	StickySessionType pulumi.StringPtrInput `pulumi:"stickySessionType"`
}

func (ServerGroupStickySessionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupStickySessionConfig)(nil)).Elem()
}

func (i ServerGroupStickySessionConfigArgs) ToServerGroupStickySessionConfigOutput() ServerGroupStickySessionConfigOutput {
	return i.ToServerGroupStickySessionConfigOutputWithContext(context.Background())
}

func (i ServerGroupStickySessionConfigArgs) ToServerGroupStickySessionConfigOutputWithContext(ctx context.Context) ServerGroupStickySessionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupStickySessionConfigOutput)
}

func (i ServerGroupStickySessionConfigArgs) ToServerGroupStickySessionConfigPtrOutput() ServerGroupStickySessionConfigPtrOutput {
	return i.ToServerGroupStickySessionConfigPtrOutputWithContext(context.Background())
}

func (i ServerGroupStickySessionConfigArgs) ToServerGroupStickySessionConfigPtrOutputWithContext(ctx context.Context) ServerGroupStickySessionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupStickySessionConfigOutput).ToServerGroupStickySessionConfigPtrOutputWithContext(ctx)
}

// ServerGroupStickySessionConfigPtrInput is an input type that accepts ServerGroupStickySessionConfigArgs, ServerGroupStickySessionConfigPtr and ServerGroupStickySessionConfigPtrOutput values.
// You can construct a concrete instance of `ServerGroupStickySessionConfigPtrInput` via:
//
//          ServerGroupStickySessionConfigArgs{...}
//
//  or:
//
//          nil
type ServerGroupStickySessionConfigPtrInput interface {
	pulumi.Input

	ToServerGroupStickySessionConfigPtrOutput() ServerGroupStickySessionConfigPtrOutput
	ToServerGroupStickySessionConfigPtrOutputWithContext(context.Context) ServerGroupStickySessionConfigPtrOutput
}

type serverGroupStickySessionConfigPtrType ServerGroupStickySessionConfigArgs

func ServerGroupStickySessionConfigPtr(v *ServerGroupStickySessionConfigArgs) ServerGroupStickySessionConfigPtrInput {
	return (*serverGroupStickySessionConfigPtrType)(v)
}

func (*serverGroupStickySessionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerGroupStickySessionConfig)(nil)).Elem()
}

func (i *serverGroupStickySessionConfigPtrType) ToServerGroupStickySessionConfigPtrOutput() ServerGroupStickySessionConfigPtrOutput {
	return i.ToServerGroupStickySessionConfigPtrOutputWithContext(context.Background())
}

func (i *serverGroupStickySessionConfigPtrType) ToServerGroupStickySessionConfigPtrOutputWithContext(ctx context.Context) ServerGroupStickySessionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerGroupStickySessionConfigPtrOutput)
}

type ServerGroupStickySessionConfigOutput struct{ *pulumi.OutputState }

func (ServerGroupStickySessionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerGroupStickySessionConfig)(nil)).Elem()
}

func (o ServerGroupStickySessionConfigOutput) ToServerGroupStickySessionConfigOutput() ServerGroupStickySessionConfigOutput {
	return o
}

func (o ServerGroupStickySessionConfigOutput) ToServerGroupStickySessionConfigOutputWithContext(ctx context.Context) ServerGroupStickySessionConfigOutput {
	return o
}

func (o ServerGroupStickySessionConfigOutput) ToServerGroupStickySessionConfigPtrOutput() ServerGroupStickySessionConfigPtrOutput {
	return o.ToServerGroupStickySessionConfigPtrOutputWithContext(context.Background())
}

func (o ServerGroupStickySessionConfigOutput) ToServerGroupStickySessionConfigPtrOutputWithContext(ctx context.Context) ServerGroupStickySessionConfigPtrOutput {
	return o.ApplyT(func(v ServerGroupStickySessionConfig) *ServerGroupStickySessionConfig {
		return &v
	}).(ServerGroupStickySessionConfigPtrOutput)
}

// the cookie that is configured on the server. **NOTE:** This parameter exists if the `StickySession` parameter is set to `On` and the `StickySessionType` parameter is set to `server`.
func (o ServerGroupStickySessionConfigOutput) Cookie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupStickySessionConfig) *string { return v.Cookie }).(pulumi.StringPtrOutput)
}

// The timeout period of a cookie. The timeout period of a cookie. Unit: seconds. Valid values: `1` to `86400`. Default value: `1000`.
func (o ServerGroupStickySessionConfigOutput) CookieTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerGroupStickySessionConfig) *int { return v.CookieTimeout }).(pulumi.IntPtrOutput)
}

// Indicates whether sticky session is enabled. Values: `true` and `false`. Default value: `false`.  **NOTE:** This parameter exists if the `StickySession` parameter is set to `On`.
func (o ServerGroupStickySessionConfigOutput) StickySessionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServerGroupStickySessionConfig) *bool { return v.StickySessionEnabled }).(pulumi.BoolPtrOutput)
}

// The method that is used to handle a cookie. Values: `Server` and `Insert`.
func (o ServerGroupStickySessionConfigOutput) StickySessionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerGroupStickySessionConfig) *string { return v.StickySessionType }).(pulumi.StringPtrOutput)
}

type ServerGroupStickySessionConfigPtrOutput struct{ *pulumi.OutputState }

func (ServerGroupStickySessionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerGroupStickySessionConfig)(nil)).Elem()
}

func (o ServerGroupStickySessionConfigPtrOutput) ToServerGroupStickySessionConfigPtrOutput() ServerGroupStickySessionConfigPtrOutput {
	return o
}

func (o ServerGroupStickySessionConfigPtrOutput) ToServerGroupStickySessionConfigPtrOutputWithContext(ctx context.Context) ServerGroupStickySessionConfigPtrOutput {
	return o
}

func (o ServerGroupStickySessionConfigPtrOutput) Elem() ServerGroupStickySessionConfigOutput {
	return o.ApplyT(func(v *ServerGroupStickySessionConfig) ServerGroupStickySessionConfig { return *v }).(ServerGroupStickySessionConfigOutput)
}

// the cookie that is configured on the server. **NOTE:** This parameter exists if the `StickySession` parameter is set to `On` and the `StickySessionType` parameter is set to `server`.
func (o ServerGroupStickySessionConfigPtrOutput) Cookie() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupStickySessionConfig) *string {
		if v == nil {
			return nil
		}
		return v.Cookie
	}).(pulumi.StringPtrOutput)
}

// The timeout period of a cookie. The timeout period of a cookie. Unit: seconds. Valid values: `1` to `86400`. Default value: `1000`.
func (o ServerGroupStickySessionConfigPtrOutput) CookieTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerGroupStickySessionConfig) *int {
		if v == nil {
			return nil
		}
		return v.CookieTimeout
	}).(pulumi.IntPtrOutput)
}

// Indicates whether sticky session is enabled. Values: `true` and `false`. Default value: `false`.  **NOTE:** This parameter exists if the `StickySession` parameter is set to `On`.
func (o ServerGroupStickySessionConfigPtrOutput) StickySessionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerGroupStickySessionConfig) *bool {
		if v == nil {
			return nil
		}
		return v.StickySessionEnabled
	}).(pulumi.BoolPtrOutput)
}

// The method that is used to handle a cookie. Values: `Server` and `Insert`.
func (o ServerGroupStickySessionConfigPtrOutput) StickySessionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerGroupStickySessionConfig) *string {
		if v == nil {
			return nil
		}
		return v.StickySessionType
	}).(pulumi.StringPtrOutput)
}

type GetLoadBalancersBalancer struct {
	// The Access Logging Configuration Structure.
	AccessLogConfigs []GetLoadBalancersBalancerAccessLogConfig `pulumi:"accessLogConfigs"`
	// The method in which IP addresses are assigned. Valid values:  Fixed: The ALB instance
	// uses a fixed IP address. Dynamic (default): An IP address is dynamically assigned to each zone of the ALB
	// instance.
	AddressAllocatedMode string `pulumi:"addressAllocatedMode"`
	// The type of IP address that the ALB instance uses to provide services.
	AddressType string `pulumi:"addressType"`
	// The ID of the EIP bandwidth plan which is associated with an ALB instance that uses a
	// public IP address.
	BandwidthPackageId string `pulumi:"bandwidthPackageId"`
	// The creation time of the resource.
	CreateTime string `pulumi:"createTime"`
	// Remove the Protection Configuration.
	DeletionProtectionConfigs []GetLoadBalancersBalancerDeletionProtectionConfig `pulumi:"deletionProtectionConfigs"`
	// DNS Domain Name.
	DnsName string `pulumi:"dnsName"`
	// The ID of the Load Balancer.
	Id string `pulumi:"id"`
	// The configuration of the billing method.
	LoadBalancerBillingConfigs []GetLoadBalancersBalancerLoadBalancerBillingConfig `pulumi:"loadBalancerBillingConfigs"`
	// Load Balancing of the Service Status. Valid Values: `Abnormal` and `Normal`.
	LoadBalancerBussinessStatus string `pulumi:"loadBalancerBussinessStatus"`
	// The edition of the ALB instance.
	LoadBalancerEdition string `pulumi:"loadBalancerEdition"`
	// The first ID of the resource.
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// The name of the resource.
	LoadBalancerName string `pulumi:"loadBalancerName"`
	// The Load Balancing Operations Lock Configuration.
	LoadBalancerOperationLocks []GetLoadBalancersBalancerLoadBalancerOperationLock `pulumi:"loadBalancerOperationLocks"`
	// Modify the Protection Configuration.
	ModificationProtectionConfigs []GetLoadBalancersBalancerModificationProtectionConfig `pulumi:"modificationProtectionConfigs"`
	// The ID of the resource group.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The The load balancer status. Valid values: `Active`, `Configuring`, `CreateFailed`, `Inactive` and `Provisioning`.
	Status string `pulumi:"status"`
	// The tag of the resource.
	Tags map[string]interface{} `pulumi:"tags"`
	// The ID of the virtual private cloud (VPC) where the ALB instance is deployed.
	VpcId string `pulumi:"vpcId"`
	// The zones and vSwitches. You must specify at least two zones.
	ZoneMappings []GetLoadBalancersBalancerZoneMapping `pulumi:"zoneMappings"`
}

// GetLoadBalancersBalancerInput is an input type that accepts GetLoadBalancersBalancerArgs and GetLoadBalancersBalancerOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerInput` via:
//
//          GetLoadBalancersBalancerArgs{...}
type GetLoadBalancersBalancerInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerOutput() GetLoadBalancersBalancerOutput
	ToGetLoadBalancersBalancerOutputWithContext(context.Context) GetLoadBalancersBalancerOutput
}

type GetLoadBalancersBalancerArgs struct {
	// The Access Logging Configuration Structure.
	AccessLogConfigs GetLoadBalancersBalancerAccessLogConfigArrayInput `pulumi:"accessLogConfigs"`
	// The method in which IP addresses are assigned. Valid values:  Fixed: The ALB instance
	// uses a fixed IP address. Dynamic (default): An IP address is dynamically assigned to each zone of the ALB
	// instance.
	AddressAllocatedMode pulumi.StringInput `pulumi:"addressAllocatedMode"`
	// The type of IP address that the ALB instance uses to provide services.
	AddressType pulumi.StringInput `pulumi:"addressType"`
	// The ID of the EIP bandwidth plan which is associated with an ALB instance that uses a
	// public IP address.
	BandwidthPackageId pulumi.StringInput `pulumi:"bandwidthPackageId"`
	// The creation time of the resource.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Remove the Protection Configuration.
	DeletionProtectionConfigs GetLoadBalancersBalancerDeletionProtectionConfigArrayInput `pulumi:"deletionProtectionConfigs"`
	// DNS Domain Name.
	DnsName pulumi.StringInput `pulumi:"dnsName"`
	// The ID of the Load Balancer.
	Id pulumi.StringInput `pulumi:"id"`
	// The configuration of the billing method.
	LoadBalancerBillingConfigs GetLoadBalancersBalancerLoadBalancerBillingConfigArrayInput `pulumi:"loadBalancerBillingConfigs"`
	// Load Balancing of the Service Status. Valid Values: `Abnormal` and `Normal`.
	LoadBalancerBussinessStatus pulumi.StringInput `pulumi:"loadBalancerBussinessStatus"`
	// The edition of the ALB instance.
	LoadBalancerEdition pulumi.StringInput `pulumi:"loadBalancerEdition"`
	// The first ID of the resource.
	LoadBalancerId pulumi.StringInput `pulumi:"loadBalancerId"`
	// The name of the resource.
	LoadBalancerName pulumi.StringInput `pulumi:"loadBalancerName"`
	// The Load Balancing Operations Lock Configuration.
	LoadBalancerOperationLocks GetLoadBalancersBalancerLoadBalancerOperationLockArrayInput `pulumi:"loadBalancerOperationLocks"`
	// Modify the Protection Configuration.
	ModificationProtectionConfigs GetLoadBalancersBalancerModificationProtectionConfigArrayInput `pulumi:"modificationProtectionConfigs"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The The load balancer status. Valid values: `Active`, `Configuring`, `CreateFailed`, `Inactive` and `Provisioning`.
	Status pulumi.StringInput `pulumi:"status"`
	// The tag of the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
	// The ID of the virtual private cloud (VPC) where the ALB instance is deployed.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The zones and vSwitches. You must specify at least two zones.
	ZoneMappings GetLoadBalancersBalancerZoneMappingArrayInput `pulumi:"zoneMappings"`
}

func (GetLoadBalancersBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancer)(nil)).Elem()
}

func (i GetLoadBalancersBalancerArgs) ToGetLoadBalancersBalancerOutput() GetLoadBalancersBalancerOutput {
	return i.ToGetLoadBalancersBalancerOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerArgs) ToGetLoadBalancersBalancerOutputWithContext(ctx context.Context) GetLoadBalancersBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerOutput)
}

// GetLoadBalancersBalancerArrayInput is an input type that accepts GetLoadBalancersBalancerArray and GetLoadBalancersBalancerArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerArrayInput` via:
//
//          GetLoadBalancersBalancerArray{ GetLoadBalancersBalancerArgs{...} }
type GetLoadBalancersBalancerArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerArrayOutput() GetLoadBalancersBalancerArrayOutput
	ToGetLoadBalancersBalancerArrayOutputWithContext(context.Context) GetLoadBalancersBalancerArrayOutput
}

type GetLoadBalancersBalancerArray []GetLoadBalancersBalancerInput

func (GetLoadBalancersBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancer)(nil)).Elem()
}

func (i GetLoadBalancersBalancerArray) ToGetLoadBalancersBalancerArrayOutput() GetLoadBalancersBalancerArrayOutput {
	return i.ToGetLoadBalancersBalancerArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerArray) ToGetLoadBalancersBalancerArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerArrayOutput)
}

type GetLoadBalancersBalancerOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancer)(nil)).Elem()
}

func (o GetLoadBalancersBalancerOutput) ToGetLoadBalancersBalancerOutput() GetLoadBalancersBalancerOutput {
	return o
}

func (o GetLoadBalancersBalancerOutput) ToGetLoadBalancersBalancerOutputWithContext(ctx context.Context) GetLoadBalancersBalancerOutput {
	return o
}

// The Access Logging Configuration Structure.
func (o GetLoadBalancersBalancerOutput) AccessLogConfigs() GetLoadBalancersBalancerAccessLogConfigArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) []GetLoadBalancersBalancerAccessLogConfig { return v.AccessLogConfigs }).(GetLoadBalancersBalancerAccessLogConfigArrayOutput)
}

// The method in which IP addresses are assigned. Valid values:  Fixed: The ALB instance
// uses a fixed IP address. Dynamic (default): An IP address is dynamically assigned to each zone of the ALB
// instance.
func (o GetLoadBalancersBalancerOutput) AddressAllocatedMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.AddressAllocatedMode }).(pulumi.StringOutput)
}

// The type of IP address that the ALB instance uses to provide services.
func (o GetLoadBalancersBalancerOutput) AddressType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.AddressType }).(pulumi.StringOutput)
}

// The ID of the EIP bandwidth plan which is associated with an ALB instance that uses a
// public IP address.
func (o GetLoadBalancersBalancerOutput) BandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.BandwidthPackageId }).(pulumi.StringOutput)
}

// The creation time of the resource.
func (o GetLoadBalancersBalancerOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Remove the Protection Configuration.
func (o GetLoadBalancersBalancerOutput) DeletionProtectionConfigs() GetLoadBalancersBalancerDeletionProtectionConfigArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) []GetLoadBalancersBalancerDeletionProtectionConfig {
		return v.DeletionProtectionConfigs
	}).(GetLoadBalancersBalancerDeletionProtectionConfigArrayOutput)
}

// DNS Domain Name.
func (o GetLoadBalancersBalancerOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.DnsName }).(pulumi.StringOutput)
}

// The ID of the Load Balancer.
func (o GetLoadBalancersBalancerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.Id }).(pulumi.StringOutput)
}

// The configuration of the billing method.
func (o GetLoadBalancersBalancerOutput) LoadBalancerBillingConfigs() GetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) []GetLoadBalancersBalancerLoadBalancerBillingConfig {
		return v.LoadBalancerBillingConfigs
	}).(GetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput)
}

// Load Balancing of the Service Status. Valid Values: `Abnormal` and `Normal`.
func (o GetLoadBalancersBalancerOutput) LoadBalancerBussinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.LoadBalancerBussinessStatus }).(pulumi.StringOutput)
}

// The edition of the ALB instance.
func (o GetLoadBalancersBalancerOutput) LoadBalancerEdition() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.LoadBalancerEdition }).(pulumi.StringOutput)
}

// The first ID of the resource.
func (o GetLoadBalancersBalancerOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

// The name of the resource.
func (o GetLoadBalancersBalancerOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.LoadBalancerName }).(pulumi.StringOutput)
}

// The Load Balancing Operations Lock Configuration.
func (o GetLoadBalancersBalancerOutput) LoadBalancerOperationLocks() GetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) []GetLoadBalancersBalancerLoadBalancerOperationLock {
		return v.LoadBalancerOperationLocks
	}).(GetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput)
}

// Modify the Protection Configuration.
func (o GetLoadBalancersBalancerOutput) ModificationProtectionConfigs() GetLoadBalancersBalancerModificationProtectionConfigArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) []GetLoadBalancersBalancerModificationProtectionConfig {
		return v.ModificationProtectionConfigs
	}).(GetLoadBalancersBalancerModificationProtectionConfigArrayOutput)
}

// The ID of the resource group.
func (o GetLoadBalancersBalancerOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The The load balancer status. Valid values: `Active`, `Configuring`, `CreateFailed`, `Inactive` and `Provisioning`.
func (o GetLoadBalancersBalancerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.Status }).(pulumi.StringOutput)
}

// The tag of the resource.
func (o GetLoadBalancersBalancerOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// The ID of the virtual private cloud (VPC) where the ALB instance is deployed.
func (o GetLoadBalancersBalancerOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) string { return v.VpcId }).(pulumi.StringOutput)
}

// The zones and vSwitches. You must specify at least two zones.
func (o GetLoadBalancersBalancerOutput) ZoneMappings() GetLoadBalancersBalancerZoneMappingArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancer) []GetLoadBalancersBalancerZoneMapping { return v.ZoneMappings }).(GetLoadBalancersBalancerZoneMappingArrayOutput)
}

type GetLoadBalancersBalancerArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancer)(nil)).Elem()
}

func (o GetLoadBalancersBalancerArrayOutput) ToGetLoadBalancersBalancerArrayOutput() GetLoadBalancersBalancerArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerArrayOutput) ToGetLoadBalancersBalancerArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersBalancer {
		return vs[0].([]GetLoadBalancersBalancer)[vs[1].(int)]
	}).(GetLoadBalancersBalancerOutput)
}

type GetLoadBalancersBalancerAccessLogConfig struct {
	// The log service that access logs are shipped to.
	LogProject string `pulumi:"logProject"`
	// The logstore that access logs are shipped to.
	LogStore string `pulumi:"logStore"`
}

// GetLoadBalancersBalancerAccessLogConfigInput is an input type that accepts GetLoadBalancersBalancerAccessLogConfigArgs and GetLoadBalancersBalancerAccessLogConfigOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerAccessLogConfigInput` via:
//
//          GetLoadBalancersBalancerAccessLogConfigArgs{...}
type GetLoadBalancersBalancerAccessLogConfigInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerAccessLogConfigOutput() GetLoadBalancersBalancerAccessLogConfigOutput
	ToGetLoadBalancersBalancerAccessLogConfigOutputWithContext(context.Context) GetLoadBalancersBalancerAccessLogConfigOutput
}

type GetLoadBalancersBalancerAccessLogConfigArgs struct {
	// The log service that access logs are shipped to.
	LogProject pulumi.StringInput `pulumi:"logProject"`
	// The logstore that access logs are shipped to.
	LogStore pulumi.StringInput `pulumi:"logStore"`
}

func (GetLoadBalancersBalancerAccessLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerAccessLogConfig)(nil)).Elem()
}

func (i GetLoadBalancersBalancerAccessLogConfigArgs) ToGetLoadBalancersBalancerAccessLogConfigOutput() GetLoadBalancersBalancerAccessLogConfigOutput {
	return i.ToGetLoadBalancersBalancerAccessLogConfigOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerAccessLogConfigArgs) ToGetLoadBalancersBalancerAccessLogConfigOutputWithContext(ctx context.Context) GetLoadBalancersBalancerAccessLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerAccessLogConfigOutput)
}

// GetLoadBalancersBalancerAccessLogConfigArrayInput is an input type that accepts GetLoadBalancersBalancerAccessLogConfigArray and GetLoadBalancersBalancerAccessLogConfigArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerAccessLogConfigArrayInput` via:
//
//          GetLoadBalancersBalancerAccessLogConfigArray{ GetLoadBalancersBalancerAccessLogConfigArgs{...} }
type GetLoadBalancersBalancerAccessLogConfigArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerAccessLogConfigArrayOutput() GetLoadBalancersBalancerAccessLogConfigArrayOutput
	ToGetLoadBalancersBalancerAccessLogConfigArrayOutputWithContext(context.Context) GetLoadBalancersBalancerAccessLogConfigArrayOutput
}

type GetLoadBalancersBalancerAccessLogConfigArray []GetLoadBalancersBalancerAccessLogConfigInput

func (GetLoadBalancersBalancerAccessLogConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerAccessLogConfig)(nil)).Elem()
}

func (i GetLoadBalancersBalancerAccessLogConfigArray) ToGetLoadBalancersBalancerAccessLogConfigArrayOutput() GetLoadBalancersBalancerAccessLogConfigArrayOutput {
	return i.ToGetLoadBalancersBalancerAccessLogConfigArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerAccessLogConfigArray) ToGetLoadBalancersBalancerAccessLogConfigArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerAccessLogConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerAccessLogConfigArrayOutput)
}

type GetLoadBalancersBalancerAccessLogConfigOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerAccessLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerAccessLogConfig)(nil)).Elem()
}

func (o GetLoadBalancersBalancerAccessLogConfigOutput) ToGetLoadBalancersBalancerAccessLogConfigOutput() GetLoadBalancersBalancerAccessLogConfigOutput {
	return o
}

func (o GetLoadBalancersBalancerAccessLogConfigOutput) ToGetLoadBalancersBalancerAccessLogConfigOutputWithContext(ctx context.Context) GetLoadBalancersBalancerAccessLogConfigOutput {
	return o
}

// The log service that access logs are shipped to.
func (o GetLoadBalancersBalancerAccessLogConfigOutput) LogProject() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerAccessLogConfig) string { return v.LogProject }).(pulumi.StringOutput)
}

// The logstore that access logs are shipped to.
func (o GetLoadBalancersBalancerAccessLogConfigOutput) LogStore() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerAccessLogConfig) string { return v.LogStore }).(pulumi.StringOutput)
}

type GetLoadBalancersBalancerAccessLogConfigArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerAccessLogConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerAccessLogConfig)(nil)).Elem()
}

func (o GetLoadBalancersBalancerAccessLogConfigArrayOutput) ToGetLoadBalancersBalancerAccessLogConfigArrayOutput() GetLoadBalancersBalancerAccessLogConfigArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerAccessLogConfigArrayOutput) ToGetLoadBalancersBalancerAccessLogConfigArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerAccessLogConfigArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerAccessLogConfigArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersBalancerAccessLogConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersBalancerAccessLogConfig {
		return vs[0].([]GetLoadBalancersBalancerAccessLogConfig)[vs[1].(int)]
	}).(GetLoadBalancersBalancerAccessLogConfigOutput)
}

type GetLoadBalancersBalancerDeletionProtectionConfig struct {
	// Remove the Protection Status.
	Enabled bool `pulumi:"enabled"`
	// Deletion Protection Turn-on Time Use Greenwich Mean Time, in the Format of Yyyy-MM-ddTHH: mm:SSZ.
	EnabledTime string `pulumi:"enabledTime"`
}

// GetLoadBalancersBalancerDeletionProtectionConfigInput is an input type that accepts GetLoadBalancersBalancerDeletionProtectionConfigArgs and GetLoadBalancersBalancerDeletionProtectionConfigOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerDeletionProtectionConfigInput` via:
//
//          GetLoadBalancersBalancerDeletionProtectionConfigArgs{...}
type GetLoadBalancersBalancerDeletionProtectionConfigInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerDeletionProtectionConfigOutput() GetLoadBalancersBalancerDeletionProtectionConfigOutput
	ToGetLoadBalancersBalancerDeletionProtectionConfigOutputWithContext(context.Context) GetLoadBalancersBalancerDeletionProtectionConfigOutput
}

type GetLoadBalancersBalancerDeletionProtectionConfigArgs struct {
	// Remove the Protection Status.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Deletion Protection Turn-on Time Use Greenwich Mean Time, in the Format of Yyyy-MM-ddTHH: mm:SSZ.
	EnabledTime pulumi.StringInput `pulumi:"enabledTime"`
}

func (GetLoadBalancersBalancerDeletionProtectionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerDeletionProtectionConfig)(nil)).Elem()
}

func (i GetLoadBalancersBalancerDeletionProtectionConfigArgs) ToGetLoadBalancersBalancerDeletionProtectionConfigOutput() GetLoadBalancersBalancerDeletionProtectionConfigOutput {
	return i.ToGetLoadBalancersBalancerDeletionProtectionConfigOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerDeletionProtectionConfigArgs) ToGetLoadBalancersBalancerDeletionProtectionConfigOutputWithContext(ctx context.Context) GetLoadBalancersBalancerDeletionProtectionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerDeletionProtectionConfigOutput)
}

// GetLoadBalancersBalancerDeletionProtectionConfigArrayInput is an input type that accepts GetLoadBalancersBalancerDeletionProtectionConfigArray and GetLoadBalancersBalancerDeletionProtectionConfigArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerDeletionProtectionConfigArrayInput` via:
//
//          GetLoadBalancersBalancerDeletionProtectionConfigArray{ GetLoadBalancersBalancerDeletionProtectionConfigArgs{...} }
type GetLoadBalancersBalancerDeletionProtectionConfigArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerDeletionProtectionConfigArrayOutput() GetLoadBalancersBalancerDeletionProtectionConfigArrayOutput
	ToGetLoadBalancersBalancerDeletionProtectionConfigArrayOutputWithContext(context.Context) GetLoadBalancersBalancerDeletionProtectionConfigArrayOutput
}

type GetLoadBalancersBalancerDeletionProtectionConfigArray []GetLoadBalancersBalancerDeletionProtectionConfigInput

func (GetLoadBalancersBalancerDeletionProtectionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerDeletionProtectionConfig)(nil)).Elem()
}

func (i GetLoadBalancersBalancerDeletionProtectionConfigArray) ToGetLoadBalancersBalancerDeletionProtectionConfigArrayOutput() GetLoadBalancersBalancerDeletionProtectionConfigArrayOutput {
	return i.ToGetLoadBalancersBalancerDeletionProtectionConfigArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerDeletionProtectionConfigArray) ToGetLoadBalancersBalancerDeletionProtectionConfigArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerDeletionProtectionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerDeletionProtectionConfigArrayOutput)
}

type GetLoadBalancersBalancerDeletionProtectionConfigOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerDeletionProtectionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerDeletionProtectionConfig)(nil)).Elem()
}

func (o GetLoadBalancersBalancerDeletionProtectionConfigOutput) ToGetLoadBalancersBalancerDeletionProtectionConfigOutput() GetLoadBalancersBalancerDeletionProtectionConfigOutput {
	return o
}

func (o GetLoadBalancersBalancerDeletionProtectionConfigOutput) ToGetLoadBalancersBalancerDeletionProtectionConfigOutputWithContext(ctx context.Context) GetLoadBalancersBalancerDeletionProtectionConfigOutput {
	return o
}

// Remove the Protection Status.
func (o GetLoadBalancersBalancerDeletionProtectionConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerDeletionProtectionConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Deletion Protection Turn-on Time Use Greenwich Mean Time, in the Format of Yyyy-MM-ddTHH: mm:SSZ.
func (o GetLoadBalancersBalancerDeletionProtectionConfigOutput) EnabledTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerDeletionProtectionConfig) string { return v.EnabledTime }).(pulumi.StringOutput)
}

type GetLoadBalancersBalancerDeletionProtectionConfigArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerDeletionProtectionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerDeletionProtectionConfig)(nil)).Elem()
}

func (o GetLoadBalancersBalancerDeletionProtectionConfigArrayOutput) ToGetLoadBalancersBalancerDeletionProtectionConfigArrayOutput() GetLoadBalancersBalancerDeletionProtectionConfigArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerDeletionProtectionConfigArrayOutput) ToGetLoadBalancersBalancerDeletionProtectionConfigArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerDeletionProtectionConfigArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerDeletionProtectionConfigArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersBalancerDeletionProtectionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersBalancerDeletionProtectionConfig {
		return vs[0].([]GetLoadBalancersBalancerDeletionProtectionConfig)[vs[1].(int)]
	}).(GetLoadBalancersBalancerDeletionProtectionConfigOutput)
}

type GetLoadBalancersBalancerLoadBalancerBillingConfig struct {
	// The billing method of the ALB instance. Valid value: `PayAsYouGo`.
	PayType string `pulumi:"payType"`
}

// GetLoadBalancersBalancerLoadBalancerBillingConfigInput is an input type that accepts GetLoadBalancersBalancerLoadBalancerBillingConfigArgs and GetLoadBalancersBalancerLoadBalancerBillingConfigOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerLoadBalancerBillingConfigInput` via:
//
//          GetLoadBalancersBalancerLoadBalancerBillingConfigArgs{...}
type GetLoadBalancersBalancerLoadBalancerBillingConfigInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerLoadBalancerBillingConfigOutput() GetLoadBalancersBalancerLoadBalancerBillingConfigOutput
	ToGetLoadBalancersBalancerLoadBalancerBillingConfigOutputWithContext(context.Context) GetLoadBalancersBalancerLoadBalancerBillingConfigOutput
}

type GetLoadBalancersBalancerLoadBalancerBillingConfigArgs struct {
	// The billing method of the ALB instance. Valid value: `PayAsYouGo`.
	PayType pulumi.StringInput `pulumi:"payType"`
}

func (GetLoadBalancersBalancerLoadBalancerBillingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerLoadBalancerBillingConfig)(nil)).Elem()
}

func (i GetLoadBalancersBalancerLoadBalancerBillingConfigArgs) ToGetLoadBalancersBalancerLoadBalancerBillingConfigOutput() GetLoadBalancersBalancerLoadBalancerBillingConfigOutput {
	return i.ToGetLoadBalancersBalancerLoadBalancerBillingConfigOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerLoadBalancerBillingConfigArgs) ToGetLoadBalancersBalancerLoadBalancerBillingConfigOutputWithContext(ctx context.Context) GetLoadBalancersBalancerLoadBalancerBillingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerLoadBalancerBillingConfigOutput)
}

// GetLoadBalancersBalancerLoadBalancerBillingConfigArrayInput is an input type that accepts GetLoadBalancersBalancerLoadBalancerBillingConfigArray and GetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerLoadBalancerBillingConfigArrayInput` via:
//
//          GetLoadBalancersBalancerLoadBalancerBillingConfigArray{ GetLoadBalancersBalancerLoadBalancerBillingConfigArgs{...} }
type GetLoadBalancersBalancerLoadBalancerBillingConfigArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput() GetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput
	ToGetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutputWithContext(context.Context) GetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput
}

type GetLoadBalancersBalancerLoadBalancerBillingConfigArray []GetLoadBalancersBalancerLoadBalancerBillingConfigInput

func (GetLoadBalancersBalancerLoadBalancerBillingConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerLoadBalancerBillingConfig)(nil)).Elem()
}

func (i GetLoadBalancersBalancerLoadBalancerBillingConfigArray) ToGetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput() GetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput {
	return i.ToGetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerLoadBalancerBillingConfigArray) ToGetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput)
}

type GetLoadBalancersBalancerLoadBalancerBillingConfigOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerLoadBalancerBillingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerLoadBalancerBillingConfig)(nil)).Elem()
}

func (o GetLoadBalancersBalancerLoadBalancerBillingConfigOutput) ToGetLoadBalancersBalancerLoadBalancerBillingConfigOutput() GetLoadBalancersBalancerLoadBalancerBillingConfigOutput {
	return o
}

func (o GetLoadBalancersBalancerLoadBalancerBillingConfigOutput) ToGetLoadBalancersBalancerLoadBalancerBillingConfigOutputWithContext(ctx context.Context) GetLoadBalancersBalancerLoadBalancerBillingConfigOutput {
	return o
}

// The billing method of the ALB instance. Valid value: `PayAsYouGo`.
func (o GetLoadBalancersBalancerLoadBalancerBillingConfigOutput) PayType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerLoadBalancerBillingConfig) string { return v.PayType }).(pulumi.StringOutput)
}

type GetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerLoadBalancerBillingConfig)(nil)).Elem()
}

func (o GetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput) ToGetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput() GetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput) ToGetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersBalancerLoadBalancerBillingConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersBalancerLoadBalancerBillingConfig {
		return vs[0].([]GetLoadBalancersBalancerLoadBalancerBillingConfig)[vs[1].(int)]
	}).(GetLoadBalancersBalancerLoadBalancerBillingConfigOutput)
}

type GetLoadBalancersBalancerLoadBalancerOperationLock struct {
	// The Locking of the Reasons. In 'loadbalancerbussinessstatus' **Exception When Effective,.
	LockReason string `pulumi:"lockReason"`
	// The Locking of the Type. Valid Values: `securitylocked`,`relatedresourcelocked`, `financiallocked`, and `residuallocked`.
	LockType string `pulumi:"lockType"`
}

// GetLoadBalancersBalancerLoadBalancerOperationLockInput is an input type that accepts GetLoadBalancersBalancerLoadBalancerOperationLockArgs and GetLoadBalancersBalancerLoadBalancerOperationLockOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerLoadBalancerOperationLockInput` via:
//
//          GetLoadBalancersBalancerLoadBalancerOperationLockArgs{...}
type GetLoadBalancersBalancerLoadBalancerOperationLockInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerLoadBalancerOperationLockOutput() GetLoadBalancersBalancerLoadBalancerOperationLockOutput
	ToGetLoadBalancersBalancerLoadBalancerOperationLockOutputWithContext(context.Context) GetLoadBalancersBalancerLoadBalancerOperationLockOutput
}

type GetLoadBalancersBalancerLoadBalancerOperationLockArgs struct {
	// The Locking of the Reasons. In 'loadbalancerbussinessstatus' **Exception When Effective,.
	LockReason pulumi.StringInput `pulumi:"lockReason"`
	// The Locking of the Type. Valid Values: `securitylocked`,`relatedresourcelocked`, `financiallocked`, and `residuallocked`.
	LockType pulumi.StringInput `pulumi:"lockType"`
}

func (GetLoadBalancersBalancerLoadBalancerOperationLockArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerLoadBalancerOperationLock)(nil)).Elem()
}

func (i GetLoadBalancersBalancerLoadBalancerOperationLockArgs) ToGetLoadBalancersBalancerLoadBalancerOperationLockOutput() GetLoadBalancersBalancerLoadBalancerOperationLockOutput {
	return i.ToGetLoadBalancersBalancerLoadBalancerOperationLockOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerLoadBalancerOperationLockArgs) ToGetLoadBalancersBalancerLoadBalancerOperationLockOutputWithContext(ctx context.Context) GetLoadBalancersBalancerLoadBalancerOperationLockOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerLoadBalancerOperationLockOutput)
}

// GetLoadBalancersBalancerLoadBalancerOperationLockArrayInput is an input type that accepts GetLoadBalancersBalancerLoadBalancerOperationLockArray and GetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerLoadBalancerOperationLockArrayInput` via:
//
//          GetLoadBalancersBalancerLoadBalancerOperationLockArray{ GetLoadBalancersBalancerLoadBalancerOperationLockArgs{...} }
type GetLoadBalancersBalancerLoadBalancerOperationLockArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput() GetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput
	ToGetLoadBalancersBalancerLoadBalancerOperationLockArrayOutputWithContext(context.Context) GetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput
}

type GetLoadBalancersBalancerLoadBalancerOperationLockArray []GetLoadBalancersBalancerLoadBalancerOperationLockInput

func (GetLoadBalancersBalancerLoadBalancerOperationLockArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerLoadBalancerOperationLock)(nil)).Elem()
}

func (i GetLoadBalancersBalancerLoadBalancerOperationLockArray) ToGetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput() GetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput {
	return i.ToGetLoadBalancersBalancerLoadBalancerOperationLockArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerLoadBalancerOperationLockArray) ToGetLoadBalancersBalancerLoadBalancerOperationLockArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput)
}

type GetLoadBalancersBalancerLoadBalancerOperationLockOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerLoadBalancerOperationLockOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerLoadBalancerOperationLock)(nil)).Elem()
}

func (o GetLoadBalancersBalancerLoadBalancerOperationLockOutput) ToGetLoadBalancersBalancerLoadBalancerOperationLockOutput() GetLoadBalancersBalancerLoadBalancerOperationLockOutput {
	return o
}

func (o GetLoadBalancersBalancerLoadBalancerOperationLockOutput) ToGetLoadBalancersBalancerLoadBalancerOperationLockOutputWithContext(ctx context.Context) GetLoadBalancersBalancerLoadBalancerOperationLockOutput {
	return o
}

// The Locking of the Reasons. In 'loadbalancerbussinessstatus' **Exception When Effective,.
func (o GetLoadBalancersBalancerLoadBalancerOperationLockOutput) LockReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerLoadBalancerOperationLock) string { return v.LockReason }).(pulumi.StringOutput)
}

// The Locking of the Type. Valid Values: `securitylocked`,`relatedresourcelocked`, `financiallocked`, and `residuallocked`.
func (o GetLoadBalancersBalancerLoadBalancerOperationLockOutput) LockType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerLoadBalancerOperationLock) string { return v.LockType }).(pulumi.StringOutput)
}

type GetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerLoadBalancerOperationLock)(nil)).Elem()
}

func (o GetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput) ToGetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput() GetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput) ToGetLoadBalancersBalancerLoadBalancerOperationLockArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersBalancerLoadBalancerOperationLockOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersBalancerLoadBalancerOperationLock {
		return vs[0].([]GetLoadBalancersBalancerLoadBalancerOperationLock)[vs[1].(int)]
	}).(GetLoadBalancersBalancerLoadBalancerOperationLockOutput)
}

type GetLoadBalancersBalancerModificationProtectionConfig struct {
	// The reason for modification protection. This parameter must be 2 to 128 characters in length, and can contain letters, digits, periods, underscores, and hyphens. The reason must start with a letter. This parameter is required only if `ModificationProtectionStatus` is set to `ConsoleProtection`.
	Reason string `pulumi:"reason"`
	// The The load balancer status. Valid values: `Active`, `Configuring`, `CreateFailed`, `Inactive` and `Provisioning`.
	Status string `pulumi:"status"`
}

// GetLoadBalancersBalancerModificationProtectionConfigInput is an input type that accepts GetLoadBalancersBalancerModificationProtectionConfigArgs and GetLoadBalancersBalancerModificationProtectionConfigOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerModificationProtectionConfigInput` via:
//
//          GetLoadBalancersBalancerModificationProtectionConfigArgs{...}
type GetLoadBalancersBalancerModificationProtectionConfigInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerModificationProtectionConfigOutput() GetLoadBalancersBalancerModificationProtectionConfigOutput
	ToGetLoadBalancersBalancerModificationProtectionConfigOutputWithContext(context.Context) GetLoadBalancersBalancerModificationProtectionConfigOutput
}

type GetLoadBalancersBalancerModificationProtectionConfigArgs struct {
	// The reason for modification protection. This parameter must be 2 to 128 characters in length, and can contain letters, digits, periods, underscores, and hyphens. The reason must start with a letter. This parameter is required only if `ModificationProtectionStatus` is set to `ConsoleProtection`.
	Reason pulumi.StringInput `pulumi:"reason"`
	// The The load balancer status. Valid values: `Active`, `Configuring`, `CreateFailed`, `Inactive` and `Provisioning`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetLoadBalancersBalancerModificationProtectionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerModificationProtectionConfig)(nil)).Elem()
}

func (i GetLoadBalancersBalancerModificationProtectionConfigArgs) ToGetLoadBalancersBalancerModificationProtectionConfigOutput() GetLoadBalancersBalancerModificationProtectionConfigOutput {
	return i.ToGetLoadBalancersBalancerModificationProtectionConfigOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerModificationProtectionConfigArgs) ToGetLoadBalancersBalancerModificationProtectionConfigOutputWithContext(ctx context.Context) GetLoadBalancersBalancerModificationProtectionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerModificationProtectionConfigOutput)
}

// GetLoadBalancersBalancerModificationProtectionConfigArrayInput is an input type that accepts GetLoadBalancersBalancerModificationProtectionConfigArray and GetLoadBalancersBalancerModificationProtectionConfigArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerModificationProtectionConfigArrayInput` via:
//
//          GetLoadBalancersBalancerModificationProtectionConfigArray{ GetLoadBalancersBalancerModificationProtectionConfigArgs{...} }
type GetLoadBalancersBalancerModificationProtectionConfigArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerModificationProtectionConfigArrayOutput() GetLoadBalancersBalancerModificationProtectionConfigArrayOutput
	ToGetLoadBalancersBalancerModificationProtectionConfigArrayOutputWithContext(context.Context) GetLoadBalancersBalancerModificationProtectionConfigArrayOutput
}

type GetLoadBalancersBalancerModificationProtectionConfigArray []GetLoadBalancersBalancerModificationProtectionConfigInput

func (GetLoadBalancersBalancerModificationProtectionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerModificationProtectionConfig)(nil)).Elem()
}

func (i GetLoadBalancersBalancerModificationProtectionConfigArray) ToGetLoadBalancersBalancerModificationProtectionConfigArrayOutput() GetLoadBalancersBalancerModificationProtectionConfigArrayOutput {
	return i.ToGetLoadBalancersBalancerModificationProtectionConfigArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerModificationProtectionConfigArray) ToGetLoadBalancersBalancerModificationProtectionConfigArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerModificationProtectionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerModificationProtectionConfigArrayOutput)
}

type GetLoadBalancersBalancerModificationProtectionConfigOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerModificationProtectionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerModificationProtectionConfig)(nil)).Elem()
}

func (o GetLoadBalancersBalancerModificationProtectionConfigOutput) ToGetLoadBalancersBalancerModificationProtectionConfigOutput() GetLoadBalancersBalancerModificationProtectionConfigOutput {
	return o
}

func (o GetLoadBalancersBalancerModificationProtectionConfigOutput) ToGetLoadBalancersBalancerModificationProtectionConfigOutputWithContext(ctx context.Context) GetLoadBalancersBalancerModificationProtectionConfigOutput {
	return o
}

// The reason for modification protection. This parameter must be 2 to 128 characters in length, and can contain letters, digits, periods, underscores, and hyphens. The reason must start with a letter. This parameter is required only if `ModificationProtectionStatus` is set to `ConsoleProtection`.
func (o GetLoadBalancersBalancerModificationProtectionConfigOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerModificationProtectionConfig) string { return v.Reason }).(pulumi.StringOutput)
}

// The The load balancer status. Valid values: `Active`, `Configuring`, `CreateFailed`, `Inactive` and `Provisioning`.
func (o GetLoadBalancersBalancerModificationProtectionConfigOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerModificationProtectionConfig) string { return v.Status }).(pulumi.StringOutput)
}

type GetLoadBalancersBalancerModificationProtectionConfigArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerModificationProtectionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerModificationProtectionConfig)(nil)).Elem()
}

func (o GetLoadBalancersBalancerModificationProtectionConfigArrayOutput) ToGetLoadBalancersBalancerModificationProtectionConfigArrayOutput() GetLoadBalancersBalancerModificationProtectionConfigArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerModificationProtectionConfigArrayOutput) ToGetLoadBalancersBalancerModificationProtectionConfigArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerModificationProtectionConfigArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerModificationProtectionConfigArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersBalancerModificationProtectionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersBalancerModificationProtectionConfig {
		return vs[0].([]GetLoadBalancersBalancerModificationProtectionConfig)[vs[1].(int)]
	}).(GetLoadBalancersBalancerModificationProtectionConfigOutput)
}

type GetLoadBalancersBalancerZoneMapping struct {
	LoadBalancerAddresses []GetLoadBalancersBalancerZoneMappingLoadBalancerAddress `pulumi:"loadBalancerAddresses"`
	// The ID of the vSwitch that corresponds to the zone. Each zone can use only one vSwitch and subnet.
	VswitchId string `pulumi:"vswitchId"`
	// The ID of the zone to which the ALB instance belongs.
	ZoneId string `pulumi:"zoneId"`
}

// GetLoadBalancersBalancerZoneMappingInput is an input type that accepts GetLoadBalancersBalancerZoneMappingArgs and GetLoadBalancersBalancerZoneMappingOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerZoneMappingInput` via:
//
//          GetLoadBalancersBalancerZoneMappingArgs{...}
type GetLoadBalancersBalancerZoneMappingInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerZoneMappingOutput() GetLoadBalancersBalancerZoneMappingOutput
	ToGetLoadBalancersBalancerZoneMappingOutputWithContext(context.Context) GetLoadBalancersBalancerZoneMappingOutput
}

type GetLoadBalancersBalancerZoneMappingArgs struct {
	LoadBalancerAddresses GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayInput `pulumi:"loadBalancerAddresses"`
	// The ID of the vSwitch that corresponds to the zone. Each zone can use only one vSwitch and subnet.
	VswitchId pulumi.StringInput `pulumi:"vswitchId"`
	// The ID of the zone to which the ALB instance belongs.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetLoadBalancersBalancerZoneMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerZoneMapping)(nil)).Elem()
}

func (i GetLoadBalancersBalancerZoneMappingArgs) ToGetLoadBalancersBalancerZoneMappingOutput() GetLoadBalancersBalancerZoneMappingOutput {
	return i.ToGetLoadBalancersBalancerZoneMappingOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerZoneMappingArgs) ToGetLoadBalancersBalancerZoneMappingOutputWithContext(ctx context.Context) GetLoadBalancersBalancerZoneMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerZoneMappingOutput)
}

// GetLoadBalancersBalancerZoneMappingArrayInput is an input type that accepts GetLoadBalancersBalancerZoneMappingArray and GetLoadBalancersBalancerZoneMappingArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerZoneMappingArrayInput` via:
//
//          GetLoadBalancersBalancerZoneMappingArray{ GetLoadBalancersBalancerZoneMappingArgs{...} }
type GetLoadBalancersBalancerZoneMappingArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerZoneMappingArrayOutput() GetLoadBalancersBalancerZoneMappingArrayOutput
	ToGetLoadBalancersBalancerZoneMappingArrayOutputWithContext(context.Context) GetLoadBalancersBalancerZoneMappingArrayOutput
}

type GetLoadBalancersBalancerZoneMappingArray []GetLoadBalancersBalancerZoneMappingInput

func (GetLoadBalancersBalancerZoneMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerZoneMapping)(nil)).Elem()
}

func (i GetLoadBalancersBalancerZoneMappingArray) ToGetLoadBalancersBalancerZoneMappingArrayOutput() GetLoadBalancersBalancerZoneMappingArrayOutput {
	return i.ToGetLoadBalancersBalancerZoneMappingArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerZoneMappingArray) ToGetLoadBalancersBalancerZoneMappingArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerZoneMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerZoneMappingArrayOutput)
}

type GetLoadBalancersBalancerZoneMappingOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerZoneMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerZoneMapping)(nil)).Elem()
}

func (o GetLoadBalancersBalancerZoneMappingOutput) ToGetLoadBalancersBalancerZoneMappingOutput() GetLoadBalancersBalancerZoneMappingOutput {
	return o
}

func (o GetLoadBalancersBalancerZoneMappingOutput) ToGetLoadBalancersBalancerZoneMappingOutputWithContext(ctx context.Context) GetLoadBalancersBalancerZoneMappingOutput {
	return o
}

func (o GetLoadBalancersBalancerZoneMappingOutput) LoadBalancerAddresses() GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerZoneMapping) []GetLoadBalancersBalancerZoneMappingLoadBalancerAddress {
		return v.LoadBalancerAddresses
	}).(GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput)
}

// The ID of the vSwitch that corresponds to the zone. Each zone can use only one vSwitch and subnet.
func (o GetLoadBalancersBalancerZoneMappingOutput) VswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerZoneMapping) string { return v.VswitchId }).(pulumi.StringOutput)
}

// The ID of the zone to which the ALB instance belongs.
func (o GetLoadBalancersBalancerZoneMappingOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerZoneMapping) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetLoadBalancersBalancerZoneMappingArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerZoneMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerZoneMapping)(nil)).Elem()
}

func (o GetLoadBalancersBalancerZoneMappingArrayOutput) ToGetLoadBalancersBalancerZoneMappingArrayOutput() GetLoadBalancersBalancerZoneMappingArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerZoneMappingArrayOutput) ToGetLoadBalancersBalancerZoneMappingArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerZoneMappingArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerZoneMappingArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersBalancerZoneMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersBalancerZoneMapping {
		return vs[0].([]GetLoadBalancersBalancerZoneMapping)[vs[1].(int)]
	}).(GetLoadBalancersBalancerZoneMappingOutput)
}

type GetLoadBalancersBalancerZoneMappingLoadBalancerAddress struct {
	Address string `pulumi:"address"`
}

// GetLoadBalancersBalancerZoneMappingLoadBalancerAddressInput is an input type that accepts GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArgs and GetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerZoneMappingLoadBalancerAddressInput` via:
//
//          GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArgs{...}
type GetLoadBalancersBalancerZoneMappingLoadBalancerAddressInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput() GetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput
	ToGetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutputWithContext(context.Context) GetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput
}

type GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArgs struct {
	Address pulumi.StringInput `pulumi:"address"`
}

func (GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerZoneMappingLoadBalancerAddress)(nil)).Elem()
}

func (i GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArgs) ToGetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput() GetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput {
	return i.ToGetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArgs) ToGetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutputWithContext(ctx context.Context) GetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput)
}

// GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayInput is an input type that accepts GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArray and GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayInput` via:
//
//          GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArray{ GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArgs{...} }
type GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayInput interface {
	pulumi.Input

	ToGetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput() GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput
	ToGetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutputWithContext(context.Context) GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput
}

type GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArray []GetLoadBalancersBalancerZoneMappingLoadBalancerAddressInput

func (GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerZoneMappingLoadBalancerAddress)(nil)).Elem()
}

func (i GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArray) ToGetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput() GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput {
	return i.ToGetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArray) ToGetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput)
}

type GetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancersBalancerZoneMappingLoadBalancerAddress)(nil)).Elem()
}

func (o GetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput) ToGetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput() GetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput {
	return o
}

func (o GetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput) ToGetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutputWithContext(ctx context.Context) GetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput {
	return o
}

func (o GetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancersBalancerZoneMappingLoadBalancerAddress) string { return v.Address }).(pulumi.StringOutput)
}

type GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancersBalancerZoneMappingLoadBalancerAddress)(nil)).Elem()
}

func (o GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput) ToGetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput() GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput) ToGetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutputWithContext(ctx context.Context) GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput {
	return o
}

func (o GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput) Index(i pulumi.IntInput) GetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancersBalancerZoneMappingLoadBalancerAddress {
		return vs[0].([]GetLoadBalancersBalancerZoneMappingLoadBalancerAddress)[vs[1].(int)]
	}).(GetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput)
}

type GetSecurityPoliciesPolicy struct {
	// The supported cipher suites, which are determined by the TLS protocol version.
	Ciphers []string `pulumi:"ciphers"`
	// The ID of the Security Policy.
	Id string `pulumi:"id"`
	// The ID of the resource group.
	ResourceGroupId string `pulumi:"resourceGroupId"`
	// The first ID of the resource.
	SecurityPolicyId string `pulumi:"securityPolicyId"`
	// The name of the resource. The name must be 2 to 128 characters in length and must start with a letter. It can contain digits, periods (.), underscores (_), and hyphens (-).
	SecurityPolicyName string `pulumi:"securityPolicyName"`
	// The status of the resource.
	Status string `pulumi:"status"`
	// The TLS protocol versions that are supported. Valid values: TLSv1.0, TLSv1.1, TLSv1.2 and TLSv1.3.
	TlsVersions []string `pulumi:"tlsVersions"`
}

// GetSecurityPoliciesPolicyInput is an input type that accepts GetSecurityPoliciesPolicyArgs and GetSecurityPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetSecurityPoliciesPolicyInput` via:
//
//          GetSecurityPoliciesPolicyArgs{...}
type GetSecurityPoliciesPolicyInput interface {
	pulumi.Input

	ToGetSecurityPoliciesPolicyOutput() GetSecurityPoliciesPolicyOutput
	ToGetSecurityPoliciesPolicyOutputWithContext(context.Context) GetSecurityPoliciesPolicyOutput
}

type GetSecurityPoliciesPolicyArgs struct {
	// The supported cipher suites, which are determined by the TLS protocol version.
	Ciphers pulumi.StringArrayInput `pulumi:"ciphers"`
	// The ID of the Security Policy.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the resource group.
	ResourceGroupId pulumi.StringInput `pulumi:"resourceGroupId"`
	// The first ID of the resource.
	SecurityPolicyId pulumi.StringInput `pulumi:"securityPolicyId"`
	// The name of the resource. The name must be 2 to 128 characters in length and must start with a letter. It can contain digits, periods (.), underscores (_), and hyphens (-).
	SecurityPolicyName pulumi.StringInput `pulumi:"securityPolicyName"`
	// The status of the resource.
	Status pulumi.StringInput `pulumi:"status"`
	// The TLS protocol versions that are supported. Valid values: TLSv1.0, TLSv1.1, TLSv1.2 and TLSv1.3.
	TlsVersions pulumi.StringArrayInput `pulumi:"tlsVersions"`
}

func (GetSecurityPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityPoliciesPolicy)(nil)).Elem()
}

func (i GetSecurityPoliciesPolicyArgs) ToGetSecurityPoliciesPolicyOutput() GetSecurityPoliciesPolicyOutput {
	return i.ToGetSecurityPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetSecurityPoliciesPolicyArgs) ToGetSecurityPoliciesPolicyOutputWithContext(ctx context.Context) GetSecurityPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityPoliciesPolicyOutput)
}

// GetSecurityPoliciesPolicyArrayInput is an input type that accepts GetSecurityPoliciesPolicyArray and GetSecurityPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetSecurityPoliciesPolicyArrayInput` via:
//
//          GetSecurityPoliciesPolicyArray{ GetSecurityPoliciesPolicyArgs{...} }
type GetSecurityPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetSecurityPoliciesPolicyArrayOutput() GetSecurityPoliciesPolicyArrayOutput
	ToGetSecurityPoliciesPolicyArrayOutputWithContext(context.Context) GetSecurityPoliciesPolicyArrayOutput
}

type GetSecurityPoliciesPolicyArray []GetSecurityPoliciesPolicyInput

func (GetSecurityPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityPoliciesPolicy)(nil)).Elem()
}

func (i GetSecurityPoliciesPolicyArray) ToGetSecurityPoliciesPolicyArrayOutput() GetSecurityPoliciesPolicyArrayOutput {
	return i.ToGetSecurityPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetSecurityPoliciesPolicyArray) ToGetSecurityPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetSecurityPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityPoliciesPolicyArrayOutput)
}

type GetSecurityPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetSecurityPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityPoliciesPolicy)(nil)).Elem()
}

func (o GetSecurityPoliciesPolicyOutput) ToGetSecurityPoliciesPolicyOutput() GetSecurityPoliciesPolicyOutput {
	return o
}

func (o GetSecurityPoliciesPolicyOutput) ToGetSecurityPoliciesPolicyOutputWithContext(ctx context.Context) GetSecurityPoliciesPolicyOutput {
	return o
}

// The supported cipher suites, which are determined by the TLS protocol version.
func (o GetSecurityPoliciesPolicyOutput) Ciphers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityPoliciesPolicy) []string { return v.Ciphers }).(pulumi.StringArrayOutput)
}

// The ID of the Security Policy.
func (o GetSecurityPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the resource group.
func (o GetSecurityPoliciesPolicyOutput) ResourceGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesPolicy) string { return v.ResourceGroupId }).(pulumi.StringOutput)
}

// The first ID of the resource.
func (o GetSecurityPoliciesPolicyOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesPolicy) string { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

// The name of the resource. The name must be 2 to 128 characters in length and must start with a letter. It can contain digits, periods (.), underscores (_), and hyphens (-).
func (o GetSecurityPoliciesPolicyOutput) SecurityPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesPolicy) string { return v.SecurityPolicyName }).(pulumi.StringOutput)
}

// The status of the resource.
func (o GetSecurityPoliciesPolicyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityPoliciesPolicy) string { return v.Status }).(pulumi.StringOutput)
}

// The TLS protocol versions that are supported. Valid values: TLSv1.0, TLSv1.1, TLSv1.2 and TLSv1.3.
func (o GetSecurityPoliciesPolicyOutput) TlsVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityPoliciesPolicy) []string { return v.TlsVersions }).(pulumi.StringArrayOutput)
}

type GetSecurityPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityPoliciesPolicy)(nil)).Elem()
}

func (o GetSecurityPoliciesPolicyArrayOutput) ToGetSecurityPoliciesPolicyArrayOutput() GetSecurityPoliciesPolicyArrayOutput {
	return o
}

func (o GetSecurityPoliciesPolicyArrayOutput) ToGetSecurityPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetSecurityPoliciesPolicyArrayOutput {
	return o
}

func (o GetSecurityPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetSecurityPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityPoliciesPolicy {
		return vs[0].([]GetSecurityPoliciesPolicy)[vs[1].(int)]
	}).(GetSecurityPoliciesPolicyOutput)
}

type GetServerGroupsGroup struct {
	// The configuration of health checks.
	HealthCheckConfigs []GetServerGroupsGroupHealthCheckConfig `pulumi:"healthCheckConfigs"`
	// The ID of the Server Group.
	Id string `pulumi:"id"`
	// The server protocol. Valid values: `HTTP` and `HTTPS`. Default value: `HTTP`.
	Protocol string `pulumi:"protocol"`
	// The scheduling algorithm. Valid values: `Wrr`, `Wlc` and `Sch`.
	Scheduler string `pulumi:"scheduler"`
	// The first ID of the res ource.
	ServerGroupId string `pulumi:"serverGroupId"`
	// The name of the resource.
	ServerGroupName string `pulumi:"serverGroupName"`
	// The backend server.
	Servers []GetServerGroupsGroupServer `pulumi:"servers"`
	// The status of the resource. Valid values: `Provisioning`, `Available` and `Configuring`.
	Status string `pulumi:"status"`
	// The configuration of the sticky session.
	StickySessionConfigs []GetServerGroupsGroupStickySessionConfig `pulumi:"stickySessionConfigs"`
	// The ID of the VPC that you want to access.
	VpcId string `pulumi:"vpcId"`
}

// GetServerGroupsGroupInput is an input type that accepts GetServerGroupsGroupArgs and GetServerGroupsGroupOutput values.
// You can construct a concrete instance of `GetServerGroupsGroupInput` via:
//
//          GetServerGroupsGroupArgs{...}
type GetServerGroupsGroupInput interface {
	pulumi.Input

	ToGetServerGroupsGroupOutput() GetServerGroupsGroupOutput
	ToGetServerGroupsGroupOutputWithContext(context.Context) GetServerGroupsGroupOutput
}

type GetServerGroupsGroupArgs struct {
	// The configuration of health checks.
	HealthCheckConfigs GetServerGroupsGroupHealthCheckConfigArrayInput `pulumi:"healthCheckConfigs"`
	// The ID of the Server Group.
	Id pulumi.StringInput `pulumi:"id"`
	// The server protocol. Valid values: `HTTP` and `HTTPS`. Default value: `HTTP`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The scheduling algorithm. Valid values: `Wrr`, `Wlc` and `Sch`.
	Scheduler pulumi.StringInput `pulumi:"scheduler"`
	// The first ID of the res ource.
	ServerGroupId pulumi.StringInput `pulumi:"serverGroupId"`
	// The name of the resource.
	ServerGroupName pulumi.StringInput `pulumi:"serverGroupName"`
	// The backend server.
	Servers GetServerGroupsGroupServerArrayInput `pulumi:"servers"`
	// The status of the resource. Valid values: `Provisioning`, `Available` and `Configuring`.
	Status pulumi.StringInput `pulumi:"status"`
	// The configuration of the sticky session.
	StickySessionConfigs GetServerGroupsGroupStickySessionConfigArrayInput `pulumi:"stickySessionConfigs"`
	// The ID of the VPC that you want to access.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetServerGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerGroupsGroup)(nil)).Elem()
}

func (i GetServerGroupsGroupArgs) ToGetServerGroupsGroupOutput() GetServerGroupsGroupOutput {
	return i.ToGetServerGroupsGroupOutputWithContext(context.Background())
}

func (i GetServerGroupsGroupArgs) ToGetServerGroupsGroupOutputWithContext(ctx context.Context) GetServerGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerGroupsGroupOutput)
}

// GetServerGroupsGroupArrayInput is an input type that accepts GetServerGroupsGroupArray and GetServerGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetServerGroupsGroupArrayInput` via:
//
//          GetServerGroupsGroupArray{ GetServerGroupsGroupArgs{...} }
type GetServerGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetServerGroupsGroupArrayOutput() GetServerGroupsGroupArrayOutput
	ToGetServerGroupsGroupArrayOutputWithContext(context.Context) GetServerGroupsGroupArrayOutput
}

type GetServerGroupsGroupArray []GetServerGroupsGroupInput

func (GetServerGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerGroupsGroup)(nil)).Elem()
}

func (i GetServerGroupsGroupArray) ToGetServerGroupsGroupArrayOutput() GetServerGroupsGroupArrayOutput {
	return i.ToGetServerGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetServerGroupsGroupArray) ToGetServerGroupsGroupArrayOutputWithContext(ctx context.Context) GetServerGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerGroupsGroupArrayOutput)
}

type GetServerGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetServerGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerGroupsGroup)(nil)).Elem()
}

func (o GetServerGroupsGroupOutput) ToGetServerGroupsGroupOutput() GetServerGroupsGroupOutput {
	return o
}

func (o GetServerGroupsGroupOutput) ToGetServerGroupsGroupOutputWithContext(ctx context.Context) GetServerGroupsGroupOutput {
	return o
}

// The configuration of health checks.
func (o GetServerGroupsGroupOutput) HealthCheckConfigs() GetServerGroupsGroupHealthCheckConfigArrayOutput {
	return o.ApplyT(func(v GetServerGroupsGroup) []GetServerGroupsGroupHealthCheckConfig { return v.HealthCheckConfigs }).(GetServerGroupsGroupHealthCheckConfigArrayOutput)
}

// The ID of the Server Group.
func (o GetServerGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The server protocol. Valid values: `HTTP` and `HTTPS`. Default value: `HTTP`.
func (o GetServerGroupsGroupOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroup) string { return v.Protocol }).(pulumi.StringOutput)
}

// The scheduling algorithm. Valid values: `Wrr`, `Wlc` and `Sch`.
func (o GetServerGroupsGroupOutput) Scheduler() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroup) string { return v.Scheduler }).(pulumi.StringOutput)
}

// The first ID of the res ource.
func (o GetServerGroupsGroupOutput) ServerGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroup) string { return v.ServerGroupId }).(pulumi.StringOutput)
}

// The name of the resource.
func (o GetServerGroupsGroupOutput) ServerGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroup) string { return v.ServerGroupName }).(pulumi.StringOutput)
}

// The backend server.
func (o GetServerGroupsGroupOutput) Servers() GetServerGroupsGroupServerArrayOutput {
	return o.ApplyT(func(v GetServerGroupsGroup) []GetServerGroupsGroupServer { return v.Servers }).(GetServerGroupsGroupServerArrayOutput)
}

// The status of the resource. Valid values: `Provisioning`, `Available` and `Configuring`.
func (o GetServerGroupsGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroup) string { return v.Status }).(pulumi.StringOutput)
}

// The configuration of the sticky session.
func (o GetServerGroupsGroupOutput) StickySessionConfigs() GetServerGroupsGroupStickySessionConfigArrayOutput {
	return o.ApplyT(func(v GetServerGroupsGroup) []GetServerGroupsGroupStickySessionConfig { return v.StickySessionConfigs }).(GetServerGroupsGroupStickySessionConfigArrayOutput)
}

// The ID of the VPC that you want to access.
func (o GetServerGroupsGroupOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroup) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetServerGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetServerGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerGroupsGroup)(nil)).Elem()
}

func (o GetServerGroupsGroupArrayOutput) ToGetServerGroupsGroupArrayOutput() GetServerGroupsGroupArrayOutput {
	return o
}

func (o GetServerGroupsGroupArrayOutput) ToGetServerGroupsGroupArrayOutputWithContext(ctx context.Context) GetServerGroupsGroupArrayOutput {
	return o
}

func (o GetServerGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetServerGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerGroupsGroup {
		return vs[0].([]GetServerGroupsGroup)[vs[1].(int)]
	}).(GetServerGroupsGroupOutput)
}

type GetServerGroupsGroupHealthCheckConfig struct {
	// The status code for a successful health check. Multiple status codes can be specified as a list. Valid values: `http2xx`, `http3xx`, `http4xx`, and `http5xx`. Default value: `http2xx`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
	HealthCheckCodes []string `pulumi:"healthCheckCodes"`
	// The port of the backend server that is used for health checks. Valid values: `0` to `65535`. Default value: `0`. A value of `0` indicates that a backend server port is used for health checks.
	HealthCheckConnectPort int `pulumi:"healthCheckConnectPort"`
	// Indicates whether health checks are enabled. Valid values: `true`, `false`. Default value: `true`.
	HealthCheckEnabled bool `pulumi:"healthCheckEnabled"`
	// The domain name that is used for health checks.
	HealthCheckHost string `pulumi:"healthCheckHost"`
	// HTTP protocol version. Valid values: `HTTP1.0` and `HTTP1.1`. Default value: `HTTP1.1`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
	HealthCheckHttpVersion string `pulumi:"healthCheckHttpVersion"`
	// The time interval between two consecutive health checks. Unit: seconds. Valid values: `1` to `50`. Default value: `2`.
	HealthCheckInterval int `pulumi:"healthCheckInterval"`
	// Health check method. Valid values: `GET` and `HEAD`. Default: `GET`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
	HealthCheckMethod string `pulumi:"healthCheckMethod"`
	// The forwarding rule path of health checks. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
	HealthCheckPath string `pulumi:"healthCheckPath"`
	// Health check protocol. Valid values: `HTTP` and `TCP`.
	HealthCheckProtocol string `pulumi:"healthCheckProtocol"`
	// The timeout period of a health check response. If a backend Elastic Compute Service (ECS) instance does not send an expected response within the specified period of time, the ECS instance is considered unhealthy. Unit: seconds. Valid values: `1` to `300`. Default value: `5`. **NOTE:** If the value of the `HealthCHeckTimeout` parameter is smaller than that of the `HealthCheckInterval` parameter, the value of the `HealthCHeckTimeout` parameter is ignored and the value of the `HealthCheckInterval` parameter is regarded as the timeout period.
	HealthCheckTimeout int `pulumi:"healthCheckTimeout"`
	// The number of health checks that an unhealthy backend server must pass consecutively before it is declared healthy. In this case, the health check state is changed from fail to success. Valid values: `2` to `10`. Default value: `3`.
	HealthyThreshold int `pulumi:"healthyThreshold"`
	// The number of consecutive health checks that a healthy backend server must consecutively fail before it is declared unhealthy. In this case, the health check state is changed from success to fail. Valid values: `2` to `10`. Default value: `3`.
	UnhealthyThreshold int `pulumi:"unhealthyThreshold"`
}

// GetServerGroupsGroupHealthCheckConfigInput is an input type that accepts GetServerGroupsGroupHealthCheckConfigArgs and GetServerGroupsGroupHealthCheckConfigOutput values.
// You can construct a concrete instance of `GetServerGroupsGroupHealthCheckConfigInput` via:
//
//          GetServerGroupsGroupHealthCheckConfigArgs{...}
type GetServerGroupsGroupHealthCheckConfigInput interface {
	pulumi.Input

	ToGetServerGroupsGroupHealthCheckConfigOutput() GetServerGroupsGroupHealthCheckConfigOutput
	ToGetServerGroupsGroupHealthCheckConfigOutputWithContext(context.Context) GetServerGroupsGroupHealthCheckConfigOutput
}

type GetServerGroupsGroupHealthCheckConfigArgs struct {
	// The status code for a successful health check. Multiple status codes can be specified as a list. Valid values: `http2xx`, `http3xx`, `http4xx`, and `http5xx`. Default value: `http2xx`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
	HealthCheckCodes pulumi.StringArrayInput `pulumi:"healthCheckCodes"`
	// The port of the backend server that is used for health checks. Valid values: `0` to `65535`. Default value: `0`. A value of `0` indicates that a backend server port is used for health checks.
	HealthCheckConnectPort pulumi.IntInput `pulumi:"healthCheckConnectPort"`
	// Indicates whether health checks are enabled. Valid values: `true`, `false`. Default value: `true`.
	HealthCheckEnabled pulumi.BoolInput `pulumi:"healthCheckEnabled"`
	// The domain name that is used for health checks.
	HealthCheckHost pulumi.StringInput `pulumi:"healthCheckHost"`
	// HTTP protocol version. Valid values: `HTTP1.0` and `HTTP1.1`. Default value: `HTTP1.1`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
	HealthCheckHttpVersion pulumi.StringInput `pulumi:"healthCheckHttpVersion"`
	// The time interval between two consecutive health checks. Unit: seconds. Valid values: `1` to `50`. Default value: `2`.
	HealthCheckInterval pulumi.IntInput `pulumi:"healthCheckInterval"`
	// Health check method. Valid values: `GET` and `HEAD`. Default: `GET`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
	HealthCheckMethod pulumi.StringInput `pulumi:"healthCheckMethod"`
	// The forwarding rule path of health checks. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
	HealthCheckPath pulumi.StringInput `pulumi:"healthCheckPath"`
	// Health check protocol. Valid values: `HTTP` and `TCP`.
	HealthCheckProtocol pulumi.StringInput `pulumi:"healthCheckProtocol"`
	// The timeout period of a health check response. If a backend Elastic Compute Service (ECS) instance does not send an expected response within the specified period of time, the ECS instance is considered unhealthy. Unit: seconds. Valid values: `1` to `300`. Default value: `5`. **NOTE:** If the value of the `HealthCHeckTimeout` parameter is smaller than that of the `HealthCheckInterval` parameter, the value of the `HealthCHeckTimeout` parameter is ignored and the value of the `HealthCheckInterval` parameter is regarded as the timeout period.
	HealthCheckTimeout pulumi.IntInput `pulumi:"healthCheckTimeout"`
	// The number of health checks that an unhealthy backend server must pass consecutively before it is declared healthy. In this case, the health check state is changed from fail to success. Valid values: `2` to `10`. Default value: `3`.
	HealthyThreshold pulumi.IntInput `pulumi:"healthyThreshold"`
	// The number of consecutive health checks that a healthy backend server must consecutively fail before it is declared unhealthy. In this case, the health check state is changed from success to fail. Valid values: `2` to `10`. Default value: `3`.
	UnhealthyThreshold pulumi.IntInput `pulumi:"unhealthyThreshold"`
}

func (GetServerGroupsGroupHealthCheckConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerGroupsGroupHealthCheckConfig)(nil)).Elem()
}

func (i GetServerGroupsGroupHealthCheckConfigArgs) ToGetServerGroupsGroupHealthCheckConfigOutput() GetServerGroupsGroupHealthCheckConfigOutput {
	return i.ToGetServerGroupsGroupHealthCheckConfigOutputWithContext(context.Background())
}

func (i GetServerGroupsGroupHealthCheckConfigArgs) ToGetServerGroupsGroupHealthCheckConfigOutputWithContext(ctx context.Context) GetServerGroupsGroupHealthCheckConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerGroupsGroupHealthCheckConfigOutput)
}

// GetServerGroupsGroupHealthCheckConfigArrayInput is an input type that accepts GetServerGroupsGroupHealthCheckConfigArray and GetServerGroupsGroupHealthCheckConfigArrayOutput values.
// You can construct a concrete instance of `GetServerGroupsGroupHealthCheckConfigArrayInput` via:
//
//          GetServerGroupsGroupHealthCheckConfigArray{ GetServerGroupsGroupHealthCheckConfigArgs{...} }
type GetServerGroupsGroupHealthCheckConfigArrayInput interface {
	pulumi.Input

	ToGetServerGroupsGroupHealthCheckConfigArrayOutput() GetServerGroupsGroupHealthCheckConfigArrayOutput
	ToGetServerGroupsGroupHealthCheckConfigArrayOutputWithContext(context.Context) GetServerGroupsGroupHealthCheckConfigArrayOutput
}

type GetServerGroupsGroupHealthCheckConfigArray []GetServerGroupsGroupHealthCheckConfigInput

func (GetServerGroupsGroupHealthCheckConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerGroupsGroupHealthCheckConfig)(nil)).Elem()
}

func (i GetServerGroupsGroupHealthCheckConfigArray) ToGetServerGroupsGroupHealthCheckConfigArrayOutput() GetServerGroupsGroupHealthCheckConfigArrayOutput {
	return i.ToGetServerGroupsGroupHealthCheckConfigArrayOutputWithContext(context.Background())
}

func (i GetServerGroupsGroupHealthCheckConfigArray) ToGetServerGroupsGroupHealthCheckConfigArrayOutputWithContext(ctx context.Context) GetServerGroupsGroupHealthCheckConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerGroupsGroupHealthCheckConfigArrayOutput)
}

type GetServerGroupsGroupHealthCheckConfigOutput struct{ *pulumi.OutputState }

func (GetServerGroupsGroupHealthCheckConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerGroupsGroupHealthCheckConfig)(nil)).Elem()
}

func (o GetServerGroupsGroupHealthCheckConfigOutput) ToGetServerGroupsGroupHealthCheckConfigOutput() GetServerGroupsGroupHealthCheckConfigOutput {
	return o
}

func (o GetServerGroupsGroupHealthCheckConfigOutput) ToGetServerGroupsGroupHealthCheckConfigOutputWithContext(ctx context.Context) GetServerGroupsGroupHealthCheckConfigOutput {
	return o
}

// The status code for a successful health check. Multiple status codes can be specified as a list. Valid values: `http2xx`, `http3xx`, `http4xx`, and `http5xx`. Default value: `http2xx`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
func (o GetServerGroupsGroupHealthCheckConfigOutput) HealthCheckCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServerGroupsGroupHealthCheckConfig) []string { return v.HealthCheckCodes }).(pulumi.StringArrayOutput)
}

// The port of the backend server that is used for health checks. Valid values: `0` to `65535`. Default value: `0`. A value of `0` indicates that a backend server port is used for health checks.
func (o GetServerGroupsGroupHealthCheckConfigOutput) HealthCheckConnectPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerGroupsGroupHealthCheckConfig) int { return v.HealthCheckConnectPort }).(pulumi.IntOutput)
}

// Indicates whether health checks are enabled. Valid values: `true`, `false`. Default value: `true`.
func (o GetServerGroupsGroupHealthCheckConfigOutput) HealthCheckEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerGroupsGroupHealthCheckConfig) bool { return v.HealthCheckEnabled }).(pulumi.BoolOutput)
}

// The domain name that is used for health checks.
func (o GetServerGroupsGroupHealthCheckConfigOutput) HealthCheckHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroupHealthCheckConfig) string { return v.HealthCheckHost }).(pulumi.StringOutput)
}

// HTTP protocol version. Valid values: `HTTP1.0` and `HTTP1.1`. Default value: `HTTP1.1`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
func (o GetServerGroupsGroupHealthCheckConfigOutput) HealthCheckHttpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroupHealthCheckConfig) string { return v.HealthCheckHttpVersion }).(pulumi.StringOutput)
}

// The time interval between two consecutive health checks. Unit: seconds. Valid values: `1` to `50`. Default value: `2`.
func (o GetServerGroupsGroupHealthCheckConfigOutput) HealthCheckInterval() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerGroupsGroupHealthCheckConfig) int { return v.HealthCheckInterval }).(pulumi.IntOutput)
}

// Health check method. Valid values: `GET` and `HEAD`. Default: `GET`. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
func (o GetServerGroupsGroupHealthCheckConfigOutput) HealthCheckMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroupHealthCheckConfig) string { return v.HealthCheckMethod }).(pulumi.StringOutput)
}

// The forwarding rule path of health checks. **NOTE:** This parameter exists if the `HealthCheckProtocol` parameter is set to `HTTP`.
func (o GetServerGroupsGroupHealthCheckConfigOutput) HealthCheckPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroupHealthCheckConfig) string { return v.HealthCheckPath }).(pulumi.StringOutput)
}

// Health check protocol. Valid values: `HTTP` and `TCP`.
func (o GetServerGroupsGroupHealthCheckConfigOutput) HealthCheckProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroupHealthCheckConfig) string { return v.HealthCheckProtocol }).(pulumi.StringOutput)
}

// The timeout period of a health check response. If a backend Elastic Compute Service (ECS) instance does not send an expected response within the specified period of time, the ECS instance is considered unhealthy. Unit: seconds. Valid values: `1` to `300`. Default value: `5`. **NOTE:** If the value of the `HealthCHeckTimeout` parameter is smaller than that of the `HealthCheckInterval` parameter, the value of the `HealthCHeckTimeout` parameter is ignored and the value of the `HealthCheckInterval` parameter is regarded as the timeout period.
func (o GetServerGroupsGroupHealthCheckConfigOutput) HealthCheckTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerGroupsGroupHealthCheckConfig) int { return v.HealthCheckTimeout }).(pulumi.IntOutput)
}

// The number of health checks that an unhealthy backend server must pass consecutively before it is declared healthy. In this case, the health check state is changed from fail to success. Valid values: `2` to `10`. Default value: `3`.
func (o GetServerGroupsGroupHealthCheckConfigOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerGroupsGroupHealthCheckConfig) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

// The number of consecutive health checks that a healthy backend server must consecutively fail before it is declared unhealthy. In this case, the health check state is changed from success to fail. Valid values: `2` to `10`. Default value: `3`.
func (o GetServerGroupsGroupHealthCheckConfigOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerGroupsGroupHealthCheckConfig) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type GetServerGroupsGroupHealthCheckConfigArrayOutput struct{ *pulumi.OutputState }

func (GetServerGroupsGroupHealthCheckConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerGroupsGroupHealthCheckConfig)(nil)).Elem()
}

func (o GetServerGroupsGroupHealthCheckConfigArrayOutput) ToGetServerGroupsGroupHealthCheckConfigArrayOutput() GetServerGroupsGroupHealthCheckConfigArrayOutput {
	return o
}

func (o GetServerGroupsGroupHealthCheckConfigArrayOutput) ToGetServerGroupsGroupHealthCheckConfigArrayOutputWithContext(ctx context.Context) GetServerGroupsGroupHealthCheckConfigArrayOutput {
	return o
}

func (o GetServerGroupsGroupHealthCheckConfigArrayOutput) Index(i pulumi.IntInput) GetServerGroupsGroupHealthCheckConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerGroupsGroupHealthCheckConfig {
		return vs[0].([]GetServerGroupsGroupHealthCheckConfig)[vs[1].(int)]
	}).(GetServerGroupsGroupHealthCheckConfigOutput)
}

type GetServerGroupsGroupServer struct {
	// The description of the server.
	Description string `pulumi:"description"`
	// The port that is used by the server. Valid values: `1` to `65535`.
	Port int `pulumi:"port"`
	// The ID of the ECS instance, ENI instance or ECI instance.
	ServerId string `pulumi:"serverId"`
	// The IP address of the ENI instance when it is in the inclusive ENI mode.
	ServerIp string `pulumi:"serverIp"`
	// The type of the server. The type of the server. Valid values: `Ecs`, `Eni` and `Eci`.
	ServerType string `pulumi:"serverType"`
	// The status of the resource. Valid values: `Provisioning`, `Available` and `Configuring`.
	Status string `pulumi:"status"`
	// The weight of the server.  Valid values: `0` to `100`. Default value: `100`. If the value is set to `0`, no requests are forwarded to the server.
	Weight int `pulumi:"weight"`
}

// GetServerGroupsGroupServerInput is an input type that accepts GetServerGroupsGroupServerArgs and GetServerGroupsGroupServerOutput values.
// You can construct a concrete instance of `GetServerGroupsGroupServerInput` via:
//
//          GetServerGroupsGroupServerArgs{...}
type GetServerGroupsGroupServerInput interface {
	pulumi.Input

	ToGetServerGroupsGroupServerOutput() GetServerGroupsGroupServerOutput
	ToGetServerGroupsGroupServerOutputWithContext(context.Context) GetServerGroupsGroupServerOutput
}

type GetServerGroupsGroupServerArgs struct {
	// The description of the server.
	Description pulumi.StringInput `pulumi:"description"`
	// The port that is used by the server. Valid values: `1` to `65535`.
	Port pulumi.IntInput `pulumi:"port"`
	// The ID of the ECS instance, ENI instance or ECI instance.
	ServerId pulumi.StringInput `pulumi:"serverId"`
	// The IP address of the ENI instance when it is in the inclusive ENI mode.
	ServerIp pulumi.StringInput `pulumi:"serverIp"`
	// The type of the server. The type of the server. Valid values: `Ecs`, `Eni` and `Eci`.
	ServerType pulumi.StringInput `pulumi:"serverType"`
	// The status of the resource. Valid values: `Provisioning`, `Available` and `Configuring`.
	Status pulumi.StringInput `pulumi:"status"`
	// The weight of the server.  Valid values: `0` to `100`. Default value: `100`. If the value is set to `0`, no requests are forwarded to the server.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetServerGroupsGroupServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerGroupsGroupServer)(nil)).Elem()
}

func (i GetServerGroupsGroupServerArgs) ToGetServerGroupsGroupServerOutput() GetServerGroupsGroupServerOutput {
	return i.ToGetServerGroupsGroupServerOutputWithContext(context.Background())
}

func (i GetServerGroupsGroupServerArgs) ToGetServerGroupsGroupServerOutputWithContext(ctx context.Context) GetServerGroupsGroupServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerGroupsGroupServerOutput)
}

// GetServerGroupsGroupServerArrayInput is an input type that accepts GetServerGroupsGroupServerArray and GetServerGroupsGroupServerArrayOutput values.
// You can construct a concrete instance of `GetServerGroupsGroupServerArrayInput` via:
//
//          GetServerGroupsGroupServerArray{ GetServerGroupsGroupServerArgs{...} }
type GetServerGroupsGroupServerArrayInput interface {
	pulumi.Input

	ToGetServerGroupsGroupServerArrayOutput() GetServerGroupsGroupServerArrayOutput
	ToGetServerGroupsGroupServerArrayOutputWithContext(context.Context) GetServerGroupsGroupServerArrayOutput
}

type GetServerGroupsGroupServerArray []GetServerGroupsGroupServerInput

func (GetServerGroupsGroupServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerGroupsGroupServer)(nil)).Elem()
}

func (i GetServerGroupsGroupServerArray) ToGetServerGroupsGroupServerArrayOutput() GetServerGroupsGroupServerArrayOutput {
	return i.ToGetServerGroupsGroupServerArrayOutputWithContext(context.Background())
}

func (i GetServerGroupsGroupServerArray) ToGetServerGroupsGroupServerArrayOutputWithContext(ctx context.Context) GetServerGroupsGroupServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerGroupsGroupServerArrayOutput)
}

type GetServerGroupsGroupServerOutput struct{ *pulumi.OutputState }

func (GetServerGroupsGroupServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerGroupsGroupServer)(nil)).Elem()
}

func (o GetServerGroupsGroupServerOutput) ToGetServerGroupsGroupServerOutput() GetServerGroupsGroupServerOutput {
	return o
}

func (o GetServerGroupsGroupServerOutput) ToGetServerGroupsGroupServerOutputWithContext(ctx context.Context) GetServerGroupsGroupServerOutput {
	return o
}

// The description of the server.
func (o GetServerGroupsGroupServerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroupServer) string { return v.Description }).(pulumi.StringOutput)
}

// The port that is used by the server. Valid values: `1` to `65535`.
func (o GetServerGroupsGroupServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerGroupsGroupServer) int { return v.Port }).(pulumi.IntOutput)
}

// The ID of the ECS instance, ENI instance or ECI instance.
func (o GetServerGroupsGroupServerOutput) ServerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroupServer) string { return v.ServerId }).(pulumi.StringOutput)
}

// The IP address of the ENI instance when it is in the inclusive ENI mode.
func (o GetServerGroupsGroupServerOutput) ServerIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroupServer) string { return v.ServerIp }).(pulumi.StringOutput)
}

// The type of the server. The type of the server. Valid values: `Ecs`, `Eni` and `Eci`.
func (o GetServerGroupsGroupServerOutput) ServerType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroupServer) string { return v.ServerType }).(pulumi.StringOutput)
}

// The status of the resource. Valid values: `Provisioning`, `Available` and `Configuring`.
func (o GetServerGroupsGroupServerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroupServer) string { return v.Status }).(pulumi.StringOutput)
}

// The weight of the server.  Valid values: `0` to `100`. Default value: `100`. If the value is set to `0`, no requests are forwarded to the server.
func (o GetServerGroupsGroupServerOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerGroupsGroupServer) int { return v.Weight }).(pulumi.IntOutput)
}

type GetServerGroupsGroupServerArrayOutput struct{ *pulumi.OutputState }

func (GetServerGroupsGroupServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerGroupsGroupServer)(nil)).Elem()
}

func (o GetServerGroupsGroupServerArrayOutput) ToGetServerGroupsGroupServerArrayOutput() GetServerGroupsGroupServerArrayOutput {
	return o
}

func (o GetServerGroupsGroupServerArrayOutput) ToGetServerGroupsGroupServerArrayOutputWithContext(ctx context.Context) GetServerGroupsGroupServerArrayOutput {
	return o
}

func (o GetServerGroupsGroupServerArrayOutput) Index(i pulumi.IntInput) GetServerGroupsGroupServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerGroupsGroupServer {
		return vs[0].([]GetServerGroupsGroupServer)[vs[1].(int)]
	}).(GetServerGroupsGroupServerOutput)
}

type GetServerGroupsGroupStickySessionConfig struct {
	// the cookie that is configured on the server. **NOTE:** This parameter exists if the `StickySession` parameter is set to `On` and the `StickySessionType` parameter is set to `server`.
	Cookie string `pulumi:"cookie"`
	// The timeout period of a cookie. The timeout period of a cookie. Unit: seconds. Valid values: `1` to `86400`. Default value: `1000`.
	CookieTimeout int `pulumi:"cookieTimeout"`
	// Indicates whether sticky session is enabled. Values: `true` and `false`. Default value: `false`.  **NOTE:** This parameter exists if the `StickySession` parameter is set to `On`.
	StickySessionEnabled bool `pulumi:"stickySessionEnabled"`
	// The method that is used to handle a cookie. Values: `Server` and `Insert`.
	StickySessionType string `pulumi:"stickySessionType"`
}

// GetServerGroupsGroupStickySessionConfigInput is an input type that accepts GetServerGroupsGroupStickySessionConfigArgs and GetServerGroupsGroupStickySessionConfigOutput values.
// You can construct a concrete instance of `GetServerGroupsGroupStickySessionConfigInput` via:
//
//          GetServerGroupsGroupStickySessionConfigArgs{...}
type GetServerGroupsGroupStickySessionConfigInput interface {
	pulumi.Input

	ToGetServerGroupsGroupStickySessionConfigOutput() GetServerGroupsGroupStickySessionConfigOutput
	ToGetServerGroupsGroupStickySessionConfigOutputWithContext(context.Context) GetServerGroupsGroupStickySessionConfigOutput
}

type GetServerGroupsGroupStickySessionConfigArgs struct {
	// the cookie that is configured on the server. **NOTE:** This parameter exists if the `StickySession` parameter is set to `On` and the `StickySessionType` parameter is set to `server`.
	Cookie pulumi.StringInput `pulumi:"cookie"`
	// The timeout period of a cookie. The timeout period of a cookie. Unit: seconds. Valid values: `1` to `86400`. Default value: `1000`.
	CookieTimeout pulumi.IntInput `pulumi:"cookieTimeout"`
	// Indicates whether sticky session is enabled. Values: `true` and `false`. Default value: `false`.  **NOTE:** This parameter exists if the `StickySession` parameter is set to `On`.
	StickySessionEnabled pulumi.BoolInput `pulumi:"stickySessionEnabled"`
	// The method that is used to handle a cookie. Values: `Server` and `Insert`.
	StickySessionType pulumi.StringInput `pulumi:"stickySessionType"`
}

func (GetServerGroupsGroupStickySessionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerGroupsGroupStickySessionConfig)(nil)).Elem()
}

func (i GetServerGroupsGroupStickySessionConfigArgs) ToGetServerGroupsGroupStickySessionConfigOutput() GetServerGroupsGroupStickySessionConfigOutput {
	return i.ToGetServerGroupsGroupStickySessionConfigOutputWithContext(context.Background())
}

func (i GetServerGroupsGroupStickySessionConfigArgs) ToGetServerGroupsGroupStickySessionConfigOutputWithContext(ctx context.Context) GetServerGroupsGroupStickySessionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerGroupsGroupStickySessionConfigOutput)
}

// GetServerGroupsGroupStickySessionConfigArrayInput is an input type that accepts GetServerGroupsGroupStickySessionConfigArray and GetServerGroupsGroupStickySessionConfigArrayOutput values.
// You can construct a concrete instance of `GetServerGroupsGroupStickySessionConfigArrayInput` via:
//
//          GetServerGroupsGroupStickySessionConfigArray{ GetServerGroupsGroupStickySessionConfigArgs{...} }
type GetServerGroupsGroupStickySessionConfigArrayInput interface {
	pulumi.Input

	ToGetServerGroupsGroupStickySessionConfigArrayOutput() GetServerGroupsGroupStickySessionConfigArrayOutput
	ToGetServerGroupsGroupStickySessionConfigArrayOutputWithContext(context.Context) GetServerGroupsGroupStickySessionConfigArrayOutput
}

type GetServerGroupsGroupStickySessionConfigArray []GetServerGroupsGroupStickySessionConfigInput

func (GetServerGroupsGroupStickySessionConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerGroupsGroupStickySessionConfig)(nil)).Elem()
}

func (i GetServerGroupsGroupStickySessionConfigArray) ToGetServerGroupsGroupStickySessionConfigArrayOutput() GetServerGroupsGroupStickySessionConfigArrayOutput {
	return i.ToGetServerGroupsGroupStickySessionConfigArrayOutputWithContext(context.Background())
}

func (i GetServerGroupsGroupStickySessionConfigArray) ToGetServerGroupsGroupStickySessionConfigArrayOutputWithContext(ctx context.Context) GetServerGroupsGroupStickySessionConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerGroupsGroupStickySessionConfigArrayOutput)
}

type GetServerGroupsGroupStickySessionConfigOutput struct{ *pulumi.OutputState }

func (GetServerGroupsGroupStickySessionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerGroupsGroupStickySessionConfig)(nil)).Elem()
}

func (o GetServerGroupsGroupStickySessionConfigOutput) ToGetServerGroupsGroupStickySessionConfigOutput() GetServerGroupsGroupStickySessionConfigOutput {
	return o
}

func (o GetServerGroupsGroupStickySessionConfigOutput) ToGetServerGroupsGroupStickySessionConfigOutputWithContext(ctx context.Context) GetServerGroupsGroupStickySessionConfigOutput {
	return o
}

// the cookie that is configured on the server. **NOTE:** This parameter exists if the `StickySession` parameter is set to `On` and the `StickySessionType` parameter is set to `server`.
func (o GetServerGroupsGroupStickySessionConfigOutput) Cookie() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroupStickySessionConfig) string { return v.Cookie }).(pulumi.StringOutput)
}

// The timeout period of a cookie. The timeout period of a cookie. Unit: seconds. Valid values: `1` to `86400`. Default value: `1000`.
func (o GetServerGroupsGroupStickySessionConfigOutput) CookieTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetServerGroupsGroupStickySessionConfig) int { return v.CookieTimeout }).(pulumi.IntOutput)
}

// Indicates whether sticky session is enabled. Values: `true` and `false`. Default value: `false`.  **NOTE:** This parameter exists if the `StickySession` parameter is set to `On`.
func (o GetServerGroupsGroupStickySessionConfigOutput) StickySessionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerGroupsGroupStickySessionConfig) bool { return v.StickySessionEnabled }).(pulumi.BoolOutput)
}

// The method that is used to handle a cookie. Values: `Server` and `Insert`.
func (o GetServerGroupsGroupStickySessionConfigOutput) StickySessionType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerGroupsGroupStickySessionConfig) string { return v.StickySessionType }).(pulumi.StringOutput)
}

type GetServerGroupsGroupStickySessionConfigArrayOutput struct{ *pulumi.OutputState }

func (GetServerGroupsGroupStickySessionConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerGroupsGroupStickySessionConfig)(nil)).Elem()
}

func (o GetServerGroupsGroupStickySessionConfigArrayOutput) ToGetServerGroupsGroupStickySessionConfigArrayOutput() GetServerGroupsGroupStickySessionConfigArrayOutput {
	return o
}

func (o GetServerGroupsGroupStickySessionConfigArrayOutput) ToGetServerGroupsGroupStickySessionConfigArrayOutputWithContext(ctx context.Context) GetServerGroupsGroupStickySessionConfigArrayOutput {
	return o
}

func (o GetServerGroupsGroupStickySessionConfigArrayOutput) Index(i pulumi.IntInput) GetServerGroupsGroupStickySessionConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerGroupsGroupStickySessionConfig {
		return vs[0].([]GetServerGroupsGroupStickySessionConfig)[vs[1].(int)]
	}).(GetServerGroupsGroupStickySessionConfigOutput)
}

type GetZonesZone struct {
	// The ID of zone.
	Id string `pulumi:"id"`
	// The local name.
	LocalName string `pulumi:"localName"`
	// The zone ID.
	ZoneId string `pulumi:"zoneId"`
}

// GetZonesZoneInput is an input type that accepts GetZonesZoneArgs and GetZonesZoneOutput values.
// You can construct a concrete instance of `GetZonesZoneInput` via:
//
//          GetZonesZoneArgs{...}
type GetZonesZoneInput interface {
	pulumi.Input

	ToGetZonesZoneOutput() GetZonesZoneOutput
	ToGetZonesZoneOutputWithContext(context.Context) GetZonesZoneOutput
}

type GetZonesZoneArgs struct {
	// The ID of zone.
	Id pulumi.StringInput `pulumi:"id"`
	// The local name.
	LocalName pulumi.StringInput `pulumi:"localName"`
	// The zone ID.
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetZonesZoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return i.ToGetZonesZoneOutputWithContext(context.Background())
}

func (i GetZonesZoneArgs) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneOutput)
}

// GetZonesZoneArrayInput is an input type that accepts GetZonesZoneArray and GetZonesZoneArrayOutput values.
// You can construct a concrete instance of `GetZonesZoneArrayInput` via:
//
//          GetZonesZoneArray{ GetZonesZoneArgs{...} }
type GetZonesZoneArrayInput interface {
	pulumi.Input

	ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput
	ToGetZonesZoneArrayOutputWithContext(context.Context) GetZonesZoneArrayOutput
}

type GetZonesZoneArray []GetZonesZoneInput

func (GetZonesZoneArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return i.ToGetZonesZoneArrayOutputWithContext(context.Background())
}

func (i GetZonesZoneArray) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZonesZoneArrayOutput)
}

type GetZonesZoneOutput struct{ *pulumi.OutputState }

func (GetZonesZoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutput() GetZonesZoneOutput {
	return o
}

func (o GetZonesZoneOutput) ToGetZonesZoneOutputWithContext(ctx context.Context) GetZonesZoneOutput {
	return o
}

// The ID of zone.
func (o GetZonesZoneOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.Id }).(pulumi.StringOutput)
}

// The local name.
func (o GetZonesZoneOutput) LocalName() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.LocalName }).(pulumi.StringOutput)
}

// The zone ID.
func (o GetZonesZoneOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesZone) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetZonesZoneArrayOutput struct{ *pulumi.OutputState }

func (GetZonesZoneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZonesZone)(nil)).Elem()
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutput() GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) ToGetZonesZoneArrayOutputWithContext(ctx context.Context) GetZonesZoneArrayOutput {
	return o
}

func (o GetZonesZoneArrayOutput) Index(i pulumi.IntInput) GetZonesZoneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZonesZone {
		return vs[0].([]GetZonesZone)[vs[1].(int)]
	}).(GetZonesZoneOutput)
}

func init() {
	pulumi.RegisterOutputType(LoadBalancerAccessLogConfigOutput{})
	pulumi.RegisterOutputType(LoadBalancerAccessLogConfigPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerLoadBalancerBillingConfigOutput{})
	pulumi.RegisterOutputType(LoadBalancerLoadBalancerBillingConfigPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerModificationProtectionConfigOutput{})
	pulumi.RegisterOutputType(LoadBalancerModificationProtectionConfigPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerZoneMappingOutput{})
	pulumi.RegisterOutputType(LoadBalancerZoneMappingArrayOutput{})
	pulumi.RegisterOutputType(ServerGroupHealthCheckConfigOutput{})
	pulumi.RegisterOutputType(ServerGroupHealthCheckConfigPtrOutput{})
	pulumi.RegisterOutputType(ServerGroupServerOutput{})
	pulumi.RegisterOutputType(ServerGroupServerArrayOutput{})
	pulumi.RegisterOutputType(ServerGroupStickySessionConfigOutput{})
	pulumi.RegisterOutputType(ServerGroupStickySessionConfigPtrOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerAccessLogConfigOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerAccessLogConfigArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerDeletionProtectionConfigOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerDeletionProtectionConfigArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerLoadBalancerBillingConfigOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerLoadBalancerBillingConfigArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerLoadBalancerOperationLockOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerLoadBalancerOperationLockArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerModificationProtectionConfigOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerModificationProtectionConfigArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerZoneMappingOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerZoneMappingArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerZoneMappingLoadBalancerAddressOutput{})
	pulumi.RegisterOutputType(GetLoadBalancersBalancerZoneMappingLoadBalancerAddressArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetSecurityPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetServerGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetServerGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetServerGroupsGroupHealthCheckConfigOutput{})
	pulumi.RegisterOutputType(GetServerGroupsGroupHealthCheckConfigArrayOutput{})
	pulumi.RegisterOutputType(GetServerGroupsGroupServerOutput{})
	pulumi.RegisterOutputType(GetServerGroupsGroupServerArrayOutput{})
	pulumi.RegisterOutputType(GetServerGroupsGroupStickySessionConfigOutput{})
	pulumi.RegisterOutputType(GetServerGroupsGroupStickySessionConfigArrayOutput{})
	pulumi.RegisterOutputType(GetZonesZoneOutput{})
	pulumi.RegisterOutputType(GetZonesZoneArrayOutput{})
}
