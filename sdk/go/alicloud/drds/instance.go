// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package drds

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Distributed Relational Database Service (DRDS) is a lightweight (stateless), flexible, stable, and efficient middleware product independently developed by Alibaba Group to resolve scalability issues with single-host relational databases.
// With its compatibility with MySQL protocols and syntaxes, DRDS enables database/table sharding, smooth scaling, configuration upgrade/downgrade,
// transparent read/write splitting, and distributed transactions, providing O&M capabilities for distributed databases throughout their entire lifecycle.
// 
// For information about DRDS and how to use it, see [What is DRDS](https://www.alibabacloud.com/help/doc-detail/29659.htm).
// 
// > **NOTE:** At present, DRDS instance only can be supported in the regions: cn-shenzhen, cn-beijing, cn-hangzhou, cn-hongkong, cn-qingdao.
// 
// > **NOTE:** Currently, this resource only support `Domestic Site Account`.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/drds_instance.html.markdown.
type Instance struct {
	s *pulumi.ResourceState
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOpt) (*Instance, error) {
	if args == nil || args.Description == nil {
		return nil, errors.New("missing required argument 'Description'")
	}
	if args == nil || args.InstanceSeries == nil {
		return nil, errors.New("missing required argument 'InstanceSeries'")
	}
	if args == nil || args.Specification == nil {
		return nil, errors.New("missing required argument 'Specification'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["instanceChargeType"] = nil
		inputs["instanceSeries"] = nil
		inputs["specification"] = nil
		inputs["vswitchId"] = nil
		inputs["zoneId"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["instanceChargeType"] = args.InstanceChargeType
		inputs["instanceSeries"] = args.InstanceSeries
		inputs["specification"] = args.Specification
		inputs["vswitchId"] = args.VswitchId
		inputs["zoneId"] = args.ZoneId
	}
	s, err := ctx.RegisterResource("alicloud:drds/instance:Instance", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Instance{s: s}, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.ID, state *InstanceState, opts ...pulumi.ResourceOpt) (*Instance, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["description"] = state.Description
		inputs["instanceChargeType"] = state.InstanceChargeType
		inputs["instanceSeries"] = state.InstanceSeries
		inputs["specification"] = state.Specification
		inputs["vswitchId"] = state.VswitchId
		inputs["zoneId"] = state.ZoneId
	}
	s, err := ctx.ReadResource("alicloud:drds/instance:Instance", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Instance{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Instance) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Instance) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Description of the DRDS instance, This description can have a string of 2 to 256 characters.
func (r *Instance) Description() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["description"])
}

// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
func (r *Instance) InstanceChargeType() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["instanceChargeType"])
}

// User-defined DRDS instance node spec. Value range:
// - `drds.sn1.4c8g` for DRDS instance Starter version;
// - `drds.sn1.8c16g` for DRDS instance Standard edition;
// - `drds.sn1.16c32g` for DRDS instance Enterprise Edition;
// - `drds.sn1.32c64g` for DRDS instance Extreme Edition;
func (r *Instance) InstanceSeries() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["instanceSeries"])
}

// User-defined DRDS instance specification. Value range:
// - `drds.sn1.4c8g` for DRDS instance Starter version;
// - value range : `drds.sn1.4c8g.8c16g`, `drds.sn1.4c8g.16c32g`, `drds.sn1.4c8g.32c64g`, `drds.sn1.4c8g.64c128g`
// - `drds.sn1.8c16g` for DRDS instance Standard edition;
// - value range : `drds.sn1.8c16g.16c32g`, `drds.sn1.8c16g.32c64g`, `drds.sn1.8c16g.64c128g`
// - `drds.sn1.16c32g` for DRDS instance Enterprise Edition;
// - value range : `drds.sn1.16c32g.32c64g`, `drds.sn1.16c32g.64c128g`
// - `drds.sn1.32c64g` for DRDS instance Extreme Edition;
// - value range : `drds.sn1.32c64g.128c256g`
func (r *Instance) Specification() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["specification"])
}

// The VSwitch ID to launch in.
func (r *Instance) VswitchId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["vswitchId"])
}

// The Zone to launch the DRDS instance.
func (r *Instance) ZoneId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["zoneId"])
}

// Input properties used for looking up and filtering Instance resources.
type InstanceState struct {
	// Description of the DRDS instance, This description can have a string of 2 to 256 characters.
	Description interface{}
	// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
	InstanceChargeType interface{}
	// User-defined DRDS instance node spec. Value range:
	// - `drds.sn1.4c8g` for DRDS instance Starter version;
	// - `drds.sn1.8c16g` for DRDS instance Standard edition;
	// - `drds.sn1.16c32g` for DRDS instance Enterprise Edition;
	// - `drds.sn1.32c64g` for DRDS instance Extreme Edition;
	InstanceSeries interface{}
	// User-defined DRDS instance specification. Value range:
	// - `drds.sn1.4c8g` for DRDS instance Starter version;
	// - value range : `drds.sn1.4c8g.8c16g`, `drds.sn1.4c8g.16c32g`, `drds.sn1.4c8g.32c64g`, `drds.sn1.4c8g.64c128g`
	// - `drds.sn1.8c16g` for DRDS instance Standard edition;
	// - value range : `drds.sn1.8c16g.16c32g`, `drds.sn1.8c16g.32c64g`, `drds.sn1.8c16g.64c128g`
	// - `drds.sn1.16c32g` for DRDS instance Enterprise Edition;
	// - value range : `drds.sn1.16c32g.32c64g`, `drds.sn1.16c32g.64c128g`
	// - `drds.sn1.32c64g` for DRDS instance Extreme Edition;
	// - value range : `drds.sn1.32c64g.128c256g`
	Specification interface{}
	// The VSwitch ID to launch in.
	VswitchId interface{}
	// The Zone to launch the DRDS instance.
	ZoneId interface{}
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// Description of the DRDS instance, This description can have a string of 2 to 256 characters.
	Description interface{}
	// Valid values are `PrePaid`, `PostPaid`, Default to `PostPaid`.
	InstanceChargeType interface{}
	// User-defined DRDS instance node spec. Value range:
	// - `drds.sn1.4c8g` for DRDS instance Starter version;
	// - `drds.sn1.8c16g` for DRDS instance Standard edition;
	// - `drds.sn1.16c32g` for DRDS instance Enterprise Edition;
	// - `drds.sn1.32c64g` for DRDS instance Extreme Edition;
	InstanceSeries interface{}
	// User-defined DRDS instance specification. Value range:
	// - `drds.sn1.4c8g` for DRDS instance Starter version;
	// - value range : `drds.sn1.4c8g.8c16g`, `drds.sn1.4c8g.16c32g`, `drds.sn1.4c8g.32c64g`, `drds.sn1.4c8g.64c128g`
	// - `drds.sn1.8c16g` for DRDS instance Standard edition;
	// - value range : `drds.sn1.8c16g.16c32g`, `drds.sn1.8c16g.32c64g`, `drds.sn1.8c16g.64c128g`
	// - `drds.sn1.16c32g` for DRDS instance Enterprise Edition;
	// - value range : `drds.sn1.16c32g.32c64g`, `drds.sn1.16c32g.64c128g`
	// - `drds.sn1.32c64g` for DRDS instance Extreme Edition;
	// - value range : `drds.sn1.32c64g.128c256g`
	Specification interface{}
	// The VSwitch ID to launch in.
	VswitchId interface{}
	// The Zone to launch the DRDS instance.
	ZoneId interface{}
}
