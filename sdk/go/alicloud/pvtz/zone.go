// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pvtz

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/pvtz_zone.html.markdown.
type Zone struct {
	s *pulumi.ResourceState
}

// NewZone registers a new resource with the given unique name, arguments, and options.
func NewZone(ctx *pulumi.Context,
	name string, args *ZoneArgs, opts ...pulumi.ResourceOpt) (*Zone, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["name"] = nil
		inputs["remark"] = nil
	} else {
		inputs["name"] = args.Name
		inputs["remark"] = args.Remark
	}
	inputs["creationTime"] = nil
	inputs["isPtr"] = nil
	inputs["recordCount"] = nil
	inputs["updateTime"] = nil
	s, err := ctx.RegisterResource("alicloud:pvtz/zone:Zone", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Zone{s: s}, nil
}

// GetZone gets an existing Zone resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZone(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ZoneState, opts ...pulumi.ResourceOpt) (*Zone, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["creationTime"] = state.CreationTime
		inputs["isPtr"] = state.IsPtr
		inputs["name"] = state.Name
		inputs["recordCount"] = state.RecordCount
		inputs["remark"] = state.Remark
		inputs["updateTime"] = state.UpdateTime
	}
	s, err := ctx.ReadResource("alicloud:pvtz/zone:Zone", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Zone{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Zone) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Zone) ID() pulumi.IDOutput {
	return r.s.ID()
}

func (r *Zone) CreationTime() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["creationTime"])
}

func (r *Zone) IsPtr() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["isPtr"])
}

// The name of the Private Zone.
func (r *Zone) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// The count of the Private Zone Record.
func (r *Zone) RecordCount() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["recordCount"])
}

// The remark of the Private Zone.
func (r *Zone) Remark() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["remark"])
}

func (r *Zone) UpdateTime() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["updateTime"])
}

// Input properties used for looking up and filtering Zone resources.
type ZoneState struct {
	CreationTime interface{}
	IsPtr interface{}
	// The name of the Private Zone.
	Name interface{}
	// The count of the Private Zone Record.
	RecordCount interface{}
	// The remark of the Private Zone.
	Remark interface{}
	UpdateTime interface{}
}

// The set of arguments for constructing a Zone resource.
type ZoneArgs struct {
	// The name of the Private Zone.
	Name interface{}
	// The remark of the Private Zone.
	Remark interface{}
}
