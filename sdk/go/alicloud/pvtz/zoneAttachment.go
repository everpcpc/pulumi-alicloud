// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pvtz

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/pvtz_zone_attachment.html.markdown.
type ZoneAttachment struct {
	s *pulumi.ResourceState
}

// NewZoneAttachment registers a new resource with the given unique name, arguments, and options.
func NewZoneAttachment(ctx *pulumi.Context,
	name string, args *ZoneAttachmentArgs, opts ...pulumi.ResourceOpt) (*ZoneAttachment, error) {
	if args == nil || args.ZoneId == nil {
		return nil, errors.New("missing required argument 'ZoneId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["lang"] = nil
		inputs["userClientIp"] = nil
		inputs["vpcIds"] = nil
		inputs["vpcs"] = nil
		inputs["zoneId"] = nil
	} else {
		inputs["lang"] = args.Lang
		inputs["userClientIp"] = args.UserClientIp
		inputs["vpcIds"] = args.VpcIds
		inputs["vpcs"] = args.Vpcs
		inputs["zoneId"] = args.ZoneId
	}
	s, err := ctx.RegisterResource("alicloud:pvtz/zoneAttachment:ZoneAttachment", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ZoneAttachment{s: s}, nil
}

// GetZoneAttachment gets an existing ZoneAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetZoneAttachment(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ZoneAttachmentState, opts ...pulumi.ResourceOpt) (*ZoneAttachment, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["lang"] = state.Lang
		inputs["userClientIp"] = state.UserClientIp
		inputs["vpcIds"] = state.VpcIds
		inputs["vpcs"] = state.Vpcs
		inputs["zoneId"] = state.ZoneId
	}
	s, err := ctx.ReadResource("alicloud:pvtz/zoneAttachment:ZoneAttachment", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ZoneAttachment{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ZoneAttachment) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ZoneAttachment) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The language of code.
func (r *ZoneAttachment) Lang() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["lang"])
}

// The user custom IP address.
func (r *ZoneAttachment) UserClientIp() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["userClientIp"])
}

// The id List of the VPC with the same region, for example:["vpc-1","vpc-2"]. 
func (r *ZoneAttachment) VpcIds() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["vpcIds"])
}

// The List of the VPC:
func (r *ZoneAttachment) Vpcs() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["vpcs"])
}

// The name of the Private Zone Record.
func (r *ZoneAttachment) ZoneId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["zoneId"])
}

// Input properties used for looking up and filtering ZoneAttachment resources.
type ZoneAttachmentState struct {
	// The language of code.
	Lang interface{}
	// The user custom IP address.
	UserClientIp interface{}
	// The id List of the VPC with the same region, for example:["vpc-1","vpc-2"]. 
	VpcIds interface{}
	// The List of the VPC:
	Vpcs interface{}
	// The name of the Private Zone Record.
	ZoneId interface{}
}

// The set of arguments for constructing a ZoneAttachment resource.
type ZoneAttachmentArgs struct {
	// The language of code.
	Lang interface{}
	// The user custom IP address.
	UserClientIp interface{}
	// The id List of the VPC with the same region, for example:["vpc-1","vpc-2"]. 
	VpcIds interface{}
	// The List of the VPC:
	Vpcs interface{}
	// The name of the Private Zone Record.
	ZoneId interface{}
}
