// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rocketmq

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Sag qos policy resource. 
// You need to create a QoS policy to set priorities, rate limits, and quintuple rules for different messages.
// 
// For information about Sag Qos Policy and how to use it, see [What is Qos Policy](https://www.alibabacloud.com/help/doc-detail/140065.htm).
// 
// > **NOTE:** Available in 1.60.0+
// 
// > **NOTE:** Only the following regions support. [`cn-shanghai`, `cn-shanghai-finance-1`, `cn-hongkong`, `ap-southeast-1`, `ap-southeast-2`, `ap-southeast-3`, `ap-southeast-5`, `ap-northeast-1`, `eu-central-1`]
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/sag_qos_policy.html.markdown.
type QosPolicy struct {
	s *pulumi.ResourceState
}

// NewQosPolicy registers a new resource with the given unique name, arguments, and options.
func NewQosPolicy(ctx *pulumi.Context,
	name string, args *QosPolicyArgs, opts ...pulumi.ResourceOpt) (*QosPolicy, error) {
	if args == nil || args.DestCidr == nil {
		return nil, errors.New("missing required argument 'DestCidr'")
	}
	if args == nil || args.DestPortRange == nil {
		return nil, errors.New("missing required argument 'DestPortRange'")
	}
	if args == nil || args.IpProtocol == nil {
		return nil, errors.New("missing required argument 'IpProtocol'")
	}
	if args == nil || args.Priority == nil {
		return nil, errors.New("missing required argument 'Priority'")
	}
	if args == nil || args.QosId == nil {
		return nil, errors.New("missing required argument 'QosId'")
	}
	if args == nil || args.SourceCidr == nil {
		return nil, errors.New("missing required argument 'SourceCidr'")
	}
	if args == nil || args.SourcePortRange == nil {
		return nil, errors.New("missing required argument 'SourcePortRange'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["destCidr"] = nil
		inputs["destPortRange"] = nil
		inputs["endTime"] = nil
		inputs["ipProtocol"] = nil
		inputs["name"] = nil
		inputs["priority"] = nil
		inputs["qosId"] = nil
		inputs["sourceCidr"] = nil
		inputs["sourcePortRange"] = nil
		inputs["startTime"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["destCidr"] = args.DestCidr
		inputs["destPortRange"] = args.DestPortRange
		inputs["endTime"] = args.EndTime
		inputs["ipProtocol"] = args.IpProtocol
		inputs["name"] = args.Name
		inputs["priority"] = args.Priority
		inputs["qosId"] = args.QosId
		inputs["sourceCidr"] = args.SourceCidr
		inputs["sourcePortRange"] = args.SourcePortRange
		inputs["startTime"] = args.StartTime
	}
	s, err := ctx.RegisterResource("alicloud:rocketmq/qosPolicy:QosPolicy", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &QosPolicy{s: s}, nil
}

// GetQosPolicy gets an existing QosPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQosPolicy(ctx *pulumi.Context,
	name string, id pulumi.ID, state *QosPolicyState, opts ...pulumi.ResourceOpt) (*QosPolicy, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["description"] = state.Description
		inputs["destCidr"] = state.DestCidr
		inputs["destPortRange"] = state.DestPortRange
		inputs["endTime"] = state.EndTime
		inputs["ipProtocol"] = state.IpProtocol
		inputs["name"] = state.Name
		inputs["priority"] = state.Priority
		inputs["qosId"] = state.QosId
		inputs["sourceCidr"] = state.SourceCidr
		inputs["sourcePortRange"] = state.SourcePortRange
		inputs["startTime"] = state.StartTime
	}
	s, err := ctx.ReadResource("alicloud:rocketmq/qosPolicy:QosPolicy", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &QosPolicy{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *QosPolicy) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *QosPolicy) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The description of the QoS policy.
func (r *QosPolicy) Description() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["description"])
}

// The destination CIDR block.
func (r *QosPolicy) DestCidr() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["destCidr"])
}

// The destination port range.
func (r *QosPolicy) DestPortRange() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["destPortRange"])
}

// The expiration time of the quintuple rule. 
func (r *QosPolicy) EndTime() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["endTime"])
}

// The transport layer protocol.
func (r *QosPolicy) IpProtocol() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["ipProtocol"])
}

// The name of the QoS policy.
func (r *QosPolicy) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// The priority of the quintuple rule. A smaller value indicates a higher priority. If the priorities of two quintuple rules are the same, the rule created earlier is applied first.Value range: 1 to 7.
func (r *QosPolicy) Priority() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["priority"])
}

// The instance ID of the QoS policy to which the quintuple rule is created.
func (r *QosPolicy) QosId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["qosId"])
}

// The source CIDR block.
func (r *QosPolicy) SourceCidr() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["sourceCidr"])
}

// The source port range of the transport layer.
func (r *QosPolicy) SourcePortRange() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["sourcePortRange"])
}

// The time when the quintuple rule takes effect.
func (r *QosPolicy) StartTime() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["startTime"])
}

// Input properties used for looking up and filtering QosPolicy resources.
type QosPolicyState struct {
	// The description of the QoS policy.
	Description interface{}
	// The destination CIDR block.
	DestCidr interface{}
	// The destination port range.
	DestPortRange interface{}
	// The expiration time of the quintuple rule. 
	EndTime interface{}
	// The transport layer protocol.
	IpProtocol interface{}
	// The name of the QoS policy.
	Name interface{}
	// The priority of the quintuple rule. A smaller value indicates a higher priority. If the priorities of two quintuple rules are the same, the rule created earlier is applied first.Value range: 1 to 7.
	Priority interface{}
	// The instance ID of the QoS policy to which the quintuple rule is created.
	QosId interface{}
	// The source CIDR block.
	SourceCidr interface{}
	// The source port range of the transport layer.
	SourcePortRange interface{}
	// The time when the quintuple rule takes effect.
	StartTime interface{}
}

// The set of arguments for constructing a QosPolicy resource.
type QosPolicyArgs struct {
	// The description of the QoS policy.
	Description interface{}
	// The destination CIDR block.
	DestCidr interface{}
	// The destination port range.
	DestPortRange interface{}
	// The expiration time of the quintuple rule. 
	EndTime interface{}
	// The transport layer protocol.
	IpProtocol interface{}
	// The name of the QoS policy.
	Name interface{}
	// The priority of the quintuple rule. A smaller value indicates a higher priority. If the priorities of two quintuple rules are the same, the rule created earlier is applied first.Value range: 1 to 7.
	Priority interface{}
	// The instance ID of the QoS policy to which the quintuple rule is created.
	QosId interface{}
	// The source CIDR block.
	SourceCidr interface{}
	// The source port range of the transport layer.
	SourcePortRange interface{}
	// The time when the quintuple rule takes effect.
	StartTime interface{}
}
