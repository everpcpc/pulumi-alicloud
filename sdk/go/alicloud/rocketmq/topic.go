// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package rocketmq

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides an ONS topic resource.
//
// For more information about how to use it, see [RocketMQ Topic Management API](https://www.alibabacloud.com/help/doc-detail/29591.html).
//
// > **NOTE:** Available in 1.53.0+
//
//
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/ons_topic.html.markdown.
type Topic struct {
	pulumi.CustomResourceState

	// ID of the ONS Instance that owns the topics.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The type of the message. Read [Ons Topic Create](https://www.alibabacloud.com/help/doc-detail/29591.html) for further details.
	MessageType pulumi.IntOutput `pulumi:"messageType"`
	// This attribute is used to set the read-write mode for the topic. Read [Request parameters](https://www.alibabacloud.com/help/doc-detail/56880.html) for further details.
	Perm pulumi.IntPtrOutput `pulumi:"perm"`
	// This attribute is a concise description of topic. The length cannot exceed 128.
	Remark pulumi.StringPtrOutput `pulumi:"remark"`
	// Name of the topic. Two topics on a single instance cannot have the same name and the name cannot start with 'GID' or 'CID'. The length cannot exceed 64 characters.
	Topic pulumi.StringOutput `pulumi:"topic"`
}

// NewTopic registers a new resource with the given unique name, arguments, and options.
func NewTopic(ctx *pulumi.Context,
	name string, args *TopicArgs, opts ...pulumi.ResourceOption) (*Topic, error) {
	if args == nil || args.InstanceId == nil {
		return nil, errors.New("missing required argument 'InstanceId'")
	}
	if args == nil || args.MessageType == nil {
		return nil, errors.New("missing required argument 'MessageType'")
	}
	if args == nil || args.Topic == nil {
		return nil, errors.New("missing required argument 'Topic'")
	}
	if args == nil {
		args = &TopicArgs{}
	}
	var resource Topic
	err := ctx.RegisterResource("alicloud:rocketmq/topic:Topic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTopic gets an existing Topic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTopic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TopicState, opts ...pulumi.ResourceOption) (*Topic, error) {
	var resource Topic
	err := ctx.ReadResource("alicloud:rocketmq/topic:Topic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Topic resources.
type topicState struct {
	// ID of the ONS Instance that owns the topics.
	InstanceId *string `pulumi:"instanceId"`
	// The type of the message. Read [Ons Topic Create](https://www.alibabacloud.com/help/doc-detail/29591.html) for further details.
	MessageType *int `pulumi:"messageType"`
	// This attribute is used to set the read-write mode for the topic. Read [Request parameters](https://www.alibabacloud.com/help/doc-detail/56880.html) for further details.
	Perm *int `pulumi:"perm"`
	// This attribute is a concise description of topic. The length cannot exceed 128.
	Remark *string `pulumi:"remark"`
	// Name of the topic. Two topics on a single instance cannot have the same name and the name cannot start with 'GID' or 'CID'. The length cannot exceed 64 characters.
	Topic *string `pulumi:"topic"`
}

type TopicState struct {
	// ID of the ONS Instance that owns the topics.
	InstanceId pulumi.StringPtrInput
	// The type of the message. Read [Ons Topic Create](https://www.alibabacloud.com/help/doc-detail/29591.html) for further details.
	MessageType pulumi.IntPtrInput
	// This attribute is used to set the read-write mode for the topic. Read [Request parameters](https://www.alibabacloud.com/help/doc-detail/56880.html) for further details.
	Perm pulumi.IntPtrInput
	// This attribute is a concise description of topic. The length cannot exceed 128.
	Remark pulumi.StringPtrInput
	// Name of the topic. Two topics on a single instance cannot have the same name and the name cannot start with 'GID' or 'CID'. The length cannot exceed 64 characters.
	Topic pulumi.StringPtrInput
}

func (TopicState) ElementType() reflect.Type {
	return reflect.TypeOf((*topicState)(nil)).Elem()
}

type topicArgs struct {
	// ID of the ONS Instance that owns the topics.
	InstanceId string `pulumi:"instanceId"`
	// The type of the message. Read [Ons Topic Create](https://www.alibabacloud.com/help/doc-detail/29591.html) for further details.
	MessageType int `pulumi:"messageType"`
	// This attribute is used to set the read-write mode for the topic. Read [Request parameters](https://www.alibabacloud.com/help/doc-detail/56880.html) for further details.
	Perm *int `pulumi:"perm"`
	// This attribute is a concise description of topic. The length cannot exceed 128.
	Remark *string `pulumi:"remark"`
	// Name of the topic. Two topics on a single instance cannot have the same name and the name cannot start with 'GID' or 'CID'. The length cannot exceed 64 characters.
	Topic string `pulumi:"topic"`
}

// The set of arguments for constructing a Topic resource.
type TopicArgs struct {
	// ID of the ONS Instance that owns the topics.
	InstanceId pulumi.StringInput
	// The type of the message. Read [Ons Topic Create](https://www.alibabacloud.com/help/doc-detail/29591.html) for further details.
	MessageType pulumi.IntInput
	// This attribute is used to set the read-write mode for the topic. Read [Request parameters](https://www.alibabacloud.com/help/doc-detail/56880.html) for further details.
	Perm pulumi.IntPtrInput
	// This attribute is a concise description of topic. The length cannot exceed 128.
	Remark pulumi.StringPtrInput
	// Name of the topic. Two topics on a single instance cannot have the same name and the name cannot start with 'GID' or 'CID'. The length cannot exceed 64 characters.
	Topic pulumi.StringInput
}

func (TopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*topicArgs)(nil)).Elem()
}
