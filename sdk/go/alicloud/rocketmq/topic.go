// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rocketmq

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an ONS topic resource.
// 
// For more information about how to use it, see [RocketMQ Topic Management API](https://www.alibabacloud.com/help/doc-detail/29591.html). 
// 
// > **NOTE:** Available in 1.53.0+
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/ons_topic.html.markdown.
type Topic struct {
	s *pulumi.ResourceState
}

// NewTopic registers a new resource with the given unique name, arguments, and options.
func NewTopic(ctx *pulumi.Context,
	name string, args *TopicArgs, opts ...pulumi.ResourceOpt) (*Topic, error) {
	if args == nil || args.InstanceId == nil {
		return nil, errors.New("missing required argument 'InstanceId'")
	}
	if args == nil || args.MessageType == nil {
		return nil, errors.New("missing required argument 'MessageType'")
	}
	if args == nil || args.Topic == nil {
		return nil, errors.New("missing required argument 'Topic'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["instanceId"] = nil
		inputs["messageType"] = nil
		inputs["perm"] = nil
		inputs["remark"] = nil
		inputs["topic"] = nil
	} else {
		inputs["instanceId"] = args.InstanceId
		inputs["messageType"] = args.MessageType
		inputs["perm"] = args.Perm
		inputs["remark"] = args.Remark
		inputs["topic"] = args.Topic
	}
	s, err := ctx.RegisterResource("alicloud:rocketmq/topic:Topic", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Topic{s: s}, nil
}

// GetTopic gets an existing Topic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTopic(ctx *pulumi.Context,
	name string, id pulumi.ID, state *TopicState, opts ...pulumi.ResourceOpt) (*Topic, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["instanceId"] = state.InstanceId
		inputs["messageType"] = state.MessageType
		inputs["perm"] = state.Perm
		inputs["remark"] = state.Remark
		inputs["topic"] = state.Topic
	}
	s, err := ctx.ReadResource("alicloud:rocketmq/topic:Topic", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Topic{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Topic) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Topic) ID() pulumi.IDOutput {
	return r.s.ID()
}

// ID of the ONS Instance that owns the topics.
func (r *Topic) InstanceId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["instanceId"])
}

// The type of the message. Read [Ons Topic Create](https://www.alibabacloud.com/help/doc-detail/29591.html) for further details.
func (r *Topic) MessageType() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["messageType"])
}

// This attribute is used to set the read-write mode for the topic. Read [Request parameters](https://www.alibabacloud.com/help/doc-detail/56880.html) for further details.
func (r *Topic) Perm() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["perm"])
}

// This attribute is a concise description of topic. The length cannot exceed 128.
func (r *Topic) Remark() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["remark"])
}

// Name of the topic. Two topics on a single instance cannot have the same name and the name cannot start with 'GID' or 'CID'. The length cannot exceed 64 characters.
func (r *Topic) Topic() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["topic"])
}

// Input properties used for looking up and filtering Topic resources.
type TopicState struct {
	// ID of the ONS Instance that owns the topics.
	InstanceId interface{}
	// The type of the message. Read [Ons Topic Create](https://www.alibabacloud.com/help/doc-detail/29591.html) for further details.
	MessageType interface{}
	// This attribute is used to set the read-write mode for the topic. Read [Request parameters](https://www.alibabacloud.com/help/doc-detail/56880.html) for further details.
	Perm interface{}
	// This attribute is a concise description of topic. The length cannot exceed 128.
	Remark interface{}
	// Name of the topic. Two topics on a single instance cannot have the same name and the name cannot start with 'GID' or 'CID'. The length cannot exceed 64 characters.
	Topic interface{}
}

// The set of arguments for constructing a Topic resource.
type TopicArgs struct {
	// ID of the ONS Instance that owns the topics.
	InstanceId interface{}
	// The type of the message. Read [Ons Topic Create](https://www.alibabacloud.com/help/doc-detail/29591.html) for further details.
	MessageType interface{}
	// This attribute is used to set the read-write mode for the topic. Read [Request parameters](https://www.alibabacloud.com/help/doc-detail/56880.html) for further details.
	Perm interface{}
	// This attribute is a concise description of topic. The length cannot exceed 128.
	Remark interface{}
	// Name of the topic. Two topics on a single instance cannot have the same name and the name cannot start with 'GID' or 'CID'. The length cannot exceed 64 characters.
	Topic interface{}
}
