// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package vpn

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type SslVpnClientCert struct {
	pulumi.CustomResourceState

	CaCert         pulumi.StringOutput `pulumi:"caCert"`
	ClientCert     pulumi.StringOutput `pulumi:"clientCert"`
	ClientConfig   pulumi.StringOutput `pulumi:"clientConfig"`
	ClientKey      pulumi.StringOutput `pulumi:"clientKey"`
	Name           pulumi.StringOutput `pulumi:"name"`
	SslVpnServerId pulumi.StringOutput `pulumi:"sslVpnServerId"`
	Status         pulumi.StringOutput `pulumi:"status"`
}

// NewSslVpnClientCert registers a new resource with the given unique name, arguments, and options.
func NewSslVpnClientCert(ctx *pulumi.Context,
	name string, args *SslVpnClientCertArgs, opts ...pulumi.ResourceOption) (*SslVpnClientCert, error) {
	if args == nil || args.SslVpnServerId == nil {
		return nil, errors.New("missing required argument 'SslVpnServerId'")
	}
	if args == nil {
		args = &SslVpnClientCertArgs{}
	}
	var resource SslVpnClientCert
	err := ctx.RegisterResource("alicloud:vpn/sslVpnClientCert:SslVpnClientCert", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSslVpnClientCert gets an existing SslVpnClientCert resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSslVpnClientCert(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SslVpnClientCertState, opts ...pulumi.ResourceOption) (*SslVpnClientCert, error) {
	var resource SslVpnClientCert
	err := ctx.ReadResource("alicloud:vpn/sslVpnClientCert:SslVpnClientCert", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SslVpnClientCert resources.
type sslVpnClientCertState struct {
	CaCert         *string `pulumi:"caCert"`
	ClientCert     *string `pulumi:"clientCert"`
	ClientConfig   *string `pulumi:"clientConfig"`
	ClientKey      *string `pulumi:"clientKey"`
	Name           *string `pulumi:"name"`
	SslVpnServerId *string `pulumi:"sslVpnServerId"`
	Status         *string `pulumi:"status"`
}

type SslVpnClientCertState struct {
	CaCert         pulumi.StringPtrInput
	ClientCert     pulumi.StringPtrInput
	ClientConfig   pulumi.StringPtrInput
	ClientKey      pulumi.StringPtrInput
	Name           pulumi.StringPtrInput
	SslVpnServerId pulumi.StringPtrInput
	Status         pulumi.StringPtrInput
}

func (SslVpnClientCertState) ElementType() reflect.Type {
	return reflect.TypeOf((*sslVpnClientCertState)(nil)).Elem()
}

type sslVpnClientCertArgs struct {
	Name           *string `pulumi:"name"`
	SslVpnServerId string  `pulumi:"sslVpnServerId"`
}

// The set of arguments for constructing a SslVpnClientCert resource.
type SslVpnClientCertArgs struct {
	Name           pulumi.StringPtrInput
	SslVpnServerId pulumi.StringInput
}

func (SslVpnClientCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sslVpnClientCertArgs)(nil)).Elem()
}
