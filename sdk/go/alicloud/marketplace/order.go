// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package marketplace

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/market_order.html.markdown.
type Order struct {
	s *pulumi.ResourceState
}

// NewOrder registers a new resource with the given unique name, arguments, and options.
func NewOrder(ctx *pulumi.Context,
	name string, args *OrderArgs, opts ...pulumi.ResourceOpt) (*Order, error) {
	if args == nil || args.PackageVersion == nil {
		return nil, errors.New("missing required argument 'PackageVersion'")
	}
	if args == nil || args.PricingCycle == nil {
		return nil, errors.New("missing required argument 'PricingCycle'")
	}
	if args == nil || args.ProductCode == nil {
		return nil, errors.New("missing required argument 'ProductCode'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["components"] = nil
		inputs["couponId"] = nil
		inputs["duration"] = nil
		inputs["packageVersion"] = nil
		inputs["payType"] = nil
		inputs["pricingCycle"] = nil
		inputs["productCode"] = nil
		inputs["quantity"] = nil
	} else {
		inputs["components"] = args.Components
		inputs["couponId"] = args.CouponId
		inputs["duration"] = args.Duration
		inputs["packageVersion"] = args.PackageVersion
		inputs["payType"] = args.PayType
		inputs["pricingCycle"] = args.PricingCycle
		inputs["productCode"] = args.ProductCode
		inputs["quantity"] = args.Quantity
	}
	s, err := ctx.RegisterResource("alicloud:marketplace/order:Order", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Order{s: s}, nil
}

// GetOrder gets an existing Order resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrder(ctx *pulumi.Context,
	name string, id pulumi.ID, state *OrderState, opts ...pulumi.ResourceOpt) (*Order, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["components"] = state.Components
		inputs["couponId"] = state.CouponId
		inputs["duration"] = state.Duration
		inputs["packageVersion"] = state.PackageVersion
		inputs["payType"] = state.PayType
		inputs["pricingCycle"] = state.PricingCycle
		inputs["productCode"] = state.ProductCode
		inputs["quantity"] = state.Quantity
	}
	s, err := ctx.ReadResource("alicloud:marketplace/order:Order", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Order{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Order) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Order) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Service providers customize additional components.
func (r *Order) Components() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["components"])
}

// The coupon id of the market product.
func (r *Order) CouponId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["couponId"])
}

// The number of purchase cycles.
func (r *Order) Duration() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["duration"])
}

// The package version of the market product.
func (r *Order) PackageVersion() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["packageVersion"])
}

// Valid values are `PrePaid`, `PostPaid`,System default to `PostPaid`.
func (r *Order) PayType() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["payType"])
}

// The purchase cycle of the product, valid values are `Day`, `Month` and `Year`.
func (r *Order) PricingCycle() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["pricingCycle"])
}

// The productCode of market place product.
func (r *Order) ProductCode() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["productCode"])
}

// The quantity of the market product will be purchased.
func (r *Order) Quantity() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["quantity"])
}

// Input properties used for looking up and filtering Order resources.
type OrderState struct {
	// Service providers customize additional components.
	Components interface{}
	// The coupon id of the market product.
	CouponId interface{}
	// The number of purchase cycles.
	Duration interface{}
	// The package version of the market product.
	PackageVersion interface{}
	// Valid values are `PrePaid`, `PostPaid`,System default to `PostPaid`.
	PayType interface{}
	// The purchase cycle of the product, valid values are `Day`, `Month` and `Year`.
	PricingCycle interface{}
	// The productCode of market place product.
	ProductCode interface{}
	// The quantity of the market product will be purchased.
	Quantity interface{}
}

// The set of arguments for constructing a Order resource.
type OrderArgs struct {
	// Service providers customize additional components.
	Components interface{}
	// The coupon id of the market product.
	CouponId interface{}
	// The number of purchase cycles.
	Duration interface{}
	// The package version of the market product.
	PackageVersion interface{}
	// Valid values are `PrePaid`, `PostPaid`,System default to `PostPaid`.
	PayType interface{}
	// The purchase cycle of the product, valid values are `Day`, `Month` and `Year`.
	PricingCycle interface{}
	// The productCode of market place product.
	ProductCode interface{}
	// The quantity of the market product will be purchased.
	Quantity interface{}
}
