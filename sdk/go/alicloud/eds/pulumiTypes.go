// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EcdPolicyGroupAuthorizeAccessPolicyRule struct {
	// The cidrip of authorize access rule.
	CidrIp *string `pulumi:"cidrIp"`
	// The description of authorize access rule.
	Description *string `pulumi:"description"`
}

// EcdPolicyGroupAuthorizeAccessPolicyRuleInput is an input type that accepts EcdPolicyGroupAuthorizeAccessPolicyRuleArgs and EcdPolicyGroupAuthorizeAccessPolicyRuleOutput values.
// You can construct a concrete instance of `EcdPolicyGroupAuthorizeAccessPolicyRuleInput` via:
//
//          EcdPolicyGroupAuthorizeAccessPolicyRuleArgs{...}
type EcdPolicyGroupAuthorizeAccessPolicyRuleInput interface {
	pulumi.Input

	ToEcdPolicyGroupAuthorizeAccessPolicyRuleOutput() EcdPolicyGroupAuthorizeAccessPolicyRuleOutput
	ToEcdPolicyGroupAuthorizeAccessPolicyRuleOutputWithContext(context.Context) EcdPolicyGroupAuthorizeAccessPolicyRuleOutput
}

type EcdPolicyGroupAuthorizeAccessPolicyRuleArgs struct {
	// The cidrip of authorize access rule.
	CidrIp pulumi.StringPtrInput `pulumi:"cidrIp"`
	// The description of authorize access rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
}

func (EcdPolicyGroupAuthorizeAccessPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EcdPolicyGroupAuthorizeAccessPolicyRule)(nil)).Elem()
}

func (i EcdPolicyGroupAuthorizeAccessPolicyRuleArgs) ToEcdPolicyGroupAuthorizeAccessPolicyRuleOutput() EcdPolicyGroupAuthorizeAccessPolicyRuleOutput {
	return i.ToEcdPolicyGroupAuthorizeAccessPolicyRuleOutputWithContext(context.Background())
}

func (i EcdPolicyGroupAuthorizeAccessPolicyRuleArgs) ToEcdPolicyGroupAuthorizeAccessPolicyRuleOutputWithContext(ctx context.Context) EcdPolicyGroupAuthorizeAccessPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcdPolicyGroupAuthorizeAccessPolicyRuleOutput)
}

// EcdPolicyGroupAuthorizeAccessPolicyRuleArrayInput is an input type that accepts EcdPolicyGroupAuthorizeAccessPolicyRuleArray and EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput values.
// You can construct a concrete instance of `EcdPolicyGroupAuthorizeAccessPolicyRuleArrayInput` via:
//
//          EcdPolicyGroupAuthorizeAccessPolicyRuleArray{ EcdPolicyGroupAuthorizeAccessPolicyRuleArgs{...} }
type EcdPolicyGroupAuthorizeAccessPolicyRuleArrayInput interface {
	pulumi.Input

	ToEcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput() EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput
	ToEcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutputWithContext(context.Context) EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput
}

type EcdPolicyGroupAuthorizeAccessPolicyRuleArray []EcdPolicyGroupAuthorizeAccessPolicyRuleInput

func (EcdPolicyGroupAuthorizeAccessPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EcdPolicyGroupAuthorizeAccessPolicyRule)(nil)).Elem()
}

func (i EcdPolicyGroupAuthorizeAccessPolicyRuleArray) ToEcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput() EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput {
	return i.ToEcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutputWithContext(context.Background())
}

func (i EcdPolicyGroupAuthorizeAccessPolicyRuleArray) ToEcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutputWithContext(ctx context.Context) EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput)
}

type EcdPolicyGroupAuthorizeAccessPolicyRuleOutput struct{ *pulumi.OutputState }

func (EcdPolicyGroupAuthorizeAccessPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EcdPolicyGroupAuthorizeAccessPolicyRule)(nil)).Elem()
}

func (o EcdPolicyGroupAuthorizeAccessPolicyRuleOutput) ToEcdPolicyGroupAuthorizeAccessPolicyRuleOutput() EcdPolicyGroupAuthorizeAccessPolicyRuleOutput {
	return o
}

func (o EcdPolicyGroupAuthorizeAccessPolicyRuleOutput) ToEcdPolicyGroupAuthorizeAccessPolicyRuleOutputWithContext(ctx context.Context) EcdPolicyGroupAuthorizeAccessPolicyRuleOutput {
	return o
}

// The cidrip of authorize access rule.
func (o EcdPolicyGroupAuthorizeAccessPolicyRuleOutput) CidrIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcdPolicyGroupAuthorizeAccessPolicyRule) *string { return v.CidrIp }).(pulumi.StringPtrOutput)
}

// The description of authorize access rule.
func (o EcdPolicyGroupAuthorizeAccessPolicyRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcdPolicyGroupAuthorizeAccessPolicyRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

type EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EcdPolicyGroupAuthorizeAccessPolicyRule)(nil)).Elem()
}

func (o EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput) ToEcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput() EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput {
	return o
}

func (o EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput) ToEcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutputWithContext(ctx context.Context) EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput {
	return o
}

func (o EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput) Index(i pulumi.IntInput) EcdPolicyGroupAuthorizeAccessPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EcdPolicyGroupAuthorizeAccessPolicyRule {
		return vs[0].([]EcdPolicyGroupAuthorizeAccessPolicyRule)[vs[1].(int)]
	}).(EcdPolicyGroupAuthorizeAccessPolicyRuleOutput)
}

type EcdPolicyGroupAuthorizeSecurityPolicyRule struct {
	// The cidrip of authorize access rule.
	CidrIp *string `pulumi:"cidrIp"`
	// The description of authorize access rule.
	Description *string `pulumi:"description"`
	// The ip protocol of security rules.
	IpProtocol *string `pulumi:"ipProtocol"`
	// The policy of security rules.
	Policy *string `pulumi:"policy"`
	// The port range of security rules.
	PortRange *string `pulumi:"portRange"`
	// The priority of security rules.
	Priority *string `pulumi:"priority"`
	// The type of security rules.
	Type *string `pulumi:"type"`
}

// EcdPolicyGroupAuthorizeSecurityPolicyRuleInput is an input type that accepts EcdPolicyGroupAuthorizeSecurityPolicyRuleArgs and EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput values.
// You can construct a concrete instance of `EcdPolicyGroupAuthorizeSecurityPolicyRuleInput` via:
//
//          EcdPolicyGroupAuthorizeSecurityPolicyRuleArgs{...}
type EcdPolicyGroupAuthorizeSecurityPolicyRuleInput interface {
	pulumi.Input

	ToEcdPolicyGroupAuthorizeSecurityPolicyRuleOutput() EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput
	ToEcdPolicyGroupAuthorizeSecurityPolicyRuleOutputWithContext(context.Context) EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput
}

type EcdPolicyGroupAuthorizeSecurityPolicyRuleArgs struct {
	// The cidrip of authorize access rule.
	CidrIp pulumi.StringPtrInput `pulumi:"cidrIp"`
	// The description of authorize access rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The ip protocol of security rules.
	IpProtocol pulumi.StringPtrInput `pulumi:"ipProtocol"`
	// The policy of security rules.
	Policy pulumi.StringPtrInput `pulumi:"policy"`
	// The port range of security rules.
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
	// The priority of security rules.
	Priority pulumi.StringPtrInput `pulumi:"priority"`
	// The type of security rules.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (EcdPolicyGroupAuthorizeSecurityPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EcdPolicyGroupAuthorizeSecurityPolicyRule)(nil)).Elem()
}

func (i EcdPolicyGroupAuthorizeSecurityPolicyRuleArgs) ToEcdPolicyGroupAuthorizeSecurityPolicyRuleOutput() EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput {
	return i.ToEcdPolicyGroupAuthorizeSecurityPolicyRuleOutputWithContext(context.Background())
}

func (i EcdPolicyGroupAuthorizeSecurityPolicyRuleArgs) ToEcdPolicyGroupAuthorizeSecurityPolicyRuleOutputWithContext(ctx context.Context) EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput)
}

// EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayInput is an input type that accepts EcdPolicyGroupAuthorizeSecurityPolicyRuleArray and EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput values.
// You can construct a concrete instance of `EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayInput` via:
//
//          EcdPolicyGroupAuthorizeSecurityPolicyRuleArray{ EcdPolicyGroupAuthorizeSecurityPolicyRuleArgs{...} }
type EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayInput interface {
	pulumi.Input

	ToEcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput() EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput
	ToEcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutputWithContext(context.Context) EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput
}

type EcdPolicyGroupAuthorizeSecurityPolicyRuleArray []EcdPolicyGroupAuthorizeSecurityPolicyRuleInput

func (EcdPolicyGroupAuthorizeSecurityPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EcdPolicyGroupAuthorizeSecurityPolicyRule)(nil)).Elem()
}

func (i EcdPolicyGroupAuthorizeSecurityPolicyRuleArray) ToEcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput() EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput {
	return i.ToEcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutputWithContext(context.Background())
}

func (i EcdPolicyGroupAuthorizeSecurityPolicyRuleArray) ToEcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutputWithContext(ctx context.Context) EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput)
}

type EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput struct{ *pulumi.OutputState }

func (EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EcdPolicyGroupAuthorizeSecurityPolicyRule)(nil)).Elem()
}

func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) ToEcdPolicyGroupAuthorizeSecurityPolicyRuleOutput() EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput {
	return o
}

func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) ToEcdPolicyGroupAuthorizeSecurityPolicyRuleOutputWithContext(ctx context.Context) EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput {
	return o
}

// The cidrip of authorize access rule.
func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) CidrIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcdPolicyGroupAuthorizeSecurityPolicyRule) *string { return v.CidrIp }).(pulumi.StringPtrOutput)
}

// The description of authorize access rule.
func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcdPolicyGroupAuthorizeSecurityPolicyRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The ip protocol of security rules.
func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) IpProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcdPolicyGroupAuthorizeSecurityPolicyRule) *string { return v.IpProtocol }).(pulumi.StringPtrOutput)
}

// The policy of security rules.
func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcdPolicyGroupAuthorizeSecurityPolicyRule) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

// The port range of security rules.
func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcdPolicyGroupAuthorizeSecurityPolicyRule) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

// The priority of security rules.
func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcdPolicyGroupAuthorizeSecurityPolicyRule) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

// The type of security rules.
func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EcdPolicyGroupAuthorizeSecurityPolicyRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EcdPolicyGroupAuthorizeSecurityPolicyRule)(nil)).Elem()
}

func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput) ToEcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput() EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput {
	return o
}

func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput) ToEcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutputWithContext(ctx context.Context) EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput {
	return o
}

func (o EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput) Index(i pulumi.IntInput) EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EcdPolicyGroupAuthorizeSecurityPolicyRule {
		return vs[0].([]EcdPolicyGroupAuthorizeSecurityPolicyRule)[vs[1].(int)]
	}).(EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput)
}

type GetPolicyGroupsGroup struct {
	// The rule of authorize access rule.
	AuthorizeAccessPolicyRules []GetPolicyGroupsGroupAuthorizeAccessPolicyRule `pulumi:"authorizeAccessPolicyRules"`
	// The policy rule.
	AuthorizeSecurityPolicyRules []GetPolicyGroupsGroupAuthorizeSecurityPolicyRule `pulumi:"authorizeSecurityPolicyRules"`
	// The clipboard policy.
	Clipboard string `pulumi:"clipboard"`
	// The list of domain.
	DomainList string `pulumi:"domainList"`
	// The count of eds.
	EdsCount int `pulumi:"edsCount"`
	// The access of html5.
	HtmlAccess string `pulumi:"htmlAccess"`
	// The html5 file transfer.
	HtmlFileTransfer string `pulumi:"htmlFileTransfer"`
	// The ID of the Policy Group.
	Id string `pulumi:"id"`
	// Local drive redirect policy.
	LocalDrive string `pulumi:"localDrive"`
	// The policy group id.
	PolicyGroupId string `pulumi:"policyGroupId"`
	// The name of policy group.
	PolicyGroupName string `pulumi:"policyGroupName"`
	// The type of policy group.
	PolicyGroupType string `pulumi:"policyGroupType"`
	// The status of policy.
	Status string `pulumi:"status"`
	// The usb redirect policy.
	UsbRedirect string `pulumi:"usbRedirect"`
	// The quality of visual.sae_ecdsae_nameecd_po
	VisualQuality string `pulumi:"visualQuality"`
	// The watermark policy.
	Watermark string `pulumi:"watermark"`
	// The watermark transparency.
	WatermarkTransparency string `pulumi:"watermarkTransparency"`
	// The type of watemark.
	WatermarkType string `pulumi:"watermarkType"`
}

// GetPolicyGroupsGroupInput is an input type that accepts GetPolicyGroupsGroupArgs and GetPolicyGroupsGroupOutput values.
// You can construct a concrete instance of `GetPolicyGroupsGroupInput` via:
//
//          GetPolicyGroupsGroupArgs{...}
type GetPolicyGroupsGroupInput interface {
	pulumi.Input

	ToGetPolicyGroupsGroupOutput() GetPolicyGroupsGroupOutput
	ToGetPolicyGroupsGroupOutputWithContext(context.Context) GetPolicyGroupsGroupOutput
}

type GetPolicyGroupsGroupArgs struct {
	// The rule of authorize access rule.
	AuthorizeAccessPolicyRules GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayInput `pulumi:"authorizeAccessPolicyRules"`
	// The policy rule.
	AuthorizeSecurityPolicyRules GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayInput `pulumi:"authorizeSecurityPolicyRules"`
	// The clipboard policy.
	Clipboard pulumi.StringInput `pulumi:"clipboard"`
	// The list of domain.
	DomainList pulumi.StringInput `pulumi:"domainList"`
	// The count of eds.
	EdsCount pulumi.IntInput `pulumi:"edsCount"`
	// The access of html5.
	HtmlAccess pulumi.StringInput `pulumi:"htmlAccess"`
	// The html5 file transfer.
	HtmlFileTransfer pulumi.StringInput `pulumi:"htmlFileTransfer"`
	// The ID of the Policy Group.
	Id pulumi.StringInput `pulumi:"id"`
	// Local drive redirect policy.
	LocalDrive pulumi.StringInput `pulumi:"localDrive"`
	// The policy group id.
	PolicyGroupId pulumi.StringInput `pulumi:"policyGroupId"`
	// The name of policy group.
	PolicyGroupName pulumi.StringInput `pulumi:"policyGroupName"`
	// The type of policy group.
	PolicyGroupType pulumi.StringInput `pulumi:"policyGroupType"`
	// The status of policy.
	Status pulumi.StringInput `pulumi:"status"`
	// The usb redirect policy.
	UsbRedirect pulumi.StringInput `pulumi:"usbRedirect"`
	// The quality of visual.sae_ecdsae_nameecd_po
	VisualQuality pulumi.StringInput `pulumi:"visualQuality"`
	// The watermark policy.
	Watermark pulumi.StringInput `pulumi:"watermark"`
	// The watermark transparency.
	WatermarkTransparency pulumi.StringInput `pulumi:"watermarkTransparency"`
	// The type of watemark.
	WatermarkType pulumi.StringInput `pulumi:"watermarkType"`
}

func (GetPolicyGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGroupsGroup)(nil)).Elem()
}

func (i GetPolicyGroupsGroupArgs) ToGetPolicyGroupsGroupOutput() GetPolicyGroupsGroupOutput {
	return i.ToGetPolicyGroupsGroupOutputWithContext(context.Background())
}

func (i GetPolicyGroupsGroupArgs) ToGetPolicyGroupsGroupOutputWithContext(ctx context.Context) GetPolicyGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGroupsGroupOutput)
}

// GetPolicyGroupsGroupArrayInput is an input type that accepts GetPolicyGroupsGroupArray and GetPolicyGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetPolicyGroupsGroupArrayInput` via:
//
//          GetPolicyGroupsGroupArray{ GetPolicyGroupsGroupArgs{...} }
type GetPolicyGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetPolicyGroupsGroupArrayOutput() GetPolicyGroupsGroupArrayOutput
	ToGetPolicyGroupsGroupArrayOutputWithContext(context.Context) GetPolicyGroupsGroupArrayOutput
}

type GetPolicyGroupsGroupArray []GetPolicyGroupsGroupInput

func (GetPolicyGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyGroupsGroup)(nil)).Elem()
}

func (i GetPolicyGroupsGroupArray) ToGetPolicyGroupsGroupArrayOutput() GetPolicyGroupsGroupArrayOutput {
	return i.ToGetPolicyGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetPolicyGroupsGroupArray) ToGetPolicyGroupsGroupArrayOutputWithContext(ctx context.Context) GetPolicyGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGroupsGroupArrayOutput)
}

type GetPolicyGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetPolicyGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGroupsGroup)(nil)).Elem()
}

func (o GetPolicyGroupsGroupOutput) ToGetPolicyGroupsGroupOutput() GetPolicyGroupsGroupOutput {
	return o
}

func (o GetPolicyGroupsGroupOutput) ToGetPolicyGroupsGroupOutputWithContext(ctx context.Context) GetPolicyGroupsGroupOutput {
	return o
}

// The rule of authorize access rule.
func (o GetPolicyGroupsGroupOutput) AuthorizeAccessPolicyRules() GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) []GetPolicyGroupsGroupAuthorizeAccessPolicyRule {
		return v.AuthorizeAccessPolicyRules
	}).(GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput)
}

// The policy rule.
func (o GetPolicyGroupsGroupOutput) AuthorizeSecurityPolicyRules() GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) []GetPolicyGroupsGroupAuthorizeSecurityPolicyRule {
		return v.AuthorizeSecurityPolicyRules
	}).(GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput)
}

// The clipboard policy.
func (o GetPolicyGroupsGroupOutput) Clipboard() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.Clipboard }).(pulumi.StringOutput)
}

// The list of domain.
func (o GetPolicyGroupsGroupOutput) DomainList() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.DomainList }).(pulumi.StringOutput)
}

// The count of eds.
func (o GetPolicyGroupsGroupOutput) EdsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) int { return v.EdsCount }).(pulumi.IntOutput)
}

// The access of html5.
func (o GetPolicyGroupsGroupOutput) HtmlAccess() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.HtmlAccess }).(pulumi.StringOutput)
}

// The html5 file transfer.
func (o GetPolicyGroupsGroupOutput) HtmlFileTransfer() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.HtmlFileTransfer }).(pulumi.StringOutput)
}

// The ID of the Policy Group.
func (o GetPolicyGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// Local drive redirect policy.
func (o GetPolicyGroupsGroupOutput) LocalDrive() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.LocalDrive }).(pulumi.StringOutput)
}

// The policy group id.
func (o GetPolicyGroupsGroupOutput) PolicyGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.PolicyGroupId }).(pulumi.StringOutput)
}

// The name of policy group.
func (o GetPolicyGroupsGroupOutput) PolicyGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.PolicyGroupName }).(pulumi.StringOutput)
}

// The type of policy group.
func (o GetPolicyGroupsGroupOutput) PolicyGroupType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.PolicyGroupType }).(pulumi.StringOutput)
}

// The status of policy.
func (o GetPolicyGroupsGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.Status }).(pulumi.StringOutput)
}

// The usb redirect policy.
func (o GetPolicyGroupsGroupOutput) UsbRedirect() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.UsbRedirect }).(pulumi.StringOutput)
}

// The quality of visual.sae_ecdsae_nameecd_po
func (o GetPolicyGroupsGroupOutput) VisualQuality() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.VisualQuality }).(pulumi.StringOutput)
}

// The watermark policy.
func (o GetPolicyGroupsGroupOutput) Watermark() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.Watermark }).(pulumi.StringOutput)
}

// The watermark transparency.
func (o GetPolicyGroupsGroupOutput) WatermarkTransparency() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.WatermarkTransparency }).(pulumi.StringOutput)
}

// The type of watemark.
func (o GetPolicyGroupsGroupOutput) WatermarkType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroup) string { return v.WatermarkType }).(pulumi.StringOutput)
}

type GetPolicyGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyGroupsGroup)(nil)).Elem()
}

func (o GetPolicyGroupsGroupArrayOutput) ToGetPolicyGroupsGroupArrayOutput() GetPolicyGroupsGroupArrayOutput {
	return o
}

func (o GetPolicyGroupsGroupArrayOutput) ToGetPolicyGroupsGroupArrayOutputWithContext(ctx context.Context) GetPolicyGroupsGroupArrayOutput {
	return o
}

func (o GetPolicyGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetPolicyGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyGroupsGroup {
		return vs[0].([]GetPolicyGroupsGroup)[vs[1].(int)]
	}).(GetPolicyGroupsGroupOutput)
}

type GetPolicyGroupsGroupAuthorizeAccessPolicyRule struct {
	// The cidrip of security rules.
	CidrIp string `pulumi:"cidrIp"`
	// The description of security rules.
	Description string `pulumi:"description"`
}

// GetPolicyGroupsGroupAuthorizeAccessPolicyRuleInput is an input type that accepts GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArgs and GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput values.
// You can construct a concrete instance of `GetPolicyGroupsGroupAuthorizeAccessPolicyRuleInput` via:
//
//          GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArgs{...}
type GetPolicyGroupsGroupAuthorizeAccessPolicyRuleInput interface {
	pulumi.Input

	ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput() GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput
	ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutputWithContext(context.Context) GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput
}

type GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArgs struct {
	// The cidrip of security rules.
	CidrIp pulumi.StringInput `pulumi:"cidrIp"`
	// The description of security rules.
	Description pulumi.StringInput `pulumi:"description"`
}

func (GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGroupsGroupAuthorizeAccessPolicyRule)(nil)).Elem()
}

func (i GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArgs) ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput() GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput {
	return i.ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutputWithContext(context.Background())
}

func (i GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArgs) ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutputWithContext(ctx context.Context) GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput)
}

// GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayInput is an input type that accepts GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArray and GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput values.
// You can construct a concrete instance of `GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayInput` via:
//
//          GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArray{ GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArgs{...} }
type GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayInput interface {
	pulumi.Input

	ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput() GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput
	ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutputWithContext(context.Context) GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput
}

type GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArray []GetPolicyGroupsGroupAuthorizeAccessPolicyRuleInput

func (GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyGroupsGroupAuthorizeAccessPolicyRule)(nil)).Elem()
}

func (i GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArray) ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput() GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput {
	return i.ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutputWithContext(context.Background())
}

func (i GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArray) ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutputWithContext(ctx context.Context) GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput)
}

type GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput struct{ *pulumi.OutputState }

func (GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGroupsGroupAuthorizeAccessPolicyRule)(nil)).Elem()
}

func (o GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput) ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput() GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput {
	return o
}

func (o GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput) ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutputWithContext(ctx context.Context) GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput {
	return o
}

// The cidrip of security rules.
func (o GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput) CidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroupAuthorizeAccessPolicyRule) string { return v.CidrIp }).(pulumi.StringOutput)
}

// The description of security rules.
func (o GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroupAuthorizeAccessPolicyRule) string { return v.Description }).(pulumi.StringOutput)
}

type GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyGroupsGroupAuthorizeAccessPolicyRule)(nil)).Elem()
}

func (o GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput) ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput() GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput {
	return o
}

func (o GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput) ToGetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutputWithContext(ctx context.Context) GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput {
	return o
}

func (o GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput) Index(i pulumi.IntInput) GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyGroupsGroupAuthorizeAccessPolicyRule {
		return vs[0].([]GetPolicyGroupsGroupAuthorizeAccessPolicyRule)[vs[1].(int)]
	}).(GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput)
}

type GetPolicyGroupsGroupAuthorizeSecurityPolicyRule struct {
	// The cidrip of security rules.
	CidrIp string `pulumi:"cidrIp"`
	// The description of security rules.
	Description string `pulumi:"description"`
	// The ip protocol of security rules.
	IpProtocol string `pulumi:"ipProtocol"`
	// The policy of security rules.
	Policy string `pulumi:"policy"`
	// The port range of security rules.
	PortRange string `pulumi:"portRange"`
	// The priority of security rules.
	Priority string `pulumi:"priority"`
	// The type of security rules.
	Type string `pulumi:"type"`
}

// GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleInput is an input type that accepts GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArgs and GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput values.
// You can construct a concrete instance of `GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleInput` via:
//
//          GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArgs{...}
type GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleInput interface {
	pulumi.Input

	ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput() GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput
	ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutputWithContext(context.Context) GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput
}

type GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArgs struct {
	// The cidrip of security rules.
	CidrIp pulumi.StringInput `pulumi:"cidrIp"`
	// The description of security rules.
	Description pulumi.StringInput `pulumi:"description"`
	// The ip protocol of security rules.
	IpProtocol pulumi.StringInput `pulumi:"ipProtocol"`
	// The policy of security rules.
	Policy pulumi.StringInput `pulumi:"policy"`
	// The port range of security rules.
	PortRange pulumi.StringInput `pulumi:"portRange"`
	// The priority of security rules.
	Priority pulumi.StringInput `pulumi:"priority"`
	// The type of security rules.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGroupsGroupAuthorizeSecurityPolicyRule)(nil)).Elem()
}

func (i GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArgs) ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput() GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput {
	return i.ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutputWithContext(context.Background())
}

func (i GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArgs) ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutputWithContext(ctx context.Context) GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput)
}

// GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayInput is an input type that accepts GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArray and GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput values.
// You can construct a concrete instance of `GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayInput` via:
//
//          GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArray{ GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArgs{...} }
type GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayInput interface {
	pulumi.Input

	ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput() GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput
	ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutputWithContext(context.Context) GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput
}

type GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArray []GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleInput

func (GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyGroupsGroupAuthorizeSecurityPolicyRule)(nil)).Elem()
}

func (i GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArray) ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput() GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput {
	return i.ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutputWithContext(context.Background())
}

func (i GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArray) ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutputWithContext(ctx context.Context) GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput)
}

type GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput struct{ *pulumi.OutputState }

func (GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyGroupsGroupAuthorizeSecurityPolicyRule)(nil)).Elem()
}

func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput() GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput {
	return o
}

func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutputWithContext(ctx context.Context) GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput {
	return o
}

// The cidrip of security rules.
func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) CidrIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroupAuthorizeSecurityPolicyRule) string { return v.CidrIp }).(pulumi.StringOutput)
}

// The description of security rules.
func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroupAuthorizeSecurityPolicyRule) string { return v.Description }).(pulumi.StringOutput)
}

// The ip protocol of security rules.
func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroupAuthorizeSecurityPolicyRule) string { return v.IpProtocol }).(pulumi.StringOutput)
}

// The policy of security rules.
func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroupAuthorizeSecurityPolicyRule) string { return v.Policy }).(pulumi.StringOutput)
}

// The port range of security rules.
func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) PortRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroupAuthorizeSecurityPolicyRule) string { return v.PortRange }).(pulumi.StringOutput)
}

// The priority of security rules.
func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) Priority() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroupAuthorizeSecurityPolicyRule) string { return v.Priority }).(pulumi.StringOutput)
}

// The type of security rules.
func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyGroupsGroupAuthorizeSecurityPolicyRule) string { return v.Type }).(pulumi.StringOutput)
}

type GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyGroupsGroupAuthorizeSecurityPolicyRule)(nil)).Elem()
}

func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput) ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput() GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput {
	return o
}

func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput) ToGetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutputWithContext(ctx context.Context) GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput {
	return o
}

func (o GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput) Index(i pulumi.IntInput) GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyGroupsGroupAuthorizeSecurityPolicyRule {
		return vs[0].([]GetPolicyGroupsGroupAuthorizeSecurityPolicyRule)[vs[1].(int)]
	}).(GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput)
}

type GetSimpleOfficeSitesSite struct {
	// The Internet Bandwidth Peak.  Valid Values: 0~200. If This Field Is Set to 0, Indicates That There Is No Open Internet Access.
	Bandwidth int `pulumi:"bandwidth"`
	// Cloud Enterprise Network Instance Id.
	CenId string `pulumi:"cenId"`
	// Workspace Corresponds to the Security Office Network of IPv4 Segment.
	CidrBlock string `pulumi:"cidrBlock"`
	// Workspace Creation Time.
	CreateTime string `pulumi:"createTime"`
	// Security Group ID.
	CustomSecurityGroupId string `pulumi:"customSecurityGroupId"`
	// Connect to the Cloud Desktop Allows the Use of the Access Mode of. Possible Values: the Internet: Only Allows the Client to Public Cloud Desktop. Virtual Private Cloud (VPC): Only Allows in the Virtual Private Cloud (VPC) in the Client to Connect to the Cloud Desktop. Any: Not by Way of Limitation. Use Client to Connect to the Cloud Desktop When It Is Possible to Choose the Connection.
	DesktopAccessType string `pulumi:"desktopAccessType"`
	// The Desktop Vpc Endpoint.
	DesktopVpcEndpoint string `pulumi:"desktopVpcEndpoint"`
	// Enterprise Ad Corresponding DNS Address.
	DnsAddresses []string `pulumi:"dnsAddresses"`
	// Easy-to-Use DNS Name.
	DnsUserName string `pulumi:"dnsUserName"`
	// Enterprise of Ad Domain Name.
	DomainName string `pulumi:"domainName"`
	// Domain of the User Who Will Administer This Target Application Password.
	DomainPassword string `pulumi:"domainPassword"`
	// The Domain Administrator's Username.
	DomainUserName string `pulumi:"domainUserName"`
	// Whether to Use Cloud Desktop User Empowerment of Local Administrator Permissions.
	EnableAdminAccess bool `pulumi:"enableAdminAccess"`
	// Enable Cross-Desktop Access.
	EnableCrossDesktopAccess bool `pulumi:"enableCrossDesktopAccess"`
	// Whether the Open Internet Access Function.
	EnableInternetAccess bool `pulumi:"enableInternetAccess"`
	// NAS File System ID.
	FileSystemIds []string `pulumi:"fileSystemIds"`
	// The ID of the Simple Office Site.
	Id string `pulumi:"id"`
	// Whether to Enable Multi-Factor Authentication MFA.
	MfaEnabled bool `pulumi:"mfaEnabled"`
	// Internet Access ID.
	NetworkPackageId string `pulumi:"networkPackageId"`
	// The Workspace ID.
	OfficeSiteId string `pulumi:"officeSiteId"`
	// Workspace Account System Type. Possible Values: Simple: Convenient Account. AD_CONNECTOR: Enterprise Ad Account.
	OfficeSiteType string `pulumi:"officeSiteType"`
	// The simple office site name.
	SimpleOfficeSiteName string `pulumi:"simpleOfficeSiteName"`
	// Whether to Enable Single Sign-on (SSO) for User-Based SSO.
	SsoEnabled bool `pulumi:"ssoEnabled"`
	// Whether to Enable Single Sign-on (SSO) for User-Based SSO.
	SsoStatus bool `pulumi:"ssoStatus"`
	// Workspace State. Possible Values: Registering: Registered in the Registered: Registered.
	Status string `pulumi:"status"`
	// AD Subdomain of the DNS Address.
	SubDnsAddresses []string `pulumi:"subDnsAddresses"`
	// AD Domain DNS Name.
	SubDomainName string `pulumi:"subDomainName"`
	// AD Trust Password.
	TrustPassword string `pulumi:"trustPassword"`
	// Security Office VPC ID.
	VpcId string `pulumi:"vpcId"`
	// The vswitch ids.
	VswitchIds []string `pulumi:"vswitchIds"`
}

// GetSimpleOfficeSitesSiteInput is an input type that accepts GetSimpleOfficeSitesSiteArgs and GetSimpleOfficeSitesSiteOutput values.
// You can construct a concrete instance of `GetSimpleOfficeSitesSiteInput` via:
//
//          GetSimpleOfficeSitesSiteArgs{...}
type GetSimpleOfficeSitesSiteInput interface {
	pulumi.Input

	ToGetSimpleOfficeSitesSiteOutput() GetSimpleOfficeSitesSiteOutput
	ToGetSimpleOfficeSitesSiteOutputWithContext(context.Context) GetSimpleOfficeSitesSiteOutput
}

type GetSimpleOfficeSitesSiteArgs struct {
	// The Internet Bandwidth Peak.  Valid Values: 0~200. If This Field Is Set to 0, Indicates That There Is No Open Internet Access.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// Cloud Enterprise Network Instance Id.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// Workspace Corresponds to the Security Office Network of IPv4 Segment.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Workspace Creation Time.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// Security Group ID.
	CustomSecurityGroupId pulumi.StringInput `pulumi:"customSecurityGroupId"`
	// Connect to the Cloud Desktop Allows the Use of the Access Mode of. Possible Values: the Internet: Only Allows the Client to Public Cloud Desktop. Virtual Private Cloud (VPC): Only Allows in the Virtual Private Cloud (VPC) in the Client to Connect to the Cloud Desktop. Any: Not by Way of Limitation. Use Client to Connect to the Cloud Desktop When It Is Possible to Choose the Connection.
	DesktopAccessType pulumi.StringInput `pulumi:"desktopAccessType"`
	// The Desktop Vpc Endpoint.
	DesktopVpcEndpoint pulumi.StringInput `pulumi:"desktopVpcEndpoint"`
	// Enterprise Ad Corresponding DNS Address.
	DnsAddresses pulumi.StringArrayInput `pulumi:"dnsAddresses"`
	// Easy-to-Use DNS Name.
	DnsUserName pulumi.StringInput `pulumi:"dnsUserName"`
	// Enterprise of Ad Domain Name.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// Domain of the User Who Will Administer This Target Application Password.
	DomainPassword pulumi.StringInput `pulumi:"domainPassword"`
	// The Domain Administrator's Username.
	DomainUserName pulumi.StringInput `pulumi:"domainUserName"`
	// Whether to Use Cloud Desktop User Empowerment of Local Administrator Permissions.
	EnableAdminAccess pulumi.BoolInput `pulumi:"enableAdminAccess"`
	// Enable Cross-Desktop Access.
	EnableCrossDesktopAccess pulumi.BoolInput `pulumi:"enableCrossDesktopAccess"`
	// Whether the Open Internet Access Function.
	EnableInternetAccess pulumi.BoolInput `pulumi:"enableInternetAccess"`
	// NAS File System ID.
	FileSystemIds pulumi.StringArrayInput `pulumi:"fileSystemIds"`
	// The ID of the Simple Office Site.
	Id pulumi.StringInput `pulumi:"id"`
	// Whether to Enable Multi-Factor Authentication MFA.
	MfaEnabled pulumi.BoolInput `pulumi:"mfaEnabled"`
	// Internet Access ID.
	NetworkPackageId pulumi.StringInput `pulumi:"networkPackageId"`
	// The Workspace ID.
	OfficeSiteId pulumi.StringInput `pulumi:"officeSiteId"`
	// Workspace Account System Type. Possible Values: Simple: Convenient Account. AD_CONNECTOR: Enterprise Ad Account.
	OfficeSiteType pulumi.StringInput `pulumi:"officeSiteType"`
	// The simple office site name.
	SimpleOfficeSiteName pulumi.StringInput `pulumi:"simpleOfficeSiteName"`
	// Whether to Enable Single Sign-on (SSO) for User-Based SSO.
	SsoEnabled pulumi.BoolInput `pulumi:"ssoEnabled"`
	// Whether to Enable Single Sign-on (SSO) for User-Based SSO.
	SsoStatus pulumi.BoolInput `pulumi:"ssoStatus"`
	// Workspace State. Possible Values: Registering: Registered in the Registered: Registered.
	Status pulumi.StringInput `pulumi:"status"`
	// AD Subdomain of the DNS Address.
	SubDnsAddresses pulumi.StringArrayInput `pulumi:"subDnsAddresses"`
	// AD Domain DNS Name.
	SubDomainName pulumi.StringInput `pulumi:"subDomainName"`
	// AD Trust Password.
	TrustPassword pulumi.StringInput `pulumi:"trustPassword"`
	// Security Office VPC ID.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The vswitch ids.
	VswitchIds pulumi.StringArrayInput `pulumi:"vswitchIds"`
}

func (GetSimpleOfficeSitesSiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSimpleOfficeSitesSite)(nil)).Elem()
}

func (i GetSimpleOfficeSitesSiteArgs) ToGetSimpleOfficeSitesSiteOutput() GetSimpleOfficeSitesSiteOutput {
	return i.ToGetSimpleOfficeSitesSiteOutputWithContext(context.Background())
}

func (i GetSimpleOfficeSitesSiteArgs) ToGetSimpleOfficeSitesSiteOutputWithContext(ctx context.Context) GetSimpleOfficeSitesSiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSimpleOfficeSitesSiteOutput)
}

// GetSimpleOfficeSitesSiteArrayInput is an input type that accepts GetSimpleOfficeSitesSiteArray and GetSimpleOfficeSitesSiteArrayOutput values.
// You can construct a concrete instance of `GetSimpleOfficeSitesSiteArrayInput` via:
//
//          GetSimpleOfficeSitesSiteArray{ GetSimpleOfficeSitesSiteArgs{...} }
type GetSimpleOfficeSitesSiteArrayInput interface {
	pulumi.Input

	ToGetSimpleOfficeSitesSiteArrayOutput() GetSimpleOfficeSitesSiteArrayOutput
	ToGetSimpleOfficeSitesSiteArrayOutputWithContext(context.Context) GetSimpleOfficeSitesSiteArrayOutput
}

type GetSimpleOfficeSitesSiteArray []GetSimpleOfficeSitesSiteInput

func (GetSimpleOfficeSitesSiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSimpleOfficeSitesSite)(nil)).Elem()
}

func (i GetSimpleOfficeSitesSiteArray) ToGetSimpleOfficeSitesSiteArrayOutput() GetSimpleOfficeSitesSiteArrayOutput {
	return i.ToGetSimpleOfficeSitesSiteArrayOutputWithContext(context.Background())
}

func (i GetSimpleOfficeSitesSiteArray) ToGetSimpleOfficeSitesSiteArrayOutputWithContext(ctx context.Context) GetSimpleOfficeSitesSiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSimpleOfficeSitesSiteArrayOutput)
}

type GetSimpleOfficeSitesSiteOutput struct{ *pulumi.OutputState }

func (GetSimpleOfficeSitesSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSimpleOfficeSitesSite)(nil)).Elem()
}

func (o GetSimpleOfficeSitesSiteOutput) ToGetSimpleOfficeSitesSiteOutput() GetSimpleOfficeSitesSiteOutput {
	return o
}

func (o GetSimpleOfficeSitesSiteOutput) ToGetSimpleOfficeSitesSiteOutputWithContext(ctx context.Context) GetSimpleOfficeSitesSiteOutput {
	return o
}

// The Internet Bandwidth Peak.  Valid Values: 0~200. If This Field Is Set to 0, Indicates That There Is No Open Internet Access.
func (o GetSimpleOfficeSitesSiteOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// Cloud Enterprise Network Instance Id.
func (o GetSimpleOfficeSitesSiteOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.CenId }).(pulumi.StringOutput)
}

// Workspace Corresponds to the Security Office Network of IPv4 Segment.
func (o GetSimpleOfficeSitesSiteOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// Workspace Creation Time.
func (o GetSimpleOfficeSitesSiteOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.CreateTime }).(pulumi.StringOutput)
}

// Security Group ID.
func (o GetSimpleOfficeSitesSiteOutput) CustomSecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.CustomSecurityGroupId }).(pulumi.StringOutput)
}

// Connect to the Cloud Desktop Allows the Use of the Access Mode of. Possible Values: the Internet: Only Allows the Client to Public Cloud Desktop. Virtual Private Cloud (VPC): Only Allows in the Virtual Private Cloud (VPC) in the Client to Connect to the Cloud Desktop. Any: Not by Way of Limitation. Use Client to Connect to the Cloud Desktop When It Is Possible to Choose the Connection.
func (o GetSimpleOfficeSitesSiteOutput) DesktopAccessType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.DesktopAccessType }).(pulumi.StringOutput)
}

// The Desktop Vpc Endpoint.
func (o GetSimpleOfficeSitesSiteOutput) DesktopVpcEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.DesktopVpcEndpoint }).(pulumi.StringOutput)
}

// Enterprise Ad Corresponding DNS Address.
func (o GetSimpleOfficeSitesSiteOutput) DnsAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) []string { return v.DnsAddresses }).(pulumi.StringArrayOutput)
}

// Easy-to-Use DNS Name.
func (o GetSimpleOfficeSitesSiteOutput) DnsUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.DnsUserName }).(pulumi.StringOutput)
}

// Enterprise of Ad Domain Name.
func (o GetSimpleOfficeSitesSiteOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.DomainName }).(pulumi.StringOutput)
}

// Domain of the User Who Will Administer This Target Application Password.
func (o GetSimpleOfficeSitesSiteOutput) DomainPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.DomainPassword }).(pulumi.StringOutput)
}

// The Domain Administrator's Username.
func (o GetSimpleOfficeSitesSiteOutput) DomainUserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.DomainUserName }).(pulumi.StringOutput)
}

// Whether to Use Cloud Desktop User Empowerment of Local Administrator Permissions.
func (o GetSimpleOfficeSitesSiteOutput) EnableAdminAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) bool { return v.EnableAdminAccess }).(pulumi.BoolOutput)
}

// Enable Cross-Desktop Access.
func (o GetSimpleOfficeSitesSiteOutput) EnableCrossDesktopAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) bool { return v.EnableCrossDesktopAccess }).(pulumi.BoolOutput)
}

// Whether the Open Internet Access Function.
func (o GetSimpleOfficeSitesSiteOutput) EnableInternetAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) bool { return v.EnableInternetAccess }).(pulumi.BoolOutput)
}

// NAS File System ID.
func (o GetSimpleOfficeSitesSiteOutput) FileSystemIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) []string { return v.FileSystemIds }).(pulumi.StringArrayOutput)
}

// The ID of the Simple Office Site.
func (o GetSimpleOfficeSitesSiteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.Id }).(pulumi.StringOutput)
}

// Whether to Enable Multi-Factor Authentication MFA.
func (o GetSimpleOfficeSitesSiteOutput) MfaEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) bool { return v.MfaEnabled }).(pulumi.BoolOutput)
}

// Internet Access ID.
func (o GetSimpleOfficeSitesSiteOutput) NetworkPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.NetworkPackageId }).(pulumi.StringOutput)
}

// The Workspace ID.
func (o GetSimpleOfficeSitesSiteOutput) OfficeSiteId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.OfficeSiteId }).(pulumi.StringOutput)
}

// Workspace Account System Type. Possible Values: Simple: Convenient Account. AD_CONNECTOR: Enterprise Ad Account.
func (o GetSimpleOfficeSitesSiteOutput) OfficeSiteType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.OfficeSiteType }).(pulumi.StringOutput)
}

// The simple office site name.
func (o GetSimpleOfficeSitesSiteOutput) SimpleOfficeSiteName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.SimpleOfficeSiteName }).(pulumi.StringOutput)
}

// Whether to Enable Single Sign-on (SSO) for User-Based SSO.
func (o GetSimpleOfficeSitesSiteOutput) SsoEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) bool { return v.SsoEnabled }).(pulumi.BoolOutput)
}

// Whether to Enable Single Sign-on (SSO) for User-Based SSO.
func (o GetSimpleOfficeSitesSiteOutput) SsoStatus() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) bool { return v.SsoStatus }).(pulumi.BoolOutput)
}

// Workspace State. Possible Values: Registering: Registered in the Registered: Registered.
func (o GetSimpleOfficeSitesSiteOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.Status }).(pulumi.StringOutput)
}

// AD Subdomain of the DNS Address.
func (o GetSimpleOfficeSitesSiteOutput) SubDnsAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) []string { return v.SubDnsAddresses }).(pulumi.StringArrayOutput)
}

// AD Domain DNS Name.
func (o GetSimpleOfficeSitesSiteOutput) SubDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.SubDomainName }).(pulumi.StringOutput)
}

// AD Trust Password.
func (o GetSimpleOfficeSitesSiteOutput) TrustPassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.TrustPassword }).(pulumi.StringOutput)
}

// Security Office VPC ID.
func (o GetSimpleOfficeSitesSiteOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) string { return v.VpcId }).(pulumi.StringOutput)
}

// The vswitch ids.
func (o GetSimpleOfficeSitesSiteOutput) VswitchIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSimpleOfficeSitesSite) []string { return v.VswitchIds }).(pulumi.StringArrayOutput)
}

type GetSimpleOfficeSitesSiteArrayOutput struct{ *pulumi.OutputState }

func (GetSimpleOfficeSitesSiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSimpleOfficeSitesSite)(nil)).Elem()
}

func (o GetSimpleOfficeSitesSiteArrayOutput) ToGetSimpleOfficeSitesSiteArrayOutput() GetSimpleOfficeSitesSiteArrayOutput {
	return o
}

func (o GetSimpleOfficeSitesSiteArrayOutput) ToGetSimpleOfficeSitesSiteArrayOutputWithContext(ctx context.Context) GetSimpleOfficeSitesSiteArrayOutput {
	return o
}

func (o GetSimpleOfficeSitesSiteArrayOutput) Index(i pulumi.IntInput) GetSimpleOfficeSitesSiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSimpleOfficeSitesSite {
		return vs[0].([]GetSimpleOfficeSitesSite)[vs[1].(int)]
	}).(GetSimpleOfficeSitesSiteOutput)
}

func init() {
	pulumi.RegisterOutputType(EcdPolicyGroupAuthorizeAccessPolicyRuleOutput{})
	pulumi.RegisterOutputType(EcdPolicyGroupAuthorizeAccessPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(EcdPolicyGroupAuthorizeSecurityPolicyRuleOutput{})
	pulumi.RegisterOutputType(EcdPolicyGroupAuthorizeSecurityPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetPolicyGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyGroupsGroupAuthorizeAccessPolicyRuleOutput{})
	pulumi.RegisterOutputType(GetPolicyGroupsGroupAuthorizeAccessPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleOutput{})
	pulumi.RegisterOutputType(GetPolicyGroupsGroupAuthorizeSecurityPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSimpleOfficeSitesSiteOutput{})
	pulumi.RegisterOutputType(GetSimpleOfficeSitesSiteArrayOutput{})
}
