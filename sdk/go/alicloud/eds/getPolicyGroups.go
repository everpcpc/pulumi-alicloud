// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eds

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Ecd Policy Groups of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.130.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/eds"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := eds.NewEcdPolicyGroup(ctx, "_default", &eds.EcdPolicyGroupArgs{
// 			PolicyGroupName: pulumi.String("my-policy-group"),
// 			Clipboard:       pulumi.String("read"),
// 			LocalDrive:      pulumi.String("read"),
// 			UsbRedirect:     pulumi.String("off"),
// 			Watermark:       pulumi.String("off"),
// 			AuthorizeAccessPolicyRules: eds.EcdPolicyGroupAuthorizeAccessPolicyRuleArray{
// 				&eds.EcdPolicyGroupAuthorizeAccessPolicyRuleArgs{
// 					Description: pulumi.String("my-description1"),
// 					CidrIp:      pulumi.String("1.2.3.45/24"),
// 				},
// 			},
// 			AuthorizeSecurityPolicyRules: eds.EcdPolicyGroupAuthorizeSecurityPolicyRuleArray{
// 				&eds.EcdPolicyGroupAuthorizeSecurityPolicyRuleArgs{
// 					Type:        pulumi.String("inflow"),
// 					Policy:      pulumi.String("accept"),
// 					Description: pulumi.String("my-description"),
// 					PortRange:   pulumi.String("80/80"),
// 					IpProtocol:  pulumi.String("TCP"),
// 					Priority:    pulumi.String("1"),
// 					CidrIp:      pulumi.String("1.2.3.4/24"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		opt0 := "^my-policy"
// 		nameRegex, err := eds.GetPolicyGroups(ctx, &eds.GetPolicyGroupsArgs{
// 			NameRegex: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("ecdPolicyGroupId", nameRegex.Groups[0].Id)
// 		return nil
// 	})
// }
// ```
func GetPolicyGroups(ctx *pulumi.Context, args *GetPolicyGroupsArgs, opts ...pulumi.InvokeOption) (*GetPolicyGroupsResult, error) {
	var rv GetPolicyGroupsResult
	err := ctx.Invoke("alicloud:eds/getPolicyGroups:getPolicyGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPolicyGroups.
type GetPolicyGroupsArgs struct {
	// A list of Policy Group IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Policy Group name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The status of policy.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getPolicyGroups.
type GetPolicyGroupsResult struct {
	Groups []GetPolicyGroupsGroup `pulumi:"groups"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	NameRegex  *string  `pulumi:"nameRegex"`
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
	Status     *string  `pulumi:"status"`
}
