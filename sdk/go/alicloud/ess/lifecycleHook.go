// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ess

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type LifecycleHook struct {
	pulumi.CustomResourceState

	DefaultResult pulumi.StringPtrOutput `pulumi:"defaultResult"`
	HeartbeatTimeout pulumi.IntPtrOutput `pulumi:"heartbeatTimeout"`
	LifecycleTransition pulumi.StringOutput `pulumi:"lifecycleTransition"`
	Name pulumi.StringOutput `pulumi:"name"`
	NotificationArn pulumi.StringOutput `pulumi:"notificationArn"`
	NotificationMetadata pulumi.StringOutput `pulumi:"notificationMetadata"`
	ScalingGroupId pulumi.StringOutput `pulumi:"scalingGroupId"`
}

// NewLifecycleHook registers a new resource with the given unique name, arguments, and options.
func NewLifecycleHook(ctx *pulumi.Context,
	name string, args *LifecycleHookArgs, opts ...pulumi.ResourceOption) (*LifecycleHook, error) {
	if args == nil || args.LifecycleTransition == nil {
		return nil, errors.New("missing required argument 'LifecycleTransition'")
	}
	if args == nil || args.ScalingGroupId == nil {
		return nil, errors.New("missing required argument 'ScalingGroupId'")
	}
	if args == nil {
		args = &LifecycleHookArgs{}
	}
	var resource LifecycleHook
	err := ctx.RegisterResource("alicloud:ess/lifecycleHook:LifecycleHook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLifecycleHook gets an existing LifecycleHook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLifecycleHook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LifecycleHookState, opts ...pulumi.ResourceOption) (*LifecycleHook, error) {
	var resource LifecycleHook
	err := ctx.ReadResource("alicloud:ess/lifecycleHook:LifecycleHook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LifecycleHook resources.
type lifecycleHookState struct {
	DefaultResult *string `pulumi:"defaultResult"`
	HeartbeatTimeout *int `pulumi:"heartbeatTimeout"`
	LifecycleTransition *string `pulumi:"lifecycleTransition"`
	Name *string `pulumi:"name"`
	NotificationArn *string `pulumi:"notificationArn"`
	NotificationMetadata *string `pulumi:"notificationMetadata"`
	ScalingGroupId *string `pulumi:"scalingGroupId"`
}

type LifecycleHookState struct {
	DefaultResult pulumi.StringPtrInput
	HeartbeatTimeout pulumi.IntPtrInput
	LifecycleTransition pulumi.StringPtrInput
	Name pulumi.StringPtrInput
	NotificationArn pulumi.StringPtrInput
	NotificationMetadata pulumi.StringPtrInput
	ScalingGroupId pulumi.StringPtrInput
}

func (LifecycleHookState) ElementType() reflect.Type {
	return reflect.TypeOf((*lifecycleHookState)(nil)).Elem()
}

type lifecycleHookArgs struct {
	DefaultResult *string `pulumi:"defaultResult"`
	HeartbeatTimeout *int `pulumi:"heartbeatTimeout"`
	LifecycleTransition string `pulumi:"lifecycleTransition"`
	Name *string `pulumi:"name"`
	NotificationArn *string `pulumi:"notificationArn"`
	NotificationMetadata *string `pulumi:"notificationMetadata"`
	ScalingGroupId string `pulumi:"scalingGroupId"`
}

// The set of arguments for constructing a LifecycleHook resource.
type LifecycleHookArgs struct {
	DefaultResult pulumi.StringPtrInput
	HeartbeatTimeout pulumi.IntPtrInput
	LifecycleTransition pulumi.StringInput
	Name pulumi.StringPtrInput
	NotificationArn pulumi.StringPtrInput
	NotificationMetadata pulumi.StringPtrInput
	ScalingGroupId pulumi.StringInput
}

func (LifecycleHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lifecycleHookArgs)(nil)).Elem()
}

