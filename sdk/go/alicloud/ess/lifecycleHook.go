// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ess

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type LifecycleHook struct {
	s *pulumi.ResourceState
}

// NewLifecycleHook registers a new resource with the given unique name, arguments, and options.
func NewLifecycleHook(ctx *pulumi.Context,
	name string, args *LifecycleHookArgs, opts ...pulumi.ResourceOpt) (*LifecycleHook, error) {
	if args == nil || args.LifecycleTransition == nil {
		return nil, errors.New("missing required argument 'LifecycleTransition'")
	}
	if args == nil || args.ScalingGroupId == nil {
		return nil, errors.New("missing required argument 'ScalingGroupId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["defaultResult"] = nil
		inputs["heartbeatTimeout"] = nil
		inputs["lifecycleTransition"] = nil
		inputs["name"] = nil
		inputs["notificationArn"] = nil
		inputs["notificationMetadata"] = nil
		inputs["scalingGroupId"] = nil
	} else {
		inputs["defaultResult"] = args.DefaultResult
		inputs["heartbeatTimeout"] = args.HeartbeatTimeout
		inputs["lifecycleTransition"] = args.LifecycleTransition
		inputs["name"] = args.Name
		inputs["notificationArn"] = args.NotificationArn
		inputs["notificationMetadata"] = args.NotificationMetadata
		inputs["scalingGroupId"] = args.ScalingGroupId
	}
	s, err := ctx.RegisterResource("alicloud:ess/lifecycleHook:LifecycleHook", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &LifecycleHook{s: s}, nil
}

// GetLifecycleHook gets an existing LifecycleHook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLifecycleHook(ctx *pulumi.Context,
	name string, id pulumi.ID, state *LifecycleHookState, opts ...pulumi.ResourceOpt) (*LifecycleHook, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["defaultResult"] = state.DefaultResult
		inputs["heartbeatTimeout"] = state.HeartbeatTimeout
		inputs["lifecycleTransition"] = state.LifecycleTransition
		inputs["name"] = state.Name
		inputs["notificationArn"] = state.NotificationArn
		inputs["notificationMetadata"] = state.NotificationMetadata
		inputs["scalingGroupId"] = state.ScalingGroupId
	}
	s, err := ctx.ReadResource("alicloud:ess/lifecycleHook:LifecycleHook", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &LifecycleHook{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *LifecycleHook) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *LifecycleHook) ID() pulumi.IDOutput {
	return r.s.ID()
}

func (r *LifecycleHook) DefaultResult() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["defaultResult"])
}

func (r *LifecycleHook) HeartbeatTimeout() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["heartbeatTimeout"])
}

func (r *LifecycleHook) LifecycleTransition() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["lifecycleTransition"])
}

func (r *LifecycleHook) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

func (r *LifecycleHook) NotificationArn() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["notificationArn"])
}

func (r *LifecycleHook) NotificationMetadata() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["notificationMetadata"])
}

func (r *LifecycleHook) ScalingGroupId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["scalingGroupId"])
}

// Input properties used for looking up and filtering LifecycleHook resources.
type LifecycleHookState struct {
	DefaultResult interface{}
	HeartbeatTimeout interface{}
	LifecycleTransition interface{}
	Name interface{}
	NotificationArn interface{}
	NotificationMetadata interface{}
	ScalingGroupId interface{}
}

// The set of arguments for constructing a LifecycleHook resource.
type LifecycleHookArgs struct {
	DefaultResult interface{}
	HeartbeatTimeout interface{}
	LifecycleTransition interface{}
	Name interface{}
	NotificationArn interface{}
	NotificationMetadata interface{}
	ScalingGroupId interface{}
}
