// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ess

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a ESS scaling rule resource.
type ScalingRule struct {
	s *pulumi.ResourceState
}

// NewScalingRule registers a new resource with the given unique name, arguments, and options.
func NewScalingRule(ctx *pulumi.Context,
	name string, args *ScalingRuleArgs, opts ...pulumi.ResourceOpt) (*ScalingRule, error) {
	if args == nil || args.AdjustmentType == nil {
		return nil, errors.New("missing required argument 'AdjustmentType'")
	}
	if args == nil || args.AdjustmentValue == nil {
		return nil, errors.New("missing required argument 'AdjustmentValue'")
	}
	if args == nil || args.ScalingGroupId == nil {
		return nil, errors.New("missing required argument 'ScalingGroupId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["adjustmentType"] = nil
		inputs["adjustmentValue"] = nil
		inputs["cooldown"] = nil
		inputs["scalingGroupId"] = nil
		inputs["scalingRuleName"] = nil
	} else {
		inputs["adjustmentType"] = args.AdjustmentType
		inputs["adjustmentValue"] = args.AdjustmentValue
		inputs["cooldown"] = args.Cooldown
		inputs["scalingGroupId"] = args.ScalingGroupId
		inputs["scalingRuleName"] = args.ScalingRuleName
	}
	inputs["ari"] = nil
	s, err := ctx.RegisterResource("alicloud:ess/scalingRule:ScalingRule", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ScalingRule{s: s}, nil
}

// GetScalingRule gets an existing ScalingRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScalingRule(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ScalingRuleState, opts ...pulumi.ResourceOpt) (*ScalingRule, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["adjustmentType"] = state.AdjustmentType
		inputs["adjustmentValue"] = state.AdjustmentValue
		inputs["ari"] = state.Ari
		inputs["cooldown"] = state.Cooldown
		inputs["scalingGroupId"] = state.ScalingGroupId
		inputs["scalingRuleName"] = state.ScalingRuleName
	}
	s, err := ctx.ReadResource("alicloud:ess/scalingRule:ScalingRule", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ScalingRule{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ScalingRule) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ScalingRule) ID() *pulumi.IDOutput {
	return r.s.ID
}

// Adjustment mode of a scaling rule. Optional values:
// - QuantityChangeInCapacity: It is used to increase or decrease a specified number of ECS instances.
// - PercentChangeInCapacity: It is used to increase or decrease a specified proportion of ECS instances.
// - TotalCapacity: It is used to adjust the quantity of ECS instances in the current scaling group to a specified value.
func (r *ScalingRule) AdjustmentType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["adjustmentType"])
}

// Adjusted value of a scaling rule. Value range:
// - QuantityChangeInCapacity：(0, 100] U (-100, 0]
// - PercentChangeInCapacity：[0, 10000] U [-10000, 0]
// - TotalCapacity：[0, 100]
func (r *ScalingRule) AdjustmentValue() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["adjustmentValue"])
}

// Unique identifier of a scaling rule.
func (r *ScalingRule) Ari() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["ari"])
}

// Cool-down time of a scaling rule. Value range: [0, 86,400], in seconds. The default value is empty.
func (r *ScalingRule) Cooldown() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["cooldown"])
}

// ID of the scaling group of a scaling rule.
func (r *ScalingRule) ScalingGroupId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["scalingGroupId"])
}

// Name shown for the scaling rule, which is a string containing 2 to 40 English or Chinese characters.
func (r *ScalingRule) ScalingRuleName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["scalingRuleName"])
}

// Input properties used for looking up and filtering ScalingRule resources.
type ScalingRuleState struct {
	// Adjustment mode of a scaling rule. Optional values:
	// - QuantityChangeInCapacity: It is used to increase or decrease a specified number of ECS instances.
	// - PercentChangeInCapacity: It is used to increase or decrease a specified proportion of ECS instances.
	// - TotalCapacity: It is used to adjust the quantity of ECS instances in the current scaling group to a specified value.
	AdjustmentType interface{}
	// Adjusted value of a scaling rule. Value range:
	// - QuantityChangeInCapacity：(0, 100] U (-100, 0]
	// - PercentChangeInCapacity：[0, 10000] U [-10000, 0]
	// - TotalCapacity：[0, 100]
	AdjustmentValue interface{}
	// Unique identifier of a scaling rule.
	Ari interface{}
	// Cool-down time of a scaling rule. Value range: [0, 86,400], in seconds. The default value is empty.
	Cooldown interface{}
	// ID of the scaling group of a scaling rule.
	ScalingGroupId interface{}
	// Name shown for the scaling rule, which is a string containing 2 to 40 English or Chinese characters.
	ScalingRuleName interface{}
}

// The set of arguments for constructing a ScalingRule resource.
type ScalingRuleArgs struct {
	// Adjustment mode of a scaling rule. Optional values:
	// - QuantityChangeInCapacity: It is used to increase or decrease a specified number of ECS instances.
	// - PercentChangeInCapacity: It is used to increase or decrease a specified proportion of ECS instances.
	// - TotalCapacity: It is used to adjust the quantity of ECS instances in the current scaling group to a specified value.
	AdjustmentType interface{}
	// Adjusted value of a scaling rule. Value range:
	// - QuantityChangeInCapacity：(0, 100] U (-100, 0]
	// - PercentChangeInCapacity：[0, 10000] U [-10000, 0]
	// - TotalCapacity：[0, 100]
	AdjustmentValue interface{}
	// Cool-down time of a scaling rule. Value range: [0, 86,400], in seconds. The default value is empty.
	Cooldown interface{}
	// ID of the scaling group of a scaling rule.
	ScalingGroupId interface{}
	// Name shown for the scaling rule, which is a string containing 2 to 40 English or Chinese characters.
	ScalingRuleName interface{}
}
