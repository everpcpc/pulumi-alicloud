// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ess

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/ess_schedule.html.markdown.
type Schedule struct {
	pulumi.CustomResourceState

	Description pulumi.StringOutput `pulumi:"description"`
	LaunchExpirationTime pulumi.IntPtrOutput `pulumi:"launchExpirationTime"`
	LaunchTime pulumi.StringOutput `pulumi:"launchTime"`
	RecurrenceEndTime pulumi.StringOutput `pulumi:"recurrenceEndTime"`
	RecurrenceType pulumi.StringOutput `pulumi:"recurrenceType"`
	RecurrenceValue pulumi.StringOutput `pulumi:"recurrenceValue"`
	ScheduledAction pulumi.StringOutput `pulumi:"scheduledAction"`
	ScheduledTaskName pulumi.StringPtrOutput `pulumi:"scheduledTaskName"`
	TaskEnabled pulumi.BoolPtrOutput `pulumi:"taskEnabled"`
}

// NewSchedule registers a new resource with the given unique name, arguments, and options.
func NewSchedule(ctx *pulumi.Context,
	name string, args *ScheduleArgs, opts ...pulumi.ResourceOption) (*Schedule, error) {
	if args == nil || args.LaunchTime == nil {
		return nil, errors.New("missing required argument 'LaunchTime'")
	}
	if args == nil || args.ScheduledAction == nil {
		return nil, errors.New("missing required argument 'ScheduledAction'")
	}
	if args == nil {
		args = &ScheduleArgs{}
	}
	var resource Schedule
	err := ctx.RegisterResource("alicloud:ess/schedule:Schedule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSchedule gets an existing Schedule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSchedule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScheduleState, opts ...pulumi.ResourceOption) (*Schedule, error) {
	var resource Schedule
	err := ctx.ReadResource("alicloud:ess/schedule:Schedule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Schedule resources.
type scheduleState struct {
	Description *string `pulumi:"description"`
	LaunchExpirationTime *int `pulumi:"launchExpirationTime"`
	LaunchTime *string `pulumi:"launchTime"`
	RecurrenceEndTime *string `pulumi:"recurrenceEndTime"`
	RecurrenceType *string `pulumi:"recurrenceType"`
	RecurrenceValue *string `pulumi:"recurrenceValue"`
	ScheduledAction *string `pulumi:"scheduledAction"`
	ScheduledTaskName *string `pulumi:"scheduledTaskName"`
	TaskEnabled *bool `pulumi:"taskEnabled"`
}

type ScheduleState struct {
	Description pulumi.StringPtrInput
	LaunchExpirationTime pulumi.IntPtrInput
	LaunchTime pulumi.StringPtrInput
	RecurrenceEndTime pulumi.StringPtrInput
	RecurrenceType pulumi.StringPtrInput
	RecurrenceValue pulumi.StringPtrInput
	ScheduledAction pulumi.StringPtrInput
	ScheduledTaskName pulumi.StringPtrInput
	TaskEnabled pulumi.BoolPtrInput
}

func (ScheduleState) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduleState)(nil)).Elem()
}

type scheduleArgs struct {
	Description *string `pulumi:"description"`
	LaunchExpirationTime *int `pulumi:"launchExpirationTime"`
	LaunchTime string `pulumi:"launchTime"`
	RecurrenceEndTime *string `pulumi:"recurrenceEndTime"`
	RecurrenceType *string `pulumi:"recurrenceType"`
	RecurrenceValue *string `pulumi:"recurrenceValue"`
	ScheduledAction string `pulumi:"scheduledAction"`
	ScheduledTaskName *string `pulumi:"scheduledTaskName"`
	TaskEnabled *bool `pulumi:"taskEnabled"`
}

// The set of arguments for constructing a Schedule resource.
type ScheduleArgs struct {
	Description pulumi.StringPtrInput
	LaunchExpirationTime pulumi.IntPtrInput
	LaunchTime pulumi.StringInput
	RecurrenceEndTime pulumi.StringPtrInput
	RecurrenceType pulumi.StringPtrInput
	RecurrenceValue pulumi.StringPtrInput
	ScheduledAction pulumi.StringInput
	ScheduledTaskName pulumi.StringPtrInput
	TaskEnabled pulumi.BoolPtrInput
}

func (ScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduleArgs)(nil)).Elem()
}

