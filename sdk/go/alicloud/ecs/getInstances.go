// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The Instances data source list ECS instance resources according to their ID, name regex, image id, status and other fields.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/instances.html.markdown.
func LookupInstances(ctx *pulumi.Context, args *GetInstancesArgs) (*GetInstancesResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["availabilityZone"] = args.AvailabilityZone
		inputs["ids"] = args.Ids
		inputs["imageId"] = args.ImageId
		inputs["nameRegex"] = args.NameRegex
		inputs["outputFile"] = args.OutputFile
		inputs["resourceGroupId"] = args.ResourceGroupId
		inputs["status"] = args.Status
		inputs["tags"] = args.Tags
		inputs["vpcId"] = args.VpcId
		inputs["vswitchId"] = args.VswitchId
	}
	outputs, err := ctx.Invoke("alicloud:ecs/getInstances:getInstances", inputs)
	if err != nil {
		return nil, err
	}
	return &GetInstancesResult{
		AvailabilityZone: outputs["availabilityZone"],
		Ids: outputs["ids"],
		ImageId: outputs["imageId"],
		Instances: outputs["instances"],
		NameRegex: outputs["nameRegex"],
		Names: outputs["names"],
		OutputFile: outputs["outputFile"],
		ResourceGroupId: outputs["resourceGroupId"],
		Status: outputs["status"],
		Tags: outputs["tags"],
		VpcId: outputs["vpcId"],
		VswitchId: outputs["vswitchId"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getInstances.
type GetInstancesArgs struct {
	// Availability zone where instances are located.
	AvailabilityZone interface{}
	// A list of ECS instance IDs.
	Ids interface{}
	// The image ID of some ECS instance used.
	ImageId interface{}
	// A regex string to filter results by instance name.
	NameRegex interface{}
	OutputFile interface{}
	// The Id of resource group which the instance belongs.
	ResourceGroupId interface{}
	// Instance status. Valid values: "Creating", "Starting", "Running", "Stopping" and "Stopped". If undefined, all statuses are considered.
	Status interface{}
	// A map of tags assigned to the ECS instances. It must be in the format:
	// ```
	// data "ecs.getInstances" "taggedInstances" {
	// tags = {
	// tagKey1 = "tagValue1",
	// tagKey2 = "tagValue2"
	// }
	// }
	// ```
	Tags interface{}
	// ID of the VPC linked to the instances.
	VpcId interface{}
	// ID of the VSwitch linked to the instances.
	VswitchId interface{}
}

// A collection of values returned by getInstances.
type GetInstancesResult struct {
	// Availability zone the instance belongs to.
	AvailabilityZone interface{}
	// A list of ECS instance IDs.
	Ids interface{}
	// Image ID the instance is using.
	ImageId interface{}
	// A list of instances. Each element contains the following attributes:
	Instances interface{}
	NameRegex interface{}
	// A list of instances names. 
	Names interface{}
	OutputFile interface{}
	// The Id of resource group.
	ResourceGroupId interface{}
	// Instance current status.
	Status interface{}
	// A map of tags assigned to the ECS instance.
	Tags interface{}
	// ID of the VPC the instance belongs to.
	VpcId interface{}
	// ID of the VSwitch the instance belongs to.
	VswitchId interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
