// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Import a copy of your local on-premise file to ECS, and appear as a custom replacement in the corresponding domain.
//
// > **NOTE:** You must upload the image file to the object storage OSS in advance.
//
// > **NOTE:** The region where the image is imported must be the same region as the OSS bucket where the image file is uploaded.
//
// > **NOTE:** Available in 1.69.0+.
type ImageImport struct {
	pulumi.CustomResourceState

	// Specifies the architecture of the system disk after you specify a data disk snapshot as the data source of the system disk for creating an image. Valid values: `i386` , Default is `x8664`.
	Architecture pulumi.StringPtrOutput `pulumi:"architecture"`
	// Description of the image. The length is 2 to 256 English or Chinese characters, and cannot begin with http: // and https: //.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Description of the system with disks and snapshots under the image.
	DiskDeviceMappings ImageImportDiskDeviceMappingArrayOutput `pulumi:"diskDeviceMappings"`
	// The image name. The length is 2 ~ 128 English or Chinese characters. Must start with a capital letter or Chinese, and cannot start with http: // and https: //. Can contain numbers, colons (:), underscores (_), or hyphens (-).
	ImageName   pulumi.StringPtrOutput `pulumi:"imageName"`
	LicenseType pulumi.StringPtrOutput `pulumi:"licenseType"`
	// Operating system platform type. Valid values: `windows`, Default is `linux`.
	OsType pulumi.StringPtrOutput `pulumi:"osType"`
	// Specifies the operating system platform of the system disk after you specify a data disk snapshot as the data source of the system disk for creating an image. Valid values: `CentOS`, `Ubuntu`, `SUSE`, `OpenSUSE`, `Debian`, `CoreOS`, `Windows Server 2003`, `Windows Server 2008`, `Windows Server 2012`, `Windows 7`, Default is `Others Linux`, `Customized Linux`.
	Platform pulumi.StringPtrOutput `pulumi:"platform"`
}

// NewImageImport registers a new resource with the given unique name, arguments, and options.
func NewImageImport(ctx *pulumi.Context,
	name string, args *ImageImportArgs, opts ...pulumi.ResourceOption) (*ImageImport, error) {
	if args == nil || args.DiskDeviceMappings == nil {
		return nil, errors.New("missing required argument 'DiskDeviceMappings'")
	}
	if args == nil {
		args = &ImageImportArgs{}
	}
	var resource ImageImport
	err := ctx.RegisterResource("alicloud:ecs/imageImport:ImageImport", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetImageImport gets an existing ImageImport resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImageImport(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ImageImportState, opts ...pulumi.ResourceOption) (*ImageImport, error) {
	var resource ImageImport
	err := ctx.ReadResource("alicloud:ecs/imageImport:ImageImport", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ImageImport resources.
type imageImportState struct {
	// Specifies the architecture of the system disk after you specify a data disk snapshot as the data source of the system disk for creating an image. Valid values: `i386` , Default is `x8664`.
	Architecture *string `pulumi:"architecture"`
	// Description of the image. The length is 2 to 256 English or Chinese characters, and cannot begin with http: // and https: //.
	Description *string `pulumi:"description"`
	// Description of the system with disks and snapshots under the image.
	DiskDeviceMappings []ImageImportDiskDeviceMapping `pulumi:"diskDeviceMappings"`
	// The image name. The length is 2 ~ 128 English or Chinese characters. Must start with a capital letter or Chinese, and cannot start with http: // and https: //. Can contain numbers, colons (:), underscores (_), or hyphens (-).
	ImageName   *string `pulumi:"imageName"`
	LicenseType *string `pulumi:"licenseType"`
	// Operating system platform type. Valid values: `windows`, Default is `linux`.
	OsType *string `pulumi:"osType"`
	// Specifies the operating system platform of the system disk after you specify a data disk snapshot as the data source of the system disk for creating an image. Valid values: `CentOS`, `Ubuntu`, `SUSE`, `OpenSUSE`, `Debian`, `CoreOS`, `Windows Server 2003`, `Windows Server 2008`, `Windows Server 2012`, `Windows 7`, Default is `Others Linux`, `Customized Linux`.
	Platform *string `pulumi:"platform"`
}

type ImageImportState struct {
	// Specifies the architecture of the system disk after you specify a data disk snapshot as the data source of the system disk for creating an image. Valid values: `i386` , Default is `x8664`.
	Architecture pulumi.StringPtrInput
	// Description of the image. The length is 2 to 256 English or Chinese characters, and cannot begin with http: // and https: //.
	Description pulumi.StringPtrInput
	// Description of the system with disks and snapshots under the image.
	DiskDeviceMappings ImageImportDiskDeviceMappingArrayInput
	// The image name. The length is 2 ~ 128 English or Chinese characters. Must start with a capital letter or Chinese, and cannot start with http: // and https: //. Can contain numbers, colons (:), underscores (_), or hyphens (-).
	ImageName   pulumi.StringPtrInput
	LicenseType pulumi.StringPtrInput
	// Operating system platform type. Valid values: `windows`, Default is `linux`.
	OsType pulumi.StringPtrInput
	// Specifies the operating system platform of the system disk after you specify a data disk snapshot as the data source of the system disk for creating an image. Valid values: `CentOS`, `Ubuntu`, `SUSE`, `OpenSUSE`, `Debian`, `CoreOS`, `Windows Server 2003`, `Windows Server 2008`, `Windows Server 2012`, `Windows 7`, Default is `Others Linux`, `Customized Linux`.
	Platform pulumi.StringPtrInput
}

func (ImageImportState) ElementType() reflect.Type {
	return reflect.TypeOf((*imageImportState)(nil)).Elem()
}

type imageImportArgs struct {
	// Specifies the architecture of the system disk after you specify a data disk snapshot as the data source of the system disk for creating an image. Valid values: `i386` , Default is `x8664`.
	Architecture *string `pulumi:"architecture"`
	// Description of the image. The length is 2 to 256 English or Chinese characters, and cannot begin with http: // and https: //.
	Description *string `pulumi:"description"`
	// Description of the system with disks and snapshots under the image.
	DiskDeviceMappings []ImageImportDiskDeviceMapping `pulumi:"diskDeviceMappings"`
	// The image name. The length is 2 ~ 128 English or Chinese characters. Must start with a capital letter or Chinese, and cannot start with http: // and https: //. Can contain numbers, colons (:), underscores (_), or hyphens (-).
	ImageName   *string `pulumi:"imageName"`
	LicenseType *string `pulumi:"licenseType"`
	// Operating system platform type. Valid values: `windows`, Default is `linux`.
	OsType *string `pulumi:"osType"`
	// Specifies the operating system platform of the system disk after you specify a data disk snapshot as the data source of the system disk for creating an image. Valid values: `CentOS`, `Ubuntu`, `SUSE`, `OpenSUSE`, `Debian`, `CoreOS`, `Windows Server 2003`, `Windows Server 2008`, `Windows Server 2012`, `Windows 7`, Default is `Others Linux`, `Customized Linux`.
	Platform *string `pulumi:"platform"`
}

// The set of arguments for constructing a ImageImport resource.
type ImageImportArgs struct {
	// Specifies the architecture of the system disk after you specify a data disk snapshot as the data source of the system disk for creating an image. Valid values: `i386` , Default is `x8664`.
	Architecture pulumi.StringPtrInput
	// Description of the image. The length is 2 to 256 English or Chinese characters, and cannot begin with http: // and https: //.
	Description pulumi.StringPtrInput
	// Description of the system with disks and snapshots under the image.
	DiskDeviceMappings ImageImportDiskDeviceMappingArrayInput
	// The image name. The length is 2 ~ 128 English or Chinese characters. Must start with a capital letter or Chinese, and cannot start with http: // and https: //. Can contain numbers, colons (:), underscores (_), or hyphens (-).
	ImageName   pulumi.StringPtrInput
	LicenseType pulumi.StringPtrInput
	// Operating system platform type. Valid values: `windows`, Default is `linux`.
	OsType pulumi.StringPtrInput
	// Specifies the operating system platform of the system disk after you specify a data disk snapshot as the data source of the system disk for creating an image. Valid values: `CentOS`, `Ubuntu`, `SUSE`, `OpenSUSE`, `Debian`, `CoreOS`, `Windows Server 2003`, `Windows Server 2008`, `Windows Server 2012`, `Windows 7`, Default is `Others Linux`, `Customized Linux`.
	Platform pulumi.StringPtrInput
}

func (ImageImportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*imageImportArgs)(nil)).Elem()
}
