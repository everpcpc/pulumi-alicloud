// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Export a custom image to the OSS bucket in the same region as the custom image.
// 
// > **NOTE:** If you create an ECS instance using a mirror image and create a system disk snapshot again, exporting a custom image created from the system disk snapshot is not supported.
// 
// > **NOTE:** Support for exporting custom images that include data disk snapshot information in the image. The number of data disks cannot exceed 4 and the maximum capacity of a single data disk cannot exceed 500 GiB.
// 
// > **NOTE:** Before exporting the image, you must authorize the cloud server ECS official service account to write OSS permissions through RAM.
// 
// > **NOTE:** Available in 1.68.0+.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/image_export.html.markdown.
type ImageExport struct {
	s *pulumi.ResourceState
}

// NewImageExport registers a new resource with the given unique name, arguments, and options.
func NewImageExport(ctx *pulumi.Context,
	name string, args *ImageExportArgs, opts ...pulumi.ResourceOpt) (*ImageExport, error) {
	if args == nil || args.ImageId == nil {
		return nil, errors.New("missing required argument 'ImageId'")
	}
	if args == nil || args.OssBucket == nil {
		return nil, errors.New("missing required argument 'OssBucket'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["imageId"] = nil
		inputs["ossBucket"] = nil
		inputs["ossPrefix"] = nil
	} else {
		inputs["imageId"] = args.ImageId
		inputs["ossBucket"] = args.OssBucket
		inputs["ossPrefix"] = args.OssPrefix
	}
	s, err := ctx.RegisterResource("alicloud:ecs/imageExport:ImageExport", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ImageExport{s: s}, nil
}

// GetImageExport gets an existing ImageExport resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImageExport(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ImageExportState, opts ...pulumi.ResourceOpt) (*ImageExport, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["imageId"] = state.ImageId
		inputs["ossBucket"] = state.OssBucket
		inputs["ossPrefix"] = state.OssPrefix
	}
	s, err := ctx.ReadResource("alicloud:ecs/imageExport:ImageExport", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ImageExport{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ImageExport) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ImageExport) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The source image ID.
func (r *ImageExport) ImageId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["imageId"])
}

// Save the exported OSS bucket.
func (r *ImageExport) OssBucket() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["ossBucket"])
}

// The prefix of your OSS Object. It can be composed of numbers or letters, and the character length is 1 ~ 30.
func (r *ImageExport) OssPrefix() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["ossPrefix"])
}

// Input properties used for looking up and filtering ImageExport resources.
type ImageExportState struct {
	// The source image ID.
	ImageId interface{}
	// Save the exported OSS bucket.
	OssBucket interface{}
	// The prefix of your OSS Object. It can be composed of numbers or letters, and the character length is 1 ~ 30.
	OssPrefix interface{}
}

// The set of arguments for constructing a ImageExport resource.
type ImageExportArgs struct {
	// The source image ID.
	ImageId interface{}
	// Save the exported OSS bucket.
	OssBucket interface{}
	// The prefix of your OSS Object. It can be composed of numbers or letters, and the character length is 1 ~ 30.
	OssPrefix interface{}
}
