// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// This data source provides available image resources. It contains user's private images, system images provided by Alibaba Cloud, 
// other public images and the ones available on the image market. 
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/images.html.markdown.
func LookupImages(ctx *pulumi.Context, args *GetImagesArgs) (*GetImagesResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["mostRecent"] = args.MostRecent
		inputs["nameRegex"] = args.NameRegex
		inputs["outputFile"] = args.OutputFile
		inputs["owners"] = args.Owners
	}
	outputs, err := ctx.Invoke("alicloud:ecs/getImages:getImages", inputs)
	if err != nil {
		return nil, err
	}
	return &GetImagesResult{
		Ids: outputs["ids"],
		Images: outputs["images"],
		MostRecent: outputs["mostRecent"],
		NameRegex: outputs["nameRegex"],
		OutputFile: outputs["outputFile"],
		Owners: outputs["owners"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getImages.
type GetImagesArgs struct {
	// If more than one result are returned, select the most recent one.
	MostRecent interface{}
	// A regex string to filter resulting images by name. 
	NameRegex interface{}
	OutputFile interface{}
	// Filter results by a specific image owner. Valid items are `system`, `self`, `others`, `marketplace`.
	Owners interface{}
}

// A collection of values returned by getImages.
type GetImagesResult struct {
	// A list of image IDs.
	Ids interface{}
	// A list of images. Each element contains the following attributes:
	Images interface{}
	MostRecent interface{}
	NameRegex interface{}
	OutputFile interface{}
	Owners interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
