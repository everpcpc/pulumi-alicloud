// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a security group resource.
// 
// ~> **NOTE:** `alicloud_security_group` is used to build and manage a security group, and `alicloud_security_group_rule` can define ingress or egress rules for it.
// 
// ~> **NOTE:** From version 1.7.2, `alicloud_security_group` has supported to segregate different ECS instance in which the same security group.
type SecurityGroup struct {
	s *pulumi.ResourceState
}

// NewSecurityGroup registers a new resource with the given unique name, arguments, and options.
func NewSecurityGroup(ctx *pulumi.Context,
	name string, args *SecurityGroupArgs, opts ...pulumi.ResourceOpt) (*SecurityGroup, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["innerAccess"] = nil
		inputs["name"] = nil
		inputs["tags"] = nil
		inputs["vpcId"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["innerAccess"] = args.InnerAccess
		inputs["name"] = args.Name
		inputs["tags"] = args.Tags
		inputs["vpcId"] = args.VpcId
	}
	s, err := ctx.RegisterResource("alicloud:ecs/securityGroup:SecurityGroup", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &SecurityGroup{s: s}, nil
}

// GetSecurityGroup gets an existing SecurityGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGroup(ctx *pulumi.Context,
	name string, id pulumi.ID, state *SecurityGroupState, opts ...pulumi.ResourceOpt) (*SecurityGroup, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["description"] = state.Description
		inputs["innerAccess"] = state.InnerAccess
		inputs["name"] = state.Name
		inputs["tags"] = state.Tags
		inputs["vpcId"] = state.VpcId
	}
	s, err := ctx.ReadResource("alicloud:ecs/securityGroup:SecurityGroup", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &SecurityGroup{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *SecurityGroup) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *SecurityGroup) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The security group description. Defaults to null.
func (r *SecurityGroup) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// Whether to allow both machines to access each other on all ports in the same security group.
func (r *SecurityGroup) InnerAccess() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["innerAccess"])
}

// The name of the security group. Defaults to null.
func (r *SecurityGroup) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// A mapping of tags to assign to the resource.
func (r *SecurityGroup) Tags() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["tags"])
}

// The VPC ID.
func (r *SecurityGroup) VpcId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["vpcId"])
}

// Input properties used for looking up and filtering SecurityGroup resources.
type SecurityGroupState struct {
	// The security group description. Defaults to null.
	Description interface{}
	// Whether to allow both machines to access each other on all ports in the same security group.
	InnerAccess interface{}
	// The name of the security group. Defaults to null.
	Name interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// The VPC ID.
	VpcId interface{}
}

// The set of arguments for constructing a SecurityGroup resource.
type SecurityGroupArgs struct {
	// The security group description. Defaults to null.
	Description interface{}
	// Whether to allow both machines to access each other on all ports in the same security group.
	InnerAccess interface{}
	// The name of the security group. Defaults to null.
	Name interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// The VPC ID.
	VpcId interface{}
}
