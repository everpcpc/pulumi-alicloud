// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The `ecs.getSecurityGroupRules` data source provides a collection of security permissions of a specific security group.
// Each collection item represents a single `ingress` or `egress` permission rule.
// The ID of the security group can be provided via a variable or the result from the other data source `ecs.getSecurityGroups`.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/d/security_group_rules.html.markdown.
func LookupSecurityGroupRules(ctx *pulumi.Context, args *GetSecurityGroupRulesArgs) (*GetSecurityGroupRulesResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["direction"] = args.Direction
		inputs["groupId"] = args.GroupId
		inputs["ipProtocol"] = args.IpProtocol
		inputs["nicType"] = args.NicType
		inputs["outputFile"] = args.OutputFile
		inputs["policy"] = args.Policy
	}
	outputs, err := ctx.Invoke("alicloud:ecs/getSecurityGroupRules:getSecurityGroupRules", inputs)
	if err != nil {
		return nil, err
	}
	return &GetSecurityGroupRulesResult{
		Direction: outputs["direction"],
		GroupDesc: outputs["groupDesc"],
		GroupId: outputs["groupId"],
		GroupName: outputs["groupName"],
		IpProtocol: outputs["ipProtocol"],
		NicType: outputs["nicType"],
		OutputFile: outputs["outputFile"],
		Policy: outputs["policy"],
		Rules: outputs["rules"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getSecurityGroupRules.
type GetSecurityGroupRulesArgs struct {
	// Authorization direction. Valid values are: `ingress` or `egress`.
	Direction interface{}
	// The ID of the security group that owns the rules.
	GroupId interface{}
	// The IP protocol. Valid values are: `tcp`, `udp`, `icmp`, `gre` and `all`.
	IpProtocol interface{}
	// Refers to the network type. Can be either `internet` or `intranet`. The default value is `internet`.
	NicType interface{}
	OutputFile interface{}
	// Authorization policy. Can be either `accept` or `drop`. The default value is `accept`.
	Policy interface{}
}

// A collection of values returned by getSecurityGroupRules.
type GetSecurityGroupRulesResult struct {
	// Authorization direction, `ingress` or `egress`.
	Direction interface{}
	// The description of the security group that owns the rules.
	GroupDesc interface{}
	GroupId interface{}
	// The name of the security group that owns the rules.
	GroupName interface{}
	// The protocol. Can be `tcp`, `udp`, `icmp`, `gre` or `all`.
	IpProtocol interface{}
	// Network type, `internet` or `intranet`.
	NicType interface{}
	OutputFile interface{}
	// Authorization policy. Can be either `accept` or `drop`.
	Policy interface{}
	// A list of security group rules. Each element contains the following attributes:
	Rules interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
