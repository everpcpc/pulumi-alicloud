// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an Alicloud EIP Association resource for associating Elastic IP to ECS Instance, SLB Instance or Nat Gateway.
// 
// ~> **NOTE:** `alicloud_eip_association` is useful in scenarios where EIPs are either
//  pre-existing or distributed to customers or users and therefore cannot be changed.
// 
// ~> **NOTE:** From version 1.7.1, the resource support to associate EIP to SLB Instance or Nat Gateway.
// 
// ~> **NOTE:** One EIP can only be associated with ECS or SLB instance which in the VPC.
type EipAssociation struct {
	s *pulumi.ResourceState
}

// NewEipAssociation registers a new resource with the given unique name, arguments, and options.
func NewEipAssociation(ctx *pulumi.Context,
	name string, args *EipAssociationArgs, opts ...pulumi.ResourceOpt) (*EipAssociation, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["allocationId"] = nil
		inputs["instanceId"] = nil
	} else {
		inputs["allocationId"] = args.AllocationId
		inputs["instanceId"] = args.InstanceId
	}
	s, err := ctx.RegisterResource("alicloud:ecs/eipAssociation:EipAssociation", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &EipAssociation{s: s}, nil
}

// GetEipAssociation gets an existing EipAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEipAssociation(ctx *pulumi.Context,
	name string, id pulumi.ID, state *EipAssociationState, opts ...pulumi.ResourceOpt) (*EipAssociation, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["allocationId"] = state.AllocationId
		inputs["instanceId"] = state.InstanceId
	}
	s, err := ctx.ReadResource("alicloud:ecs/eipAssociation:EipAssociation", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &EipAssociation{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *EipAssociation) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *EipAssociation) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The allocation EIP ID.
func (r *EipAssociation) AllocationId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["allocationId"])
}

// The ID of the ECS or SLB instance or Nat Gateway.
func (r *EipAssociation) InstanceId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["instanceId"])
}

// Input properties used for looking up and filtering EipAssociation resources.
type EipAssociationState struct {
	// The allocation EIP ID.
	AllocationId interface{}
	// The ID of the ECS or SLB instance or Nat Gateway.
	InstanceId interface{}
}

// The set of arguments for constructing a EipAssociation resource.
type EipAssociationArgs struct {
	// The allocation EIP ID.
	AllocationId interface{}
	// The ID of the ECS or SLB instance or Nat Gateway.
	InstanceId interface{}
}
