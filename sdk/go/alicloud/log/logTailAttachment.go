// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package log

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The Logtail access service is a log collection agent provided by Log Service.
// You can use Logtail to collect logs from servers such as Alibaba Cloud Elastic
// Compute Service (ECS) instances in real time in the Log Service console. [Refer to details](https://www.alibabacloud.com/help/doc-detail/29058.htm)
// 
// This resource amis to attach one logtail configure to a machine group.
// 
// > **NOTE:** One logtail configure can be attached to multiple machine groups and one machine group can attach several logtail configures.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/logtail_attachment.html.markdown.
type LogTailAttachment struct {
	s *pulumi.ResourceState
}

// NewLogTailAttachment registers a new resource with the given unique name, arguments, and options.
func NewLogTailAttachment(ctx *pulumi.Context,
	name string, args *LogTailAttachmentArgs, opts ...pulumi.ResourceOpt) (*LogTailAttachment, error) {
	if args == nil || args.LogtailConfigName == nil {
		return nil, errors.New("missing required argument 'LogtailConfigName'")
	}
	if args == nil || args.MachineGroupName == nil {
		return nil, errors.New("missing required argument 'MachineGroupName'")
	}
	if args == nil || args.Project == nil {
		return nil, errors.New("missing required argument 'Project'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["logtailConfigName"] = nil
		inputs["machineGroupName"] = nil
		inputs["project"] = nil
	} else {
		inputs["logtailConfigName"] = args.LogtailConfigName
		inputs["machineGroupName"] = args.MachineGroupName
		inputs["project"] = args.Project
	}
	s, err := ctx.RegisterResource("alicloud:log/logTailAttachment:LogTailAttachment", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &LogTailAttachment{s: s}, nil
}

// GetLogTailAttachment gets an existing LogTailAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogTailAttachment(ctx *pulumi.Context,
	name string, id pulumi.ID, state *LogTailAttachmentState, opts ...pulumi.ResourceOpt) (*LogTailAttachment, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["logtailConfigName"] = state.LogtailConfigName
		inputs["machineGroupName"] = state.MachineGroupName
		inputs["project"] = state.Project
	}
	s, err := ctx.ReadResource("alicloud:log/logTailAttachment:LogTailAttachment", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &LogTailAttachment{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *LogTailAttachment) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *LogTailAttachment) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The Logtail configuration name, which is unique in the same project.
func (r *LogTailAttachment) LogtailConfigName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["logtailConfigName"])
}

// The machine group name, which is unique in the same project.
func (r *LogTailAttachment) MachineGroupName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["machineGroupName"])
}

// The project name to the log store belongs.
func (r *LogTailAttachment) Project() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["project"])
}

// Input properties used for looking up and filtering LogTailAttachment resources.
type LogTailAttachmentState struct {
	// The Logtail configuration name, which is unique in the same project.
	LogtailConfigName interface{}
	// The machine group name, which is unique in the same project.
	MachineGroupName interface{}
	// The project name to the log store belongs.
	Project interface{}
}

// The set of arguments for constructing a LogTailAttachment resource.
type LogTailAttachmentArgs struct {
	// The Logtail configuration name, which is unique in the same project.
	LogtailConfigName interface{}
	// The machine group name, which is unique in the same project.
	MachineGroupName interface{}
	// The project name to the log store belongs.
	Project interface{}
}
