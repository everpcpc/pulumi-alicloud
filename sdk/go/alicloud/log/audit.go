// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package log

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// SLS log audit exists in the form of log service app.
//
// In addition to inheriting all SLS functions, it also enhances the real-time automatic centralized collection of audit related logs across multi cloud products under multi accounts, and provides support for storage, query and information summary required by audit. It covers actiontrail, OSS, NAS, SLB, API gateway, RDS, WAF, cloud firewall, cloud security center and other products.
//
// > **NOTE:** Available in 1.81.0
type Audit struct {
	pulumi.CustomResourceState

	// Aliuid value of your account.
	Aliuid pulumi.StringOutput `pulumi:"aliuid"`
	// Name of SLS log audit.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// .Multi-account configuration, please fill in multiple aliuid.
	MultiAccounts pulumi.StringArrayOutput `pulumi:"multiAccounts"`
	// Log audit detailed configuration.
	VariableMap pulumi.MapOutput `pulumi:"variableMap"`
}

// NewAudit registers a new resource with the given unique name, arguments, and options.
func NewAudit(ctx *pulumi.Context,
	name string, args *AuditArgs, opts ...pulumi.ResourceOption) (*Audit, error) {
	if args == nil || args.Aliuid == nil {
		return nil, errors.New("missing required argument 'Aliuid'")
	}
	if args == nil || args.DisplayName == nil {
		return nil, errors.New("missing required argument 'DisplayName'")
	}
	if args == nil {
		args = &AuditArgs{}
	}
	var resource Audit
	err := ctx.RegisterResource("alicloud:log/audit:Audit", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAudit gets an existing Audit resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAudit(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuditState, opts ...pulumi.ResourceOption) (*Audit, error) {
	var resource Audit
	err := ctx.ReadResource("alicloud:log/audit:Audit", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Audit resources.
type auditState struct {
	// Aliuid value of your account.
	Aliuid *string `pulumi:"aliuid"`
	// Name of SLS log audit.
	DisplayName *string `pulumi:"displayName"`
	// .Multi-account configuration, please fill in multiple aliuid.
	MultiAccounts []string `pulumi:"multiAccounts"`
	// Log audit detailed configuration.
	VariableMap map[string]interface{} `pulumi:"variableMap"`
}

type AuditState struct {
	// Aliuid value of your account.
	Aliuid pulumi.StringPtrInput
	// Name of SLS log audit.
	DisplayName pulumi.StringPtrInput
	// .Multi-account configuration, please fill in multiple aliuid.
	MultiAccounts pulumi.StringArrayInput
	// Log audit detailed configuration.
	VariableMap pulumi.MapInput
}

func (AuditState) ElementType() reflect.Type {
	return reflect.TypeOf((*auditState)(nil)).Elem()
}

type auditArgs struct {
	// Aliuid value of your account.
	Aliuid string `pulumi:"aliuid"`
	// Name of SLS log audit.
	DisplayName string `pulumi:"displayName"`
	// .Multi-account configuration, please fill in multiple aliuid.
	MultiAccounts []string `pulumi:"multiAccounts"`
	// Log audit detailed configuration.
	VariableMap map[string]interface{} `pulumi:"variableMap"`
}

// The set of arguments for constructing a Audit resource.
type AuditArgs struct {
	// Aliuid value of your account.
	Aliuid pulumi.StringInput
	// Name of SLS log audit.
	DisplayName pulumi.StringInput
	// .Multi-account configuration, please fill in multiple aliuid.
	MultiAccounts pulumi.StringArrayInput
	// Log audit detailed configuration.
	VariableMap pulumi.MapInput
}

func (AuditArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*auditArgs)(nil)).Elem()
}
