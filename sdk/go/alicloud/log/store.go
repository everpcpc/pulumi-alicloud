// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package log

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The log store is a unit in Log Service to collect, store, and query the log data. Each log store belongs to a project,
// and each project can create multiple Logstores. [Refer to details](https://www.alibabacloud.com/help/doc-detail/48874.htm)
type Store struct {
	s *pulumi.ResourceState
}

// NewStore registers a new resource with the given unique name, arguments, and options.
func NewStore(ctx *pulumi.Context,
	name string, args *StoreArgs, opts ...pulumi.ResourceOpt) (*Store, error) {
	if args == nil || args.Project == nil {
		return nil, errors.New("missing required argument 'Project'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["name"] = nil
		inputs["project"] = nil
		inputs["retentionPeriod"] = nil
		inputs["shardCount"] = nil
	} else {
		inputs["name"] = args.Name
		inputs["project"] = args.Project
		inputs["retentionPeriod"] = args.RetentionPeriod
		inputs["shardCount"] = args.ShardCount
	}
	inputs["shards"] = nil
	s, err := ctx.RegisterResource("alicloud:log/store:Store", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Store{s: s}, nil
}

// GetStore gets an existing Store resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStore(ctx *pulumi.Context,
	name string, id pulumi.ID, state *StoreState, opts ...pulumi.ResourceOpt) (*Store, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["name"] = state.Name
		inputs["project"] = state.Project
		inputs["retentionPeriod"] = state.RetentionPeriod
		inputs["shardCount"] = state.ShardCount
		inputs["shards"] = state.Shards
	}
	s, err := ctx.ReadResource("alicloud:log/store:Store", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Store{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Store) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Store) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The log store, which is unique in the same project.
func (r *Store) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The project name to the log store belongs.
func (r *Store) Project() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["project"])
}

// The data retention time (in days). Valid values: [1-3650]. Default to 30. Log store data will be stored permanently when the value is "3650".
func (r *Store) RetentionPeriod() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["retentionPeriod"])
}

// The number of shards in this log store. Default to 2. You can modify it by "Split" or "Merge" operations. [Refer to details](https://www.alibabacloud.com/help/doc-detail/28976.htm)
func (r *Store) ShardCount() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["shardCount"])
}

func (r *Store) Shards() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["shards"])
}

// Input properties used for looking up and filtering Store resources.
type StoreState struct {
	// The log store, which is unique in the same project.
	Name interface{}
	// The project name to the log store belongs.
	Project interface{}
	// The data retention time (in days). Valid values: [1-3650]. Default to 30. Log store data will be stored permanently when the value is "3650".
	RetentionPeriod interface{}
	// The number of shards in this log store. Default to 2. You can modify it by "Split" or "Merge" operations. [Refer to details](https://www.alibabacloud.com/help/doc-detail/28976.htm)
	ShardCount interface{}
	Shards interface{}
}

// The set of arguments for constructing a Store resource.
type StoreArgs struct {
	// The log store, which is unique in the same project.
	Name interface{}
	// The project name to the log store belongs.
	Project interface{}
	// The data retention time (in days). Valid values: [1-3650]. Default to 30. Log store data will be stored permanently when the value is "3650".
	RetentionPeriod interface{}
	// The number of shards in this log store. Default to 2. You can modify it by "Split" or "Merge" operations. [Refer to details](https://www.alibabacloud.com/help/doc-detail/28976.htm)
	ShardCount interface{}
}
