// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package quotas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ApplicationInfoDimension struct {
	// The key of dimensions.
	Key *string `pulumi:"key"`
	// The value of dimensions.
	Value *string `pulumi:"value"`
}

// ApplicationInfoDimensionInput is an input type that accepts ApplicationInfoDimensionArgs and ApplicationInfoDimensionOutput values.
// You can construct a concrete instance of `ApplicationInfoDimensionInput` via:
//
//          ApplicationInfoDimensionArgs{...}
type ApplicationInfoDimensionInput interface {
	pulumi.Input

	ToApplicationInfoDimensionOutput() ApplicationInfoDimensionOutput
	ToApplicationInfoDimensionOutputWithContext(context.Context) ApplicationInfoDimensionOutput
}

type ApplicationInfoDimensionArgs struct {
	// The key of dimensions.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of dimensions.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ApplicationInfoDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInfoDimension)(nil)).Elem()
}

func (i ApplicationInfoDimensionArgs) ToApplicationInfoDimensionOutput() ApplicationInfoDimensionOutput {
	return i.ToApplicationInfoDimensionOutputWithContext(context.Background())
}

func (i ApplicationInfoDimensionArgs) ToApplicationInfoDimensionOutputWithContext(ctx context.Context) ApplicationInfoDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInfoDimensionOutput)
}

// ApplicationInfoDimensionArrayInput is an input type that accepts ApplicationInfoDimensionArray and ApplicationInfoDimensionArrayOutput values.
// You can construct a concrete instance of `ApplicationInfoDimensionArrayInput` via:
//
//          ApplicationInfoDimensionArray{ ApplicationInfoDimensionArgs{...} }
type ApplicationInfoDimensionArrayInput interface {
	pulumi.Input

	ToApplicationInfoDimensionArrayOutput() ApplicationInfoDimensionArrayOutput
	ToApplicationInfoDimensionArrayOutputWithContext(context.Context) ApplicationInfoDimensionArrayOutput
}

type ApplicationInfoDimensionArray []ApplicationInfoDimensionInput

func (ApplicationInfoDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationInfoDimension)(nil)).Elem()
}

func (i ApplicationInfoDimensionArray) ToApplicationInfoDimensionArrayOutput() ApplicationInfoDimensionArrayOutput {
	return i.ToApplicationInfoDimensionArrayOutputWithContext(context.Background())
}

func (i ApplicationInfoDimensionArray) ToApplicationInfoDimensionArrayOutputWithContext(ctx context.Context) ApplicationInfoDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInfoDimensionArrayOutput)
}

type ApplicationInfoDimensionOutput struct{ *pulumi.OutputState }

func (ApplicationInfoDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationInfoDimension)(nil)).Elem()
}

func (o ApplicationInfoDimensionOutput) ToApplicationInfoDimensionOutput() ApplicationInfoDimensionOutput {
	return o
}

func (o ApplicationInfoDimensionOutput) ToApplicationInfoDimensionOutputWithContext(ctx context.Context) ApplicationInfoDimensionOutput {
	return o
}

// The key of dimensions.
func (o ApplicationInfoDimensionOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInfoDimension) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of dimensions.
func (o ApplicationInfoDimensionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationInfoDimension) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ApplicationInfoDimensionArrayOutput struct{ *pulumi.OutputState }

func (ApplicationInfoDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationInfoDimension)(nil)).Elem()
}

func (o ApplicationInfoDimensionArrayOutput) ToApplicationInfoDimensionArrayOutput() ApplicationInfoDimensionArrayOutput {
	return o
}

func (o ApplicationInfoDimensionArrayOutput) ToApplicationInfoDimensionArrayOutputWithContext(ctx context.Context) ApplicationInfoDimensionArrayOutput {
	return o
}

func (o ApplicationInfoDimensionArrayOutput) Index(i pulumi.IntInput) ApplicationInfoDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationInfoDimension {
		return vs[0].([]ApplicationInfoDimension)[vs[1].(int)]
	}).(ApplicationInfoDimensionOutput)
}

type GetApplicationInfosDimension struct {
	// The key of dimensions.
	Key *string `pulumi:"key"`
	// The value of dimensions.
	Value *string `pulumi:"value"`
}

// GetApplicationInfosDimensionInput is an input type that accepts GetApplicationInfosDimensionArgs and GetApplicationInfosDimensionOutput values.
// You can construct a concrete instance of `GetApplicationInfosDimensionInput` via:
//
//          GetApplicationInfosDimensionArgs{...}
type GetApplicationInfosDimensionInput interface {
	pulumi.Input

	ToGetApplicationInfosDimensionOutput() GetApplicationInfosDimensionOutput
	ToGetApplicationInfosDimensionOutputWithContext(context.Context) GetApplicationInfosDimensionOutput
}

type GetApplicationInfosDimensionArgs struct {
	// The key of dimensions.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of dimensions.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetApplicationInfosDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationInfosDimension)(nil)).Elem()
}

func (i GetApplicationInfosDimensionArgs) ToGetApplicationInfosDimensionOutput() GetApplicationInfosDimensionOutput {
	return i.ToGetApplicationInfosDimensionOutputWithContext(context.Background())
}

func (i GetApplicationInfosDimensionArgs) ToGetApplicationInfosDimensionOutputWithContext(ctx context.Context) GetApplicationInfosDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationInfosDimensionOutput)
}

// GetApplicationInfosDimensionArrayInput is an input type that accepts GetApplicationInfosDimensionArray and GetApplicationInfosDimensionArrayOutput values.
// You can construct a concrete instance of `GetApplicationInfosDimensionArrayInput` via:
//
//          GetApplicationInfosDimensionArray{ GetApplicationInfosDimensionArgs{...} }
type GetApplicationInfosDimensionArrayInput interface {
	pulumi.Input

	ToGetApplicationInfosDimensionArrayOutput() GetApplicationInfosDimensionArrayOutput
	ToGetApplicationInfosDimensionArrayOutputWithContext(context.Context) GetApplicationInfosDimensionArrayOutput
}

type GetApplicationInfosDimensionArray []GetApplicationInfosDimensionInput

func (GetApplicationInfosDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationInfosDimension)(nil)).Elem()
}

func (i GetApplicationInfosDimensionArray) ToGetApplicationInfosDimensionArrayOutput() GetApplicationInfosDimensionArrayOutput {
	return i.ToGetApplicationInfosDimensionArrayOutputWithContext(context.Background())
}

func (i GetApplicationInfosDimensionArray) ToGetApplicationInfosDimensionArrayOutputWithContext(ctx context.Context) GetApplicationInfosDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationInfosDimensionArrayOutput)
}

type GetApplicationInfosDimensionOutput struct{ *pulumi.OutputState }

func (GetApplicationInfosDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationInfosDimension)(nil)).Elem()
}

func (o GetApplicationInfosDimensionOutput) ToGetApplicationInfosDimensionOutput() GetApplicationInfosDimensionOutput {
	return o
}

func (o GetApplicationInfosDimensionOutput) ToGetApplicationInfosDimensionOutputWithContext(ctx context.Context) GetApplicationInfosDimensionOutput {
	return o
}

// The key of dimensions.
func (o GetApplicationInfosDimensionOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationInfosDimension) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of dimensions.
func (o GetApplicationInfosDimensionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApplicationInfosDimension) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetApplicationInfosDimensionArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationInfosDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationInfosDimension)(nil)).Elem()
}

func (o GetApplicationInfosDimensionArrayOutput) ToGetApplicationInfosDimensionArrayOutput() GetApplicationInfosDimensionArrayOutput {
	return o
}

func (o GetApplicationInfosDimensionArrayOutput) ToGetApplicationInfosDimensionArrayOutputWithContext(ctx context.Context) GetApplicationInfosDimensionArrayOutput {
	return o
}

func (o GetApplicationInfosDimensionArrayOutput) Index(i pulumi.IntInput) GetApplicationInfosDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationInfosDimension {
		return vs[0].([]GetApplicationInfosDimension)[vs[1].(int)]
	}).(GetApplicationInfosDimensionOutput)
}

type GetApplicationInfosInfo struct {
	// The first ID of the resource.
	ApplicationId string `pulumi:"applicationId"`
	// The approve value.
	ApproveValue string `pulumi:"approveValue"`
	// The audit reason.
	AuditReason string `pulumi:"auditReason"`
	// The desire value of the quota application.
	DesireValue float64 `pulumi:"desireValue"`
	// The quota dimensions.
	Dimensions []GetApplicationInfosInfoDimension `pulumi:"dimensions"`
	// The effective time.
	EffectiveTime string `pulumi:"effectiveTime"`
	// The expire time.
	ExpireTime string `pulumi:"expireTime"`
	// The ID of the Application Info.
	Id string `pulumi:"id"`
	// The notice type.
	NoticeType int `pulumi:"noticeType"`
	// The product code.
	ProductCode string `pulumi:"productCode"`
	// The ID of quota action..
	QuotaActionCode string `pulumi:"quotaActionCode"`
	// The description of the quota.
	QuotaDescription string `pulumi:"quotaDescription"`
	// The name of the quota.
	QuotaName string `pulumi:"quotaName"`
	// The quota unit.
	QuotaUnit string `pulumi:"quotaUnit"`
	// The reason of the quota application.
	Reason string `pulumi:"reason"`
	// The status of the quota application.
	Status string `pulumi:"status"`
}

// GetApplicationInfosInfoInput is an input type that accepts GetApplicationInfosInfoArgs and GetApplicationInfosInfoOutput values.
// You can construct a concrete instance of `GetApplicationInfosInfoInput` via:
//
//          GetApplicationInfosInfoArgs{...}
type GetApplicationInfosInfoInput interface {
	pulumi.Input

	ToGetApplicationInfosInfoOutput() GetApplicationInfosInfoOutput
	ToGetApplicationInfosInfoOutputWithContext(context.Context) GetApplicationInfosInfoOutput
}

type GetApplicationInfosInfoArgs struct {
	// The first ID of the resource.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// The approve value.
	ApproveValue pulumi.StringInput `pulumi:"approveValue"`
	// The audit reason.
	AuditReason pulumi.StringInput `pulumi:"auditReason"`
	// The desire value of the quota application.
	DesireValue pulumi.Float64Input `pulumi:"desireValue"`
	// The quota dimensions.
	Dimensions GetApplicationInfosInfoDimensionArrayInput `pulumi:"dimensions"`
	// The effective time.
	EffectiveTime pulumi.StringInput `pulumi:"effectiveTime"`
	// The expire time.
	ExpireTime pulumi.StringInput `pulumi:"expireTime"`
	// The ID of the Application Info.
	Id pulumi.StringInput `pulumi:"id"`
	// The notice type.
	NoticeType pulumi.IntInput `pulumi:"noticeType"`
	// The product code.
	ProductCode pulumi.StringInput `pulumi:"productCode"`
	// The ID of quota action..
	QuotaActionCode pulumi.StringInput `pulumi:"quotaActionCode"`
	// The description of the quota.
	QuotaDescription pulumi.StringInput `pulumi:"quotaDescription"`
	// The name of the quota.
	QuotaName pulumi.StringInput `pulumi:"quotaName"`
	// The quota unit.
	QuotaUnit pulumi.StringInput `pulumi:"quotaUnit"`
	// The reason of the quota application.
	Reason pulumi.StringInput `pulumi:"reason"`
	// The status of the quota application.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetApplicationInfosInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationInfosInfo)(nil)).Elem()
}

func (i GetApplicationInfosInfoArgs) ToGetApplicationInfosInfoOutput() GetApplicationInfosInfoOutput {
	return i.ToGetApplicationInfosInfoOutputWithContext(context.Background())
}

func (i GetApplicationInfosInfoArgs) ToGetApplicationInfosInfoOutputWithContext(ctx context.Context) GetApplicationInfosInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationInfosInfoOutput)
}

// GetApplicationInfosInfoArrayInput is an input type that accepts GetApplicationInfosInfoArray and GetApplicationInfosInfoArrayOutput values.
// You can construct a concrete instance of `GetApplicationInfosInfoArrayInput` via:
//
//          GetApplicationInfosInfoArray{ GetApplicationInfosInfoArgs{...} }
type GetApplicationInfosInfoArrayInput interface {
	pulumi.Input

	ToGetApplicationInfosInfoArrayOutput() GetApplicationInfosInfoArrayOutput
	ToGetApplicationInfosInfoArrayOutputWithContext(context.Context) GetApplicationInfosInfoArrayOutput
}

type GetApplicationInfosInfoArray []GetApplicationInfosInfoInput

func (GetApplicationInfosInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationInfosInfo)(nil)).Elem()
}

func (i GetApplicationInfosInfoArray) ToGetApplicationInfosInfoArrayOutput() GetApplicationInfosInfoArrayOutput {
	return i.ToGetApplicationInfosInfoArrayOutputWithContext(context.Background())
}

func (i GetApplicationInfosInfoArray) ToGetApplicationInfosInfoArrayOutputWithContext(ctx context.Context) GetApplicationInfosInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationInfosInfoArrayOutput)
}

type GetApplicationInfosInfoOutput struct{ *pulumi.OutputState }

func (GetApplicationInfosInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationInfosInfo)(nil)).Elem()
}

func (o GetApplicationInfosInfoOutput) ToGetApplicationInfosInfoOutput() GetApplicationInfosInfoOutput {
	return o
}

func (o GetApplicationInfosInfoOutput) ToGetApplicationInfosInfoOutputWithContext(ctx context.Context) GetApplicationInfosInfoOutput {
	return o
}

// The first ID of the resource.
func (o GetApplicationInfosInfoOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationInfosInfo) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// The approve value.
func (o GetApplicationInfosInfoOutput) ApproveValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationInfosInfo) string { return v.ApproveValue }).(pulumi.StringOutput)
}

// The audit reason.
func (o GetApplicationInfosInfoOutput) AuditReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationInfosInfo) string { return v.AuditReason }).(pulumi.StringOutput)
}

// The desire value of the quota application.
func (o GetApplicationInfosInfoOutput) DesireValue() pulumi.Float64Output {
	return o.ApplyT(func(v GetApplicationInfosInfo) float64 { return v.DesireValue }).(pulumi.Float64Output)
}

// The quota dimensions.
func (o GetApplicationInfosInfoOutput) Dimensions() GetApplicationInfosInfoDimensionArrayOutput {
	return o.ApplyT(func(v GetApplicationInfosInfo) []GetApplicationInfosInfoDimension { return v.Dimensions }).(GetApplicationInfosInfoDimensionArrayOutput)
}

// The effective time.
func (o GetApplicationInfosInfoOutput) EffectiveTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationInfosInfo) string { return v.EffectiveTime }).(pulumi.StringOutput)
}

// The expire time.
func (o GetApplicationInfosInfoOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationInfosInfo) string { return v.ExpireTime }).(pulumi.StringOutput)
}

// The ID of the Application Info.
func (o GetApplicationInfosInfoOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationInfosInfo) string { return v.Id }).(pulumi.StringOutput)
}

// The notice type.
func (o GetApplicationInfosInfoOutput) NoticeType() pulumi.IntOutput {
	return o.ApplyT(func(v GetApplicationInfosInfo) int { return v.NoticeType }).(pulumi.IntOutput)
}

// The product code.
func (o GetApplicationInfosInfoOutput) ProductCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationInfosInfo) string { return v.ProductCode }).(pulumi.StringOutput)
}

// The ID of quota action..
func (o GetApplicationInfosInfoOutput) QuotaActionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationInfosInfo) string { return v.QuotaActionCode }).(pulumi.StringOutput)
}

// The description of the quota.
func (o GetApplicationInfosInfoOutput) QuotaDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationInfosInfo) string { return v.QuotaDescription }).(pulumi.StringOutput)
}

// The name of the quota.
func (o GetApplicationInfosInfoOutput) QuotaName() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationInfosInfo) string { return v.QuotaName }).(pulumi.StringOutput)
}

// The quota unit.
func (o GetApplicationInfosInfoOutput) QuotaUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationInfosInfo) string { return v.QuotaUnit }).(pulumi.StringOutput)
}

// The reason of the quota application.
func (o GetApplicationInfosInfoOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationInfosInfo) string { return v.Reason }).(pulumi.StringOutput)
}

// The status of the quota application.
func (o GetApplicationInfosInfoOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationInfosInfo) string { return v.Status }).(pulumi.StringOutput)
}

type GetApplicationInfosInfoArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationInfosInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationInfosInfo)(nil)).Elem()
}

func (o GetApplicationInfosInfoArrayOutput) ToGetApplicationInfosInfoArrayOutput() GetApplicationInfosInfoArrayOutput {
	return o
}

func (o GetApplicationInfosInfoArrayOutput) ToGetApplicationInfosInfoArrayOutputWithContext(ctx context.Context) GetApplicationInfosInfoArrayOutput {
	return o
}

func (o GetApplicationInfosInfoArrayOutput) Index(i pulumi.IntInput) GetApplicationInfosInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationInfosInfo {
		return vs[0].([]GetApplicationInfosInfo)[vs[1].(int)]
	}).(GetApplicationInfosInfoOutput)
}

type GetApplicationInfosInfoDimension struct {
	// The key of dimensions.
	Key string `pulumi:"key"`
	// The value of dimensions.
	Value string `pulumi:"value"`
}

// GetApplicationInfosInfoDimensionInput is an input type that accepts GetApplicationInfosInfoDimensionArgs and GetApplicationInfosInfoDimensionOutput values.
// You can construct a concrete instance of `GetApplicationInfosInfoDimensionInput` via:
//
//          GetApplicationInfosInfoDimensionArgs{...}
type GetApplicationInfosInfoDimensionInput interface {
	pulumi.Input

	ToGetApplicationInfosInfoDimensionOutput() GetApplicationInfosInfoDimensionOutput
	ToGetApplicationInfosInfoDimensionOutputWithContext(context.Context) GetApplicationInfosInfoDimensionOutput
}

type GetApplicationInfosInfoDimensionArgs struct {
	// The key of dimensions.
	Key pulumi.StringInput `pulumi:"key"`
	// The value of dimensions.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetApplicationInfosInfoDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationInfosInfoDimension)(nil)).Elem()
}

func (i GetApplicationInfosInfoDimensionArgs) ToGetApplicationInfosInfoDimensionOutput() GetApplicationInfosInfoDimensionOutput {
	return i.ToGetApplicationInfosInfoDimensionOutputWithContext(context.Background())
}

func (i GetApplicationInfosInfoDimensionArgs) ToGetApplicationInfosInfoDimensionOutputWithContext(ctx context.Context) GetApplicationInfosInfoDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationInfosInfoDimensionOutput)
}

// GetApplicationInfosInfoDimensionArrayInput is an input type that accepts GetApplicationInfosInfoDimensionArray and GetApplicationInfosInfoDimensionArrayOutput values.
// You can construct a concrete instance of `GetApplicationInfosInfoDimensionArrayInput` via:
//
//          GetApplicationInfosInfoDimensionArray{ GetApplicationInfosInfoDimensionArgs{...} }
type GetApplicationInfosInfoDimensionArrayInput interface {
	pulumi.Input

	ToGetApplicationInfosInfoDimensionArrayOutput() GetApplicationInfosInfoDimensionArrayOutput
	ToGetApplicationInfosInfoDimensionArrayOutputWithContext(context.Context) GetApplicationInfosInfoDimensionArrayOutput
}

type GetApplicationInfosInfoDimensionArray []GetApplicationInfosInfoDimensionInput

func (GetApplicationInfosInfoDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationInfosInfoDimension)(nil)).Elem()
}

func (i GetApplicationInfosInfoDimensionArray) ToGetApplicationInfosInfoDimensionArrayOutput() GetApplicationInfosInfoDimensionArrayOutput {
	return i.ToGetApplicationInfosInfoDimensionArrayOutputWithContext(context.Background())
}

func (i GetApplicationInfosInfoDimensionArray) ToGetApplicationInfosInfoDimensionArrayOutputWithContext(ctx context.Context) GetApplicationInfosInfoDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApplicationInfosInfoDimensionArrayOutput)
}

type GetApplicationInfosInfoDimensionOutput struct{ *pulumi.OutputState }

func (GetApplicationInfosInfoDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicationInfosInfoDimension)(nil)).Elem()
}

func (o GetApplicationInfosInfoDimensionOutput) ToGetApplicationInfosInfoDimensionOutput() GetApplicationInfosInfoDimensionOutput {
	return o
}

func (o GetApplicationInfosInfoDimensionOutput) ToGetApplicationInfosInfoDimensionOutputWithContext(ctx context.Context) GetApplicationInfosInfoDimensionOutput {
	return o
}

// The key of dimensions.
func (o GetApplicationInfosInfoDimensionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationInfosInfoDimension) string { return v.Key }).(pulumi.StringOutput)
}

// The value of dimensions.
func (o GetApplicationInfosInfoDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicationInfosInfoDimension) string { return v.Value }).(pulumi.StringOutput)
}

type GetApplicationInfosInfoDimensionArrayOutput struct{ *pulumi.OutputState }

func (GetApplicationInfosInfoDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApplicationInfosInfoDimension)(nil)).Elem()
}

func (o GetApplicationInfosInfoDimensionArrayOutput) ToGetApplicationInfosInfoDimensionArrayOutput() GetApplicationInfosInfoDimensionArrayOutput {
	return o
}

func (o GetApplicationInfosInfoDimensionArrayOutput) ToGetApplicationInfosInfoDimensionArrayOutputWithContext(ctx context.Context) GetApplicationInfosInfoDimensionArrayOutput {
	return o
}

func (o GetApplicationInfosInfoDimensionArrayOutput) Index(i pulumi.IntInput) GetApplicationInfosInfoDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApplicationInfosInfoDimension {
		return vs[0].([]GetApplicationInfosInfoDimension)[vs[1].(int)]
	}).(GetApplicationInfosInfoDimensionOutput)
}

type GetQuotasDimension struct {
	// The key of dimensions.
	Key *string `pulumi:"key"`
	// The value of dimensions.
	Value *string `pulumi:"value"`
}

// GetQuotasDimensionInput is an input type that accepts GetQuotasDimensionArgs and GetQuotasDimensionOutput values.
// You can construct a concrete instance of `GetQuotasDimensionInput` via:
//
//          GetQuotasDimensionArgs{...}
type GetQuotasDimensionInput interface {
	pulumi.Input

	ToGetQuotasDimensionOutput() GetQuotasDimensionOutput
	ToGetQuotasDimensionOutputWithContext(context.Context) GetQuotasDimensionOutput
}

type GetQuotasDimensionArgs struct {
	// The key of dimensions.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value of dimensions.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetQuotasDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasDimension)(nil)).Elem()
}

func (i GetQuotasDimensionArgs) ToGetQuotasDimensionOutput() GetQuotasDimensionOutput {
	return i.ToGetQuotasDimensionOutputWithContext(context.Background())
}

func (i GetQuotasDimensionArgs) ToGetQuotasDimensionOutputWithContext(ctx context.Context) GetQuotasDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotasDimensionOutput)
}

// GetQuotasDimensionArrayInput is an input type that accepts GetQuotasDimensionArray and GetQuotasDimensionArrayOutput values.
// You can construct a concrete instance of `GetQuotasDimensionArrayInput` via:
//
//          GetQuotasDimensionArray{ GetQuotasDimensionArgs{...} }
type GetQuotasDimensionArrayInput interface {
	pulumi.Input

	ToGetQuotasDimensionArrayOutput() GetQuotasDimensionArrayOutput
	ToGetQuotasDimensionArrayOutputWithContext(context.Context) GetQuotasDimensionArrayOutput
}

type GetQuotasDimensionArray []GetQuotasDimensionInput

func (GetQuotasDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotasDimension)(nil)).Elem()
}

func (i GetQuotasDimensionArray) ToGetQuotasDimensionArrayOutput() GetQuotasDimensionArrayOutput {
	return i.ToGetQuotasDimensionArrayOutputWithContext(context.Background())
}

func (i GetQuotasDimensionArray) ToGetQuotasDimensionArrayOutputWithContext(ctx context.Context) GetQuotasDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotasDimensionArrayOutput)
}

type GetQuotasDimensionOutput struct{ *pulumi.OutputState }

func (GetQuotasDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasDimension)(nil)).Elem()
}

func (o GetQuotasDimensionOutput) ToGetQuotasDimensionOutput() GetQuotasDimensionOutput {
	return o
}

func (o GetQuotasDimensionOutput) ToGetQuotasDimensionOutputWithContext(ctx context.Context) GetQuotasDimensionOutput {
	return o
}

// The key of dimensions.
func (o GetQuotasDimensionOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetQuotasDimension) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value of dimensions.
func (o GetQuotasDimensionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetQuotasDimension) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetQuotasDimensionArrayOutput struct{ *pulumi.OutputState }

func (GetQuotasDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotasDimension)(nil)).Elem()
}

func (o GetQuotasDimensionArrayOutput) ToGetQuotasDimensionArrayOutput() GetQuotasDimensionArrayOutput {
	return o
}

func (o GetQuotasDimensionArrayOutput) ToGetQuotasDimensionArrayOutputWithContext(ctx context.Context) GetQuotasDimensionArrayOutput {
	return o
}

func (o GetQuotasDimensionArrayOutput) Index(i pulumi.IntInput) GetQuotasDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuotasDimension {
		return vs[0].([]GetQuotasDimension)[vs[1].(int)]
	}).(GetQuotasDimensionOutput)
}

type GetQuotasQuota struct {
	// Is the quota adjustable.
	Adjustable bool `pulumi:"adjustable"`
	// The range of quota adjustment.
	ApplicableRanges []string `pulumi:"applicableRanges"`
	// The type of quota.
	ApplicableType string `pulumi:"applicableType"`
	// Show used quota.
	Consumable bool `pulumi:"consumable"`
	// The ID of the Quota.
	Id string `pulumi:"id"`
	// The quota action code.
	QuotaActionCode string `pulumi:"quotaActionCode"`
	// The quota description.
	QuotaDescription string `pulumi:"quotaDescription"`
	// The quota name.
	QuotaName string `pulumi:"quotaName"`
	// The quota type.
	QuotaType string `pulumi:"quotaType"`
	// The quota unit.
	QuotaUnit string `pulumi:"quotaUnit"`
	// TotalQuota.
	TotalQuota float64 `pulumi:"totalQuota"`
	// The total of usage.
	TotalUsage float64 `pulumi:"totalUsage"`
	// The unadjustable detail.
	UnadjustableDetail string `pulumi:"unadjustableDetail"`
}

// GetQuotasQuotaInput is an input type that accepts GetQuotasQuotaArgs and GetQuotasQuotaOutput values.
// You can construct a concrete instance of `GetQuotasQuotaInput` via:
//
//          GetQuotasQuotaArgs{...}
type GetQuotasQuotaInput interface {
	pulumi.Input

	ToGetQuotasQuotaOutput() GetQuotasQuotaOutput
	ToGetQuotasQuotaOutputWithContext(context.Context) GetQuotasQuotaOutput
}

type GetQuotasQuotaArgs struct {
	// Is the quota adjustable.
	Adjustable pulumi.BoolInput `pulumi:"adjustable"`
	// The range of quota adjustment.
	ApplicableRanges pulumi.StringArrayInput `pulumi:"applicableRanges"`
	// The type of quota.
	ApplicableType pulumi.StringInput `pulumi:"applicableType"`
	// Show used quota.
	Consumable pulumi.BoolInput `pulumi:"consumable"`
	// The ID of the Quota.
	Id pulumi.StringInput `pulumi:"id"`
	// The quota action code.
	QuotaActionCode pulumi.StringInput `pulumi:"quotaActionCode"`
	// The quota description.
	QuotaDescription pulumi.StringInput `pulumi:"quotaDescription"`
	// The quota name.
	QuotaName pulumi.StringInput `pulumi:"quotaName"`
	// The quota type.
	QuotaType pulumi.StringInput `pulumi:"quotaType"`
	// The quota unit.
	QuotaUnit pulumi.StringInput `pulumi:"quotaUnit"`
	// TotalQuota.
	TotalQuota pulumi.Float64Input `pulumi:"totalQuota"`
	// The total of usage.
	TotalUsage pulumi.Float64Input `pulumi:"totalUsage"`
	// The unadjustable detail.
	UnadjustableDetail pulumi.StringInput `pulumi:"unadjustableDetail"`
}

func (GetQuotasQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasQuota)(nil)).Elem()
}

func (i GetQuotasQuotaArgs) ToGetQuotasQuotaOutput() GetQuotasQuotaOutput {
	return i.ToGetQuotasQuotaOutputWithContext(context.Background())
}

func (i GetQuotasQuotaArgs) ToGetQuotasQuotaOutputWithContext(ctx context.Context) GetQuotasQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotasQuotaOutput)
}

// GetQuotasQuotaArrayInput is an input type that accepts GetQuotasQuotaArray and GetQuotasQuotaArrayOutput values.
// You can construct a concrete instance of `GetQuotasQuotaArrayInput` via:
//
//          GetQuotasQuotaArray{ GetQuotasQuotaArgs{...} }
type GetQuotasQuotaArrayInput interface {
	pulumi.Input

	ToGetQuotasQuotaArrayOutput() GetQuotasQuotaArrayOutput
	ToGetQuotasQuotaArrayOutputWithContext(context.Context) GetQuotasQuotaArrayOutput
}

type GetQuotasQuotaArray []GetQuotasQuotaInput

func (GetQuotasQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotasQuota)(nil)).Elem()
}

func (i GetQuotasQuotaArray) ToGetQuotasQuotaArrayOutput() GetQuotasQuotaArrayOutput {
	return i.ToGetQuotasQuotaArrayOutputWithContext(context.Background())
}

func (i GetQuotasQuotaArray) ToGetQuotasQuotaArrayOutputWithContext(ctx context.Context) GetQuotasQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetQuotasQuotaArrayOutput)
}

type GetQuotasQuotaOutput struct{ *pulumi.OutputState }

func (GetQuotasQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQuotasQuota)(nil)).Elem()
}

func (o GetQuotasQuotaOutput) ToGetQuotasQuotaOutput() GetQuotasQuotaOutput {
	return o
}

func (o GetQuotasQuotaOutput) ToGetQuotasQuotaOutputWithContext(ctx context.Context) GetQuotasQuotaOutput {
	return o
}

// Is the quota adjustable.
func (o GetQuotasQuotaOutput) Adjustable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetQuotasQuota) bool { return v.Adjustable }).(pulumi.BoolOutput)
}

// The range of quota adjustment.
func (o GetQuotasQuotaOutput) ApplicableRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetQuotasQuota) []string { return v.ApplicableRanges }).(pulumi.StringArrayOutput)
}

// The type of quota.
func (o GetQuotasQuotaOutput) ApplicableType() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.ApplicableType }).(pulumi.StringOutput)
}

// Show used quota.
func (o GetQuotasQuotaOutput) Consumable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetQuotasQuota) bool { return v.Consumable }).(pulumi.BoolOutput)
}

// The ID of the Quota.
func (o GetQuotasQuotaOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.Id }).(pulumi.StringOutput)
}

// The quota action code.
func (o GetQuotasQuotaOutput) QuotaActionCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.QuotaActionCode }).(pulumi.StringOutput)
}

// The quota description.
func (o GetQuotasQuotaOutput) QuotaDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.QuotaDescription }).(pulumi.StringOutput)
}

// The quota name.
func (o GetQuotasQuotaOutput) QuotaName() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.QuotaName }).(pulumi.StringOutput)
}

// The quota type.
func (o GetQuotasQuotaOutput) QuotaType() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.QuotaType }).(pulumi.StringOutput)
}

// The quota unit.
func (o GetQuotasQuotaOutput) QuotaUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.QuotaUnit }).(pulumi.StringOutput)
}

// TotalQuota.
func (o GetQuotasQuotaOutput) TotalQuota() pulumi.Float64Output {
	return o.ApplyT(func(v GetQuotasQuota) float64 { return v.TotalQuota }).(pulumi.Float64Output)
}

// The total of usage.
func (o GetQuotasQuotaOutput) TotalUsage() pulumi.Float64Output {
	return o.ApplyT(func(v GetQuotasQuota) float64 { return v.TotalUsage }).(pulumi.Float64Output)
}

// The unadjustable detail.
func (o GetQuotasQuotaOutput) UnadjustableDetail() pulumi.StringOutput {
	return o.ApplyT(func(v GetQuotasQuota) string { return v.UnadjustableDetail }).(pulumi.StringOutput)
}

type GetQuotasQuotaArrayOutput struct{ *pulumi.OutputState }

func (GetQuotasQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetQuotasQuota)(nil)).Elem()
}

func (o GetQuotasQuotaArrayOutput) ToGetQuotasQuotaArrayOutput() GetQuotasQuotaArrayOutput {
	return o
}

func (o GetQuotasQuotaArrayOutput) ToGetQuotasQuotaArrayOutputWithContext(ctx context.Context) GetQuotasQuotaArrayOutput {
	return o
}

func (o GetQuotasQuotaArrayOutput) Index(i pulumi.IntInput) GetQuotasQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetQuotasQuota {
		return vs[0].([]GetQuotasQuota)[vs[1].(int)]
	}).(GetQuotasQuotaOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationInfoDimensionOutput{})
	pulumi.RegisterOutputType(ApplicationInfoDimensionArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationInfosDimensionOutput{})
	pulumi.RegisterOutputType(GetApplicationInfosDimensionArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationInfosInfoOutput{})
	pulumi.RegisterOutputType(GetApplicationInfosInfoArrayOutput{})
	pulumi.RegisterOutputType(GetApplicationInfosInfoDimensionOutput{})
	pulumi.RegisterOutputType(GetApplicationInfosInfoDimensionArrayOutput{})
	pulumi.RegisterOutputType(GetQuotasDimensionOutput{})
	pulumi.RegisterOutputType(GetQuotasDimensionArrayOutput{})
	pulumi.RegisterOutputType(GetQuotasQuotaOutput{})
	pulumi.RegisterOutputType(GetQuotasQuotaArrayOutput{})
}
