// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package amqp

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Amqp Exchanges of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.128.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/amqp"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		ids, err := amqp.GetExchanges(ctx, &amqp.GetExchangesArgs{
// 			InstanceId:      "amqp-abc12345",
// 			VirtualHostName: "my-VirtualHost",
// 			Ids: []string{
// 				"my-Exchange-1",
// 				"my-Exchange-2",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("amqpExchangeId1", ids.Exchanges[0].Id)
// 		opt0 := "^my-Exchange"
// 		nameRegex, err := amqp.GetExchanges(ctx, &amqp.GetExchangesArgs{
// 			InstanceId:      "amqp-abc12345",
// 			VirtualHostName: "my-VirtualHost",
// 			NameRegex:       &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("amqpExchangeId2", nameRegex.Exchanges[0].Id)
// 		return nil
// 	})
// }
// ```
func GetExchanges(ctx *pulumi.Context, args *GetExchangesArgs, opts ...pulumi.InvokeOption) (*GetExchangesResult, error) {
	var rv GetExchangesResult
	err := ctx.Invoke("alicloud:amqp/getExchanges:getExchanges", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExchanges.
type GetExchangesArgs struct {
	// A list of Exchange IDs. Its element value is same as Exchange Name.
	Ids []string `pulumi:"ids"`
	// The ID of the instance.
	InstanceId string `pulumi:"instanceId"`
	// A regex string to filter results by Exchange name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// The name of virtual host where an exchange resides.
	VirtualHostName string `pulumi:"virtualHostName"`
}

// A collection of values returned by getExchanges.
type GetExchangesResult struct {
	Exchanges []GetExchangesExchange `pulumi:"exchanges"`
	// The provider-assigned unique ID for this managed resource.
	Id              string   `pulumi:"id"`
	Ids             []string `pulumi:"ids"`
	InstanceId      string   `pulumi:"instanceId"`
	NameRegex       *string  `pulumi:"nameRegex"`
	Names           []string `pulumi:"names"`
	OutputFile      *string  `pulumi:"outputFile"`
	VirtualHostName string   `pulumi:"virtualHostName"`
}
