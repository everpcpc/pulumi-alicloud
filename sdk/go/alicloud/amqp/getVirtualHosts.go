// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package amqp

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Amqp Virtual Hosts of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.126.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/amqp"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		ids, err := amqp.GetVirtualHosts(ctx, &amqp.GetVirtualHostsArgs{
// 			InstanceId: "amqp-abc12345",
// 			Ids: []string{
// 				"my-VirtualHost-1",
// 				"my-VirtualHost-2",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("amqpVirtualHostId1", ids.Hosts[0].Id)
// 		opt0 := "^my-VirtualHost"
// 		nameRegex, err := amqp.GetVirtualHosts(ctx, &amqp.GetVirtualHostsArgs{
// 			InstanceId: "amqp-abc12345",
// 			NameRegex:  &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("amqpVirtualHostId2", nameRegex.Hosts[0].Id)
// 		return nil
// 	})
// }
// ```
func GetVirtualHosts(ctx *pulumi.Context, args *GetVirtualHostsArgs, opts ...pulumi.InvokeOption) (*GetVirtualHostsResult, error) {
	var rv GetVirtualHostsResult
	err := ctx.Invoke("alicloud:amqp/getVirtualHosts:getVirtualHosts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVirtualHosts.
type GetVirtualHostsArgs struct {
	// A list of Virtual Host IDs. Its element value is same as Virtual Host Name.
	Ids []string `pulumi:"ids"`
	// InstanceId.
	InstanceId string `pulumi:"instanceId"`
	// A regex string to filter results by Virtual Host name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by getVirtualHosts.
type GetVirtualHostsResult struct {
	Hosts []GetVirtualHostsHost `pulumi:"hosts"`
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	InstanceId string   `pulumi:"instanceId"`
	NameRegex  *string  `pulumi:"nameRegex"`
	Names      []string `pulumi:"names"`
	OutputFile *string  `pulumi:"outputFile"`
}
