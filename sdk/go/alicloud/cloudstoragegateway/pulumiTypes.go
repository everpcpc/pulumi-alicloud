// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudstoragegateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetStorageBundlesBundle struct {
	Description       string `pulumi:"description"`
	Id                string `pulumi:"id"`
	Location          string `pulumi:"location"`
	StorageBundleId   string `pulumi:"storageBundleId"`
	StorageBundleName string `pulumi:"storageBundleName"`
}

// GetStorageBundlesBundleInput is an input type that accepts GetStorageBundlesBundleArgs and GetStorageBundlesBundleOutput values.
// You can construct a concrete instance of `GetStorageBundlesBundleInput` via:
//
//          GetStorageBundlesBundleArgs{...}
type GetStorageBundlesBundleInput interface {
	pulumi.Input

	ToGetStorageBundlesBundleOutput() GetStorageBundlesBundleOutput
	ToGetStorageBundlesBundleOutputWithContext(context.Context) GetStorageBundlesBundleOutput
}

type GetStorageBundlesBundleArgs struct {
	Description       pulumi.StringInput `pulumi:"description"`
	Id                pulumi.StringInput `pulumi:"id"`
	Location          pulumi.StringInput `pulumi:"location"`
	StorageBundleId   pulumi.StringInput `pulumi:"storageBundleId"`
	StorageBundleName pulumi.StringInput `pulumi:"storageBundleName"`
}

func (GetStorageBundlesBundleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageBundlesBundle)(nil)).Elem()
}

func (i GetStorageBundlesBundleArgs) ToGetStorageBundlesBundleOutput() GetStorageBundlesBundleOutput {
	return i.ToGetStorageBundlesBundleOutputWithContext(context.Background())
}

func (i GetStorageBundlesBundleArgs) ToGetStorageBundlesBundleOutputWithContext(ctx context.Context) GetStorageBundlesBundleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageBundlesBundleOutput)
}

// GetStorageBundlesBundleArrayInput is an input type that accepts GetStorageBundlesBundleArray and GetStorageBundlesBundleArrayOutput values.
// You can construct a concrete instance of `GetStorageBundlesBundleArrayInput` via:
//
//          GetStorageBundlesBundleArray{ GetStorageBundlesBundleArgs{...} }
type GetStorageBundlesBundleArrayInput interface {
	pulumi.Input

	ToGetStorageBundlesBundleArrayOutput() GetStorageBundlesBundleArrayOutput
	ToGetStorageBundlesBundleArrayOutputWithContext(context.Context) GetStorageBundlesBundleArrayOutput
}

type GetStorageBundlesBundleArray []GetStorageBundlesBundleInput

func (GetStorageBundlesBundleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageBundlesBundle)(nil)).Elem()
}

func (i GetStorageBundlesBundleArray) ToGetStorageBundlesBundleArrayOutput() GetStorageBundlesBundleArrayOutput {
	return i.ToGetStorageBundlesBundleArrayOutputWithContext(context.Background())
}

func (i GetStorageBundlesBundleArray) ToGetStorageBundlesBundleArrayOutputWithContext(ctx context.Context) GetStorageBundlesBundleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStorageBundlesBundleArrayOutput)
}

type GetStorageBundlesBundleOutput struct{ *pulumi.OutputState }

func (GetStorageBundlesBundleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStorageBundlesBundle)(nil)).Elem()
}

func (o GetStorageBundlesBundleOutput) ToGetStorageBundlesBundleOutput() GetStorageBundlesBundleOutput {
	return o
}

func (o GetStorageBundlesBundleOutput) ToGetStorageBundlesBundleOutputWithContext(ctx context.Context) GetStorageBundlesBundleOutput {
	return o
}

func (o GetStorageBundlesBundleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageBundlesBundle) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetStorageBundlesBundleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageBundlesBundle) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetStorageBundlesBundleOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageBundlesBundle) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetStorageBundlesBundleOutput) StorageBundleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageBundlesBundle) string { return v.StorageBundleId }).(pulumi.StringOutput)
}

func (o GetStorageBundlesBundleOutput) StorageBundleName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStorageBundlesBundle) string { return v.StorageBundleName }).(pulumi.StringOutput)
}

type GetStorageBundlesBundleArrayOutput struct{ *pulumi.OutputState }

func (GetStorageBundlesBundleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStorageBundlesBundle)(nil)).Elem()
}

func (o GetStorageBundlesBundleArrayOutput) ToGetStorageBundlesBundleArrayOutput() GetStorageBundlesBundleArrayOutput {
	return o
}

func (o GetStorageBundlesBundleArrayOutput) ToGetStorageBundlesBundleArrayOutputWithContext(ctx context.Context) GetStorageBundlesBundleArrayOutput {
	return o
}

func (o GetStorageBundlesBundleArrayOutput) Index(i pulumi.IntInput) GetStorageBundlesBundleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStorageBundlesBundle {
		return vs[0].([]GetStorageBundlesBundle)[vs[1].(int)]
	}).(GetStorageBundlesBundleOutput)
}

func init() {
	pulumi.RegisterOutputType(GetStorageBundlesBundleOutput{})
	pulumi.RegisterOutputType(GetStorageBundlesBundleArrayOutput{})
}
