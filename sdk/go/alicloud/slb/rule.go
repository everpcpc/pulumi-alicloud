// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package slb

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// A forwarding rule is configured in `HTTP`/`HTTPS` listener and it used to listen a list of backend servers which in one specified virtual backend server group.
// You can add forwarding rules to a listener to forward requests based on the domain names or the URL in the request.
// 
// ~> **NOTE:** One virtual backend server group can be attached in multiple forwarding rules.
// 
// ~> **NOTE:** At least one "Domain" or "Url" must be specified when creating a new rule.
// 
// ~> **NOTE:** Having the same 'Domain' and 'Url' rule can not be created repeatedly in the one listener.
// 
// ~> **NOTE:** Rule only be created in the `HTTP` or `HTTPS` listener.
// 
// ~> **NOTE:** Only rule's virtual server group can be modified.
type Rule struct {
	s *pulumi.ResourceState
}

// NewRule registers a new resource with the given unique name, arguments, and options.
func NewRule(ctx *pulumi.Context,
	name string, args *RuleArgs, opts ...pulumi.ResourceOpt) (*Rule, error) {
	if args == nil || args.FrontendPort == nil {
		return nil, errors.New("missing required argument 'FrontendPort'")
	}
	if args == nil || args.LoadBalancerId == nil {
		return nil, errors.New("missing required argument 'LoadBalancerId'")
	}
	if args == nil || args.ServerGroupId == nil {
		return nil, errors.New("missing required argument 'ServerGroupId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["domain"] = nil
		inputs["frontendPort"] = nil
		inputs["loadBalancerId"] = nil
		inputs["name"] = nil
		inputs["serverGroupId"] = nil
		inputs["url"] = nil
	} else {
		inputs["domain"] = args.Domain
		inputs["frontendPort"] = args.FrontendPort
		inputs["loadBalancerId"] = args.LoadBalancerId
		inputs["name"] = args.Name
		inputs["serverGroupId"] = args.ServerGroupId
		inputs["url"] = args.Url
	}
	s, err := ctx.RegisterResource("alicloud:slb/rule:Rule", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Rule{s: s}, nil
}

// GetRule gets an existing Rule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRule(ctx *pulumi.Context,
	name string, id pulumi.ID, state *RuleState, opts ...pulumi.ResourceOpt) (*Rule, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["domain"] = state.Domain
		inputs["frontendPort"] = state.FrontendPort
		inputs["loadBalancerId"] = state.LoadBalancerId
		inputs["name"] = state.Name
		inputs["serverGroupId"] = state.ServerGroupId
		inputs["url"] = state.Url
	}
	s, err := ctx.ReadResource("alicloud:slb/rule:Rule", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Rule{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Rule) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Rule) ID() *pulumi.IDOutput {
	return r.s.ID
}

// Domain name of the forwarding rule. It can contain letters a-z, numbers 0-9, hyphens (-), and periods (.),
// and wildcard characters. The following two domain name formats are supported:
// - Standard domain name: www.test.com
// - Wildcard domain name: *.test.com. wildcard (*) must be the first character in the format of (*.)
func (r *Rule) Domain() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["domain"])
}

// The listener frontend port which is used to launch the new forwarding rule. Valid range: [1-65535].
func (r *Rule) FrontendPort() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["frontendPort"])
}

// The Load Balancer ID which is used to launch the new forwarding rule.
func (r *Rule) LoadBalancerId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["loadBalancerId"])
}

// Name of the forwarding rule. Our plugin provides a default name: "tf-slb-rule".
func (r *Rule) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// ID of a virtual server group that will be forwarded.
func (r *Rule) ServerGroupId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["serverGroupId"])
}

// Domain of the forwarding rule. It must be 2-80 characters in length. Only letters a-z, numbers 0-9,
// and characters '-' '/' '?' '%' '#' and '&' are allowed. URLs must be started with the character '/', but cannot be '/' alone.
func (r *Rule) Url() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["url"])
}

// Input properties used for looking up and filtering Rule resources.
type RuleState struct {
	// Domain name of the forwarding rule. It can contain letters a-z, numbers 0-9, hyphens (-), and periods (.),
	// and wildcard characters. The following two domain name formats are supported:
	// - Standard domain name: www.test.com
	// - Wildcard domain name: *.test.com. wildcard (*) must be the first character in the format of (*.)
	Domain interface{}
	// The listener frontend port which is used to launch the new forwarding rule. Valid range: [1-65535].
	FrontendPort interface{}
	// The Load Balancer ID which is used to launch the new forwarding rule.
	LoadBalancerId interface{}
	// Name of the forwarding rule. Our plugin provides a default name: "tf-slb-rule".
	Name interface{}
	// ID of a virtual server group that will be forwarded.
	ServerGroupId interface{}
	// Domain of the forwarding rule. It must be 2-80 characters in length. Only letters a-z, numbers 0-9,
	// and characters '-' '/' '?' '%' '#' and '&' are allowed. URLs must be started with the character '/', but cannot be '/' alone.
	Url interface{}
}

// The set of arguments for constructing a Rule resource.
type RuleArgs struct {
	// Domain name of the forwarding rule. It can contain letters a-z, numbers 0-9, hyphens (-), and periods (.),
	// and wildcard characters. The following two domain name formats are supported:
	// - Standard domain name: www.test.com
	// - Wildcard domain name: *.test.com. wildcard (*) must be the first character in the format of (*.)
	Domain interface{}
	// The listener frontend port which is used to launch the new forwarding rule. Valid range: [1-65535].
	FrontendPort interface{}
	// The Load Balancer ID which is used to launch the new forwarding rule.
	LoadBalancerId interface{}
	// Name of the forwarding rule. Our plugin provides a default name: "tf-slb-rule".
	Name interface{}
	// ID of a virtual server group that will be forwarded.
	ServerGroupId interface{}
	// Domain of the forwarding rule. It must be 2-80 characters in length. Only letters a-z, numbers 0-9,
	// and characters '-' '/' '?' '%' '#' and '&' are allowed. URLs must be started with the character '/', but cannot be '/' alone.
	Url interface{}
}
