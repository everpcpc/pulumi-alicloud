// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package slb

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// HTTPS listeners of guaranteed-performance SLB support configuring multiple certificates, allowing you to forward requests with different domain names to different backend servers.
// Please refer to the [documentation](https://www.alibabacloud.com/help/doc-detail/85956.htm?spm=a2c63.p38356.b99.40.1c881563Co8p6w) for details.
// 
// > **NOTE:** Available in 1.60.0+
// 
// > **NOTE:** The instance with shared loadBalancerSpec doesn't support domainExtension.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/slb_domain_extension.html.markdown.
type DomainExtension struct {
	s *pulumi.ResourceState
}

// NewDomainExtension registers a new resource with the given unique name, arguments, and options.
func NewDomainExtension(ctx *pulumi.Context,
	name string, args *DomainExtensionArgs, opts ...pulumi.ResourceOpt) (*DomainExtension, error) {
	if args == nil || args.Domain == nil {
		return nil, errors.New("missing required argument 'Domain'")
	}
	if args == nil || args.FrontendPort == nil {
		return nil, errors.New("missing required argument 'FrontendPort'")
	}
	if args == nil || args.LoadBalancerId == nil {
		return nil, errors.New("missing required argument 'LoadBalancerId'")
	}
	if args == nil || args.ServerCertificateId == nil {
		return nil, errors.New("missing required argument 'ServerCertificateId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["deleteProtectionValidation"] = nil
		inputs["domain"] = nil
		inputs["frontendPort"] = nil
		inputs["loadBalancerId"] = nil
		inputs["serverCertificateId"] = nil
	} else {
		inputs["deleteProtectionValidation"] = args.DeleteProtectionValidation
		inputs["domain"] = args.Domain
		inputs["frontendPort"] = args.FrontendPort
		inputs["loadBalancerId"] = args.LoadBalancerId
		inputs["serverCertificateId"] = args.ServerCertificateId
	}
	s, err := ctx.RegisterResource("alicloud:slb/domainExtension:DomainExtension", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &DomainExtension{s: s}, nil
}

// GetDomainExtension gets an existing DomainExtension resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainExtension(ctx *pulumi.Context,
	name string, id pulumi.ID, state *DomainExtensionState, opts ...pulumi.ResourceOpt) (*DomainExtension, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["deleteProtectionValidation"] = state.DeleteProtectionValidation
		inputs["domain"] = state.Domain
		inputs["frontendPort"] = state.FrontendPort
		inputs["loadBalancerId"] = state.LoadBalancerId
		inputs["serverCertificateId"] = state.ServerCertificateId
	}
	s, err := ctx.ReadResource("alicloud:slb/domainExtension:DomainExtension", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &DomainExtension{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *DomainExtension) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *DomainExtension) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
func (r *DomainExtension) DeleteProtectionValidation() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["deleteProtectionValidation"])
}

// The domain name,
func (r *DomainExtension) Domain() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["domain"])
}

// The frontend port used by the HTTPS listener of the SLB instance. Valid values: 1–65535.
func (r *DomainExtension) FrontendPort() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["frontendPort"])
}

// The ID of the SLB instance.
func (r *DomainExtension) LoadBalancerId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["loadBalancerId"])
}

// The ID of the certificate used by the domain name.
func (r *DomainExtension) ServerCertificateId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["serverCertificateId"])
}

// Input properties used for looking up and filtering DomainExtension resources.
type DomainExtensionState struct {
	// Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
	DeleteProtectionValidation interface{}
	// The domain name,
	Domain interface{}
	// The frontend port used by the HTTPS listener of the SLB instance. Valid values: 1–65535.
	FrontendPort interface{}
	// The ID of the SLB instance.
	LoadBalancerId interface{}
	// The ID of the certificate used by the domain name.
	ServerCertificateId interface{}
}

// The set of arguments for constructing a DomainExtension resource.
type DomainExtensionArgs struct {
	// Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
	DeleteProtectionValidation interface{}
	// The domain name,
	Domain interface{}
	// The frontend port used by the HTTPS listener of the SLB instance. Valid values: 1–65535.
	FrontendPort interface{}
	// The ID of the SLB instance.
	LoadBalancerId interface{}
	// The ID of the certificate used by the domain name.
	ServerCertificateId interface{}
}
