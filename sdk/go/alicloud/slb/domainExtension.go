// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package slb

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// HTTPS listeners of guaranteed-performance SLB support configuring multiple certificates, allowing you to forward requests with different domain names to different backend servers.
// Please refer to the [documentation](https://www.alibabacloud.com/help/doc-detail/85956.htm?spm=a2c63.p38356.b99.40.1c881563Co8p6w) for details.
// 
// > **NOTE:** Available in 1.60.0+
// 
// > **NOTE:** The instance with shared loadBalancerSpec doesn't support domainExtension.
// 
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/slb_domain_extension.html.markdown.
type DomainExtension struct {
	pulumi.CustomResourceState

	// Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
	DeleteProtectionValidation pulumi.BoolPtrOutput `pulumi:"deleteProtectionValidation"`
	// The domain name,
	Domain pulumi.StringOutput `pulumi:"domain"`
	// The frontend port used by the HTTPS listener of the SLB instance. Valid values: 1–65535.
	FrontendPort pulumi.IntOutput `pulumi:"frontendPort"`
	// The ID of the SLB instance.
	LoadBalancerId pulumi.StringOutput `pulumi:"loadBalancerId"`
	// The ID of the certificate used by the domain name.
	ServerCertificateId pulumi.StringOutput `pulumi:"serverCertificateId"`
}

// NewDomainExtension registers a new resource with the given unique name, arguments, and options.
func NewDomainExtension(ctx *pulumi.Context,
	name string, args *DomainExtensionArgs, opts ...pulumi.ResourceOption) (*DomainExtension, error) {
	if args == nil || args.Domain == nil {
		return nil, errors.New("missing required argument 'Domain'")
	}
	if args == nil || args.FrontendPort == nil {
		return nil, errors.New("missing required argument 'FrontendPort'")
	}
	if args == nil || args.LoadBalancerId == nil {
		return nil, errors.New("missing required argument 'LoadBalancerId'")
	}
	if args == nil || args.ServerCertificateId == nil {
		return nil, errors.New("missing required argument 'ServerCertificateId'")
	}
	if args == nil {
		args = &DomainExtensionArgs{}
	}
	var resource DomainExtension
	err := ctx.RegisterResource("alicloud:slb/domainExtension:DomainExtension", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainExtension gets an existing DomainExtension resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainExtension(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainExtensionState, opts ...pulumi.ResourceOption) (*DomainExtension, error) {
	var resource DomainExtension
	err := ctx.ReadResource("alicloud:slb/domainExtension:DomainExtension", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainExtension resources.
type domainExtensionState struct {
	// Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
	DeleteProtectionValidation *bool `pulumi:"deleteProtectionValidation"`
	// The domain name,
	Domain *string `pulumi:"domain"`
	// The frontend port used by the HTTPS listener of the SLB instance. Valid values: 1–65535.
	FrontendPort *int `pulumi:"frontendPort"`
	// The ID of the SLB instance.
	LoadBalancerId *string `pulumi:"loadBalancerId"`
	// The ID of the certificate used by the domain name.
	ServerCertificateId *string `pulumi:"serverCertificateId"`
}

type DomainExtensionState struct {
	// Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
	DeleteProtectionValidation pulumi.BoolPtrInput
	// The domain name,
	Domain pulumi.StringPtrInput
	// The frontend port used by the HTTPS listener of the SLB instance. Valid values: 1–65535.
	FrontendPort pulumi.IntPtrInput
	// The ID of the SLB instance.
	LoadBalancerId pulumi.StringPtrInput
	// The ID of the certificate used by the domain name.
	ServerCertificateId pulumi.StringPtrInput
}

func (DomainExtensionState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainExtensionState)(nil)).Elem()
}

type domainExtensionArgs struct {
	// Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
	DeleteProtectionValidation *bool `pulumi:"deleteProtectionValidation"`
	// The domain name,
	Domain string `pulumi:"domain"`
	// The frontend port used by the HTTPS listener of the SLB instance. Valid values: 1–65535.
	FrontendPort int `pulumi:"frontendPort"`
	// The ID of the SLB instance.
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// The ID of the certificate used by the domain name.
	ServerCertificateId string `pulumi:"serverCertificateId"`
}

// The set of arguments for constructing a DomainExtension resource.
type DomainExtensionArgs struct {
	// Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
	DeleteProtectionValidation pulumi.BoolPtrInput
	// The domain name,
	Domain pulumi.StringInput
	// The frontend port used by the HTTPS listener of the SLB instance. Valid values: 1–65535.
	FrontendPort pulumi.IntInput
	// The ID of the SLB instance.
	LoadBalancerId pulumi.StringInput
	// The ID of the certificate used by the domain name.
	ServerCertificateId pulumi.StringInput
}

func (DomainExtensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainExtensionArgs)(nil)).Elem()
}

