// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package slb

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Add a group of backend servers (ECS instance) to the Server Load Balancer or remove them from it.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/slb_attachment.html.markdown.
type Attachment struct {
	s *pulumi.ResourceState
}

// NewAttachment registers a new resource with the given unique name, arguments, and options.
func NewAttachment(ctx *pulumi.Context,
	name string, args *AttachmentArgs, opts ...pulumi.ResourceOpt) (*Attachment, error) {
	if args == nil || args.InstanceIds == nil {
		return nil, errors.New("missing required argument 'InstanceIds'")
	}
	if args == nil || args.LoadBalancerId == nil {
		return nil, errors.New("missing required argument 'LoadBalancerId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["backendServers"] = nil
		inputs["deleteProtectionValidation"] = nil
		inputs["instanceIds"] = nil
		inputs["loadBalancerId"] = nil
		inputs["serverType"] = nil
		inputs["weight"] = nil
	} else {
		inputs["backendServers"] = args.BackendServers
		inputs["deleteProtectionValidation"] = args.DeleteProtectionValidation
		inputs["instanceIds"] = args.InstanceIds
		inputs["loadBalancerId"] = args.LoadBalancerId
		inputs["serverType"] = args.ServerType
		inputs["weight"] = args.Weight
	}
	s, err := ctx.RegisterResource("alicloud:slb/attachment:Attachment", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Attachment{s: s}, nil
}

// GetAttachment gets an existing Attachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAttachment(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AttachmentState, opts ...pulumi.ResourceOpt) (*Attachment, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["backendServers"] = state.BackendServers
		inputs["deleteProtectionValidation"] = state.DeleteProtectionValidation
		inputs["instanceIds"] = state.InstanceIds
		inputs["loadBalancerId"] = state.LoadBalancerId
		inputs["serverType"] = state.ServerType
		inputs["weight"] = state.Weight
	}
	s, err := ctx.ReadResource("alicloud:slb/attachment:Attachment", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Attachment{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Attachment) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Attachment) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The backend servers of the load balancer.
func (r *Attachment) BackendServers() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["backendServers"])
}

// Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
func (r *Attachment) DeleteProtectionValidation() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["deleteProtectionValidation"])
}

// A list of instance ids to added backend server in the SLB.
func (r *Attachment) InstanceIds() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["instanceIds"])
}

// ID of the load balancer.
func (r *Attachment) LoadBalancerId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["loadBalancerId"])
}

// Type of the instances. Valid value ecs, eni. Default to ecs.
func (r *Attachment) ServerType() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["serverType"])
}

// Weight of the instances. Valid value range: [0-100]. Default to 100.
func (r *Attachment) Weight() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["weight"])
}

// Input properties used for looking up and filtering Attachment resources.
type AttachmentState struct {
	// The backend servers of the load balancer.
	BackendServers interface{}
	// Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
	DeleteProtectionValidation interface{}
	// A list of instance ids to added backend server in the SLB.
	InstanceIds interface{}
	// ID of the load balancer.
	LoadBalancerId interface{}
	// Type of the instances. Valid value ecs, eni. Default to ecs.
	ServerType interface{}
	// Weight of the instances. Valid value range: [0-100]. Default to 100.
	Weight interface{}
}

// The set of arguments for constructing a Attachment resource.
type AttachmentArgs struct {
	// The backend servers of the load balancer.
	BackendServers interface{}
	// Checking DeleteProtection of SLB instance before deleting. If true, this resource will not be deleted when its SLB instance enabled DeleteProtection. Default to false.
	DeleteProtectionValidation interface{}
	// A list of instance ids to added backend server in the SLB.
	InstanceIds interface{}
	// ID of the load balancer.
	LoadBalancerId interface{}
	// Type of the instances. Valid value ecs, eni. Default to ecs.
	ServerType interface{}
	// Weight of the instances. Valid value range: [0-100]. Default to 100.
	Weight interface{}
}
