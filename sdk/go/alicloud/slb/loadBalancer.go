// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package slb

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an Application Load Balancer resource.
// 
// ~> **NOTE:** Resource `alicloud_slb` has deprecated 'listener' filed from terraform-alicloud-provider [version 1.3.0](https://github.com/alibaba/terraform-provider/releases/tag/V1.3.0) . You can create new listeners for Load Balancer by resource `alicloud_slb_listener`.
// If you have had several listeners in one load balancer, you can import them via the specified listener ID. In the `alicloud_slb_listener`, listener ID is consist of load balancer ID and frontend port, and its format is `<load balancer ID>:<frontend port>`, like "lb-hr2fwnf32t:8080".
// 
// ~> **NOTE:** At present, to avoid some unnecessary regulation confusion, SLB can not support alicloud international account to create "paybybandwidth" instance.
type LoadBalancer struct {
	s *pulumi.ResourceState
}

// NewLoadBalancer registers a new resource with the given unique name, arguments, and options.
func NewLoadBalancer(ctx *pulumi.Context,
	name string, args *LoadBalancerArgs, opts ...pulumi.ResourceOpt) (*LoadBalancer, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["bandwidth"] = nil
		inputs["instances"] = nil
		inputs["internet"] = nil
		inputs["internetChargeType"] = nil
		inputs["listeners"] = nil
		inputs["name"] = nil
		inputs["specification"] = nil
		inputs["vswitchId"] = nil
	} else {
		inputs["bandwidth"] = args.Bandwidth
		inputs["instances"] = args.Instances
		inputs["internet"] = args.Internet
		inputs["internetChargeType"] = args.InternetChargeType
		inputs["listeners"] = args.Listeners
		inputs["name"] = args.Name
		inputs["specification"] = args.Specification
		inputs["vswitchId"] = args.VswitchId
	}
	inputs["address"] = nil
	s, err := ctx.RegisterResource("alicloud:slb/loadBalancer:LoadBalancer", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &LoadBalancer{s: s}, nil
}

// GetLoadBalancer gets an existing LoadBalancer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadBalancer(ctx *pulumi.Context,
	name string, id pulumi.ID, state *LoadBalancerState, opts ...pulumi.ResourceOpt) (*LoadBalancer, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["address"] = state.Address
		inputs["bandwidth"] = state.Bandwidth
		inputs["instances"] = state.Instances
		inputs["internet"] = state.Internet
		inputs["internetChargeType"] = state.InternetChargeType
		inputs["listeners"] = state.Listeners
		inputs["name"] = state.Name
		inputs["specification"] = state.Specification
		inputs["vswitchId"] = state.VswitchId
	}
	s, err := ctx.ReadResource("alicloud:slb/loadBalancer:LoadBalancer", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &LoadBalancer{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *LoadBalancer) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *LoadBalancer) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The IP address of the load balancer.
func (r *LoadBalancer) Address() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["address"])
}

// Valid
// value is between 1 and 1000, If argument "internet_charge_type" is "paybytraffic", then this value will be ignore.
func (r *LoadBalancer) Bandwidth() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["bandwidth"])
}

func (r *LoadBalancer) Instances() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["instances"])
}

// If true, the SLB addressType will be internet, false will be intranet, Default is false. If load balancer launched in VPC, this value must be "false".
func (r *LoadBalancer) Internet() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["internet"])
}

// Valid
// values are `PayByBandwidth`, `PayByTraffic`. If this value is "PayByBandwidth", then argument "internet" must be "true". Default is "PayByTraffic". If load balancer launched in VPC, this value must be "PayByTraffic".
// Before version 1.10.1, the valid values are "paybybandwidth" and "paybytraffic".
func (r *LoadBalancer) InternetChargeType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["internetChargeType"])
}

// The field has been deprecated from terraform-alicloud-provider [version 1.3.0](https://github.com/alibaba/terraform-provider/releases/tag/V1.3.0), and use resource `alicloud_slb_listener` to replace.
func (r *LoadBalancer) Listeners() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["listeners"])
}

// The name of the SLB. This name must be unique within your AliCloud account, can have a maximum of 80 characters,
// must contain only alphanumeric characters or hyphens, such as "-","/",".","_", and must not begin or end with a hyphen. If not specified,
// Terraform will autogenerate a name beginning with `tf-lb`.
func (r *LoadBalancer) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The specification of the Server Load Balancer instance. Default to empty string indicating it is "Shared-Performance" instance.
// Launching "[Performance-guaranteed](https://www.alibabacloud.com/help/doc-detail/27657.htm)" instance, it is must be specified and it valid values are: "slb.s1.small", "slb.s2.small", "slb.s2.medium",
// "slb.s3.small", "slb.s3.medium" and "slb.s3.large".
func (r *LoadBalancer) Specification() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["specification"])
}

// The VSwitch ID to launch in.
func (r *LoadBalancer) VswitchId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["vswitchId"])
}

// Input properties used for looking up and filtering LoadBalancer resources.
type LoadBalancerState struct {
	// The IP address of the load balancer.
	Address interface{}
	// Valid
	// value is between 1 and 1000, If argument "internet_charge_type" is "paybytraffic", then this value will be ignore.
	Bandwidth interface{}
	Instances interface{}
	// If true, the SLB addressType will be internet, false will be intranet, Default is false. If load balancer launched in VPC, this value must be "false".
	Internet interface{}
	// Valid
	// values are `PayByBandwidth`, `PayByTraffic`. If this value is "PayByBandwidth", then argument "internet" must be "true". Default is "PayByTraffic". If load balancer launched in VPC, this value must be "PayByTraffic".
	// Before version 1.10.1, the valid values are "paybybandwidth" and "paybytraffic".
	InternetChargeType interface{}
	// The field has been deprecated from terraform-alicloud-provider [version 1.3.0](https://github.com/alibaba/terraform-provider/releases/tag/V1.3.0), and use resource `alicloud_slb_listener` to replace.
	Listeners interface{}
	// The name of the SLB. This name must be unique within your AliCloud account, can have a maximum of 80 characters,
	// must contain only alphanumeric characters or hyphens, such as "-","/",".","_", and must not begin or end with a hyphen. If not specified,
	// Terraform will autogenerate a name beginning with `tf-lb`.
	Name interface{}
	// The specification of the Server Load Balancer instance. Default to empty string indicating it is "Shared-Performance" instance.
	// Launching "[Performance-guaranteed](https://www.alibabacloud.com/help/doc-detail/27657.htm)" instance, it is must be specified and it valid values are: "slb.s1.small", "slb.s2.small", "slb.s2.medium",
	// "slb.s3.small", "slb.s3.medium" and "slb.s3.large".
	Specification interface{}
	// The VSwitch ID to launch in.
	VswitchId interface{}
}

// The set of arguments for constructing a LoadBalancer resource.
type LoadBalancerArgs struct {
	// Valid
	// value is between 1 and 1000, If argument "internet_charge_type" is "paybytraffic", then this value will be ignore.
	Bandwidth interface{}
	Instances interface{}
	// If true, the SLB addressType will be internet, false will be intranet, Default is false. If load balancer launched in VPC, this value must be "false".
	Internet interface{}
	// Valid
	// values are `PayByBandwidth`, `PayByTraffic`. If this value is "PayByBandwidth", then argument "internet" must be "true". Default is "PayByTraffic". If load balancer launched in VPC, this value must be "PayByTraffic".
	// Before version 1.10.1, the valid values are "paybybandwidth" and "paybytraffic".
	InternetChargeType interface{}
	// The field has been deprecated from terraform-alicloud-provider [version 1.3.0](https://github.com/alibaba/terraform-provider/releases/tag/V1.3.0), and use resource `alicloud_slb_listener` to replace.
	Listeners interface{}
	// The name of the SLB. This name must be unique within your AliCloud account, can have a maximum of 80 characters,
	// must contain only alphanumeric characters or hyphens, such as "-","/",".","_", and must not begin or end with a hyphen. If not specified,
	// Terraform will autogenerate a name beginning with `tf-lb`.
	Name interface{}
	// The specification of the Server Load Balancer instance. Default to empty string indicating it is "Shared-Performance" instance.
	// Launching "[Performance-guaranteed](https://www.alibabacloud.com/help/doc-detail/27657.htm)" instance, it is must be specified and it valid values are: "slb.s1.small", "slb.s2.small", "slb.s2.medium",
	// "slb.s3.small", "slb.s3.medium" and "slb.s3.large".
	Specification interface{}
	// The VSwitch ID to launch in.
	VswitchId interface{}
}
