// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an RDS connection resource to allocate an Internet connection string for RDS instance.
// 
// > **NOTE:** Each RDS instance will allocate a intranet connnection string automatically and its prifix is RDS instance ID.
//  To avoid unnecessary conflict, please specified a internet connection prefix before applying the resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/db_connection.html.markdown.
type Connection struct {
	s *pulumi.ResourceState
}

// NewConnection registers a new resource with the given unique name, arguments, and options.
func NewConnection(ctx *pulumi.Context,
	name string, args *ConnectionArgs, opts ...pulumi.ResourceOpt) (*Connection, error) {
	if args == nil || args.InstanceId == nil {
		return nil, errors.New("missing required argument 'InstanceId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["connectionPrefix"] = nil
		inputs["instanceId"] = nil
		inputs["port"] = nil
	} else {
		inputs["connectionPrefix"] = args.ConnectionPrefix
		inputs["instanceId"] = args.InstanceId
		inputs["port"] = args.Port
	}
	inputs["connectionString"] = nil
	inputs["ipAddress"] = nil
	s, err := ctx.RegisterResource("alicloud:rds/connection:Connection", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Connection{s: s}, nil
}

// GetConnection gets an existing Connection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnection(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ConnectionState, opts ...pulumi.ResourceOpt) (*Connection, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["connectionPrefix"] = state.ConnectionPrefix
		inputs["connectionString"] = state.ConnectionString
		inputs["instanceId"] = state.InstanceId
		inputs["ipAddress"] = state.IpAddress
		inputs["port"] = state.Port
	}
	s, err := ctx.ReadResource("alicloud:rds/connection:Connection", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Connection{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Connection) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Connection) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Prefix of an Internet connection string. It must be checked for uniqueness. It may consist of lowercase letters, numbers, and underlines, and must start with a letter and have no more than 30 characters. Default to <instance_id> + 'tf'.
func (r *Connection) ConnectionPrefix() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["connectionPrefix"])
}

// Connection instance string.
func (r *Connection) ConnectionString() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["connectionString"])
}

// The Id of instance that can run database.
func (r *Connection) InstanceId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["instanceId"])
}

// The ip address of connection string.
func (r *Connection) IpAddress() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["ipAddress"])
}

// Internet connection port. Valid value: [3001-3999]. Default to 3306.
func (r *Connection) Port() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["port"])
}

// Input properties used for looking up and filtering Connection resources.
type ConnectionState struct {
	// Prefix of an Internet connection string. It must be checked for uniqueness. It may consist of lowercase letters, numbers, and underlines, and must start with a letter and have no more than 30 characters. Default to <instance_id> + 'tf'.
	ConnectionPrefix interface{}
	// Connection instance string.
	ConnectionString interface{}
	// The Id of instance that can run database.
	InstanceId interface{}
	// The ip address of connection string.
	IpAddress interface{}
	// Internet connection port. Valid value: [3001-3999]. Default to 3306.
	Port interface{}
}

// The set of arguments for constructing a Connection resource.
type ConnectionArgs struct {
	// Prefix of an Internet connection string. It must be checked for uniqueness. It may consist of lowercase letters, numbers, and underlines, and must start with a letter and have no more than 30 characters. Default to <instance_id> + 'tf'.
	ConnectionPrefix interface{}
	// The Id of instance that can run database.
	InstanceId interface{}
	// Internet connection port. Valid value: [3001-3999]. Default to 3306.
	Port interface{}
}
