// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ga

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ListenerCertificate struct {
	// The id of the certificate.
	Id *string `pulumi:"id"`
}

// ListenerCertificateInput is an input type that accepts ListenerCertificateArgs and ListenerCertificateOutput values.
// You can construct a concrete instance of `ListenerCertificateInput` via:
//
//          ListenerCertificateArgs{...}
type ListenerCertificateInput interface {
	pulumi.Input

	ToListenerCertificateOutput() ListenerCertificateOutput
	ToListenerCertificateOutputWithContext(context.Context) ListenerCertificateOutput
}

type ListenerCertificateArgs struct {
	// The id of the certificate.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ListenerCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerCertificate)(nil)).Elem()
}

func (i ListenerCertificateArgs) ToListenerCertificateOutput() ListenerCertificateOutput {
	return i.ToListenerCertificateOutputWithContext(context.Background())
}

func (i ListenerCertificateArgs) ToListenerCertificateOutputWithContext(ctx context.Context) ListenerCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerCertificateOutput)
}

// ListenerCertificateArrayInput is an input type that accepts ListenerCertificateArray and ListenerCertificateArrayOutput values.
// You can construct a concrete instance of `ListenerCertificateArrayInput` via:
//
//          ListenerCertificateArray{ ListenerCertificateArgs{...} }
type ListenerCertificateArrayInput interface {
	pulumi.Input

	ToListenerCertificateArrayOutput() ListenerCertificateArrayOutput
	ToListenerCertificateArrayOutputWithContext(context.Context) ListenerCertificateArrayOutput
}

type ListenerCertificateArray []ListenerCertificateInput

func (ListenerCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerCertificate)(nil)).Elem()
}

func (i ListenerCertificateArray) ToListenerCertificateArrayOutput() ListenerCertificateArrayOutput {
	return i.ToListenerCertificateArrayOutputWithContext(context.Background())
}

func (i ListenerCertificateArray) ToListenerCertificateArrayOutputWithContext(ctx context.Context) ListenerCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerCertificateArrayOutput)
}

type ListenerCertificateOutput struct{ *pulumi.OutputState }

func (ListenerCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerCertificate)(nil)).Elem()
}

func (o ListenerCertificateOutput) ToListenerCertificateOutput() ListenerCertificateOutput {
	return o
}

func (o ListenerCertificateOutput) ToListenerCertificateOutputWithContext(ctx context.Context) ListenerCertificateOutput {
	return o
}

// The id of the certificate.
func (o ListenerCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ListenerCertificateArrayOutput struct{ *pulumi.OutputState }

func (ListenerCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerCertificate)(nil)).Elem()
}

func (o ListenerCertificateArrayOutput) ToListenerCertificateArrayOutput() ListenerCertificateArrayOutput {
	return o
}

func (o ListenerCertificateArrayOutput) ToListenerCertificateArrayOutputWithContext(ctx context.Context) ListenerCertificateArrayOutput {
	return o
}

func (o ListenerCertificateArrayOutput) Index(i pulumi.IntInput) ListenerCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerCertificate {
		return vs[0].([]ListenerCertificate)[vs[1].(int)]
	}).(ListenerCertificateOutput)
}

type ListenerPortRange struct {
	// The initial listening port used to receive requests and forward them to terminal nodes.
	FromPort int `pulumi:"fromPort"`
	// The end listening port used to receive requests and forward them to terminal nodes.
	ToPort int `pulumi:"toPort"`
}

// ListenerPortRangeInput is an input type that accepts ListenerPortRangeArgs and ListenerPortRangeOutput values.
// You can construct a concrete instance of `ListenerPortRangeInput` via:
//
//          ListenerPortRangeArgs{...}
type ListenerPortRangeInput interface {
	pulumi.Input

	ToListenerPortRangeOutput() ListenerPortRangeOutput
	ToListenerPortRangeOutputWithContext(context.Context) ListenerPortRangeOutput
}

type ListenerPortRangeArgs struct {
	// The initial listening port used to receive requests and forward them to terminal nodes.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The end listening port used to receive requests and forward them to terminal nodes.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (ListenerPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerPortRange)(nil)).Elem()
}

func (i ListenerPortRangeArgs) ToListenerPortRangeOutput() ListenerPortRangeOutput {
	return i.ToListenerPortRangeOutputWithContext(context.Background())
}

func (i ListenerPortRangeArgs) ToListenerPortRangeOutputWithContext(ctx context.Context) ListenerPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerPortRangeOutput)
}

// ListenerPortRangeArrayInput is an input type that accepts ListenerPortRangeArray and ListenerPortRangeArrayOutput values.
// You can construct a concrete instance of `ListenerPortRangeArrayInput` via:
//
//          ListenerPortRangeArray{ ListenerPortRangeArgs{...} }
type ListenerPortRangeArrayInput interface {
	pulumi.Input

	ToListenerPortRangeArrayOutput() ListenerPortRangeArrayOutput
	ToListenerPortRangeArrayOutputWithContext(context.Context) ListenerPortRangeArrayOutput
}

type ListenerPortRangeArray []ListenerPortRangeInput

func (ListenerPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerPortRange)(nil)).Elem()
}

func (i ListenerPortRangeArray) ToListenerPortRangeArrayOutput() ListenerPortRangeArrayOutput {
	return i.ToListenerPortRangeArrayOutputWithContext(context.Background())
}

func (i ListenerPortRangeArray) ToListenerPortRangeArrayOutputWithContext(ctx context.Context) ListenerPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerPortRangeArrayOutput)
}

type ListenerPortRangeOutput struct{ *pulumi.OutputState }

func (ListenerPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerPortRange)(nil)).Elem()
}

func (o ListenerPortRangeOutput) ToListenerPortRangeOutput() ListenerPortRangeOutput {
	return o
}

func (o ListenerPortRangeOutput) ToListenerPortRangeOutputWithContext(ctx context.Context) ListenerPortRangeOutput {
	return o
}

// The initial listening port used to receive requests and forward them to terminal nodes.
func (o ListenerPortRangeOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v ListenerPortRange) int { return v.FromPort }).(pulumi.IntOutput)
}

// The end listening port used to receive requests and forward them to terminal nodes.
func (o ListenerPortRangeOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v ListenerPortRange) int { return v.ToPort }).(pulumi.IntOutput)
}

type ListenerPortRangeArrayOutput struct{ *pulumi.OutputState }

func (ListenerPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerPortRange)(nil)).Elem()
}

func (o ListenerPortRangeArrayOutput) ToListenerPortRangeArrayOutput() ListenerPortRangeArrayOutput {
	return o
}

func (o ListenerPortRangeArrayOutput) ToListenerPortRangeArrayOutputWithContext(ctx context.Context) ListenerPortRangeArrayOutput {
	return o
}

func (o ListenerPortRangeArrayOutput) Index(i pulumi.IntInput) ListenerPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerPortRange {
		return vs[0].([]ListenerPortRange)[vs[1].(int)]
	}).(ListenerPortRangeOutput)
}

type GetAcceleratorsAccelerator struct {
	// The ID of the GA instance to query.
	AcceleratorId string `pulumi:"acceleratorId"`
	// The Name of the GA instance.
	AcceleratorName string `pulumi:"acceleratorName"`
	// Details of the basic bandwidth package bound to the global acceleration instance.
	BasicBandwidthPackages []GetAcceleratorsAcceleratorBasicBandwidthPackage `pulumi:"basicBandwidthPackages"`
	// The cloud enterprise network instance ID bound to the global acceleration instance.
	CenId string `pulumi:"cenId"`
	// Details of the cross-domain acceleration package bound to the global acceleration instance.
	CrossDomainBandwidthPackages []GetAcceleratorsAcceleratorCrossDomainBandwidthPackage `pulumi:"crossDomainBandwidthPackages"`
	// DDoS high-defense instance ID that is unbound from the global acceleration instance.
	DdosId string `pulumi:"ddosId"`
	// Descriptive information of the global acceleration instance.
	Description string `pulumi:"description"`
	// CNAME address assigned by Global Acceleration instance.
	DnsName string `pulumi:"dnsName"`
	// Time when the global acceleration instance expires.
	ExpiredTime int `pulumi:"expiredTime"`
	// The ID of the Accelerator.
	Id string `pulumi:"id"`
	// The Payment Typethe GA instance.
	PaymentType string `pulumi:"paymentType"`
	// CNAME of the Global Acceleration Linkage DDoS High Defense Instance.
	SecondDnsName string `pulumi:"secondDnsName"`
	// The instance type of the GA instance.
	Spec string `pulumi:"spec"`
	// The status of the GA instance.
	Status string `pulumi:"status"`
}

// GetAcceleratorsAcceleratorInput is an input type that accepts GetAcceleratorsAcceleratorArgs and GetAcceleratorsAcceleratorOutput values.
// You can construct a concrete instance of `GetAcceleratorsAcceleratorInput` via:
//
//          GetAcceleratorsAcceleratorArgs{...}
type GetAcceleratorsAcceleratorInput interface {
	pulumi.Input

	ToGetAcceleratorsAcceleratorOutput() GetAcceleratorsAcceleratorOutput
	ToGetAcceleratorsAcceleratorOutputWithContext(context.Context) GetAcceleratorsAcceleratorOutput
}

type GetAcceleratorsAcceleratorArgs struct {
	// The ID of the GA instance to query.
	AcceleratorId pulumi.StringInput `pulumi:"acceleratorId"`
	// The Name of the GA instance.
	AcceleratorName pulumi.StringInput `pulumi:"acceleratorName"`
	// Details of the basic bandwidth package bound to the global acceleration instance.
	BasicBandwidthPackages GetAcceleratorsAcceleratorBasicBandwidthPackageArrayInput `pulumi:"basicBandwidthPackages"`
	// The cloud enterprise network instance ID bound to the global acceleration instance.
	CenId pulumi.StringInput `pulumi:"cenId"`
	// Details of the cross-domain acceleration package bound to the global acceleration instance.
	CrossDomainBandwidthPackages GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayInput `pulumi:"crossDomainBandwidthPackages"`
	// DDoS high-defense instance ID that is unbound from the global acceleration instance.
	DdosId pulumi.StringInput `pulumi:"ddosId"`
	// Descriptive information of the global acceleration instance.
	Description pulumi.StringInput `pulumi:"description"`
	// CNAME address assigned by Global Acceleration instance.
	DnsName pulumi.StringInput `pulumi:"dnsName"`
	// Time when the global acceleration instance expires.
	ExpiredTime pulumi.IntInput `pulumi:"expiredTime"`
	// The ID of the Accelerator.
	Id pulumi.StringInput `pulumi:"id"`
	// The Payment Typethe GA instance.
	PaymentType pulumi.StringInput `pulumi:"paymentType"`
	// CNAME of the Global Acceleration Linkage DDoS High Defense Instance.
	SecondDnsName pulumi.StringInput `pulumi:"secondDnsName"`
	// The instance type of the GA instance.
	Spec pulumi.StringInput `pulumi:"spec"`
	// The status of the GA instance.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetAcceleratorsAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorsAccelerator)(nil)).Elem()
}

func (i GetAcceleratorsAcceleratorArgs) ToGetAcceleratorsAcceleratorOutput() GetAcceleratorsAcceleratorOutput {
	return i.ToGetAcceleratorsAcceleratorOutputWithContext(context.Background())
}

func (i GetAcceleratorsAcceleratorArgs) ToGetAcceleratorsAcceleratorOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorsAcceleratorOutput)
}

// GetAcceleratorsAcceleratorArrayInput is an input type that accepts GetAcceleratorsAcceleratorArray and GetAcceleratorsAcceleratorArrayOutput values.
// You can construct a concrete instance of `GetAcceleratorsAcceleratorArrayInput` via:
//
//          GetAcceleratorsAcceleratorArray{ GetAcceleratorsAcceleratorArgs{...} }
type GetAcceleratorsAcceleratorArrayInput interface {
	pulumi.Input

	ToGetAcceleratorsAcceleratorArrayOutput() GetAcceleratorsAcceleratorArrayOutput
	ToGetAcceleratorsAcceleratorArrayOutputWithContext(context.Context) GetAcceleratorsAcceleratorArrayOutput
}

type GetAcceleratorsAcceleratorArray []GetAcceleratorsAcceleratorInput

func (GetAcceleratorsAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorsAccelerator)(nil)).Elem()
}

func (i GetAcceleratorsAcceleratorArray) ToGetAcceleratorsAcceleratorArrayOutput() GetAcceleratorsAcceleratorArrayOutput {
	return i.ToGetAcceleratorsAcceleratorArrayOutputWithContext(context.Background())
}

func (i GetAcceleratorsAcceleratorArray) ToGetAcceleratorsAcceleratorArrayOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorsAcceleratorArrayOutput)
}

type GetAcceleratorsAcceleratorOutput struct{ *pulumi.OutputState }

func (GetAcceleratorsAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorsAccelerator)(nil)).Elem()
}

func (o GetAcceleratorsAcceleratorOutput) ToGetAcceleratorsAcceleratorOutput() GetAcceleratorsAcceleratorOutput {
	return o
}

func (o GetAcceleratorsAcceleratorOutput) ToGetAcceleratorsAcceleratorOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorOutput {
	return o
}

// The ID of the GA instance to query.
func (o GetAcceleratorsAcceleratorOutput) AcceleratorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.AcceleratorId }).(pulumi.StringOutput)
}

// The Name of the GA instance.
func (o GetAcceleratorsAcceleratorOutput) AcceleratorName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.AcceleratorName }).(pulumi.StringOutput)
}

// Details of the basic bandwidth package bound to the global acceleration instance.
func (o GetAcceleratorsAcceleratorOutput) BasicBandwidthPackages() GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) []GetAcceleratorsAcceleratorBasicBandwidthPackage {
		return v.BasicBandwidthPackages
	}).(GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput)
}

// The cloud enterprise network instance ID bound to the global acceleration instance.
func (o GetAcceleratorsAcceleratorOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.CenId }).(pulumi.StringOutput)
}

// Details of the cross-domain acceleration package bound to the global acceleration instance.
func (o GetAcceleratorsAcceleratorOutput) CrossDomainBandwidthPackages() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) []GetAcceleratorsAcceleratorCrossDomainBandwidthPackage {
		return v.CrossDomainBandwidthPackages
	}).(GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput)
}

// DDoS high-defense instance ID that is unbound from the global acceleration instance.
func (o GetAcceleratorsAcceleratorOutput) DdosId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.DdosId }).(pulumi.StringOutput)
}

// Descriptive information of the global acceleration instance.
func (o GetAcceleratorsAcceleratorOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.Description }).(pulumi.StringOutput)
}

// CNAME address assigned by Global Acceleration instance.
func (o GetAcceleratorsAcceleratorOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.DnsName }).(pulumi.StringOutput)
}

// Time when the global acceleration instance expires.
func (o GetAcceleratorsAcceleratorOutput) ExpiredTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) int { return v.ExpiredTime }).(pulumi.IntOutput)
}

// The ID of the Accelerator.
func (o GetAcceleratorsAcceleratorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.Id }).(pulumi.StringOutput)
}

// The Payment Typethe GA instance.
func (o GetAcceleratorsAcceleratorOutput) PaymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.PaymentType }).(pulumi.StringOutput)
}

// CNAME of the Global Acceleration Linkage DDoS High Defense Instance.
func (o GetAcceleratorsAcceleratorOutput) SecondDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.SecondDnsName }).(pulumi.StringOutput)
}

// The instance type of the GA instance.
func (o GetAcceleratorsAcceleratorOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.Spec }).(pulumi.StringOutput)
}

// The status of the GA instance.
func (o GetAcceleratorsAcceleratorOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAccelerator) string { return v.Status }).(pulumi.StringOutput)
}

type GetAcceleratorsAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (GetAcceleratorsAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorsAccelerator)(nil)).Elem()
}

func (o GetAcceleratorsAcceleratorArrayOutput) ToGetAcceleratorsAcceleratorArrayOutput() GetAcceleratorsAcceleratorArrayOutput {
	return o
}

func (o GetAcceleratorsAcceleratorArrayOutput) ToGetAcceleratorsAcceleratorArrayOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorArrayOutput {
	return o
}

func (o GetAcceleratorsAcceleratorArrayOutput) Index(i pulumi.IntInput) GetAcceleratorsAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAcceleratorsAccelerator {
		return vs[0].([]GetAcceleratorsAccelerator)[vs[1].(int)]
	}).(GetAcceleratorsAcceleratorOutput)
}

type GetAcceleratorsAcceleratorBasicBandwidthPackage struct {
	// Bandwidth value of cross-domain acceleration package.
	Bandwidth int `pulumi:"bandwidth"`
	// The bandwidth type of the basic bandwidth package.
	BandwidthType string `pulumi:"bandwidthType"`
	// Instance ID of the cross-domain acceleration package.
	InstanceId string `pulumi:"instanceId"`
}

// GetAcceleratorsAcceleratorBasicBandwidthPackageInput is an input type that accepts GetAcceleratorsAcceleratorBasicBandwidthPackageArgs and GetAcceleratorsAcceleratorBasicBandwidthPackageOutput values.
// You can construct a concrete instance of `GetAcceleratorsAcceleratorBasicBandwidthPackageInput` via:
//
//          GetAcceleratorsAcceleratorBasicBandwidthPackageArgs{...}
type GetAcceleratorsAcceleratorBasicBandwidthPackageInput interface {
	pulumi.Input

	ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutput() GetAcceleratorsAcceleratorBasicBandwidthPackageOutput
	ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutputWithContext(context.Context) GetAcceleratorsAcceleratorBasicBandwidthPackageOutput
}

type GetAcceleratorsAcceleratorBasicBandwidthPackageArgs struct {
	// Bandwidth value of cross-domain acceleration package.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// The bandwidth type of the basic bandwidth package.
	BandwidthType pulumi.StringInput `pulumi:"bandwidthType"`
	// Instance ID of the cross-domain acceleration package.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
}

func (GetAcceleratorsAcceleratorBasicBandwidthPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorsAcceleratorBasicBandwidthPackage)(nil)).Elem()
}

func (i GetAcceleratorsAcceleratorBasicBandwidthPackageArgs) ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutput() GetAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return i.ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutputWithContext(context.Background())
}

func (i GetAcceleratorsAcceleratorBasicBandwidthPackageArgs) ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorsAcceleratorBasicBandwidthPackageOutput)
}

// GetAcceleratorsAcceleratorBasicBandwidthPackageArrayInput is an input type that accepts GetAcceleratorsAcceleratorBasicBandwidthPackageArray and GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput values.
// You can construct a concrete instance of `GetAcceleratorsAcceleratorBasicBandwidthPackageArrayInput` via:
//
//          GetAcceleratorsAcceleratorBasicBandwidthPackageArray{ GetAcceleratorsAcceleratorBasicBandwidthPackageArgs{...} }
type GetAcceleratorsAcceleratorBasicBandwidthPackageArrayInput interface {
	pulumi.Input

	ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput() GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput
	ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutputWithContext(context.Context) GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput
}

type GetAcceleratorsAcceleratorBasicBandwidthPackageArray []GetAcceleratorsAcceleratorBasicBandwidthPackageInput

func (GetAcceleratorsAcceleratorBasicBandwidthPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorsAcceleratorBasicBandwidthPackage)(nil)).Elem()
}

func (i GetAcceleratorsAcceleratorBasicBandwidthPackageArray) ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput() GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return i.ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutputWithContext(context.Background())
}

func (i GetAcceleratorsAcceleratorBasicBandwidthPackageArray) ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput)
}

type GetAcceleratorsAcceleratorBasicBandwidthPackageOutput struct{ *pulumi.OutputState }

func (GetAcceleratorsAcceleratorBasicBandwidthPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorsAcceleratorBasicBandwidthPackage)(nil)).Elem()
}

func (o GetAcceleratorsAcceleratorBasicBandwidthPackageOutput) ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutput() GetAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return o
}

func (o GetAcceleratorsAcceleratorBasicBandwidthPackageOutput) ToGetAcceleratorsAcceleratorBasicBandwidthPackageOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return o
}

// Bandwidth value of cross-domain acceleration package.
func (o GetAcceleratorsAcceleratorBasicBandwidthPackageOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetAcceleratorsAcceleratorBasicBandwidthPackage) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// The bandwidth type of the basic bandwidth package.
func (o GetAcceleratorsAcceleratorBasicBandwidthPackageOutput) BandwidthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAcceleratorBasicBandwidthPackage) string { return v.BandwidthType }).(pulumi.StringOutput)
}

// Instance ID of the cross-domain acceleration package.
func (o GetAcceleratorsAcceleratorBasicBandwidthPackageOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAcceleratorBasicBandwidthPackage) string { return v.InstanceId }).(pulumi.StringOutput)
}

type GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput struct{ *pulumi.OutputState }

func (GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorsAcceleratorBasicBandwidthPackage)(nil)).Elem()
}

func (o GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput) ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput() GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return o
}

func (o GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput) ToGetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput {
	return o
}

func (o GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput) Index(i pulumi.IntInput) GetAcceleratorsAcceleratorBasicBandwidthPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAcceleratorsAcceleratorBasicBandwidthPackage {
		return vs[0].([]GetAcceleratorsAcceleratorBasicBandwidthPackage)[vs[1].(int)]
	}).(GetAcceleratorsAcceleratorBasicBandwidthPackageOutput)
}

type GetAcceleratorsAcceleratorCrossDomainBandwidthPackage struct {
	// Bandwidth value of cross-domain acceleration package.
	Bandwidth int `pulumi:"bandwidth"`
	// Instance ID of the cross-domain acceleration package.
	InstanceId string `pulumi:"instanceId"`
}

// GetAcceleratorsAcceleratorCrossDomainBandwidthPackageInput is an input type that accepts GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs and GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput values.
// You can construct a concrete instance of `GetAcceleratorsAcceleratorCrossDomainBandwidthPackageInput` via:
//
//          GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs{...}
type GetAcceleratorsAcceleratorCrossDomainBandwidthPackageInput interface {
	pulumi.Input

	ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput
	ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutputWithContext(context.Context) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput
}

type GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs struct {
	// Bandwidth value of cross-domain acceleration package.
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// Instance ID of the cross-domain acceleration package.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
}

func (GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorsAcceleratorCrossDomainBandwidthPackage)(nil)).Elem()
}

func (i GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return i.ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutputWithContext(context.Background())
}

func (i GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput)
}

// GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayInput is an input type that accepts GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray and GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput values.
// You can construct a concrete instance of `GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayInput` via:
//
//          GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray{ GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArgs{...} }
type GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayInput interface {
	pulumi.Input

	ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput
	ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutputWithContext(context.Context) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput
}

type GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray []GetAcceleratorsAcceleratorCrossDomainBandwidthPackageInput

func (GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorsAcceleratorCrossDomainBandwidthPackage)(nil)).Elem()
}

func (i GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return i.ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutputWithContext(context.Background())
}

func (i GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArray) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput)
}

type GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput struct{ *pulumi.OutputState }

func (GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAcceleratorsAcceleratorCrossDomainBandwidthPackage)(nil)).Elem()
}

func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return o
}

func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return o
}

// Bandwidth value of cross-domain acceleration package.
func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetAcceleratorsAcceleratorCrossDomainBandwidthPackage) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// Instance ID of the cross-domain acceleration package.
func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAcceleratorsAcceleratorCrossDomainBandwidthPackage) string { return v.InstanceId }).(pulumi.StringOutput)
}

type GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput struct{ *pulumi.OutputState }

func (GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAcceleratorsAcceleratorCrossDomainBandwidthPackage)(nil)).Elem()
}

func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput() GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return o
}

func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput) ToGetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutputWithContext(ctx context.Context) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput {
	return o
}

func (o GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput) Index(i pulumi.IntInput) GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAcceleratorsAcceleratorCrossDomainBandwidthPackage {
		return vs[0].([]GetAcceleratorsAcceleratorCrossDomainBandwidthPackage)[vs[1].(int)]
	}).(GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput)
}

type GetListenersListener struct {
	// The certificates of the listener.
	Certificates []GetListenersListenerCertificate `pulumi:"certificates"`
	// The clientAffinity of the listener.
	ClientAffinity string `pulumi:"clientAffinity"`
	// The description of the listener.
	Description string `pulumi:"description"`
	// The ID of the Listener.
	Id string `pulumi:"id"`
	// The listenerId of the listener.
	ListenerId string `pulumi:"listenerId"`
	// The name of the listener. The length of the name is 2-128 characters. It starts with uppercase and lowercase letters or Chinese characters. It can contain numbers and underscores and dashes.
	Name string `pulumi:"name"`
	// The portRanges of the listener.
	PortRanges []GetListenersListenerPortRange `pulumi:"portRanges"`
	// Type of network transport protocol monitored.
	Protocol string `pulumi:"protocol"`
	// The status of the listener.
	Status string `pulumi:"status"`
}

// GetListenersListenerInput is an input type that accepts GetListenersListenerArgs and GetListenersListenerOutput values.
// You can construct a concrete instance of `GetListenersListenerInput` via:
//
//          GetListenersListenerArgs{...}
type GetListenersListenerInput interface {
	pulumi.Input

	ToGetListenersListenerOutput() GetListenersListenerOutput
	ToGetListenersListenerOutputWithContext(context.Context) GetListenersListenerOutput
}

type GetListenersListenerArgs struct {
	// The certificates of the listener.
	Certificates GetListenersListenerCertificateArrayInput `pulumi:"certificates"`
	// The clientAffinity of the listener.
	ClientAffinity pulumi.StringInput `pulumi:"clientAffinity"`
	// The description of the listener.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Listener.
	Id pulumi.StringInput `pulumi:"id"`
	// The listenerId of the listener.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// The name of the listener. The length of the name is 2-128 characters. It starts with uppercase and lowercase letters or Chinese characters. It can contain numbers and underscores and dashes.
	Name pulumi.StringInput `pulumi:"name"`
	// The portRanges of the listener.
	PortRanges GetListenersListenerPortRangeArrayInput `pulumi:"portRanges"`
	// Type of network transport protocol monitored.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The status of the listener.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetListenersListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListener)(nil)).Elem()
}

func (i GetListenersListenerArgs) ToGetListenersListenerOutput() GetListenersListenerOutput {
	return i.ToGetListenersListenerOutputWithContext(context.Background())
}

func (i GetListenersListenerArgs) ToGetListenersListenerOutputWithContext(ctx context.Context) GetListenersListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerOutput)
}

// GetListenersListenerArrayInput is an input type that accepts GetListenersListenerArray and GetListenersListenerArrayOutput values.
// You can construct a concrete instance of `GetListenersListenerArrayInput` via:
//
//          GetListenersListenerArray{ GetListenersListenerArgs{...} }
type GetListenersListenerArrayInput interface {
	pulumi.Input

	ToGetListenersListenerArrayOutput() GetListenersListenerArrayOutput
	ToGetListenersListenerArrayOutputWithContext(context.Context) GetListenersListenerArrayOutput
}

type GetListenersListenerArray []GetListenersListenerInput

func (GetListenersListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListener)(nil)).Elem()
}

func (i GetListenersListenerArray) ToGetListenersListenerArrayOutput() GetListenersListenerArrayOutput {
	return i.ToGetListenersListenerArrayOutputWithContext(context.Background())
}

func (i GetListenersListenerArray) ToGetListenersListenerArrayOutputWithContext(ctx context.Context) GetListenersListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerArrayOutput)
}

type GetListenersListenerOutput struct{ *pulumi.OutputState }

func (GetListenersListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListener)(nil)).Elem()
}

func (o GetListenersListenerOutput) ToGetListenersListenerOutput() GetListenersListenerOutput {
	return o
}

func (o GetListenersListenerOutput) ToGetListenersListenerOutputWithContext(ctx context.Context) GetListenersListenerOutput {
	return o
}

// The certificates of the listener.
func (o GetListenersListenerOutput) Certificates() GetListenersListenerCertificateArrayOutput {
	return o.ApplyT(func(v GetListenersListener) []GetListenersListenerCertificate { return v.Certificates }).(GetListenersListenerCertificateArrayOutput)
}

// The clientAffinity of the listener.
func (o GetListenersListenerOutput) ClientAffinity() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.ClientAffinity }).(pulumi.StringOutput)
}

// The description of the listener.
func (o GetListenersListenerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Listener.
func (o GetListenersListenerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Id }).(pulumi.StringOutput)
}

// The listenerId of the listener.
func (o GetListenersListenerOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.ListenerId }).(pulumi.StringOutput)
}

// The name of the listener. The length of the name is 2-128 characters. It starts with uppercase and lowercase letters or Chinese characters. It can contain numbers and underscores and dashes.
func (o GetListenersListenerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Name }).(pulumi.StringOutput)
}

// The portRanges of the listener.
func (o GetListenersListenerOutput) PortRanges() GetListenersListenerPortRangeArrayOutput {
	return o.ApplyT(func(v GetListenersListener) []GetListenersListenerPortRange { return v.PortRanges }).(GetListenersListenerPortRangeArrayOutput)
}

// Type of network transport protocol monitored.
func (o GetListenersListenerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Protocol }).(pulumi.StringOutput)
}

// The status of the listener.
func (o GetListenersListenerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListener) string { return v.Status }).(pulumi.StringOutput)
}

type GetListenersListenerArrayOutput struct{ *pulumi.OutputState }

func (GetListenersListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListener)(nil)).Elem()
}

func (o GetListenersListenerArrayOutput) ToGetListenersListenerArrayOutput() GetListenersListenerArrayOutput {
	return o
}

func (o GetListenersListenerArrayOutput) ToGetListenersListenerArrayOutputWithContext(ctx context.Context) GetListenersListenerArrayOutput {
	return o
}

func (o GetListenersListenerArrayOutput) Index(i pulumi.IntInput) GetListenersListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenersListener {
		return vs[0].([]GetListenersListener)[vs[1].(int)]
	}).(GetListenersListenerOutput)
}

type GetListenersListenerCertificate struct {
	// The ID of the Listener.
	Id string `pulumi:"id"`
	// The type of the certificate.
	Type string `pulumi:"type"`
}

// GetListenersListenerCertificateInput is an input type that accepts GetListenersListenerCertificateArgs and GetListenersListenerCertificateOutput values.
// You can construct a concrete instance of `GetListenersListenerCertificateInput` via:
//
//          GetListenersListenerCertificateArgs{...}
type GetListenersListenerCertificateInput interface {
	pulumi.Input

	ToGetListenersListenerCertificateOutput() GetListenersListenerCertificateOutput
	ToGetListenersListenerCertificateOutputWithContext(context.Context) GetListenersListenerCertificateOutput
}

type GetListenersListenerCertificateArgs struct {
	// The ID of the Listener.
	Id pulumi.StringInput `pulumi:"id"`
	// The type of the certificate.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetListenersListenerCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListenerCertificate)(nil)).Elem()
}

func (i GetListenersListenerCertificateArgs) ToGetListenersListenerCertificateOutput() GetListenersListenerCertificateOutput {
	return i.ToGetListenersListenerCertificateOutputWithContext(context.Background())
}

func (i GetListenersListenerCertificateArgs) ToGetListenersListenerCertificateOutputWithContext(ctx context.Context) GetListenersListenerCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerCertificateOutput)
}

// GetListenersListenerCertificateArrayInput is an input type that accepts GetListenersListenerCertificateArray and GetListenersListenerCertificateArrayOutput values.
// You can construct a concrete instance of `GetListenersListenerCertificateArrayInput` via:
//
//          GetListenersListenerCertificateArray{ GetListenersListenerCertificateArgs{...} }
type GetListenersListenerCertificateArrayInput interface {
	pulumi.Input

	ToGetListenersListenerCertificateArrayOutput() GetListenersListenerCertificateArrayOutput
	ToGetListenersListenerCertificateArrayOutputWithContext(context.Context) GetListenersListenerCertificateArrayOutput
}

type GetListenersListenerCertificateArray []GetListenersListenerCertificateInput

func (GetListenersListenerCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListenerCertificate)(nil)).Elem()
}

func (i GetListenersListenerCertificateArray) ToGetListenersListenerCertificateArrayOutput() GetListenersListenerCertificateArrayOutput {
	return i.ToGetListenersListenerCertificateArrayOutputWithContext(context.Background())
}

func (i GetListenersListenerCertificateArray) ToGetListenersListenerCertificateArrayOutputWithContext(ctx context.Context) GetListenersListenerCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerCertificateArrayOutput)
}

type GetListenersListenerCertificateOutput struct{ *pulumi.OutputState }

func (GetListenersListenerCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListenerCertificate)(nil)).Elem()
}

func (o GetListenersListenerCertificateOutput) ToGetListenersListenerCertificateOutput() GetListenersListenerCertificateOutput {
	return o
}

func (o GetListenersListenerCertificateOutput) ToGetListenersListenerCertificateOutputWithContext(ctx context.Context) GetListenersListenerCertificateOutput {
	return o
}

// The ID of the Listener.
func (o GetListenersListenerCertificateOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListenerCertificate) string { return v.Id }).(pulumi.StringOutput)
}

// The type of the certificate.
func (o GetListenersListenerCertificateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenersListenerCertificate) string { return v.Type }).(pulumi.StringOutput)
}

type GetListenersListenerCertificateArrayOutput struct{ *pulumi.OutputState }

func (GetListenersListenerCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListenerCertificate)(nil)).Elem()
}

func (o GetListenersListenerCertificateArrayOutput) ToGetListenersListenerCertificateArrayOutput() GetListenersListenerCertificateArrayOutput {
	return o
}

func (o GetListenersListenerCertificateArrayOutput) ToGetListenersListenerCertificateArrayOutputWithContext(ctx context.Context) GetListenersListenerCertificateArrayOutput {
	return o
}

func (o GetListenersListenerCertificateArrayOutput) Index(i pulumi.IntInput) GetListenersListenerCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenersListenerCertificate {
		return vs[0].([]GetListenersListenerCertificate)[vs[1].(int)]
	}).(GetListenersListenerCertificateOutput)
}

type GetListenersListenerPortRange struct {
	// The initial listening port used to receive requests and forward them to terminal nodes.
	FromPort int `pulumi:"fromPort"`
	// The end listening port used to receive requests and forward them to terminal nodes.
	ToPort int `pulumi:"toPort"`
}

// GetListenersListenerPortRangeInput is an input type that accepts GetListenersListenerPortRangeArgs and GetListenersListenerPortRangeOutput values.
// You can construct a concrete instance of `GetListenersListenerPortRangeInput` via:
//
//          GetListenersListenerPortRangeArgs{...}
type GetListenersListenerPortRangeInput interface {
	pulumi.Input

	ToGetListenersListenerPortRangeOutput() GetListenersListenerPortRangeOutput
	ToGetListenersListenerPortRangeOutputWithContext(context.Context) GetListenersListenerPortRangeOutput
}

type GetListenersListenerPortRangeArgs struct {
	// The initial listening port used to receive requests and forward them to terminal nodes.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The end listening port used to receive requests and forward them to terminal nodes.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (GetListenersListenerPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListenerPortRange)(nil)).Elem()
}

func (i GetListenersListenerPortRangeArgs) ToGetListenersListenerPortRangeOutput() GetListenersListenerPortRangeOutput {
	return i.ToGetListenersListenerPortRangeOutputWithContext(context.Background())
}

func (i GetListenersListenerPortRangeArgs) ToGetListenersListenerPortRangeOutputWithContext(ctx context.Context) GetListenersListenerPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerPortRangeOutput)
}

// GetListenersListenerPortRangeArrayInput is an input type that accepts GetListenersListenerPortRangeArray and GetListenersListenerPortRangeArrayOutput values.
// You can construct a concrete instance of `GetListenersListenerPortRangeArrayInput` via:
//
//          GetListenersListenerPortRangeArray{ GetListenersListenerPortRangeArgs{...} }
type GetListenersListenerPortRangeArrayInput interface {
	pulumi.Input

	ToGetListenersListenerPortRangeArrayOutput() GetListenersListenerPortRangeArrayOutput
	ToGetListenersListenerPortRangeArrayOutputWithContext(context.Context) GetListenersListenerPortRangeArrayOutput
}

type GetListenersListenerPortRangeArray []GetListenersListenerPortRangeInput

func (GetListenersListenerPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListenerPortRange)(nil)).Elem()
}

func (i GetListenersListenerPortRangeArray) ToGetListenersListenerPortRangeArrayOutput() GetListenersListenerPortRangeArrayOutput {
	return i.ToGetListenersListenerPortRangeArrayOutputWithContext(context.Background())
}

func (i GetListenersListenerPortRangeArray) ToGetListenersListenerPortRangeArrayOutputWithContext(ctx context.Context) GetListenersListenerPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenersListenerPortRangeArrayOutput)
}

type GetListenersListenerPortRangeOutput struct{ *pulumi.OutputState }

func (GetListenersListenerPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenersListenerPortRange)(nil)).Elem()
}

func (o GetListenersListenerPortRangeOutput) ToGetListenersListenerPortRangeOutput() GetListenersListenerPortRangeOutput {
	return o
}

func (o GetListenersListenerPortRangeOutput) ToGetListenersListenerPortRangeOutputWithContext(ctx context.Context) GetListenersListenerPortRangeOutput {
	return o
}

// The initial listening port used to receive requests and forward them to terminal nodes.
func (o GetListenersListenerPortRangeOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersListenerPortRange) int { return v.FromPort }).(pulumi.IntOutput)
}

// The end listening port used to receive requests and forward them to terminal nodes.
func (o GetListenersListenerPortRangeOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenersListenerPortRange) int { return v.ToPort }).(pulumi.IntOutput)
}

type GetListenersListenerPortRangeArrayOutput struct{ *pulumi.OutputState }

func (GetListenersListenerPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenersListenerPortRange)(nil)).Elem()
}

func (o GetListenersListenerPortRangeArrayOutput) ToGetListenersListenerPortRangeArrayOutput() GetListenersListenerPortRangeArrayOutput {
	return o
}

func (o GetListenersListenerPortRangeArrayOutput) ToGetListenersListenerPortRangeArrayOutputWithContext(ctx context.Context) GetListenersListenerPortRangeArrayOutput {
	return o
}

func (o GetListenersListenerPortRangeArrayOutput) Index(i pulumi.IntInput) GetListenersListenerPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenersListenerPortRange {
		return vs[0].([]GetListenersListenerPortRange)[vs[1].(int)]
	}).(GetListenersListenerPortRangeOutput)
}

func init() {
	pulumi.RegisterOutputType(ListenerCertificateOutput{})
	pulumi.RegisterOutputType(ListenerCertificateArrayOutput{})
	pulumi.RegisterOutputType(ListenerPortRangeOutput{})
	pulumi.RegisterOutputType(ListenerPortRangeArrayOutput{})
	pulumi.RegisterOutputType(GetAcceleratorsAcceleratorOutput{})
	pulumi.RegisterOutputType(GetAcceleratorsAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(GetAcceleratorsAcceleratorBasicBandwidthPackageOutput{})
	pulumi.RegisterOutputType(GetAcceleratorsAcceleratorBasicBandwidthPackageArrayOutput{})
	pulumi.RegisterOutputType(GetAcceleratorsAcceleratorCrossDomainBandwidthPackageOutput{})
	pulumi.RegisterOutputType(GetAcceleratorsAcceleratorCrossDomainBandwidthPackageArrayOutput{})
	pulumi.RegisterOutputType(GetListenersListenerOutput{})
	pulumi.RegisterOutputType(GetListenersListenerArrayOutput{})
	pulumi.RegisterOutputType(GetListenersListenerCertificateOutput{})
	pulumi.RegisterOutputType(GetListenersListenerCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetListenersListenerPortRangeOutput{})
	pulumi.RegisterOutputType(GetListenersListenerPortRangeArrayOutput{})
}
