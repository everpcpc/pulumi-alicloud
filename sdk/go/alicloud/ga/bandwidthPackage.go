// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ga

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Global Accelerator (GA) Bandwidth Package resource.
//
// For information about Global Accelerator (GA) Bandwidth Package and how to use it, see [What is Bandwidth Package](https://www.alibabacloud.com/help/en/doc-detail/153241.htm).
//
// > **NOTE:** Available in v1.112.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/ga"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ga.NewBandwidthPackage(ctx, "example", &ga.BandwidthPackageArgs{
// 			AutoPay:       pulumi.Bool(true),
// 			Bandwidth:     pulumi.Int(20),
// 			BandwidthType: pulumi.String("Basic"),
// 			Duration:      pulumi.String("1"),
// 			Ratio:         pulumi.Int(30),
// 			Type:          pulumi.String("Basic"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Ga Bandwidth Package can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:ga/bandwidthPackage:BandwidthPackage example <id>
// ```
type BandwidthPackage struct {
	pulumi.CustomResourceState

	// The auto pay. Valid values: `false`, `true`.
	AutoPay pulumi.BoolPtrOutput `pulumi:"autoPay"`
	// The auto use coupon. Valid values: `false`, `true`.
	AutoUseCoupon pulumi.BoolPtrOutput `pulumi:"autoUseCoupon"`
	// The bandwidth value of bandwidth packet.
	Bandwidth pulumi.IntOutput `pulumi:"bandwidth"`
	// The name of the bandwidth packet.
	BandwidthPackageName pulumi.StringPtrOutput `pulumi:"bandwidthPackageName"`
	// The bandwidth type of the bandwidth. Valid values: `Advanced`, `Basic`, `Enhanced`.
	BandwidthType pulumi.StringPtrOutput `pulumi:"bandwidthType"`
	// The billing type. Valid values: `PayBy95`, `PayByTraffic`.
	BillingType pulumi.StringPtrOutput `pulumi:"billingType"`
	// Interworking area A of cross domain acceleration package. Only international stations support returning this parameter. Default value is `China-mainland`.
	CbnGeographicRegionIda pulumi.StringPtrOutput `pulumi:"cbnGeographicRegionIda"`
	// Interworking area B of cross domain acceleration package. Only international stations support returning this parameter. Default value is `Global`.
	CbnGeographicRegionIdb pulumi.StringPtrOutput `pulumi:"cbnGeographicRegionIdb"`
	// The description of bandwidth package.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The duration.
	Duration pulumi.StringPtrOutput `pulumi:"duration"`
	// The payment type of the bandwidth. Valid values: `PayAsYouGo`, `Subscription`. Default value is `Subscription`.
	PaymentType pulumi.StringPtrOutput `pulumi:"paymentType"`
	// The ratio.
	Ratio pulumi.IntPtrOutput `pulumi:"ratio"`
	// The status of the bandwidth plan.
	Status pulumi.StringOutput `pulumi:"status"`
	// The type of the bandwidth packet. China station only supports return to basic. Valid values: `Basic`, `CrossDomain`.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewBandwidthPackage registers a new resource with the given unique name, arguments, and options.
func NewBandwidthPackage(ctx *pulumi.Context,
	name string, args *BandwidthPackageArgs, opts ...pulumi.ResourceOption) (*BandwidthPackage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bandwidth == nil {
		return nil, errors.New("invalid value for required argument 'Bandwidth'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource BandwidthPackage
	err := ctx.RegisterResource("alicloud:ga/bandwidthPackage:BandwidthPackage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBandwidthPackage gets an existing BandwidthPackage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBandwidthPackage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BandwidthPackageState, opts ...pulumi.ResourceOption) (*BandwidthPackage, error) {
	var resource BandwidthPackage
	err := ctx.ReadResource("alicloud:ga/bandwidthPackage:BandwidthPackage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BandwidthPackage resources.
type bandwidthPackageState struct {
	// The auto pay. Valid values: `false`, `true`.
	AutoPay *bool `pulumi:"autoPay"`
	// The auto use coupon. Valid values: `false`, `true`.
	AutoUseCoupon *bool `pulumi:"autoUseCoupon"`
	// The bandwidth value of bandwidth packet.
	Bandwidth *int `pulumi:"bandwidth"`
	// The name of the bandwidth packet.
	BandwidthPackageName *string `pulumi:"bandwidthPackageName"`
	// The bandwidth type of the bandwidth. Valid values: `Advanced`, `Basic`, `Enhanced`.
	BandwidthType *string `pulumi:"bandwidthType"`
	// The billing type. Valid values: `PayBy95`, `PayByTraffic`.
	BillingType *string `pulumi:"billingType"`
	// Interworking area A of cross domain acceleration package. Only international stations support returning this parameter. Default value is `China-mainland`.
	CbnGeographicRegionIda *string `pulumi:"cbnGeographicRegionIda"`
	// Interworking area B of cross domain acceleration package. Only international stations support returning this parameter. Default value is `Global`.
	CbnGeographicRegionIdb *string `pulumi:"cbnGeographicRegionIdb"`
	// The description of bandwidth package.
	Description *string `pulumi:"description"`
	// The duration.
	Duration *string `pulumi:"duration"`
	// The payment type of the bandwidth. Valid values: `PayAsYouGo`, `Subscription`. Default value is `Subscription`.
	PaymentType *string `pulumi:"paymentType"`
	// The ratio.
	Ratio *int `pulumi:"ratio"`
	// The status of the bandwidth plan.
	Status *string `pulumi:"status"`
	// The type of the bandwidth packet. China station only supports return to basic. Valid values: `Basic`, `CrossDomain`.
	Type *string `pulumi:"type"`
}

type BandwidthPackageState struct {
	// The auto pay. Valid values: `false`, `true`.
	AutoPay pulumi.BoolPtrInput
	// The auto use coupon. Valid values: `false`, `true`.
	AutoUseCoupon pulumi.BoolPtrInput
	// The bandwidth value of bandwidth packet.
	Bandwidth pulumi.IntPtrInput
	// The name of the bandwidth packet.
	BandwidthPackageName pulumi.StringPtrInput
	// The bandwidth type of the bandwidth. Valid values: `Advanced`, `Basic`, `Enhanced`.
	BandwidthType pulumi.StringPtrInput
	// The billing type. Valid values: `PayBy95`, `PayByTraffic`.
	BillingType pulumi.StringPtrInput
	// Interworking area A of cross domain acceleration package. Only international stations support returning this parameter. Default value is `China-mainland`.
	CbnGeographicRegionIda pulumi.StringPtrInput
	// Interworking area B of cross domain acceleration package. Only international stations support returning this parameter. Default value is `Global`.
	CbnGeographicRegionIdb pulumi.StringPtrInput
	// The description of bandwidth package.
	Description pulumi.StringPtrInput
	// The duration.
	Duration pulumi.StringPtrInput
	// The payment type of the bandwidth. Valid values: `PayAsYouGo`, `Subscription`. Default value is `Subscription`.
	PaymentType pulumi.StringPtrInput
	// The ratio.
	Ratio pulumi.IntPtrInput
	// The status of the bandwidth plan.
	Status pulumi.StringPtrInput
	// The type of the bandwidth packet. China station only supports return to basic. Valid values: `Basic`, `CrossDomain`.
	Type pulumi.StringPtrInput
}

func (BandwidthPackageState) ElementType() reflect.Type {
	return reflect.TypeOf((*bandwidthPackageState)(nil)).Elem()
}

type bandwidthPackageArgs struct {
	// The auto pay. Valid values: `false`, `true`.
	AutoPay *bool `pulumi:"autoPay"`
	// The auto use coupon. Valid values: `false`, `true`.
	AutoUseCoupon *bool `pulumi:"autoUseCoupon"`
	// The bandwidth value of bandwidth packet.
	Bandwidth int `pulumi:"bandwidth"`
	// The name of the bandwidth packet.
	BandwidthPackageName *string `pulumi:"bandwidthPackageName"`
	// The bandwidth type of the bandwidth. Valid values: `Advanced`, `Basic`, `Enhanced`.
	BandwidthType *string `pulumi:"bandwidthType"`
	// The billing type. Valid values: `PayBy95`, `PayByTraffic`.
	BillingType *string `pulumi:"billingType"`
	// Interworking area A of cross domain acceleration package. Only international stations support returning this parameter. Default value is `China-mainland`.
	CbnGeographicRegionIda *string `pulumi:"cbnGeographicRegionIda"`
	// Interworking area B of cross domain acceleration package. Only international stations support returning this parameter. Default value is `Global`.
	CbnGeographicRegionIdb *string `pulumi:"cbnGeographicRegionIdb"`
	// The description of bandwidth package.
	Description *string `pulumi:"description"`
	// The duration.
	Duration *string `pulumi:"duration"`
	// The payment type of the bandwidth. Valid values: `PayAsYouGo`, `Subscription`. Default value is `Subscription`.
	PaymentType *string `pulumi:"paymentType"`
	// The ratio.
	Ratio *int `pulumi:"ratio"`
	// The type of the bandwidth packet. China station only supports return to basic. Valid values: `Basic`, `CrossDomain`.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a BandwidthPackage resource.
type BandwidthPackageArgs struct {
	// The auto pay. Valid values: `false`, `true`.
	AutoPay pulumi.BoolPtrInput
	// The auto use coupon. Valid values: `false`, `true`.
	AutoUseCoupon pulumi.BoolPtrInput
	// The bandwidth value of bandwidth packet.
	Bandwidth pulumi.IntInput
	// The name of the bandwidth packet.
	BandwidthPackageName pulumi.StringPtrInput
	// The bandwidth type of the bandwidth. Valid values: `Advanced`, `Basic`, `Enhanced`.
	BandwidthType pulumi.StringPtrInput
	// The billing type. Valid values: `PayBy95`, `PayByTraffic`.
	BillingType pulumi.StringPtrInput
	// Interworking area A of cross domain acceleration package. Only international stations support returning this parameter. Default value is `China-mainland`.
	CbnGeographicRegionIda pulumi.StringPtrInput
	// Interworking area B of cross domain acceleration package. Only international stations support returning this parameter. Default value is `Global`.
	CbnGeographicRegionIdb pulumi.StringPtrInput
	// The description of bandwidth package.
	Description pulumi.StringPtrInput
	// The duration.
	Duration pulumi.StringPtrInput
	// The payment type of the bandwidth. Valid values: `PayAsYouGo`, `Subscription`. Default value is `Subscription`.
	PaymentType pulumi.StringPtrInput
	// The ratio.
	Ratio pulumi.IntPtrInput
	// The type of the bandwidth packet. China station only supports return to basic. Valid values: `Basic`, `CrossDomain`.
	Type pulumi.StringInput
}

func (BandwidthPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bandwidthPackageArgs)(nil)).Elem()
}

type BandwidthPackageInput interface {
	pulumi.Input

	ToBandwidthPackageOutput() BandwidthPackageOutput
	ToBandwidthPackageOutputWithContext(ctx context.Context) BandwidthPackageOutput
}

func (BandwidthPackage) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackage)(nil)).Elem()
}

func (i BandwidthPackage) ToBandwidthPackageOutput() BandwidthPackageOutput {
	return i.ToBandwidthPackageOutputWithContext(context.Background())
}

func (i BandwidthPackage) ToBandwidthPackageOutputWithContext(ctx context.Context) BandwidthPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageOutput)
}

type BandwidthPackageOutput struct {
	*pulumi.OutputState
}

func (BandwidthPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BandwidthPackageOutput)(nil)).Elem()
}

func (o BandwidthPackageOutput) ToBandwidthPackageOutput() BandwidthPackageOutput {
	return o
}

func (o BandwidthPackageOutput) ToBandwidthPackageOutputWithContext(ctx context.Context) BandwidthPackageOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(BandwidthPackageOutput{})
}
