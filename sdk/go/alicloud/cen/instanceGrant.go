// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a CEN child instance grant resource, which allow you to authorize a VPC or VBR to a CEN of a different account.
// 
// For more information about how to use it, see [Attach a network in a different account](https://www.alibabacloud.com/help/doc-detail/73645.htm). 
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/cen_instance_grant.html.markdown.
type InstanceGrant struct {
	s *pulumi.ResourceState
}

// NewInstanceGrant registers a new resource with the given unique name, arguments, and options.
func NewInstanceGrant(ctx *pulumi.Context,
	name string, args *InstanceGrantArgs, opts ...pulumi.ResourceOpt) (*InstanceGrant, error) {
	if args == nil || args.CenId == nil {
		return nil, errors.New("missing required argument 'CenId'")
	}
	if args == nil || args.CenOwnerId == nil {
		return nil, errors.New("missing required argument 'CenOwnerId'")
	}
	if args == nil || args.ChildInstanceId == nil {
		return nil, errors.New("missing required argument 'ChildInstanceId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["cenId"] = nil
		inputs["cenOwnerId"] = nil
		inputs["childInstanceId"] = nil
	} else {
		inputs["cenId"] = args.CenId
		inputs["cenOwnerId"] = args.CenOwnerId
		inputs["childInstanceId"] = args.ChildInstanceId
	}
	s, err := ctx.RegisterResource("alicloud:cen/instanceGrant:InstanceGrant", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &InstanceGrant{s: s}, nil
}

// GetInstanceGrant gets an existing InstanceGrant resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceGrant(ctx *pulumi.Context,
	name string, id pulumi.ID, state *InstanceGrantState, opts ...pulumi.ResourceOpt) (*InstanceGrant, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["cenId"] = state.CenId
		inputs["cenOwnerId"] = state.CenOwnerId
		inputs["childInstanceId"] = state.ChildInstanceId
	}
	s, err := ctx.ReadResource("alicloud:cen/instanceGrant:InstanceGrant", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &InstanceGrant{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *InstanceGrant) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *InstanceGrant) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The ID of the CEN.
func (r *InstanceGrant) CenId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["cenId"])
}

// The owner UID of the  CEN which the child instance granted to.
func (r *InstanceGrant) CenOwnerId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["cenOwnerId"])
}

// The ID of the child instance to grant.
func (r *InstanceGrant) ChildInstanceId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["childInstanceId"])
}

// Input properties used for looking up and filtering InstanceGrant resources.
type InstanceGrantState struct {
	// The ID of the CEN.
	CenId interface{}
	// The owner UID of the  CEN which the child instance granted to.
	CenOwnerId interface{}
	// The ID of the child instance to grant.
	ChildInstanceId interface{}
}

// The set of arguments for constructing a InstanceGrant resource.
type InstanceGrantArgs struct {
	// The ID of the CEN.
	CenId interface{}
	// The owner UID of the  CEN which the child instance granted to.
	CenOwnerId interface{}
	// The ID of the child instance to grant.
	ChildInstanceId interface{}
}
