// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package cen

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a CEN child instance grant resource, which allow you to authorize a VPC or VBR to a CEN of a different account.
//
// For more information about how to use it, see [Attach a network in a different account](https://www.alibabacloud.com/help/doc-detail/73645.htm).
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/cen_instance_grant.html.markdown.
type InstanceGrant struct {
	pulumi.CustomResourceState

	// The ID of the CEN.
	CenId pulumi.StringOutput `pulumi:"cenId"`
	// The owner UID of the  CEN which the child instance granted to.
	CenOwnerId pulumi.StringOutput `pulumi:"cenOwnerId"`
	// The ID of the child instance to grant.
	ChildInstanceId pulumi.StringOutput `pulumi:"childInstanceId"`
}

// NewInstanceGrant registers a new resource with the given unique name, arguments, and options.
func NewInstanceGrant(ctx *pulumi.Context,
	name string, args *InstanceGrantArgs, opts ...pulumi.ResourceOption) (*InstanceGrant, error) {
	if args == nil || args.CenId == nil {
		return nil, errors.New("missing required argument 'CenId'")
	}
	if args == nil || args.CenOwnerId == nil {
		return nil, errors.New("missing required argument 'CenOwnerId'")
	}
	if args == nil || args.ChildInstanceId == nil {
		return nil, errors.New("missing required argument 'ChildInstanceId'")
	}
	if args == nil {
		args = &InstanceGrantArgs{}
	}
	var resource InstanceGrant
	err := ctx.RegisterResource("alicloud:cen/instanceGrant:InstanceGrant", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceGrant gets an existing InstanceGrant resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceGrant(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceGrantState, opts ...pulumi.ResourceOption) (*InstanceGrant, error) {
	var resource InstanceGrant
	err := ctx.ReadResource("alicloud:cen/instanceGrant:InstanceGrant", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceGrant resources.
type instanceGrantState struct {
	// The ID of the CEN.
	CenId *string `pulumi:"cenId"`
	// The owner UID of the  CEN which the child instance granted to.
	CenOwnerId *string `pulumi:"cenOwnerId"`
	// The ID of the child instance to grant.
	ChildInstanceId *string `pulumi:"childInstanceId"`
}

type InstanceGrantState struct {
	// The ID of the CEN.
	CenId pulumi.StringPtrInput
	// The owner UID of the  CEN which the child instance granted to.
	CenOwnerId pulumi.StringPtrInput
	// The ID of the child instance to grant.
	ChildInstanceId pulumi.StringPtrInput
}

func (InstanceGrantState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceGrantState)(nil)).Elem()
}

type instanceGrantArgs struct {
	// The ID of the CEN.
	CenId string `pulumi:"cenId"`
	// The owner UID of the  CEN which the child instance granted to.
	CenOwnerId string `pulumi:"cenOwnerId"`
	// The ID of the child instance to grant.
	ChildInstanceId string `pulumi:"childInstanceId"`
}

// The set of arguments for constructing a InstanceGrant resource.
type InstanceGrantArgs struct {
	// The ID of the CEN.
	CenId pulumi.StringInput
	// The owner UID of the  CEN which the child instance granted to.
	CenOwnerId pulumi.StringInput
	// The ID of the child instance to grant.
	ChildInstanceId pulumi.StringInput
}

func (InstanceGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceGrantArgs)(nil)).Elem()
}
