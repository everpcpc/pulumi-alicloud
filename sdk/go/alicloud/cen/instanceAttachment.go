// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a CEN child instance attachment resource.
type InstanceAttachment struct {
	s *pulumi.ResourceState
}

// NewInstanceAttachment registers a new resource with the given unique name, arguments, and options.
func NewInstanceAttachment(ctx *pulumi.Context,
	name string, args *InstanceAttachmentArgs, opts ...pulumi.ResourceOpt) (*InstanceAttachment, error) {
	if args == nil || args.ChildInstanceId == nil {
		return nil, errors.New("missing required argument 'ChildInstanceId'")
	}
	if args == nil || args.ChildInstanceRegionId == nil {
		return nil, errors.New("missing required argument 'ChildInstanceRegionId'")
	}
	if args == nil || args.InstanceId == nil {
		return nil, errors.New("missing required argument 'InstanceId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["childInstanceId"] = nil
		inputs["childInstanceRegionId"] = nil
		inputs["instanceId"] = nil
	} else {
		inputs["childInstanceId"] = args.ChildInstanceId
		inputs["childInstanceRegionId"] = args.ChildInstanceRegionId
		inputs["instanceId"] = args.InstanceId
	}
	s, err := ctx.RegisterResource("alicloud:cen/instanceAttachment:InstanceAttachment", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &InstanceAttachment{s: s}, nil
}

// GetInstanceAttachment gets an existing InstanceAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceAttachment(ctx *pulumi.Context,
	name string, id pulumi.ID, state *InstanceAttachmentState, opts ...pulumi.ResourceOpt) (*InstanceAttachment, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["childInstanceId"] = state.ChildInstanceId
		inputs["childInstanceRegionId"] = state.ChildInstanceRegionId
		inputs["instanceId"] = state.InstanceId
	}
	s, err := ctx.ReadResource("alicloud:cen/instanceAttachment:InstanceAttachment", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &InstanceAttachment{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *InstanceAttachment) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *InstanceAttachment) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The ID of the child instance to attach.
func (r *InstanceAttachment) ChildInstanceId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["childInstanceId"])
}

// The region ID of the child instance to attach.
func (r *InstanceAttachment) ChildInstanceRegionId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["childInstanceRegionId"])
}

// The ID of the CEN.
func (r *InstanceAttachment) InstanceId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["instanceId"])
}

// Input properties used for looking up and filtering InstanceAttachment resources.
type InstanceAttachmentState struct {
	// The ID of the child instance to attach.
	ChildInstanceId interface{}
	// The region ID of the child instance to attach.
	ChildInstanceRegionId interface{}
	// The ID of the CEN.
	InstanceId interface{}
}

// The set of arguments for constructing a InstanceAttachment resource.
type InstanceAttachmentArgs struct {
	// The ID of the child instance to attach.
	ChildInstanceId interface{}
	// The region ID of the child instance to attach.
	ChildInstanceRegionId interface{}
	// The ID of the CEN.
	InstanceId interface{}
}
