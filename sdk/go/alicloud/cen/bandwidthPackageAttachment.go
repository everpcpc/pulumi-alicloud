// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package cen

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a CEN bandwidth package attachment resource. The resource can be used to bind a bandwidth package to a specified CEN instance.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/cen_bandwidth_package_attachment.html.markdown.
type BandwidthPackageAttachment struct {
	pulumi.CustomResourceState

	// The ID of the bandwidth package.
	BandwidthPackageId pulumi.StringOutput `pulumi:"bandwidthPackageId"`
	// The ID of the CEN.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
}

// NewBandwidthPackageAttachment registers a new resource with the given unique name, arguments, and options.
func NewBandwidthPackageAttachment(ctx *pulumi.Context,
	name string, args *BandwidthPackageAttachmentArgs, opts ...pulumi.ResourceOption) (*BandwidthPackageAttachment, error) {
	if args == nil || args.BandwidthPackageId == nil {
		return nil, errors.New("missing required argument 'BandwidthPackageId'")
	}
	if args == nil || args.InstanceId == nil {
		return nil, errors.New("missing required argument 'InstanceId'")
	}
	if args == nil {
		args = &BandwidthPackageAttachmentArgs{}
	}
	var resource BandwidthPackageAttachment
	err := ctx.RegisterResource("alicloud:cen/bandwidthPackageAttachment:BandwidthPackageAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBandwidthPackageAttachment gets an existing BandwidthPackageAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBandwidthPackageAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BandwidthPackageAttachmentState, opts ...pulumi.ResourceOption) (*BandwidthPackageAttachment, error) {
	var resource BandwidthPackageAttachment
	err := ctx.ReadResource("alicloud:cen/bandwidthPackageAttachment:BandwidthPackageAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BandwidthPackageAttachment resources.
type bandwidthPackageAttachmentState struct {
	// The ID of the bandwidth package.
	BandwidthPackageId *string `pulumi:"bandwidthPackageId"`
	// The ID of the CEN.
	InstanceId *string `pulumi:"instanceId"`
}

type BandwidthPackageAttachmentState struct {
	// The ID of the bandwidth package.
	BandwidthPackageId pulumi.StringPtrInput
	// The ID of the CEN.
	InstanceId pulumi.StringPtrInput
}

func (BandwidthPackageAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*bandwidthPackageAttachmentState)(nil)).Elem()
}

type bandwidthPackageAttachmentArgs struct {
	// The ID of the bandwidth package.
	BandwidthPackageId string `pulumi:"bandwidthPackageId"`
	// The ID of the CEN.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a BandwidthPackageAttachment resource.
type BandwidthPackageAttachmentArgs struct {
	// The ID of the bandwidth package.
	BandwidthPackageId pulumi.StringInput
	// The ID of the CEN.
	InstanceId pulumi.StringInput
}

func (BandwidthPackageAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bandwidthPackageAttachmentArgs)(nil)).Elem()
}
