// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cen

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a CEN bandwidth package attachment resource. The resource can be used to bind a bandwidth package to a specified CEN instance.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/cen_bandwidth_package_attachment.html.markdown.
type BandwidthPackageAttachment struct {
	s *pulumi.ResourceState
}

// NewBandwidthPackageAttachment registers a new resource with the given unique name, arguments, and options.
func NewBandwidthPackageAttachment(ctx *pulumi.Context,
	name string, args *BandwidthPackageAttachmentArgs, opts ...pulumi.ResourceOpt) (*BandwidthPackageAttachment, error) {
	if args == nil || args.BandwidthPackageId == nil {
		return nil, errors.New("missing required argument 'BandwidthPackageId'")
	}
	if args == nil || args.InstanceId == nil {
		return nil, errors.New("missing required argument 'InstanceId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["bandwidthPackageId"] = nil
		inputs["instanceId"] = nil
	} else {
		inputs["bandwidthPackageId"] = args.BandwidthPackageId
		inputs["instanceId"] = args.InstanceId
	}
	s, err := ctx.RegisterResource("alicloud:cen/bandwidthPackageAttachment:BandwidthPackageAttachment", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &BandwidthPackageAttachment{s: s}, nil
}

// GetBandwidthPackageAttachment gets an existing BandwidthPackageAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBandwidthPackageAttachment(ctx *pulumi.Context,
	name string, id pulumi.ID, state *BandwidthPackageAttachmentState, opts ...pulumi.ResourceOpt) (*BandwidthPackageAttachment, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["bandwidthPackageId"] = state.BandwidthPackageId
		inputs["instanceId"] = state.InstanceId
	}
	s, err := ctx.ReadResource("alicloud:cen/bandwidthPackageAttachment:BandwidthPackageAttachment", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &BandwidthPackageAttachment{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *BandwidthPackageAttachment) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *BandwidthPackageAttachment) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The ID of the bandwidth package.
func (r *BandwidthPackageAttachment) BandwidthPackageId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["bandwidthPackageId"])
}

// The ID of the CEN.
func (r *BandwidthPackageAttachment) InstanceId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["instanceId"])
}

// Input properties used for looking up and filtering BandwidthPackageAttachment resources.
type BandwidthPackageAttachmentState struct {
	// The ID of the bandwidth package.
	BandwidthPackageId interface{}
	// The ID of the CEN.
	InstanceId interface{}
}

// The set of arguments for constructing a BandwidthPackageAttachment resource.
type BandwidthPackageAttachmentArgs struct {
	// The ID of the bandwidth package.
	BandwidthPackageId interface{}
	// The ID of the CEN.
	InstanceId interface{}
}
