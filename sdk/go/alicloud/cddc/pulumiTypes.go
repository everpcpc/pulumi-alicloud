// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cddc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetDedicatedHostGroupsGroup struct {
	// The policy that is used to allocate resources in the dedicated cluster. Valid values:`Evenly`,`Intensively`
	AllocationPolicy string `pulumi:"allocationPolicy"`
	// The Bastion Instance id of the Dedicated Host Group.
	BastionInstanceId string `pulumi:"bastionInstanceId"`
	// The CPU overcommitment ratio of the dedicated cluster. If you set this parameter to 200, the CPU resources that can be allocated are twice as many as the CPU resources that are provided. This maximizes the CPU utilization. Valid values: 100 to 300. Default value: 200.
	CpuAllocateRation float64 `pulumi:"cpuAllocateRation"`
	// The CPU Allocated Amount of the Dedicated Host Group.
	CpuAllocatedAmount float64 `pulumi:"cpuAllocatedAmount"`
	// The CPU overcommitment ratio of the dedicated cluster.Valid values: 100 to 300. Default value: 200.
	CpuAllocationRatio int `pulumi:"cpuAllocationRatio"`
	// The Created Time of the Dedicated Host Group.
	CreateTime string `pulumi:"createTime"`
	// The Dedicated Host Count Group by Host Type of the Dedicated Host Group.
	DedicatedHostCountGroupByHostTypes []GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostType `pulumi:"dedicatedHostCountGroupByHostTypes"`
	// -The name of the dedicated cluster. The name must be 1 to 64 characters in length and can contain letters, digits, underscores (_), and hyphens (-). It must start with a letter.
	DedicatedHostGroupDesc string `pulumi:"dedicatedHostGroupDesc"`
	// Dedicated Host Group ID.
	DedicatedHostGroupId string `pulumi:"dedicatedHostGroupId"`
	// The Deployment Type of the Dedicated Host Group.
	DeployType string `pulumi:"deployType"`
	// The storage overcommitment ratio of the dedicated cluster.Valid values: 100 to 300. Default value: 200.
	DiskAllocateRation float64 `pulumi:"diskAllocateRation"`
	// The Disk Allocated Amount of the Dedicated Host Group.
	DiskAllocatedAmount float64 `pulumi:"diskAllocatedAmount"`
	// The Disk Allocation Ratio of the Dedicated Host Group.
	DiskAllocationRatio int `pulumi:"diskAllocationRatio"`
	// The DiskUsedAmount of the Dedicated Host Group.
	DiskUsedAmount float64 `pulumi:"diskUsedAmount"`
	// The DiskUtility of the Dedicated Host Group.
	DiskUtility float64 `pulumi:"diskUtility"`
	// Database Engine Type.The database engine of the dedicated cluster. Valid values:`Redis`, `SQLServer`, `MySQL`, `PostgreSQL`, `MongoDB`
	Engine string `pulumi:"engine"`
	// The Total Host Number  of the Dedicated Host Group.
	HostNumber int `pulumi:"hostNumber"`
	// The policy based on which the system handles host failures. Valid values:`Auto`,`Manual`
	HostReplacePolicy string `pulumi:"hostReplacePolicy"`
	// The ID of the Dedicated Host Group.
	Id string `pulumi:"id"`
	// The Total Instance Number of the Dedicated Host Group.
	InstanceNumber int `pulumi:"instanceNumber"`
	// The maximum memory usage of each host in the dedicated cluster.Valid values: 0 to 90. Default value: 90.
	MemAllocateRation float64 `pulumi:"memAllocateRation"`
	// The MemAllocatedAmount of the Dedicated Host Group.
	MemAllocatedAmount float64 `pulumi:"memAllocatedAmount"`
	// The Memory Allocation Ratio of the Dedicated Host Group.
	MemAllocationRatio int `pulumi:"memAllocationRatio"`
	// The MemUsedAmount of the Dedicated Host Group.
	MemUsedAmount float64 `pulumi:"memUsedAmount"`
	// The Mem Utility of the Dedicated Host Group.
	MemUtility float64 `pulumi:"memUtility"`
	// The Text of the Dedicated Host Group.
	Text string `pulumi:"text"`
	// The virtual private cloud (VPC) ID of the dedicated cluster.
	VpcId string `pulumi:"vpcId"`
	// The ZoneIDList of the Dedicated Host Group.
	ZoneIdLists []GetDedicatedHostGroupsGroupZoneIdList `pulumi:"zoneIdLists"`
}

// GetDedicatedHostGroupsGroupInput is an input type that accepts GetDedicatedHostGroupsGroupArgs and GetDedicatedHostGroupsGroupOutput values.
// You can construct a concrete instance of `GetDedicatedHostGroupsGroupInput` via:
//
//          GetDedicatedHostGroupsGroupArgs{...}
type GetDedicatedHostGroupsGroupInput interface {
	pulumi.Input

	ToGetDedicatedHostGroupsGroupOutput() GetDedicatedHostGroupsGroupOutput
	ToGetDedicatedHostGroupsGroupOutputWithContext(context.Context) GetDedicatedHostGroupsGroupOutput
}

type GetDedicatedHostGroupsGroupArgs struct {
	// The policy that is used to allocate resources in the dedicated cluster. Valid values:`Evenly`,`Intensively`
	AllocationPolicy pulumi.StringInput `pulumi:"allocationPolicy"`
	// The Bastion Instance id of the Dedicated Host Group.
	BastionInstanceId pulumi.StringInput `pulumi:"bastionInstanceId"`
	// The CPU overcommitment ratio of the dedicated cluster. If you set this parameter to 200, the CPU resources that can be allocated are twice as many as the CPU resources that are provided. This maximizes the CPU utilization. Valid values: 100 to 300. Default value: 200.
	CpuAllocateRation pulumi.Float64Input `pulumi:"cpuAllocateRation"`
	// The CPU Allocated Amount of the Dedicated Host Group.
	CpuAllocatedAmount pulumi.Float64Input `pulumi:"cpuAllocatedAmount"`
	// The CPU overcommitment ratio of the dedicated cluster.Valid values: 100 to 300. Default value: 200.
	CpuAllocationRatio pulumi.IntInput `pulumi:"cpuAllocationRatio"`
	// The Created Time of the Dedicated Host Group.
	CreateTime pulumi.StringInput `pulumi:"createTime"`
	// The Dedicated Host Count Group by Host Type of the Dedicated Host Group.
	DedicatedHostCountGroupByHostTypes GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayInput `pulumi:"dedicatedHostCountGroupByHostTypes"`
	// -The name of the dedicated cluster. The name must be 1 to 64 characters in length and can contain letters, digits, underscores (_), and hyphens (-). It must start with a letter.
	DedicatedHostGroupDesc pulumi.StringInput `pulumi:"dedicatedHostGroupDesc"`
	// Dedicated Host Group ID.
	DedicatedHostGroupId pulumi.StringInput `pulumi:"dedicatedHostGroupId"`
	// The Deployment Type of the Dedicated Host Group.
	DeployType pulumi.StringInput `pulumi:"deployType"`
	// The storage overcommitment ratio of the dedicated cluster.Valid values: 100 to 300. Default value: 200.
	DiskAllocateRation pulumi.Float64Input `pulumi:"diskAllocateRation"`
	// The Disk Allocated Amount of the Dedicated Host Group.
	DiskAllocatedAmount pulumi.Float64Input `pulumi:"diskAllocatedAmount"`
	// The Disk Allocation Ratio of the Dedicated Host Group.
	DiskAllocationRatio pulumi.IntInput `pulumi:"diskAllocationRatio"`
	// The DiskUsedAmount of the Dedicated Host Group.
	DiskUsedAmount pulumi.Float64Input `pulumi:"diskUsedAmount"`
	// The DiskUtility of the Dedicated Host Group.
	DiskUtility pulumi.Float64Input `pulumi:"diskUtility"`
	// Database Engine Type.The database engine of the dedicated cluster. Valid values:`Redis`, `SQLServer`, `MySQL`, `PostgreSQL`, `MongoDB`
	Engine pulumi.StringInput `pulumi:"engine"`
	// The Total Host Number  of the Dedicated Host Group.
	HostNumber pulumi.IntInput `pulumi:"hostNumber"`
	// The policy based on which the system handles host failures. Valid values:`Auto`,`Manual`
	HostReplacePolicy pulumi.StringInput `pulumi:"hostReplacePolicy"`
	// The ID of the Dedicated Host Group.
	Id pulumi.StringInput `pulumi:"id"`
	// The Total Instance Number of the Dedicated Host Group.
	InstanceNumber pulumi.IntInput `pulumi:"instanceNumber"`
	// The maximum memory usage of each host in the dedicated cluster.Valid values: 0 to 90. Default value: 90.
	MemAllocateRation pulumi.Float64Input `pulumi:"memAllocateRation"`
	// The MemAllocatedAmount of the Dedicated Host Group.
	MemAllocatedAmount pulumi.Float64Input `pulumi:"memAllocatedAmount"`
	// The Memory Allocation Ratio of the Dedicated Host Group.
	MemAllocationRatio pulumi.IntInput `pulumi:"memAllocationRatio"`
	// The MemUsedAmount of the Dedicated Host Group.
	MemUsedAmount pulumi.Float64Input `pulumi:"memUsedAmount"`
	// The Mem Utility of the Dedicated Host Group.
	MemUtility pulumi.Float64Input `pulumi:"memUtility"`
	// The Text of the Dedicated Host Group.
	Text pulumi.StringInput `pulumi:"text"`
	// The virtual private cloud (VPC) ID of the dedicated cluster.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
	// The ZoneIDList of the Dedicated Host Group.
	ZoneIdLists GetDedicatedHostGroupsGroupZoneIdListArrayInput `pulumi:"zoneIdLists"`
}

func (GetDedicatedHostGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedHostGroupsGroup)(nil)).Elem()
}

func (i GetDedicatedHostGroupsGroupArgs) ToGetDedicatedHostGroupsGroupOutput() GetDedicatedHostGroupsGroupOutput {
	return i.ToGetDedicatedHostGroupsGroupOutputWithContext(context.Background())
}

func (i GetDedicatedHostGroupsGroupArgs) ToGetDedicatedHostGroupsGroupOutputWithContext(ctx context.Context) GetDedicatedHostGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedHostGroupsGroupOutput)
}

// GetDedicatedHostGroupsGroupArrayInput is an input type that accepts GetDedicatedHostGroupsGroupArray and GetDedicatedHostGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetDedicatedHostGroupsGroupArrayInput` via:
//
//          GetDedicatedHostGroupsGroupArray{ GetDedicatedHostGroupsGroupArgs{...} }
type GetDedicatedHostGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetDedicatedHostGroupsGroupArrayOutput() GetDedicatedHostGroupsGroupArrayOutput
	ToGetDedicatedHostGroupsGroupArrayOutputWithContext(context.Context) GetDedicatedHostGroupsGroupArrayOutput
}

type GetDedicatedHostGroupsGroupArray []GetDedicatedHostGroupsGroupInput

func (GetDedicatedHostGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedHostGroupsGroup)(nil)).Elem()
}

func (i GetDedicatedHostGroupsGroupArray) ToGetDedicatedHostGroupsGroupArrayOutput() GetDedicatedHostGroupsGroupArrayOutput {
	return i.ToGetDedicatedHostGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetDedicatedHostGroupsGroupArray) ToGetDedicatedHostGroupsGroupArrayOutputWithContext(ctx context.Context) GetDedicatedHostGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedHostGroupsGroupArrayOutput)
}

type GetDedicatedHostGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetDedicatedHostGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedHostGroupsGroup)(nil)).Elem()
}

func (o GetDedicatedHostGroupsGroupOutput) ToGetDedicatedHostGroupsGroupOutput() GetDedicatedHostGroupsGroupOutput {
	return o
}

func (o GetDedicatedHostGroupsGroupOutput) ToGetDedicatedHostGroupsGroupOutputWithContext(ctx context.Context) GetDedicatedHostGroupsGroupOutput {
	return o
}

// The policy that is used to allocate resources in the dedicated cluster. Valid values:`Evenly`,`Intensively`
func (o GetDedicatedHostGroupsGroupOutput) AllocationPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) string { return v.AllocationPolicy }).(pulumi.StringOutput)
}

// The Bastion Instance id of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupOutput) BastionInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) string { return v.BastionInstanceId }).(pulumi.StringOutput)
}

// The CPU overcommitment ratio of the dedicated cluster. If you set this parameter to 200, the CPU resources that can be allocated are twice as many as the CPU resources that are provided. This maximizes the CPU utilization. Valid values: 100 to 300. Default value: 200.
func (o GetDedicatedHostGroupsGroupOutput) CpuAllocateRation() pulumi.Float64Output {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) float64 { return v.CpuAllocateRation }).(pulumi.Float64Output)
}

// The CPU Allocated Amount of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupOutput) CpuAllocatedAmount() pulumi.Float64Output {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) float64 { return v.CpuAllocatedAmount }).(pulumi.Float64Output)
}

// The CPU overcommitment ratio of the dedicated cluster.Valid values: 100 to 300. Default value: 200.
func (o GetDedicatedHostGroupsGroupOutput) CpuAllocationRatio() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) int { return v.CpuAllocationRatio }).(pulumi.IntOutput)
}

// The Created Time of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) string { return v.CreateTime }).(pulumi.StringOutput)
}

// The Dedicated Host Count Group by Host Type of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupOutput) DedicatedHostCountGroupByHostTypes() GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) []GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostType {
		return v.DedicatedHostCountGroupByHostTypes
	}).(GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput)
}

// -The name of the dedicated cluster. The name must be 1 to 64 characters in length and can contain letters, digits, underscores (_), and hyphens (-). It must start with a letter.
func (o GetDedicatedHostGroupsGroupOutput) DedicatedHostGroupDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) string { return v.DedicatedHostGroupDesc }).(pulumi.StringOutput)
}

// Dedicated Host Group ID.
func (o GetDedicatedHostGroupsGroupOutput) DedicatedHostGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) string { return v.DedicatedHostGroupId }).(pulumi.StringOutput)
}

// The Deployment Type of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupOutput) DeployType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) string { return v.DeployType }).(pulumi.StringOutput)
}

// The storage overcommitment ratio of the dedicated cluster.Valid values: 100 to 300. Default value: 200.
func (o GetDedicatedHostGroupsGroupOutput) DiskAllocateRation() pulumi.Float64Output {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) float64 { return v.DiskAllocateRation }).(pulumi.Float64Output)
}

// The Disk Allocated Amount of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupOutput) DiskAllocatedAmount() pulumi.Float64Output {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) float64 { return v.DiskAllocatedAmount }).(pulumi.Float64Output)
}

// The Disk Allocation Ratio of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupOutput) DiskAllocationRatio() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) int { return v.DiskAllocationRatio }).(pulumi.IntOutput)
}

// The DiskUsedAmount of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupOutput) DiskUsedAmount() pulumi.Float64Output {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) float64 { return v.DiskUsedAmount }).(pulumi.Float64Output)
}

// The DiskUtility of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupOutput) DiskUtility() pulumi.Float64Output {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) float64 { return v.DiskUtility }).(pulumi.Float64Output)
}

// Database Engine Type.The database engine of the dedicated cluster. Valid values:`Redis`, `SQLServer`, `MySQL`, `PostgreSQL`, `MongoDB`
func (o GetDedicatedHostGroupsGroupOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) string { return v.Engine }).(pulumi.StringOutput)
}

// The Total Host Number  of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupOutput) HostNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) int { return v.HostNumber }).(pulumi.IntOutput)
}

// The policy based on which the system handles host failures. Valid values:`Auto`,`Manual`
func (o GetDedicatedHostGroupsGroupOutput) HostReplacePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) string { return v.HostReplacePolicy }).(pulumi.StringOutput)
}

// The ID of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// The Total Instance Number of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupOutput) InstanceNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) int { return v.InstanceNumber }).(pulumi.IntOutput)
}

// The maximum memory usage of each host in the dedicated cluster.Valid values: 0 to 90. Default value: 90.
func (o GetDedicatedHostGroupsGroupOutput) MemAllocateRation() pulumi.Float64Output {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) float64 { return v.MemAllocateRation }).(pulumi.Float64Output)
}

// The MemAllocatedAmount of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupOutput) MemAllocatedAmount() pulumi.Float64Output {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) float64 { return v.MemAllocatedAmount }).(pulumi.Float64Output)
}

// The Memory Allocation Ratio of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupOutput) MemAllocationRatio() pulumi.IntOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) int { return v.MemAllocationRatio }).(pulumi.IntOutput)
}

// The MemUsedAmount of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupOutput) MemUsedAmount() pulumi.Float64Output {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) float64 { return v.MemUsedAmount }).(pulumi.Float64Output)
}

// The Mem Utility of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupOutput) MemUtility() pulumi.Float64Output {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) float64 { return v.MemUtility }).(pulumi.Float64Output)
}

// The Text of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) string { return v.Text }).(pulumi.StringOutput)
}

// The virtual private cloud (VPC) ID of the dedicated cluster.
func (o GetDedicatedHostGroupsGroupOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) string { return v.VpcId }).(pulumi.StringOutput)
}

// The ZoneIDList of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupOutput) ZoneIdLists() GetDedicatedHostGroupsGroupZoneIdListArrayOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroup) []GetDedicatedHostGroupsGroupZoneIdList { return v.ZoneIdLists }).(GetDedicatedHostGroupsGroupZoneIdListArrayOutput)
}

type GetDedicatedHostGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetDedicatedHostGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedHostGroupsGroup)(nil)).Elem()
}

func (o GetDedicatedHostGroupsGroupArrayOutput) ToGetDedicatedHostGroupsGroupArrayOutput() GetDedicatedHostGroupsGroupArrayOutput {
	return o
}

func (o GetDedicatedHostGroupsGroupArrayOutput) ToGetDedicatedHostGroupsGroupArrayOutputWithContext(ctx context.Context) GetDedicatedHostGroupsGroupArrayOutput {
	return o
}

func (o GetDedicatedHostGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetDedicatedHostGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDedicatedHostGroupsGroup {
		return vs[0].([]GetDedicatedHostGroupsGroup)[vs[1].(int)]
	}).(GetDedicatedHostGroupsGroupOutput)
}

type GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostType struct {
	PlaceHolder string `pulumi:"placeHolder"`
}

// GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeInput is an input type that accepts GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArgs and GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput values.
// You can construct a concrete instance of `GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeInput` via:
//
//          GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArgs{...}
type GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeInput interface {
	pulumi.Input

	ToGetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput() GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput
	ToGetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutputWithContext(context.Context) GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput
}

type GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArgs struct {
	PlaceHolder pulumi.StringInput `pulumi:"placeHolder"`
}

func (GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostType)(nil)).Elem()
}

func (i GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArgs) ToGetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput() GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput {
	return i.ToGetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutputWithContext(context.Background())
}

func (i GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArgs) ToGetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutputWithContext(ctx context.Context) GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput)
}

// GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayInput is an input type that accepts GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArray and GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput values.
// You can construct a concrete instance of `GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayInput` via:
//
//          GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArray{ GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArgs{...} }
type GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayInput interface {
	pulumi.Input

	ToGetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput() GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput
	ToGetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutputWithContext(context.Context) GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput
}

type GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArray []GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeInput

func (GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostType)(nil)).Elem()
}

func (i GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArray) ToGetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput() GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput {
	return i.ToGetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutputWithContext(context.Background())
}

func (i GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArray) ToGetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutputWithContext(ctx context.Context) GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput)
}

type GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput struct{ *pulumi.OutputState }

func (GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostType)(nil)).Elem()
}

func (o GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput) ToGetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput() GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput {
	return o
}

func (o GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput) ToGetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutputWithContext(ctx context.Context) GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput {
	return o
}

func (o GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput) PlaceHolder() pulumi.StringOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostType) string { return v.PlaceHolder }).(pulumi.StringOutput)
}

type GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput struct{ *pulumi.OutputState }

func (GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostType)(nil)).Elem()
}

func (o GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput) ToGetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput() GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput {
	return o
}

func (o GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput) ToGetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutputWithContext(ctx context.Context) GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput {
	return o
}

func (o GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput) Index(i pulumi.IntInput) GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostType {
		return vs[0].([]GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostType)[vs[1].(int)]
	}).(GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput)
}

type GetDedicatedHostGroupsGroupZoneIdList struct {
	// The ZoneIDList of the Dedicated Host Group.
	ZoneIdLists []string `pulumi:"zoneIdLists"`
}

// GetDedicatedHostGroupsGroupZoneIdListInput is an input type that accepts GetDedicatedHostGroupsGroupZoneIdListArgs and GetDedicatedHostGroupsGroupZoneIdListOutput values.
// You can construct a concrete instance of `GetDedicatedHostGroupsGroupZoneIdListInput` via:
//
//          GetDedicatedHostGroupsGroupZoneIdListArgs{...}
type GetDedicatedHostGroupsGroupZoneIdListInput interface {
	pulumi.Input

	ToGetDedicatedHostGroupsGroupZoneIdListOutput() GetDedicatedHostGroupsGroupZoneIdListOutput
	ToGetDedicatedHostGroupsGroupZoneIdListOutputWithContext(context.Context) GetDedicatedHostGroupsGroupZoneIdListOutput
}

type GetDedicatedHostGroupsGroupZoneIdListArgs struct {
	// The ZoneIDList of the Dedicated Host Group.
	ZoneIdLists pulumi.StringArrayInput `pulumi:"zoneIdLists"`
}

func (GetDedicatedHostGroupsGroupZoneIdListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedHostGroupsGroupZoneIdList)(nil)).Elem()
}

func (i GetDedicatedHostGroupsGroupZoneIdListArgs) ToGetDedicatedHostGroupsGroupZoneIdListOutput() GetDedicatedHostGroupsGroupZoneIdListOutput {
	return i.ToGetDedicatedHostGroupsGroupZoneIdListOutputWithContext(context.Background())
}

func (i GetDedicatedHostGroupsGroupZoneIdListArgs) ToGetDedicatedHostGroupsGroupZoneIdListOutputWithContext(ctx context.Context) GetDedicatedHostGroupsGroupZoneIdListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedHostGroupsGroupZoneIdListOutput)
}

// GetDedicatedHostGroupsGroupZoneIdListArrayInput is an input type that accepts GetDedicatedHostGroupsGroupZoneIdListArray and GetDedicatedHostGroupsGroupZoneIdListArrayOutput values.
// You can construct a concrete instance of `GetDedicatedHostGroupsGroupZoneIdListArrayInput` via:
//
//          GetDedicatedHostGroupsGroupZoneIdListArray{ GetDedicatedHostGroupsGroupZoneIdListArgs{...} }
type GetDedicatedHostGroupsGroupZoneIdListArrayInput interface {
	pulumi.Input

	ToGetDedicatedHostGroupsGroupZoneIdListArrayOutput() GetDedicatedHostGroupsGroupZoneIdListArrayOutput
	ToGetDedicatedHostGroupsGroupZoneIdListArrayOutputWithContext(context.Context) GetDedicatedHostGroupsGroupZoneIdListArrayOutput
}

type GetDedicatedHostGroupsGroupZoneIdListArray []GetDedicatedHostGroupsGroupZoneIdListInput

func (GetDedicatedHostGroupsGroupZoneIdListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedHostGroupsGroupZoneIdList)(nil)).Elem()
}

func (i GetDedicatedHostGroupsGroupZoneIdListArray) ToGetDedicatedHostGroupsGroupZoneIdListArrayOutput() GetDedicatedHostGroupsGroupZoneIdListArrayOutput {
	return i.ToGetDedicatedHostGroupsGroupZoneIdListArrayOutputWithContext(context.Background())
}

func (i GetDedicatedHostGroupsGroupZoneIdListArray) ToGetDedicatedHostGroupsGroupZoneIdListArrayOutputWithContext(ctx context.Context) GetDedicatedHostGroupsGroupZoneIdListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDedicatedHostGroupsGroupZoneIdListArrayOutput)
}

type GetDedicatedHostGroupsGroupZoneIdListOutput struct{ *pulumi.OutputState }

func (GetDedicatedHostGroupsGroupZoneIdListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDedicatedHostGroupsGroupZoneIdList)(nil)).Elem()
}

func (o GetDedicatedHostGroupsGroupZoneIdListOutput) ToGetDedicatedHostGroupsGroupZoneIdListOutput() GetDedicatedHostGroupsGroupZoneIdListOutput {
	return o
}

func (o GetDedicatedHostGroupsGroupZoneIdListOutput) ToGetDedicatedHostGroupsGroupZoneIdListOutputWithContext(ctx context.Context) GetDedicatedHostGroupsGroupZoneIdListOutput {
	return o
}

// The ZoneIDList of the Dedicated Host Group.
func (o GetDedicatedHostGroupsGroupZoneIdListOutput) ZoneIdLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDedicatedHostGroupsGroupZoneIdList) []string { return v.ZoneIdLists }).(pulumi.StringArrayOutput)
}

type GetDedicatedHostGroupsGroupZoneIdListArrayOutput struct{ *pulumi.OutputState }

func (GetDedicatedHostGroupsGroupZoneIdListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDedicatedHostGroupsGroupZoneIdList)(nil)).Elem()
}

func (o GetDedicatedHostGroupsGroupZoneIdListArrayOutput) ToGetDedicatedHostGroupsGroupZoneIdListArrayOutput() GetDedicatedHostGroupsGroupZoneIdListArrayOutput {
	return o
}

func (o GetDedicatedHostGroupsGroupZoneIdListArrayOutput) ToGetDedicatedHostGroupsGroupZoneIdListArrayOutputWithContext(ctx context.Context) GetDedicatedHostGroupsGroupZoneIdListArrayOutput {
	return o
}

func (o GetDedicatedHostGroupsGroupZoneIdListArrayOutput) Index(i pulumi.IntInput) GetDedicatedHostGroupsGroupZoneIdListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDedicatedHostGroupsGroupZoneIdList {
		return vs[0].([]GetDedicatedHostGroupsGroupZoneIdList)[vs[1].(int)]
	}).(GetDedicatedHostGroupsGroupZoneIdListOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDedicatedHostGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetDedicatedHostGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeOutput{})
	pulumi.RegisterOutputType(GetDedicatedHostGroupsGroupDedicatedHostCountGroupByHostTypeArrayOutput{})
	pulumi.RegisterOutputType(GetDedicatedHostGroupsGroupZoneIdListOutput{})
	pulumi.RegisterOutputType(GetDedicatedHostGroupsGroupZoneIdListArrayOutput{})
}
