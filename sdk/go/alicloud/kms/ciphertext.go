// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/kms_ciphertext.html.markdown.
type Ciphertext struct {
	s *pulumi.ResourceState
}

// NewCiphertext registers a new resource with the given unique name, arguments, and options.
func NewCiphertext(ctx *pulumi.Context,
	name string, args *CiphertextArgs, opts ...pulumi.ResourceOpt) (*Ciphertext, error) {
	if args == nil || args.KeyId == nil {
		return nil, errors.New("missing required argument 'KeyId'")
	}
	if args == nil || args.Plaintext == nil {
		return nil, errors.New("missing required argument 'Plaintext'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["encryptionContext"] = nil
		inputs["keyId"] = nil
		inputs["plaintext"] = nil
	} else {
		inputs["encryptionContext"] = args.EncryptionContext
		inputs["keyId"] = args.KeyId
		inputs["plaintext"] = args.Plaintext
	}
	inputs["ciphertextBlob"] = nil
	s, err := ctx.RegisterResource("alicloud:kms/ciphertext:Ciphertext", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Ciphertext{s: s}, nil
}

// GetCiphertext gets an existing Ciphertext resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCiphertext(ctx *pulumi.Context,
	name string, id pulumi.ID, state *CiphertextState, opts ...pulumi.ResourceOpt) (*Ciphertext, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["ciphertextBlob"] = state.CiphertextBlob
		inputs["encryptionContext"] = state.EncryptionContext
		inputs["keyId"] = state.KeyId
		inputs["plaintext"] = state.Plaintext
	}
	s, err := ctx.ReadResource("alicloud:kms/ciphertext:Ciphertext", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Ciphertext{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Ciphertext) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Ciphertext) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The ciphertext of the data key encrypted with the primary CMK version.
func (r *Ciphertext) CiphertextBlob() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["ciphertextBlob"])
}

func (r *Ciphertext) EncryptionContext() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["encryptionContext"])
}

// The globally unique ID of the CMK.
// * `encryptionContext` -
// (Optional, ForceNew) The Encryption context. If you specify this parameter here, it is also required when you call the Decrypt API operation. For more information, see [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm).
func (r *Ciphertext) KeyId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["keyId"])
}

// The plaintext to be encrypted which must be encoded in Base64.
func (r *Ciphertext) Plaintext() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["plaintext"])
}

// Input properties used for looking up and filtering Ciphertext resources.
type CiphertextState struct {
	// The ciphertext of the data key encrypted with the primary CMK version.
	CiphertextBlob interface{}
	EncryptionContext interface{}
	// The globally unique ID of the CMK.
	// * `encryptionContext` -
	// (Optional, ForceNew) The Encryption context. If you specify this parameter here, it is also required when you call the Decrypt API operation. For more information, see [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm).
	KeyId interface{}
	// The plaintext to be encrypted which must be encoded in Base64.
	Plaintext interface{}
}

// The set of arguments for constructing a Ciphertext resource.
type CiphertextArgs struct {
	EncryptionContext interface{}
	// The globally unique ID of the CMK.
	// * `encryptionContext` -
	// (Optional, ForceNew) The Encryption context. If you specify this parameter here, it is also required when you call the Decrypt API operation. For more information, see [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm).
	KeyId interface{}
	// The plaintext to be encrypted which must be encoded in Base64.
	Plaintext interface{}
}
