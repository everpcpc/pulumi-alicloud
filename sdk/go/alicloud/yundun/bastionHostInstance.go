// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yundun

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BastionHostInstance struct {
	pulumi.CustomResourceState

	Description      pulumi.StringOutput      `pulumi:"description"`
	LicenseCode      pulumi.StringOutput      `pulumi:"licenseCode"`
	Period           pulumi.IntPtrOutput      `pulumi:"period"`
	ResourceGroupId  pulumi.StringPtrOutput   `pulumi:"resourceGroupId"`
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	Tags             pulumi.MapOutput         `pulumi:"tags"`
	VswitchId        pulumi.StringOutput      `pulumi:"vswitchId"`
}

// NewBastionHostInstance registers a new resource with the given unique name, arguments, and options.
func NewBastionHostInstance(ctx *pulumi.Context,
	name string, args *BastionHostInstanceArgs, opts ...pulumi.ResourceOption) (*BastionHostInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.LicenseCode == nil {
		return nil, errors.New("invalid value for required argument 'LicenseCode'")
	}
	if args.SecurityGroupIds == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupIds'")
	}
	if args.VswitchId == nil {
		return nil, errors.New("invalid value for required argument 'VswitchId'")
	}
	var resource BastionHostInstance
	err := ctx.RegisterResource("alicloud:yundun/bastionHostInstance:BastionHostInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBastionHostInstance gets an existing BastionHostInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBastionHostInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BastionHostInstanceState, opts ...pulumi.ResourceOption) (*BastionHostInstance, error) {
	var resource BastionHostInstance
	err := ctx.ReadResource("alicloud:yundun/bastionHostInstance:BastionHostInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BastionHostInstance resources.
type bastionHostInstanceState struct {
	Description      *string                `pulumi:"description"`
	LicenseCode      *string                `pulumi:"licenseCode"`
	Period           *int                   `pulumi:"period"`
	ResourceGroupId  *string                `pulumi:"resourceGroupId"`
	SecurityGroupIds []string               `pulumi:"securityGroupIds"`
	Tags             map[string]interface{} `pulumi:"tags"`
	VswitchId        *string                `pulumi:"vswitchId"`
}

type BastionHostInstanceState struct {
	Description      pulumi.StringPtrInput
	LicenseCode      pulumi.StringPtrInput
	Period           pulumi.IntPtrInput
	ResourceGroupId  pulumi.StringPtrInput
	SecurityGroupIds pulumi.StringArrayInput
	Tags             pulumi.MapInput
	VswitchId        pulumi.StringPtrInput
}

func (BastionHostInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*bastionHostInstanceState)(nil)).Elem()
}

type bastionHostInstanceArgs struct {
	Description      string                 `pulumi:"description"`
	LicenseCode      string                 `pulumi:"licenseCode"`
	Period           *int                   `pulumi:"period"`
	ResourceGroupId  *string                `pulumi:"resourceGroupId"`
	SecurityGroupIds []string               `pulumi:"securityGroupIds"`
	Tags             map[string]interface{} `pulumi:"tags"`
	VswitchId        string                 `pulumi:"vswitchId"`
}

// The set of arguments for constructing a BastionHostInstance resource.
type BastionHostInstanceArgs struct {
	Description      pulumi.StringInput
	LicenseCode      pulumi.StringInput
	Period           pulumi.IntPtrInput
	ResourceGroupId  pulumi.StringPtrInput
	SecurityGroupIds pulumi.StringArrayInput
	Tags             pulumi.MapInput
	VswitchId        pulumi.StringInput
}

func (BastionHostInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bastionHostInstanceArgs)(nil)).Elem()
}

type BastionHostInstanceInput interface {
	pulumi.Input

	ToBastionHostInstanceOutput() BastionHostInstanceOutput
	ToBastionHostInstanceOutputWithContext(ctx context.Context) BastionHostInstanceOutput
}

func (*BastionHostInstance) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionHostInstance)(nil))
}

func (i *BastionHostInstance) ToBastionHostInstanceOutput() BastionHostInstanceOutput {
	return i.ToBastionHostInstanceOutputWithContext(context.Background())
}

func (i *BastionHostInstance) ToBastionHostInstanceOutputWithContext(ctx context.Context) BastionHostInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionHostInstanceOutput)
}

func (i *BastionHostInstance) ToBastionHostInstancePtrOutput() BastionHostInstancePtrOutput {
	return i.ToBastionHostInstancePtrOutputWithContext(context.Background())
}

func (i *BastionHostInstance) ToBastionHostInstancePtrOutputWithContext(ctx context.Context) BastionHostInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionHostInstancePtrOutput)
}

type BastionHostInstancePtrInput interface {
	pulumi.Input

	ToBastionHostInstancePtrOutput() BastionHostInstancePtrOutput
	ToBastionHostInstancePtrOutputWithContext(ctx context.Context) BastionHostInstancePtrOutput
}

type bastionHostInstancePtrType BastionHostInstanceArgs

func (*bastionHostInstancePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BastionHostInstance)(nil))
}

func (i *bastionHostInstancePtrType) ToBastionHostInstancePtrOutput() BastionHostInstancePtrOutput {
	return i.ToBastionHostInstancePtrOutputWithContext(context.Background())
}

func (i *bastionHostInstancePtrType) ToBastionHostInstancePtrOutputWithContext(ctx context.Context) BastionHostInstancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionHostInstancePtrOutput)
}

// BastionHostInstanceArrayInput is an input type that accepts BastionHostInstanceArray and BastionHostInstanceArrayOutput values.
// You can construct a concrete instance of `BastionHostInstanceArrayInput` via:
//
//          BastionHostInstanceArray{ BastionHostInstanceArgs{...} }
type BastionHostInstanceArrayInput interface {
	pulumi.Input

	ToBastionHostInstanceArrayOutput() BastionHostInstanceArrayOutput
	ToBastionHostInstanceArrayOutputWithContext(context.Context) BastionHostInstanceArrayOutput
}

type BastionHostInstanceArray []BastionHostInstanceInput

func (BastionHostInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*BastionHostInstance)(nil))
}

func (i BastionHostInstanceArray) ToBastionHostInstanceArrayOutput() BastionHostInstanceArrayOutput {
	return i.ToBastionHostInstanceArrayOutputWithContext(context.Background())
}

func (i BastionHostInstanceArray) ToBastionHostInstanceArrayOutputWithContext(ctx context.Context) BastionHostInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionHostInstanceArrayOutput)
}

// BastionHostInstanceMapInput is an input type that accepts BastionHostInstanceMap and BastionHostInstanceMapOutput values.
// You can construct a concrete instance of `BastionHostInstanceMapInput` via:
//
//          BastionHostInstanceMap{ "key": BastionHostInstanceArgs{...} }
type BastionHostInstanceMapInput interface {
	pulumi.Input

	ToBastionHostInstanceMapOutput() BastionHostInstanceMapOutput
	ToBastionHostInstanceMapOutputWithContext(context.Context) BastionHostInstanceMapOutput
}

type BastionHostInstanceMap map[string]BastionHostInstanceInput

func (BastionHostInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*BastionHostInstance)(nil))
}

func (i BastionHostInstanceMap) ToBastionHostInstanceMapOutput() BastionHostInstanceMapOutput {
	return i.ToBastionHostInstanceMapOutputWithContext(context.Background())
}

func (i BastionHostInstanceMap) ToBastionHostInstanceMapOutputWithContext(ctx context.Context) BastionHostInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionHostInstanceMapOutput)
}

type BastionHostInstanceOutput struct {
	*pulumi.OutputState
}

func (BastionHostInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionHostInstance)(nil))
}

func (o BastionHostInstanceOutput) ToBastionHostInstanceOutput() BastionHostInstanceOutput {
	return o
}

func (o BastionHostInstanceOutput) ToBastionHostInstanceOutputWithContext(ctx context.Context) BastionHostInstanceOutput {
	return o
}

func (o BastionHostInstanceOutput) ToBastionHostInstancePtrOutput() BastionHostInstancePtrOutput {
	return o.ToBastionHostInstancePtrOutputWithContext(context.Background())
}

func (o BastionHostInstanceOutput) ToBastionHostInstancePtrOutputWithContext(ctx context.Context) BastionHostInstancePtrOutput {
	return o.ApplyT(func(v BastionHostInstance) *BastionHostInstance {
		return &v
	}).(BastionHostInstancePtrOutput)
}

type BastionHostInstancePtrOutput struct {
	*pulumi.OutputState
}

func (BastionHostInstancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BastionHostInstance)(nil))
}

func (o BastionHostInstancePtrOutput) ToBastionHostInstancePtrOutput() BastionHostInstancePtrOutput {
	return o
}

func (o BastionHostInstancePtrOutput) ToBastionHostInstancePtrOutputWithContext(ctx context.Context) BastionHostInstancePtrOutput {
	return o
}

type BastionHostInstanceArrayOutput struct{ *pulumi.OutputState }

func (BastionHostInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionHostInstance)(nil))
}

func (o BastionHostInstanceArrayOutput) ToBastionHostInstanceArrayOutput() BastionHostInstanceArrayOutput {
	return o
}

func (o BastionHostInstanceArrayOutput) ToBastionHostInstanceArrayOutputWithContext(ctx context.Context) BastionHostInstanceArrayOutput {
	return o
}

func (o BastionHostInstanceArrayOutput) Index(i pulumi.IntInput) BastionHostInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BastionHostInstance {
		return vs[0].([]BastionHostInstance)[vs[1].(int)]
	}).(BastionHostInstanceOutput)
}

type BastionHostInstanceMapOutput struct{ *pulumi.OutputState }

func (BastionHostInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BastionHostInstance)(nil))
}

func (o BastionHostInstanceMapOutput) ToBastionHostInstanceMapOutput() BastionHostInstanceMapOutput {
	return o
}

func (o BastionHostInstanceMapOutput) ToBastionHostInstanceMapOutputWithContext(ctx context.Context) BastionHostInstanceMapOutput {
	return o
}

func (o BastionHostInstanceMapOutput) MapIndex(k pulumi.StringInput) BastionHostInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BastionHostInstance {
		return vs[0].(map[string]BastionHostInstance)[vs[1].(string)]
	}).(BastionHostInstanceOutput)
}

func init() {
	pulumi.RegisterOutputType(BastionHostInstanceOutput{})
	pulumi.RegisterOutputType(BastionHostInstancePtrOutput{})
	pulumi.RegisterOutputType(BastionHostInstanceArrayOutput{})
	pulumi.RegisterOutputType(BastionHostInstanceMapOutput{})
}
