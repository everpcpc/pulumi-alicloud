// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package cas

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type GetCertificatesCertificate struct {
	// The cert is buy from aliyun or not.
	BuyInAliyun bool `pulumi:"buyInAliyun"`
	// The cert's city.
	City string `pulumi:"city"`
	// The cert's common name.
	Common string `pulumi:"common"`
	// The cert's country.
	Country string `pulumi:"country"`
	// The cert's not valid after time.
	EndDate string `pulumi:"endDate"`
	// The cert is expired or not.
	Expired bool `pulumi:"expired"`
	// The cert's finger.
	FingerPrint string `pulumi:"fingerPrint"`
	// The cert's id.
	Id int `pulumi:"id"`
	// The cert's .
	Issuer string `pulumi:"issuer"`
	// The cert's name.
	Name string `pulumi:"name"`
	// The cert's organization.
	OrgName string `pulumi:"orgName"`
	// The cert's province.
	Province string `pulumi:"province"`
	// The cert's subject alternative name.
	Sans string `pulumi:"sans"`
	// The cert's not valid before time.
	StartDate string `pulumi:"startDate"`
}

type GetCertificatesCertificateInput interface {
	pulumi.Input

	ToGetCertificatesCertificateOutput() GetCertificatesCertificateOutput
	ToGetCertificatesCertificateOutputWithContext(context.Context) GetCertificatesCertificateOutput
}

type GetCertificatesCertificateArgs struct {
	// The cert is buy from aliyun or not.
	BuyInAliyun pulumi.BoolInput `pulumi:"buyInAliyun"`
	// The cert's city.
	City pulumi.StringInput `pulumi:"city"`
	// The cert's common name.
	Common pulumi.StringInput `pulumi:"common"`
	// The cert's country.
	Country pulumi.StringInput `pulumi:"country"`
	// The cert's not valid after time.
	EndDate pulumi.StringInput `pulumi:"endDate"`
	// The cert is expired or not.
	Expired pulumi.BoolInput `pulumi:"expired"`
	// The cert's finger.
	FingerPrint pulumi.StringInput `pulumi:"fingerPrint"`
	// The cert's id.
	Id pulumi.IntInput `pulumi:"id"`
	// The cert's .
	Issuer pulumi.StringInput `pulumi:"issuer"`
	// The cert's name.
	Name pulumi.StringInput `pulumi:"name"`
	// The cert's organization.
	OrgName pulumi.StringInput `pulumi:"orgName"`
	// The cert's province.
	Province pulumi.StringInput `pulumi:"province"`
	// The cert's subject alternative name.
	Sans pulumi.StringInput `pulumi:"sans"`
	// The cert's not valid before time.
	StartDate pulumi.StringInput `pulumi:"startDate"`
}

func (GetCertificatesCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificate)(nil)).Elem()
}

func (i GetCertificatesCertificateArgs) ToGetCertificatesCertificateOutput() GetCertificatesCertificateOutput {
	return i.ToGetCertificatesCertificateOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateArgs) ToGetCertificatesCertificateOutputWithContext(ctx context.Context) GetCertificatesCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateOutput)
}

type GetCertificatesCertificateArrayInput interface {
	pulumi.Input

	ToGetCertificatesCertificateArrayOutput() GetCertificatesCertificateArrayOutput
	ToGetCertificatesCertificateArrayOutputWithContext(context.Context) GetCertificatesCertificateArrayOutput
}

type GetCertificatesCertificateArray []GetCertificatesCertificateInput

func (GetCertificatesCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificate)(nil)).Elem()
}

func (i GetCertificatesCertificateArray) ToGetCertificatesCertificateArrayOutput() GetCertificatesCertificateArrayOutput {
	return i.ToGetCertificatesCertificateArrayOutputWithContext(context.Background())
}

func (i GetCertificatesCertificateArray) ToGetCertificatesCertificateArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCertificatesCertificateArrayOutput)
}

type GetCertificatesCertificateOutput struct { *pulumi.OutputState }

func (GetCertificatesCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificatesCertificate)(nil)).Elem()
}

func (o GetCertificatesCertificateOutput) ToGetCertificatesCertificateOutput() GetCertificatesCertificateOutput {
	return o
}

func (o GetCertificatesCertificateOutput) ToGetCertificatesCertificateOutputWithContext(ctx context.Context) GetCertificatesCertificateOutput {
	return o
}

// The cert is buy from aliyun or not.
func (o GetCertificatesCertificateOutput) BuyInAliyun() pulumi.BoolOutput {
	return o.ApplyT(func (v GetCertificatesCertificate) bool { return v.BuyInAliyun }).(pulumi.BoolOutput)
}

// The cert's city.
func (o GetCertificatesCertificateOutput) City() pulumi.StringOutput {
	return o.ApplyT(func (v GetCertificatesCertificate) string { return v.City }).(pulumi.StringOutput)
}

// The cert's common name.
func (o GetCertificatesCertificateOutput) Common() pulumi.StringOutput {
	return o.ApplyT(func (v GetCertificatesCertificate) string { return v.Common }).(pulumi.StringOutput)
}

// The cert's country.
func (o GetCertificatesCertificateOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func (v GetCertificatesCertificate) string { return v.Country }).(pulumi.StringOutput)
}

// The cert's not valid after time.
func (o GetCertificatesCertificateOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func (v GetCertificatesCertificate) string { return v.EndDate }).(pulumi.StringOutput)
}

// The cert is expired or not.
func (o GetCertificatesCertificateOutput) Expired() pulumi.BoolOutput {
	return o.ApplyT(func (v GetCertificatesCertificate) bool { return v.Expired }).(pulumi.BoolOutput)
}

// The cert's finger.
func (o GetCertificatesCertificateOutput) FingerPrint() pulumi.StringOutput {
	return o.ApplyT(func (v GetCertificatesCertificate) string { return v.FingerPrint }).(pulumi.StringOutput)
}

// The cert's id.
func (o GetCertificatesCertificateOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func (v GetCertificatesCertificate) int { return v.Id }).(pulumi.IntOutput)
}

// The cert's .
func (o GetCertificatesCertificateOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func (v GetCertificatesCertificate) string { return v.Issuer }).(pulumi.StringOutput)
}

// The cert's name.
func (o GetCertificatesCertificateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetCertificatesCertificate) string { return v.Name }).(pulumi.StringOutput)
}

// The cert's organization.
func (o GetCertificatesCertificateOutput) OrgName() pulumi.StringOutput {
	return o.ApplyT(func (v GetCertificatesCertificate) string { return v.OrgName }).(pulumi.StringOutput)
}

// The cert's province.
func (o GetCertificatesCertificateOutput) Province() pulumi.StringOutput {
	return o.ApplyT(func (v GetCertificatesCertificate) string { return v.Province }).(pulumi.StringOutput)
}

// The cert's subject alternative name.
func (o GetCertificatesCertificateOutput) Sans() pulumi.StringOutput {
	return o.ApplyT(func (v GetCertificatesCertificate) string { return v.Sans }).(pulumi.StringOutput)
}

// The cert's not valid before time.
func (o GetCertificatesCertificateOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func (v GetCertificatesCertificate) string { return v.StartDate }).(pulumi.StringOutput)
}

type GetCertificatesCertificateArrayOutput struct { *pulumi.OutputState}

func (GetCertificatesCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCertificatesCertificate)(nil)).Elem()
}

func (o GetCertificatesCertificateArrayOutput) ToGetCertificatesCertificateArrayOutput() GetCertificatesCertificateArrayOutput {
	return o
}

func (o GetCertificatesCertificateArrayOutput) ToGetCertificatesCertificateArrayOutputWithContext(ctx context.Context) GetCertificatesCertificateArrayOutput {
	return o
}

func (o GetCertificatesCertificateArrayOutput) Index(i pulumi.IntInput) GetCertificatesCertificateOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetCertificatesCertificate {
		return vs[0].([]GetCertificatesCertificate)[vs[1].(int)]
	}).(GetCertificatesCertificateOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCertificatesCertificateOutput{})
	pulumi.RegisterOutputType(GetCertificatesCertificateArrayOutput{})
}
