// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fnf

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Serverless Workflow Flow resource.
//
// For information about Serverless Workflow Flow and how to use it, see [What is Flow](https://www.alibabacloud.com/help/en/doc-detail/123079.htm).
//
// > **NOTE:** Available in v1.105.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/fnf"
// 	"github.com/pulumi/pulumi-alicloud/sdk/v2/go/alicloud/ram"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ram.NewRole(ctx, "_default", &ram.RoleArgs{
// 			Document: pulumi.String(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v%v", "  {\n", "    \"Statement\": [\n", "      {\n", "        \"Action\": \"sts:AssumeRole\",\n", "        \"Effect\": \"Allow\",\n", "        \"Principal\": {\n", "          \"Service\": [\n", "            \"fnf.aliyuncs.com\"\n", "          ]\n", "        }\n", "      }\n", "    ],\n", "    \"Version\": \"1\"\n", "  }\n")),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = fnf.NewFlow(ctx, "example", &fnf.FlowArgs{
// 			Definition:  pulumi.String(fmt.Sprintf("%v%v%v%v%v", "  version: v1beta1\n", "  type: flow\n", "  steps:\n", "    - type: pass\n", "      name: helloworld\n")),
// 			RoleArn:     _default.Arn,
// 			Description: pulumi.String("Test for terraform fnf_flow."),
// 			Type:        pulumi.String("FDL"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Serverless Workflow Flow can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:fnf/flow:Flow example <name>
// ```
type Flow struct {
	pulumi.CustomResourceState

	// The definition of the flow. It must comply with the Flow Definition Language (FDL) syntax.
	Definition pulumi.StringOutput `pulumi:"definition"`
	// The description of the flow.
	Description pulumi.StringOutput `pulumi:"description"`
	// The unique ID of the flow.
	FlowId pulumi.StringOutput `pulumi:"flowId"`
	// The time when the flow was last modified.
	LastModifiedTime pulumi.StringOutput `pulumi:"lastModifiedTime"`
	// The name of the flow. The name must be unique in an Alibaba Cloud account.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ARN of the specified RAM role that Serverless Workflow uses to assume the role when Serverless Workflow executes a flow.
	RoleArn pulumi.StringPtrOutput `pulumi:"roleArn"`
	// The type of the flow. Set the value to `FDL`.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewFlow registers a new resource with the given unique name, arguments, and options.
func NewFlow(ctx *pulumi.Context,
	name string, args *FlowArgs, opts ...pulumi.ResourceOption) (*Flow, error) {
	if args == nil || args.Definition == nil {
		return nil, errors.New("missing required argument 'Definition'")
	}
	if args == nil || args.Description == nil {
		return nil, errors.New("missing required argument 'Description'")
	}
	if args == nil || args.Type == nil {
		return nil, errors.New("missing required argument 'Type'")
	}
	if args == nil {
		args = &FlowArgs{}
	}
	var resource Flow
	err := ctx.RegisterResource("alicloud:fnf/flow:Flow", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlow gets an existing Flow resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlow(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlowState, opts ...pulumi.ResourceOption) (*Flow, error) {
	var resource Flow
	err := ctx.ReadResource("alicloud:fnf/flow:Flow", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Flow resources.
type flowState struct {
	// The definition of the flow. It must comply with the Flow Definition Language (FDL) syntax.
	Definition *string `pulumi:"definition"`
	// The description of the flow.
	Description *string `pulumi:"description"`
	// The unique ID of the flow.
	FlowId *string `pulumi:"flowId"`
	// The time when the flow was last modified.
	LastModifiedTime *string `pulumi:"lastModifiedTime"`
	// The name of the flow. The name must be unique in an Alibaba Cloud account.
	Name *string `pulumi:"name"`
	// The ARN of the specified RAM role that Serverless Workflow uses to assume the role when Serverless Workflow executes a flow.
	RoleArn *string `pulumi:"roleArn"`
	// The type of the flow. Set the value to `FDL`.
	Type *string `pulumi:"type"`
}

type FlowState struct {
	// The definition of the flow. It must comply with the Flow Definition Language (FDL) syntax.
	Definition pulumi.StringPtrInput
	// The description of the flow.
	Description pulumi.StringPtrInput
	// The unique ID of the flow.
	FlowId pulumi.StringPtrInput
	// The time when the flow was last modified.
	LastModifiedTime pulumi.StringPtrInput
	// The name of the flow. The name must be unique in an Alibaba Cloud account.
	Name pulumi.StringPtrInput
	// The ARN of the specified RAM role that Serverless Workflow uses to assume the role when Serverless Workflow executes a flow.
	RoleArn pulumi.StringPtrInput
	// The type of the flow. Set the value to `FDL`.
	Type pulumi.StringPtrInput
}

func (FlowState) ElementType() reflect.Type {
	return reflect.TypeOf((*flowState)(nil)).Elem()
}

type flowArgs struct {
	// The definition of the flow. It must comply with the Flow Definition Language (FDL) syntax.
	Definition string `pulumi:"definition"`
	// The description of the flow.
	Description string `pulumi:"description"`
	// The name of the flow. The name must be unique in an Alibaba Cloud account.
	Name *string `pulumi:"name"`
	// The ARN of the specified RAM role that Serverless Workflow uses to assume the role when Serverless Workflow executes a flow.
	RoleArn *string `pulumi:"roleArn"`
	// The type of the flow. Set the value to `FDL`.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a Flow resource.
type FlowArgs struct {
	// The definition of the flow. It must comply with the Flow Definition Language (FDL) syntax.
	Definition pulumi.StringInput
	// The description of the flow.
	Description pulumi.StringInput
	// The name of the flow. The name must be unique in an Alibaba Cloud account.
	Name pulumi.StringPtrInput
	// The ARN of the specified RAM role that Serverless Workflow uses to assume the role when Serverless Workflow executes a flow.
	RoleArn pulumi.StringPtrInput
	// The type of the flow. Set the value to `FDL`.
	Type pulumi.StringInput
}

func (FlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flowArgs)(nil)).Elem()
}

type FlowInput interface {
	pulumi.Input

	ToFlowOutput() FlowOutput
	ToFlowOutputWithContext(ctx context.Context) FlowOutput
}

func (Flow) ElementType() reflect.Type {
	return reflect.TypeOf((*Flow)(nil)).Elem()
}

func (i Flow) ToFlowOutput() FlowOutput {
	return i.ToFlowOutputWithContext(context.Background())
}

func (i Flow) ToFlowOutputWithContext(ctx context.Context) FlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowOutput)
}

type FlowOutput struct {
	*pulumi.OutputState
}

func (FlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowOutput)(nil)).Elem()
}

func (o FlowOutput) ToFlowOutput() FlowOutput {
	return o
}

func (o FlowOutput) ToFlowOutputWithContext(ctx context.Context) FlowOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(FlowOutput{})
}
