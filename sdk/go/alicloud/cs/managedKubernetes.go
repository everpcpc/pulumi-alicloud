// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cs

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/cs_managed_kubernetes.html.markdown.
type ManagedKubernetes struct {
	s *pulumi.ResourceState
}

// NewManagedKubernetes registers a new resource with the given unique name, arguments, and options.
func NewManagedKubernetes(ctx *pulumi.Context,
	name string, args *ManagedKubernetesArgs, opts ...pulumi.ResourceOpt) (*ManagedKubernetes, error) {
	if args == nil || args.WorkerInstanceTypes == nil {
		return nil, errors.New("missing required argument 'WorkerInstanceTypes'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["availabilityZone"] = nil
		inputs["clientCert"] = nil
		inputs["clientKey"] = nil
		inputs["clusterCaCert"] = nil
		inputs["clusterNetworkType"] = nil
		inputs["forceUpdate"] = nil
		inputs["imageId"] = nil
		inputs["installCloudMonitor"] = nil
		inputs["keyName"] = nil
		inputs["kmsEncryptedPassword"] = nil
		inputs["kmsEncryptionContext"] = nil
		inputs["kubeConfig"] = nil
		inputs["logConfig"] = nil
		inputs["name"] = nil
		inputs["namePrefix"] = nil
		inputs["newNatGateway"] = nil
		inputs["password"] = nil
		inputs["podCidr"] = nil
		inputs["serviceCidr"] = nil
		inputs["slbInternetEnabled"] = nil
		inputs["version"] = nil
		inputs["vswitchIds"] = nil
		inputs["workerAutoRenew"] = nil
		inputs["workerAutoRenewPeriod"] = nil
		inputs["workerDataDiskCategory"] = nil
		inputs["workerDataDiskSize"] = nil
		inputs["workerDiskCategory"] = nil
		inputs["workerDiskSize"] = nil
		inputs["workerInstanceChargeType"] = nil
		inputs["workerInstanceTypes"] = nil
		inputs["workerNumber"] = nil
		inputs["workerNumbers"] = nil
		inputs["workerPeriod"] = nil
		inputs["workerPeriodUnit"] = nil
	} else {
		inputs["availabilityZone"] = args.AvailabilityZone
		inputs["clientCert"] = args.ClientCert
		inputs["clientKey"] = args.ClientKey
		inputs["clusterCaCert"] = args.ClusterCaCert
		inputs["clusterNetworkType"] = args.ClusterNetworkType
		inputs["forceUpdate"] = args.ForceUpdate
		inputs["imageId"] = args.ImageId
		inputs["installCloudMonitor"] = args.InstallCloudMonitor
		inputs["keyName"] = args.KeyName
		inputs["kmsEncryptedPassword"] = args.KmsEncryptedPassword
		inputs["kmsEncryptionContext"] = args.KmsEncryptionContext
		inputs["kubeConfig"] = args.KubeConfig
		inputs["logConfig"] = args.LogConfig
		inputs["name"] = args.Name
		inputs["namePrefix"] = args.NamePrefix
		inputs["newNatGateway"] = args.NewNatGateway
		inputs["password"] = args.Password
		inputs["podCidr"] = args.PodCidr
		inputs["serviceCidr"] = args.ServiceCidr
		inputs["slbInternetEnabled"] = args.SlbInternetEnabled
		inputs["version"] = args.Version
		inputs["vswitchIds"] = args.VswitchIds
		inputs["workerAutoRenew"] = args.WorkerAutoRenew
		inputs["workerAutoRenewPeriod"] = args.WorkerAutoRenewPeriod
		inputs["workerDataDiskCategory"] = args.WorkerDataDiskCategory
		inputs["workerDataDiskSize"] = args.WorkerDataDiskSize
		inputs["workerDiskCategory"] = args.WorkerDiskCategory
		inputs["workerDiskSize"] = args.WorkerDiskSize
		inputs["workerInstanceChargeType"] = args.WorkerInstanceChargeType
		inputs["workerInstanceTypes"] = args.WorkerInstanceTypes
		inputs["workerNumber"] = args.WorkerNumber
		inputs["workerNumbers"] = args.WorkerNumbers
		inputs["workerPeriod"] = args.WorkerPeriod
		inputs["workerPeriodUnit"] = args.WorkerPeriodUnit
	}
	inputs["securityGroupId"] = nil
	inputs["vpcId"] = nil
	inputs["workerNodes"] = nil
	s, err := ctx.RegisterResource("alicloud:cs/managedKubernetes:ManagedKubernetes", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ManagedKubernetes{s: s}, nil
}

// GetManagedKubernetes gets an existing ManagedKubernetes resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedKubernetes(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ManagedKubernetesState, opts ...pulumi.ResourceOpt) (*ManagedKubernetes, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["availabilityZone"] = state.AvailabilityZone
		inputs["clientCert"] = state.ClientCert
		inputs["clientKey"] = state.ClientKey
		inputs["clusterCaCert"] = state.ClusterCaCert
		inputs["clusterNetworkType"] = state.ClusterNetworkType
		inputs["forceUpdate"] = state.ForceUpdate
		inputs["imageId"] = state.ImageId
		inputs["installCloudMonitor"] = state.InstallCloudMonitor
		inputs["keyName"] = state.KeyName
		inputs["kmsEncryptedPassword"] = state.KmsEncryptedPassword
		inputs["kmsEncryptionContext"] = state.KmsEncryptionContext
		inputs["kubeConfig"] = state.KubeConfig
		inputs["logConfig"] = state.LogConfig
		inputs["name"] = state.Name
		inputs["namePrefix"] = state.NamePrefix
		inputs["newNatGateway"] = state.NewNatGateway
		inputs["password"] = state.Password
		inputs["podCidr"] = state.PodCidr
		inputs["securityGroupId"] = state.SecurityGroupId
		inputs["serviceCidr"] = state.ServiceCidr
		inputs["slbInternetEnabled"] = state.SlbInternetEnabled
		inputs["version"] = state.Version
		inputs["vpcId"] = state.VpcId
		inputs["vswitchIds"] = state.VswitchIds
		inputs["workerAutoRenew"] = state.WorkerAutoRenew
		inputs["workerAutoRenewPeriod"] = state.WorkerAutoRenewPeriod
		inputs["workerDataDiskCategory"] = state.WorkerDataDiskCategory
		inputs["workerDataDiskSize"] = state.WorkerDataDiskSize
		inputs["workerDiskCategory"] = state.WorkerDiskCategory
		inputs["workerDiskSize"] = state.WorkerDiskSize
		inputs["workerInstanceChargeType"] = state.WorkerInstanceChargeType
		inputs["workerInstanceTypes"] = state.WorkerInstanceTypes
		inputs["workerNodes"] = state.WorkerNodes
		inputs["workerNumber"] = state.WorkerNumber
		inputs["workerNumbers"] = state.WorkerNumbers
		inputs["workerPeriod"] = state.WorkerPeriod
		inputs["workerPeriodUnit"] = state.WorkerPeriodUnit
	}
	s, err := ctx.ReadResource("alicloud:cs/managedKubernetes:ManagedKubernetes", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ManagedKubernetes{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ManagedKubernetes) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ManagedKubernetes) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The Zone where new kubernetes cluster will be located. If it is not be specified, the `vswitchIds` should be set, the value will be vswitch's zone.
func (r *ManagedKubernetes) AvailabilityZone() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["availabilityZone"])
}

// The path of client certificate, like `~/.kube/client-cert.pem`.
func (r *ManagedKubernetes) ClientCert() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["clientCert"])
}

// The path of client key, like `~/.kube/client-key.pem`.
func (r *ManagedKubernetes) ClientKey() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["clientKey"])
}

// The path of cluster ca certificate, like `~/.kube/cluster-ca-cert.pem`
func (r *ManagedKubernetes) ClusterCaCert() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["clusterCaCert"])
}

// The network that cluster uses, use `flannel` or `terway`.
func (r *ManagedKubernetes) ClusterNetworkType() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["clusterNetworkType"])
}

// Default false, when you want to change `workerInstanceTypes` and `vswitchIds`, you have to set this field to true, then the cluster will be recreated.
func (r *ManagedKubernetes) ForceUpdate() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["forceUpdate"])
}

// The ID of node image.
func (r *ManagedKubernetes) ImageId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["imageId"])
}

// Whether to install cloud monitor for the kubernetes' node.
func (r *ManagedKubernetes) InstallCloudMonitor() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["installCloudMonitor"])
}

// The keypair of ssh login cluster node, you have to create it first.
func (r *ManagedKubernetes) KeyName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["keyName"])
}

// An KMS encrypts password used to a cs managed kubernetes. It is conflicted with `password` and `keyName`.
func (r *ManagedKubernetes) KmsEncryptedPassword() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["kmsEncryptedPassword"])
}

// An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a cs managed kubernetes with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
func (r *ManagedKubernetes) KmsEncryptionContext() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["kmsEncryptionContext"])
}

// The path of kube config, like `~/.kube/config`.
func (r *ManagedKubernetes) KubeConfig() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["kubeConfig"])
}

// A list of one element containing information about the associated log store. It contains the following attributes:
func (r *ManagedKubernetes) LogConfig() pulumi.Output {
	return r.s.State["logConfig"]
}

// The kubernetes cluster's name. It is the only in one Alicloud account.
func (r *ManagedKubernetes) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

func (r *ManagedKubernetes) NamePrefix() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["namePrefix"])
}

// Whether to create a new nat gateway while creating kubernetes cluster. Default to true.
func (r *ManagedKubernetes) NewNatGateway() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["newNatGateway"])
}

// The password of ssh login cluster node. You have to specify one of `password` `keyName` `kmsEncryptedPassword` fields.
func (r *ManagedKubernetes) Password() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["password"])
}

// The CIDR block for the pod network. When `clusterNetworkType` is  set to `flanne`, you must set value to this filed .
// It cannot be duplicated with the VPC CIDR and CIDR used by Kubernetes cluster in VPC, cannot be modified after creation.
// Maximum number of hosts allowed in the cluster: 256. Refer to [Plan Kubernetes CIDR blocks under VPC](https://www.alibabacloud.com/help/doc-detail/64530.htm).
func (r *ManagedKubernetes) PodCidr() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["podCidr"])
}

// The ID of security group where the current cluster worker node is located.
func (r *ManagedKubernetes) SecurityGroupId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["securityGroupId"])
}

// The CIDR block for the service network.  
// It cannot be duplicated with the VPC CIDR and CIDR used by Kubernetes cluster in VPC, cannot be modified after creation.
func (r *ManagedKubernetes) ServiceCidr() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["serviceCidr"])
}

// Whether to create internet load balancer for API Server. Default to false.
func (r *ManagedKubernetes) SlbInternetEnabled() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["slbInternetEnabled"])
}

// Desired Kubernetes version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except you set a higher version number. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by ACK.
func (r *ManagedKubernetes) Version() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["version"])
}

// The ID of VPC where the current cluster is located.
func (r *ManagedKubernetes) VpcId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["vpcId"])
}

// The vswitch where new kubernetes cluster will be located. Specify one or more vswitch's id. It must be in the zone which `availabilityZone` specified.
func (r *ManagedKubernetes) VswitchIds() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["vswitchIds"])
}

// Enable worker payment auto-renew, defaults to false.
func (r *ManagedKubernetes) WorkerAutoRenew() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["workerAutoRenew"])
}

// Worker payment auto-renew period. When period unit is `Month`, it can be one of {“1”, “2”, “3”, “6”, “12”}.  When period unit is `Week`, it can be one of {“1”, “2”, “3”}.
func (r *ManagedKubernetes) WorkerAutoRenewPeriod() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["workerAutoRenewPeriod"])
}

// The data disk category of worker node. Its valid value are `cloudSsd` and `cloudEfficiency`, if not set, data disk will not be created.
func (r *ManagedKubernetes) WorkerDataDiskCategory() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["workerDataDiskCategory"])
}

// The data disk size of worker node. Its valid value range [20~32768] in GB. When `workerDataDiskCategory` is presented, it defaults to 40.
func (r *ManagedKubernetes) WorkerDataDiskSize() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["workerDataDiskSize"])
}

// The system disk category of worker node. Its valid value are `cloudSsd` and `cloudEfficiency`. Default to `cloudEfficiency`.
func (r *ManagedKubernetes) WorkerDiskCategory() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["workerDiskCategory"])
}

// The system disk size of worker node. Its valid value range [20~32768] in GB. Default to 20.
func (r *ManagedKubernetes) WorkerDiskSize() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["workerDiskSize"])
}

// Worker payment type. `PrePaid` or `PostPaid`, defaults to `PostPaid`.
func (r *ManagedKubernetes) WorkerInstanceChargeType() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["workerInstanceChargeType"])
}

func (r *ManagedKubernetes) WorkerInstanceTypes() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["workerInstanceTypes"])
}

// List of cluster worker nodes. It contains several attributes to `Block Nodes`.
func (r *ManagedKubernetes) WorkerNodes() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["workerNodes"])
}

// The total worker node number of the kubernetes cluster. Default to 3. It is limited up to 50 and if you want to enlarge it, please apply white list or contact with us.
func (r *ManagedKubernetes) WorkerNumber() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["workerNumber"])
}

// The worker node number of the kubernetes cluster. Default to [3]. It is limited up to 50 and if you want to enlarge it, please apply white list or contact with us.
func (r *ManagedKubernetes) WorkerNumbers() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["workerNumbers"])
}

// Worker payment period. When period unit is `Month`, it can be one of { “1”, “2”, “3”, “4”, “5”, “6”, “7”, “8”, “9”, “12”, “24”, “36”,”48”,”60”}.  When period unit is `Week`, it can be one of {“1”, “2”, “3”, “4”}.
func (r *ManagedKubernetes) WorkerPeriod() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["workerPeriod"])
}

// Worker payment period unit. `Month` or `Week`, defaults to `Month`.
func (r *ManagedKubernetes) WorkerPeriodUnit() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["workerPeriodUnit"])
}

// Input properties used for looking up and filtering ManagedKubernetes resources.
type ManagedKubernetesState struct {
	// The Zone where new kubernetes cluster will be located. If it is not be specified, the `vswitchIds` should be set, the value will be vswitch's zone.
	AvailabilityZone interface{}
	// The path of client certificate, like `~/.kube/client-cert.pem`.
	ClientCert interface{}
	// The path of client key, like `~/.kube/client-key.pem`.
	ClientKey interface{}
	// The path of cluster ca certificate, like `~/.kube/cluster-ca-cert.pem`
	ClusterCaCert interface{}
	// The network that cluster uses, use `flannel` or `terway`.
	ClusterNetworkType interface{}
	// Default false, when you want to change `workerInstanceTypes` and `vswitchIds`, you have to set this field to true, then the cluster will be recreated.
	ForceUpdate interface{}
	// The ID of node image.
	ImageId interface{}
	// Whether to install cloud monitor for the kubernetes' node.
	InstallCloudMonitor interface{}
	// The keypair of ssh login cluster node, you have to create it first.
	KeyName interface{}
	// An KMS encrypts password used to a cs managed kubernetes. It is conflicted with `password` and `keyName`.
	KmsEncryptedPassword interface{}
	// An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a cs managed kubernetes with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
	KmsEncryptionContext interface{}
	// The path of kube config, like `~/.kube/config`.
	KubeConfig interface{}
	// A list of one element containing information about the associated log store. It contains the following attributes:
	LogConfig interface{}
	// The kubernetes cluster's name. It is the only in one Alicloud account.
	Name interface{}
	NamePrefix interface{}
	// Whether to create a new nat gateway while creating kubernetes cluster. Default to true.
	NewNatGateway interface{}
	// The password of ssh login cluster node. You have to specify one of `password` `keyName` `kmsEncryptedPassword` fields.
	Password interface{}
	// The CIDR block for the pod network. When `clusterNetworkType` is  set to `flanne`, you must set value to this filed .
	// It cannot be duplicated with the VPC CIDR and CIDR used by Kubernetes cluster in VPC, cannot be modified after creation.
	// Maximum number of hosts allowed in the cluster: 256. Refer to [Plan Kubernetes CIDR blocks under VPC](https://www.alibabacloud.com/help/doc-detail/64530.htm).
	PodCidr interface{}
	// The ID of security group where the current cluster worker node is located.
	SecurityGroupId interface{}
	// The CIDR block for the service network.  
	// It cannot be duplicated with the VPC CIDR and CIDR used by Kubernetes cluster in VPC, cannot be modified after creation.
	ServiceCidr interface{}
	// Whether to create internet load balancer for API Server. Default to false.
	SlbInternetEnabled interface{}
	// Desired Kubernetes version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except you set a higher version number. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by ACK.
	Version interface{}
	// The ID of VPC where the current cluster is located.
	VpcId interface{}
	// The vswitch where new kubernetes cluster will be located. Specify one or more vswitch's id. It must be in the zone which `availabilityZone` specified.
	VswitchIds interface{}
	// Enable worker payment auto-renew, defaults to false.
	WorkerAutoRenew interface{}
	// Worker payment auto-renew period. When period unit is `Month`, it can be one of {“1”, “2”, “3”, “6”, “12”}.  When period unit is `Week`, it can be one of {“1”, “2”, “3”}.
	WorkerAutoRenewPeriod interface{}
	// The data disk category of worker node. Its valid value are `cloudSsd` and `cloudEfficiency`, if not set, data disk will not be created.
	WorkerDataDiskCategory interface{}
	// The data disk size of worker node. Its valid value range [20~32768] in GB. When `workerDataDiskCategory` is presented, it defaults to 40.
	WorkerDataDiskSize interface{}
	// The system disk category of worker node. Its valid value are `cloudSsd` and `cloudEfficiency`. Default to `cloudEfficiency`.
	WorkerDiskCategory interface{}
	// The system disk size of worker node. Its valid value range [20~32768] in GB. Default to 20.
	WorkerDiskSize interface{}
	// Worker payment type. `PrePaid` or `PostPaid`, defaults to `PostPaid`.
	WorkerInstanceChargeType interface{}
	WorkerInstanceTypes interface{}
	// List of cluster worker nodes. It contains several attributes to `Block Nodes`.
	WorkerNodes interface{}
	// The total worker node number of the kubernetes cluster. Default to 3. It is limited up to 50 and if you want to enlarge it, please apply white list or contact with us.
	WorkerNumber interface{}
	// The worker node number of the kubernetes cluster. Default to [3]. It is limited up to 50 and if you want to enlarge it, please apply white list or contact with us.
	WorkerNumbers interface{}
	// Worker payment period. When period unit is `Month`, it can be one of { “1”, “2”, “3”, “4”, “5”, “6”, “7”, “8”, “9”, “12”, “24”, “36”,”48”,”60”}.  When period unit is `Week`, it can be one of {“1”, “2”, “3”, “4”}.
	WorkerPeriod interface{}
	// Worker payment period unit. `Month` or `Week`, defaults to `Month`.
	WorkerPeriodUnit interface{}
}

// The set of arguments for constructing a ManagedKubernetes resource.
type ManagedKubernetesArgs struct {
	// The Zone where new kubernetes cluster will be located. If it is not be specified, the `vswitchIds` should be set, the value will be vswitch's zone.
	AvailabilityZone interface{}
	// The path of client certificate, like `~/.kube/client-cert.pem`.
	ClientCert interface{}
	// The path of client key, like `~/.kube/client-key.pem`.
	ClientKey interface{}
	// The path of cluster ca certificate, like `~/.kube/cluster-ca-cert.pem`
	ClusterCaCert interface{}
	// The network that cluster uses, use `flannel` or `terway`.
	ClusterNetworkType interface{}
	// Default false, when you want to change `workerInstanceTypes` and `vswitchIds`, you have to set this field to true, then the cluster will be recreated.
	ForceUpdate interface{}
	// The ID of node image.
	ImageId interface{}
	// Whether to install cloud monitor for the kubernetes' node.
	InstallCloudMonitor interface{}
	// The keypair of ssh login cluster node, you have to create it first.
	KeyName interface{}
	// An KMS encrypts password used to a cs managed kubernetes. It is conflicted with `password` and `keyName`.
	KmsEncryptedPassword interface{}
	// An KMS encryption context used to decrypt `kmsEncryptedPassword` before creating or updating a cs managed kubernetes with `kmsEncryptedPassword`. See [Encryption Context](https://www.alibabacloud.com/help/doc-detail/42975.htm). It is valid when `kmsEncryptedPassword` is set.
	KmsEncryptionContext interface{}
	// The path of kube config, like `~/.kube/config`.
	KubeConfig interface{}
	// A list of one element containing information about the associated log store. It contains the following attributes:
	LogConfig interface{}
	// The kubernetes cluster's name. It is the only in one Alicloud account.
	Name interface{}
	NamePrefix interface{}
	// Whether to create a new nat gateway while creating kubernetes cluster. Default to true.
	NewNatGateway interface{}
	// The password of ssh login cluster node. You have to specify one of `password` `keyName` `kmsEncryptedPassword` fields.
	Password interface{}
	// The CIDR block for the pod network. When `clusterNetworkType` is  set to `flanne`, you must set value to this filed .
	// It cannot be duplicated with the VPC CIDR and CIDR used by Kubernetes cluster in VPC, cannot be modified after creation.
	// Maximum number of hosts allowed in the cluster: 256. Refer to [Plan Kubernetes CIDR blocks under VPC](https://www.alibabacloud.com/help/doc-detail/64530.htm).
	PodCidr interface{}
	// The CIDR block for the service network.  
	// It cannot be duplicated with the VPC CIDR and CIDR used by Kubernetes cluster in VPC, cannot be modified after creation.
	ServiceCidr interface{}
	// Whether to create internet load balancer for API Server. Default to false.
	SlbInternetEnabled interface{}
	// Desired Kubernetes version. If you do not specify a value, the latest available version at resource creation is used and no upgrades will occur except you set a higher version number. The value must be configured and increased to upgrade the version when desired. Downgrades are not supported by ACK.
	Version interface{}
	// The vswitch where new kubernetes cluster will be located. Specify one or more vswitch's id. It must be in the zone which `availabilityZone` specified.
	VswitchIds interface{}
	// Enable worker payment auto-renew, defaults to false.
	WorkerAutoRenew interface{}
	// Worker payment auto-renew period. When period unit is `Month`, it can be one of {“1”, “2”, “3”, “6”, “12”}.  When period unit is `Week`, it can be one of {“1”, “2”, “3”}.
	WorkerAutoRenewPeriod interface{}
	// The data disk category of worker node. Its valid value are `cloudSsd` and `cloudEfficiency`, if not set, data disk will not be created.
	WorkerDataDiskCategory interface{}
	// The data disk size of worker node. Its valid value range [20~32768] in GB. When `workerDataDiskCategory` is presented, it defaults to 40.
	WorkerDataDiskSize interface{}
	// The system disk category of worker node. Its valid value are `cloudSsd` and `cloudEfficiency`. Default to `cloudEfficiency`.
	WorkerDiskCategory interface{}
	// The system disk size of worker node. Its valid value range [20~32768] in GB. Default to 20.
	WorkerDiskSize interface{}
	// Worker payment type. `PrePaid` or `PostPaid`, defaults to `PostPaid`.
	WorkerInstanceChargeType interface{}
	WorkerInstanceTypes interface{}
	// The total worker node number of the kubernetes cluster. Default to 3. It is limited up to 50 and if you want to enlarge it, please apply white list or contact with us.
	WorkerNumber interface{}
	// The worker node number of the kubernetes cluster. Default to [3]. It is limited up to 50 and if you want to enlarge it, please apply white list or contact with us.
	WorkerNumbers interface{}
	// Worker payment period. When period unit is `Month`, it can be one of { “1”, “2”, “3”, “4”, “5”, “6”, “7”, “8”, “9”, “12”, “24”, “36”,”48”,”60”}.  When period unit is `Week`, it can be one of {“1”, “2”, “3”, “4”}.
	WorkerPeriod interface{}
	// Worker payment period unit. `Month` or `Week`, defaults to `Month`.
	WorkerPeriodUnit interface{}
}
