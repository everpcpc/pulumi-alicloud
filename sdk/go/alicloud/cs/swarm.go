// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cs

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > **DEPRECATED:** This resource manages swarm cluster, which is being deprecated and will be replaced by Kubernetes cluster.
// 
// This resource will help you to manager a Swarm Cluster.
// 
// > **NOTE:** Swarm cluster only supports VPC network and you can specify a VPC network by filed `vswitchId`.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/cs_swarm.html.markdown.
type Swarm struct {
	s *pulumi.ResourceState
}

// NewSwarm registers a new resource with the given unique name, arguments, and options.
func NewSwarm(ctx *pulumi.Context,
	name string, args *SwarmArgs, opts ...pulumi.ResourceOpt) (*Swarm, error) {
	if args == nil || args.CidrBlock == nil {
		return nil, errors.New("missing required argument 'CidrBlock'")
	}
	if args == nil || args.InstanceType == nil {
		return nil, errors.New("missing required argument 'InstanceType'")
	}
	if args == nil || args.Password == nil {
		return nil, errors.New("missing required argument 'Password'")
	}
	if args == nil || args.VswitchId == nil {
		return nil, errors.New("missing required argument 'VswitchId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["cidrBlock"] = nil
		inputs["diskCategory"] = nil
		inputs["diskSize"] = nil
		inputs["imageId"] = nil
		inputs["instanceType"] = nil
		inputs["isOutdated"] = nil
		inputs["name"] = nil
		inputs["namePrefix"] = nil
		inputs["needSlb"] = nil
		inputs["nodeNumber"] = nil
		inputs["password"] = nil
		inputs["releaseEip"] = nil
		inputs["size"] = nil
		inputs["vswitchId"] = nil
	} else {
		inputs["cidrBlock"] = args.CidrBlock
		inputs["diskCategory"] = args.DiskCategory
		inputs["diskSize"] = args.DiskSize
		inputs["imageId"] = args.ImageId
		inputs["instanceType"] = args.InstanceType
		inputs["isOutdated"] = args.IsOutdated
		inputs["name"] = args.Name
		inputs["namePrefix"] = args.NamePrefix
		inputs["needSlb"] = args.NeedSlb
		inputs["nodeNumber"] = args.NodeNumber
		inputs["password"] = args.Password
		inputs["releaseEip"] = args.ReleaseEip
		inputs["size"] = args.Size
		inputs["vswitchId"] = args.VswitchId
	}
	inputs["agentVersion"] = nil
	inputs["nodes"] = nil
	inputs["securityGroupId"] = nil
	inputs["slbId"] = nil
	inputs["vpcId"] = nil
	s, err := ctx.RegisterResource("alicloud:cs/swarm:Swarm", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Swarm{s: s}, nil
}

// GetSwarm gets an existing Swarm resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwarm(ctx *pulumi.Context,
	name string, id pulumi.ID, state *SwarmState, opts ...pulumi.ResourceOpt) (*Swarm, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["agentVersion"] = state.AgentVersion
		inputs["cidrBlock"] = state.CidrBlock
		inputs["diskCategory"] = state.DiskCategory
		inputs["diskSize"] = state.DiskSize
		inputs["imageId"] = state.ImageId
		inputs["instanceType"] = state.InstanceType
		inputs["isOutdated"] = state.IsOutdated
		inputs["name"] = state.Name
		inputs["namePrefix"] = state.NamePrefix
		inputs["needSlb"] = state.NeedSlb
		inputs["nodeNumber"] = state.NodeNumber
		inputs["nodes"] = state.Nodes
		inputs["password"] = state.Password
		inputs["releaseEip"] = state.ReleaseEip
		inputs["securityGroupId"] = state.SecurityGroupId
		inputs["size"] = state.Size
		inputs["slbId"] = state.SlbId
		inputs["vpcId"] = state.VpcId
		inputs["vswitchId"] = state.VswitchId
	}
	s, err := ctx.ReadResource("alicloud:cs/swarm:Swarm", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Swarm{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Swarm) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Swarm) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The nodes agent version.
func (r *Swarm) AgentVersion() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["agentVersion"])
}

// The CIDR block for the Container. It can not be same as the CIDR used by the VPC.
// Valid value:
// - 192.168.0.0/16
// - 172.19-30.0.0/16
// - 10.0.0.0/16
func (r *Swarm) CidrBlock() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["cidrBlock"])
}

// The data disk category of ECS instance node. Its valid value are `cloud`, `cloudSsd`, `cloudEssd`, `ephemeralEssd` and `cloudEfficiency`. Default to `cloudEfficiency`.
func (r *Swarm) DiskCategory() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["diskCategory"])
}

// The data disk size of ECS instance node. Its valid value is 20~32768 GB. Default to 20.
func (r *Swarm) DiskSize() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["diskSize"])
}

// The image ID of ECS instance node used. Default to System automate allocated.
func (r *Swarm) ImageId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["imageId"])
}

// The type of ECS instance node.
func (r *Swarm) InstanceType() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["instanceType"])
}

// Whether to use outdated instance type. Default to false.
func (r *Swarm) IsOutdated() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["isOutdated"])
}

// The container cluster's name. It is the only in one Alicloud account.
func (r *Swarm) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

func (r *Swarm) NamePrefix() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["namePrefix"])
}

func (r *Swarm) NeedSlb() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["needSlb"])
}

// The ECS node number of the container cluster. Its value choices are 1~50, and default to 1.
func (r *Swarm) NodeNumber() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["nodeNumber"])
}

// List of cluster nodes. It contains several attributes to `Block Nodes`.
func (r *Swarm) Nodes() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["nodes"])
}

// The password of ECS instance node.
func (r *Swarm) Password() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["password"])
}

// Whether to release EIP after creating swarm cluster successfully. Default to false.
// * `needSlb`- (ForceNew) Whether to create the default simple routing Server Load Balancer instance for the cluster. The default value is true.
func (r *Swarm) ReleaseEip() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["releaseEip"])
}

// The ID of security group where the current cluster worker node is located.
func (r *Swarm) SecurityGroupId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["securityGroupId"])
}

// Field 'size' has been deprecated from provider version 1.9.1. New field 'node_number' replaces it.
func (r *Swarm) Size() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["size"])
}

// The ID of load balancer where the current cluster worker node is located.
func (r *Swarm) SlbId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["slbId"])
}

// The ID of VPC where the current cluster is located.
func (r *Swarm) VpcId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["vpcId"])
}

// The password of ECS instance node. If it is not specified, the container cluster's network mode will be `Classic`.
func (r *Swarm) VswitchId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["vswitchId"])
}

// Input properties used for looking up and filtering Swarm resources.
type SwarmState struct {
	// The nodes agent version.
	AgentVersion interface{}
	// The CIDR block for the Container. It can not be same as the CIDR used by the VPC.
	// Valid value:
	// - 192.168.0.0/16
	// - 172.19-30.0.0/16
	// - 10.0.0.0/16
	CidrBlock interface{}
	// The data disk category of ECS instance node. Its valid value are `cloud`, `cloudSsd`, `cloudEssd`, `ephemeralEssd` and `cloudEfficiency`. Default to `cloudEfficiency`.
	DiskCategory interface{}
	// The data disk size of ECS instance node. Its valid value is 20~32768 GB. Default to 20.
	DiskSize interface{}
	// The image ID of ECS instance node used. Default to System automate allocated.
	ImageId interface{}
	// The type of ECS instance node.
	InstanceType interface{}
	// Whether to use outdated instance type. Default to false.
	IsOutdated interface{}
	// The container cluster's name. It is the only in one Alicloud account.
	Name interface{}
	NamePrefix interface{}
	NeedSlb interface{}
	// The ECS node number of the container cluster. Its value choices are 1~50, and default to 1.
	NodeNumber interface{}
	// List of cluster nodes. It contains several attributes to `Block Nodes`.
	Nodes interface{}
	// The password of ECS instance node.
	Password interface{}
	// Whether to release EIP after creating swarm cluster successfully. Default to false.
	// * `needSlb`- (ForceNew) Whether to create the default simple routing Server Load Balancer instance for the cluster. The default value is true.
	ReleaseEip interface{}
	// The ID of security group where the current cluster worker node is located.
	SecurityGroupId interface{}
	// Field 'size' has been deprecated from provider version 1.9.1. New field 'node_number' replaces it.
	Size interface{}
	// The ID of load balancer where the current cluster worker node is located.
	SlbId interface{}
	// The ID of VPC where the current cluster is located.
	VpcId interface{}
	// The password of ECS instance node. If it is not specified, the container cluster's network mode will be `Classic`.
	VswitchId interface{}
}

// The set of arguments for constructing a Swarm resource.
type SwarmArgs struct {
	// The CIDR block for the Container. It can not be same as the CIDR used by the VPC.
	// Valid value:
	// - 192.168.0.0/16
	// - 172.19-30.0.0/16
	// - 10.0.0.0/16
	CidrBlock interface{}
	// The data disk category of ECS instance node. Its valid value are `cloud`, `cloudSsd`, `cloudEssd`, `ephemeralEssd` and `cloudEfficiency`. Default to `cloudEfficiency`.
	DiskCategory interface{}
	// The data disk size of ECS instance node. Its valid value is 20~32768 GB. Default to 20.
	DiskSize interface{}
	// The image ID of ECS instance node used. Default to System automate allocated.
	ImageId interface{}
	// The type of ECS instance node.
	InstanceType interface{}
	// Whether to use outdated instance type. Default to false.
	IsOutdated interface{}
	// The container cluster's name. It is the only in one Alicloud account.
	Name interface{}
	NamePrefix interface{}
	NeedSlb interface{}
	// The ECS node number of the container cluster. Its value choices are 1~50, and default to 1.
	NodeNumber interface{}
	// The password of ECS instance node.
	Password interface{}
	// Whether to release EIP after creating swarm cluster successfully. Default to false.
	// * `needSlb`- (ForceNew) Whether to create the default simple routing Server Load Balancer instance for the cluster. The default value is true.
	ReleaseEip interface{}
	// Field 'size' has been deprecated from provider version 1.9.1. New field 'node_number' replaces it.
	Size interface{}
	// The password of ECS instance node. If it is not specified, the container cluster's network mode will be `Classic`.
	VswitchId interface{}
}
