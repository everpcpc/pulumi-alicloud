// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cs

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/cs_serverless_kubernetes.html.markdown.
type ServerlessKubernetes struct {
	s *pulumi.ResourceState
}

// NewServerlessKubernetes registers a new resource with the given unique name, arguments, and options.
func NewServerlessKubernetes(ctx *pulumi.Context,
	name string, args *ServerlessKubernetesArgs, opts ...pulumi.ResourceOpt) (*ServerlessKubernetes, error) {
	if args == nil || args.VpcId == nil {
		return nil, errors.New("missing required argument 'VpcId'")
	}
	if args == nil || args.VswitchId == nil {
		return nil, errors.New("missing required argument 'VswitchId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["clientCert"] = nil
		inputs["clientKey"] = nil
		inputs["clusterCaCert"] = nil
		inputs["deletionProtection"] = nil
		inputs["endpointPublicAccessEnabled"] = nil
		inputs["forceUpdate"] = nil
		inputs["kubeConfig"] = nil
		inputs["name"] = nil
		inputs["namePrefix"] = nil
		inputs["newNatGateway"] = nil
		inputs["privateZone"] = nil
		inputs["tags"] = nil
		inputs["vpcId"] = nil
		inputs["vswitchId"] = nil
	} else {
		inputs["clientCert"] = args.ClientCert
		inputs["clientKey"] = args.ClientKey
		inputs["clusterCaCert"] = args.ClusterCaCert
		inputs["deletionProtection"] = args.DeletionProtection
		inputs["endpointPublicAccessEnabled"] = args.EndpointPublicAccessEnabled
		inputs["forceUpdate"] = args.ForceUpdate
		inputs["kubeConfig"] = args.KubeConfig
		inputs["name"] = args.Name
		inputs["namePrefix"] = args.NamePrefix
		inputs["newNatGateway"] = args.NewNatGateway
		inputs["privateZone"] = args.PrivateZone
		inputs["tags"] = args.Tags
		inputs["vpcId"] = args.VpcId
		inputs["vswitchId"] = args.VswitchId
	}
	s, err := ctx.RegisterResource("alicloud:cs/serverlessKubernetes:ServerlessKubernetes", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ServerlessKubernetes{s: s}, nil
}

// GetServerlessKubernetes gets an existing ServerlessKubernetes resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServerlessKubernetes(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ServerlessKubernetesState, opts ...pulumi.ResourceOpt) (*ServerlessKubernetes, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["clientCert"] = state.ClientCert
		inputs["clientKey"] = state.ClientKey
		inputs["clusterCaCert"] = state.ClusterCaCert
		inputs["deletionProtection"] = state.DeletionProtection
		inputs["endpointPublicAccessEnabled"] = state.EndpointPublicAccessEnabled
		inputs["forceUpdate"] = state.ForceUpdate
		inputs["kubeConfig"] = state.KubeConfig
		inputs["name"] = state.Name
		inputs["namePrefix"] = state.NamePrefix
		inputs["newNatGateway"] = state.NewNatGateway
		inputs["privateZone"] = state.PrivateZone
		inputs["tags"] = state.Tags
		inputs["vpcId"] = state.VpcId
		inputs["vswitchId"] = state.VswitchId
	}
	s, err := ctx.ReadResource("alicloud:cs/serverlessKubernetes:ServerlessKubernetes", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ServerlessKubernetes{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ServerlessKubernetes) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ServerlessKubernetes) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The path of client certificate, like `~/.kube/client-cert.pem`.
func (r *ServerlessKubernetes) ClientCert() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["clientCert"])
}

// The path of client key, like `~/.kube/client-key.pem`.
func (r *ServerlessKubernetes) ClientKey() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["clientKey"])
}

// The path of cluster ca certificate, like `~/.kube/cluster-ca-cert.pem`
func (r *ServerlessKubernetes) ClusterCaCert() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["clusterCaCert"])
}

// Whether enable the deletion protection or not.
// - true: Enable deletion protection.
// - false: Disable deletion protection.
func (r *ServerlessKubernetes) DeletionProtection() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["deletionProtection"])
}

// Whether to create internet  eip for API Server. Default to false.
func (r *ServerlessKubernetes) EndpointPublicAccessEnabled() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["endpointPublicAccessEnabled"])
}

// Default false, when you want to change `vpcId` and `vswitchId`, you have to set this field to true, then the cluster will be recreated.
func (r *ServerlessKubernetes) ForceUpdate() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["forceUpdate"])
}

// The path of kube config, like `~/.kube/config`.
func (r *ServerlessKubernetes) KubeConfig() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["kubeConfig"])
}

// The kubernetes cluster's name. It is the only in one Alicloud account.
func (r *ServerlessKubernetes) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

func (r *ServerlessKubernetes) NamePrefix() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["namePrefix"])
}

// Whether to create a new nat gateway while creating kubernetes cluster. Default to true.
func (r *ServerlessKubernetes) NewNatGateway() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["newNatGateway"])
}

// Whether to create internet  eip for API Server. Default to false.
func (r *ServerlessKubernetes) PrivateZone() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["privateZone"])
}

// Default nil, A map of tags assigned to the kubernetes cluster .
func (r *ServerlessKubernetes) Tags() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["tags"])
}

// The vpc where new kubernetes cluster will be located. Specify one vpc's id, if it is not specified, a new VPC  will be built.
func (r *ServerlessKubernetes) VpcId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["vpcId"])
}

// The vswitch where new kubernetes cluster will be located. Specify one vswitch's id, if it is not specified, a new VPC and VSwicth will be built. It must be in the zone which `availabilityZone` specified.
func (r *ServerlessKubernetes) VswitchId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["vswitchId"])
}

// Input properties used for looking up and filtering ServerlessKubernetes resources.
type ServerlessKubernetesState struct {
	// The path of client certificate, like `~/.kube/client-cert.pem`.
	ClientCert interface{}
	// The path of client key, like `~/.kube/client-key.pem`.
	ClientKey interface{}
	// The path of cluster ca certificate, like `~/.kube/cluster-ca-cert.pem`
	ClusterCaCert interface{}
	// Whether enable the deletion protection or not.
	// - true: Enable deletion protection.
	// - false: Disable deletion protection.
	DeletionProtection interface{}
	// Whether to create internet  eip for API Server. Default to false.
	EndpointPublicAccessEnabled interface{}
	// Default false, when you want to change `vpcId` and `vswitchId`, you have to set this field to true, then the cluster will be recreated.
	ForceUpdate interface{}
	// The path of kube config, like `~/.kube/config`.
	KubeConfig interface{}
	// The kubernetes cluster's name. It is the only in one Alicloud account.
	Name interface{}
	NamePrefix interface{}
	// Whether to create a new nat gateway while creating kubernetes cluster. Default to true.
	NewNatGateway interface{}
	// Whether to create internet  eip for API Server. Default to false.
	PrivateZone interface{}
	// Default nil, A map of tags assigned to the kubernetes cluster .
	Tags interface{}
	// The vpc where new kubernetes cluster will be located. Specify one vpc's id, if it is not specified, a new VPC  will be built.
	VpcId interface{}
	// The vswitch where new kubernetes cluster will be located. Specify one vswitch's id, if it is not specified, a new VPC and VSwicth will be built. It must be in the zone which `availabilityZone` specified.
	VswitchId interface{}
}

// The set of arguments for constructing a ServerlessKubernetes resource.
type ServerlessKubernetesArgs struct {
	// The path of client certificate, like `~/.kube/client-cert.pem`.
	ClientCert interface{}
	// The path of client key, like `~/.kube/client-key.pem`.
	ClientKey interface{}
	// The path of cluster ca certificate, like `~/.kube/cluster-ca-cert.pem`
	ClusterCaCert interface{}
	// Whether enable the deletion protection or not.
	// - true: Enable deletion protection.
	// - false: Disable deletion protection.
	DeletionProtection interface{}
	// Whether to create internet  eip for API Server. Default to false.
	EndpointPublicAccessEnabled interface{}
	// Default false, when you want to change `vpcId` and `vswitchId`, you have to set this field to true, then the cluster will be recreated.
	ForceUpdate interface{}
	// The path of kube config, like `~/.kube/config`.
	KubeConfig interface{}
	// The kubernetes cluster's name. It is the only in one Alicloud account.
	Name interface{}
	NamePrefix interface{}
	// Whether to create a new nat gateway while creating kubernetes cluster. Default to true.
	NewNatGateway interface{}
	// Whether to create internet  eip for API Server. Default to false.
	PrivateZone interface{}
	// Default nil, A map of tags assigned to the kubernetes cluster .
	Tags interface{}
	// The vpc where new kubernetes cluster will be located. Specify one vpc's id, if it is not specified, a new VPC  will be built.
	VpcId interface{}
	// The vswitch where new kubernetes cluster will be located. Specify one vswitch's id, if it is not specified, a new VPC and VSwicth will be built. It must be in the zone which `availabilityZone` specified.
	VswitchId interface{}
}
