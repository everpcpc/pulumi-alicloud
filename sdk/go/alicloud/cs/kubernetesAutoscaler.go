// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package cs

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// This resource will help you to manager cluster-autoscaler in Kubernetes Cluster.
//
// > **NOTE:** The scaling group must use CentOS7 or AliyunLinux2 as base image.
//
// > **NOTE:** The cluster-autoscaler can only use the same size of instanceTypes in one scaling group.
//
// > **NOTE:** Add Policy to RAM role of the node to deploy cluster-autoscaler if you need.
//
// > **NOTE:** Available in 1.65.0+.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/cs_kubernetes_autoscaler.html.markdown.
type KubernetesAutoscaler struct {
	pulumi.CustomResourceState

	// The id of kubernetes cluster.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// The coolDownDuration option of cluster-autoscaler.
	CoolDownDuration pulumi.StringOutput `pulumi:"coolDownDuration"`
	// The deferScaleInDuration option of cluster-autoscaler.
	DeferScaleInDuration pulumi.StringOutput `pulumi:"deferScaleInDuration"`
	//
	// * `nodepools.id` - (Required) The scaling group id of the groups configured for cluster-autoscaler.
	// * `nodepools.taints` - (Required) The taints for the nodes in scaling group.
	// * `nodepools.labels` - (Required) The labels for the nodes in scaling group.
	Nodepools KubernetesAutoscalerNodepoolArrayOutput `pulumi:"nodepools"`
	// The utilization option of cluster-autoscaler.
	Utilization pulumi.StringOutput `pulumi:"utilization"`
}

// NewKubernetesAutoscaler registers a new resource with the given unique name, arguments, and options.
func NewKubernetesAutoscaler(ctx *pulumi.Context,
	name string, args *KubernetesAutoscalerArgs, opts ...pulumi.ResourceOption) (*KubernetesAutoscaler, error) {
	if args == nil || args.ClusterId == nil {
		return nil, errors.New("missing required argument 'ClusterId'")
	}
	if args == nil || args.CoolDownDuration == nil {
		return nil, errors.New("missing required argument 'CoolDownDuration'")
	}
	if args == nil || args.DeferScaleInDuration == nil {
		return nil, errors.New("missing required argument 'DeferScaleInDuration'")
	}
	if args == nil || args.Utilization == nil {
		return nil, errors.New("missing required argument 'Utilization'")
	}
	if args == nil {
		args = &KubernetesAutoscalerArgs{}
	}
	var resource KubernetesAutoscaler
	err := ctx.RegisterResource("alicloud:cs/kubernetesAutoscaler:KubernetesAutoscaler", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubernetesAutoscaler gets an existing KubernetesAutoscaler resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubernetesAutoscaler(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubernetesAutoscalerState, opts ...pulumi.ResourceOption) (*KubernetesAutoscaler, error) {
	var resource KubernetesAutoscaler
	err := ctx.ReadResource("alicloud:cs/kubernetesAutoscaler:KubernetesAutoscaler", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubernetesAutoscaler resources.
type kubernetesAutoscalerState struct {
	// The id of kubernetes cluster.
	ClusterId *string `pulumi:"clusterId"`
	// The coolDownDuration option of cluster-autoscaler.
	CoolDownDuration *string `pulumi:"coolDownDuration"`
	// The deferScaleInDuration option of cluster-autoscaler.
	DeferScaleInDuration *string `pulumi:"deferScaleInDuration"`
	//
	// * `nodepools.id` - (Required) The scaling group id of the groups configured for cluster-autoscaler.
	// * `nodepools.taints` - (Required) The taints for the nodes in scaling group.
	// * `nodepools.labels` - (Required) The labels for the nodes in scaling group.
	Nodepools []KubernetesAutoscalerNodepool `pulumi:"nodepools"`
	// The utilization option of cluster-autoscaler.
	Utilization *string `pulumi:"utilization"`
}

type KubernetesAutoscalerState struct {
	// The id of kubernetes cluster.
	ClusterId pulumi.StringPtrInput
	// The coolDownDuration option of cluster-autoscaler.
	CoolDownDuration pulumi.StringPtrInput
	// The deferScaleInDuration option of cluster-autoscaler.
	DeferScaleInDuration pulumi.StringPtrInput
	//
	// * `nodepools.id` - (Required) The scaling group id of the groups configured for cluster-autoscaler.
	// * `nodepools.taints` - (Required) The taints for the nodes in scaling group.
	// * `nodepools.labels` - (Required) The labels for the nodes in scaling group.
	Nodepools KubernetesAutoscalerNodepoolArrayInput
	// The utilization option of cluster-autoscaler.
	Utilization pulumi.StringPtrInput
}

func (KubernetesAutoscalerState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesAutoscalerState)(nil)).Elem()
}

type kubernetesAutoscalerArgs struct {
	// The id of kubernetes cluster.
	ClusterId string `pulumi:"clusterId"`
	// The coolDownDuration option of cluster-autoscaler.
	CoolDownDuration string `pulumi:"coolDownDuration"`
	// The deferScaleInDuration option of cluster-autoscaler.
	DeferScaleInDuration string `pulumi:"deferScaleInDuration"`
	//
	// * `nodepools.id` - (Required) The scaling group id of the groups configured for cluster-autoscaler.
	// * `nodepools.taints` - (Required) The taints for the nodes in scaling group.
	// * `nodepools.labels` - (Required) The labels for the nodes in scaling group.
	Nodepools []KubernetesAutoscalerNodepool `pulumi:"nodepools"`
	// The utilization option of cluster-autoscaler.
	Utilization string `pulumi:"utilization"`
}

// The set of arguments for constructing a KubernetesAutoscaler resource.
type KubernetesAutoscalerArgs struct {
	// The id of kubernetes cluster.
	ClusterId pulumi.StringInput
	// The coolDownDuration option of cluster-autoscaler.
	CoolDownDuration pulumi.StringInput
	// The deferScaleInDuration option of cluster-autoscaler.
	DeferScaleInDuration pulumi.StringInput
	//
	// * `nodepools.id` - (Required) The scaling group id of the groups configured for cluster-autoscaler.
	// * `nodepools.taints` - (Required) The taints for the nodes in scaling group.
	// * `nodepools.labels` - (Required) The labels for the nodes in scaling group.
	Nodepools KubernetesAutoscalerNodepoolArrayInput
	// The utilization option of cluster-autoscaler.
	Utilization pulumi.StringInput
}

func (KubernetesAutoscalerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesAutoscalerArgs)(nil)).Elem()
}
