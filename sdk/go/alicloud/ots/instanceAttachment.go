// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ots

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// This resource will help you to bind a VPC to an OTS instance.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/ots_instance_attachment.html.markdown.
type InstanceAttachment struct {
	s *pulumi.ResourceState
}

// NewInstanceAttachment registers a new resource with the given unique name, arguments, and options.
func NewInstanceAttachment(ctx *pulumi.Context,
	name string, args *InstanceAttachmentArgs, opts ...pulumi.ResourceOpt) (*InstanceAttachment, error) {
	if args == nil || args.InstanceName == nil {
		return nil, errors.New("missing required argument 'InstanceName'")
	}
	if args == nil || args.VpcName == nil {
		return nil, errors.New("missing required argument 'VpcName'")
	}
	if args == nil || args.VswitchId == nil {
		return nil, errors.New("missing required argument 'VswitchId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["instanceName"] = nil
		inputs["vpcName"] = nil
		inputs["vswitchId"] = nil
	} else {
		inputs["instanceName"] = args.InstanceName
		inputs["vpcName"] = args.VpcName
		inputs["vswitchId"] = args.VswitchId
	}
	inputs["vpcId"] = nil
	s, err := ctx.RegisterResource("alicloud:ots/instanceAttachment:InstanceAttachment", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &InstanceAttachment{s: s}, nil
}

// GetInstanceAttachment gets an existing InstanceAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceAttachment(ctx *pulumi.Context,
	name string, id pulumi.ID, state *InstanceAttachmentState, opts ...pulumi.ResourceOpt) (*InstanceAttachment, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["instanceName"] = state.InstanceName
		inputs["vpcId"] = state.VpcId
		inputs["vpcName"] = state.VpcName
		inputs["vswitchId"] = state.VswitchId
	}
	s, err := ctx.ReadResource("alicloud:ots/instanceAttachment:InstanceAttachment", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &InstanceAttachment{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *InstanceAttachment) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *InstanceAttachment) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The name of the OTS instance.
func (r *InstanceAttachment) InstanceName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["instanceName"])
}

// The ID of attaching VPC to instance.
func (r *InstanceAttachment) VpcId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["vpcId"])
}

// The name of attaching VPC to instance.
func (r *InstanceAttachment) VpcName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["vpcName"])
}

// The ID of attaching VSwitch to instance.
func (r *InstanceAttachment) VswitchId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["vswitchId"])
}

// Input properties used for looking up and filtering InstanceAttachment resources.
type InstanceAttachmentState struct {
	// The name of the OTS instance.
	InstanceName interface{}
	// The ID of attaching VPC to instance.
	VpcId interface{}
	// The name of attaching VPC to instance.
	VpcName interface{}
	// The ID of attaching VSwitch to instance.
	VswitchId interface{}
}

// The set of arguments for constructing a InstanceAttachment resource.
type InstanceAttachmentArgs struct {
	// The name of the OTS instance.
	InstanceName interface{}
	// The name of attaching VPC to instance.
	VpcName interface{}
	// The ID of attaching VSwitch to instance.
	VswitchId interface{}
}
