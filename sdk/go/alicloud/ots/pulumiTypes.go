// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package ots

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type TablePrimaryKey struct {
	// Name for primary key.
	Name string `pulumi:"name"`
	// Type for primary key. Only `Integer`, `String` or `Binary` is allowed.
	Type string `pulumi:"type"`
}

type TablePrimaryKeyInput interface {
	pulumi.Input

	ToTablePrimaryKeyOutput() TablePrimaryKeyOutput
	ToTablePrimaryKeyOutputWithContext(context.Context) TablePrimaryKeyOutput
}

type TablePrimaryKeyArgs struct {
	// Name for primary key.
	Name pulumi.StringInput `pulumi:"name"`
	// Type for primary key. Only `Integer`, `String` or `Binary` is allowed.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TablePrimaryKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TablePrimaryKey)(nil)).Elem()
}

func (i TablePrimaryKeyArgs) ToTablePrimaryKeyOutput() TablePrimaryKeyOutput {
	return i.ToTablePrimaryKeyOutputWithContext(context.Background())
}

func (i TablePrimaryKeyArgs) ToTablePrimaryKeyOutputWithContext(ctx context.Context) TablePrimaryKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TablePrimaryKeyOutput)
}

type TablePrimaryKeyArrayInput interface {
	pulumi.Input

	ToTablePrimaryKeyArrayOutput() TablePrimaryKeyArrayOutput
	ToTablePrimaryKeyArrayOutputWithContext(context.Context) TablePrimaryKeyArrayOutput
}

type TablePrimaryKeyArray []TablePrimaryKeyInput

func (TablePrimaryKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TablePrimaryKey)(nil)).Elem()
}

func (i TablePrimaryKeyArray) ToTablePrimaryKeyArrayOutput() TablePrimaryKeyArrayOutput {
	return i.ToTablePrimaryKeyArrayOutputWithContext(context.Background())
}

func (i TablePrimaryKeyArray) ToTablePrimaryKeyArrayOutputWithContext(ctx context.Context) TablePrimaryKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TablePrimaryKeyArrayOutput)
}

type TablePrimaryKeyOutput struct{ *pulumi.OutputState }

func (TablePrimaryKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TablePrimaryKey)(nil)).Elem()
}

func (o TablePrimaryKeyOutput) ToTablePrimaryKeyOutput() TablePrimaryKeyOutput {
	return o
}

func (o TablePrimaryKeyOutput) ToTablePrimaryKeyOutputWithContext(ctx context.Context) TablePrimaryKeyOutput {
	return o
}

// Name for primary key.
func (o TablePrimaryKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TablePrimaryKey) string { return v.Name }).(pulumi.StringOutput)
}

// Type for primary key. Only `Integer`, `String` or `Binary` is allowed.
func (o TablePrimaryKeyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TablePrimaryKey) string { return v.Type }).(pulumi.StringOutput)
}

type TablePrimaryKeyArrayOutput struct{ *pulumi.OutputState }

func (TablePrimaryKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TablePrimaryKey)(nil)).Elem()
}

func (o TablePrimaryKeyArrayOutput) ToTablePrimaryKeyArrayOutput() TablePrimaryKeyArrayOutput {
	return o
}

func (o TablePrimaryKeyArrayOutput) ToTablePrimaryKeyArrayOutputWithContext(ctx context.Context) TablePrimaryKeyArrayOutput {
	return o
}

func (o TablePrimaryKeyArrayOutput) Index(i pulumi.IntInput) TablePrimaryKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TablePrimaryKey {
		return vs[0].([]TablePrimaryKey)[vs[1].(int)]
	}).(TablePrimaryKeyOutput)
}

func init() {
	pulumi.RegisterOutputType(TablePrimaryKeyOutput{})
	pulumi.RegisterOutputType(TablePrimaryKeyArrayOutput{})
}
