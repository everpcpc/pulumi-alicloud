// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rdc

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Rdc Organizations of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.137.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/rdc"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		cfg := config.New(ctx, "")
// 		name := "tf-testAccOrganizations-Organizations"
// 		if param := cfg.Get("name"); param != "" {
// 			name = param
// 		}
// 		_, err := rdc.NewOrganization(ctx, "_default", &rdc.OrganizationArgs{
// 			OrganizationName: pulumi.String(name),
// 			Source:           pulumi.String(name),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("rdcOrganizationId1", ids.ApplyT(func(ids rdc.GetOrganizationsResult) (string, error) {
// 			return ids.Id, nil
// 		}).(pulumi.StringOutput))
// 		opt0 := "^my-Organization"
// 		nameRegex, err := rdc.GetOrganizations(ctx, &rdc.GetOrganizationsArgs{
// 			NameRegex: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("rdcOrganizationId2", nameRegex.Id)
// 		return nil
// 	})
// }
// ```
func GetOrganizations(ctx *pulumi.Context, args *GetOrganizationsArgs, opts ...pulumi.InvokeOption) (*GetOrganizationsResult, error) {
	var rv GetOrganizationsResult
	err := ctx.Invoke("alicloud:rdc/getOrganizations:getOrganizations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrganizations.
type GetOrganizationsArgs struct {
	// A list of Organization IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Organization name.
	NameRegex  *string `pulumi:"nameRegex"`
	OutputFile *string `pulumi:"outputFile"`
	// User pk, not required, only required when the ak used by the calling interface is inconsistent with the user pk
	RealPk *string `pulumi:"realPk"`
}

// A collection of values returned by getOrganizations.
type GetOrganizationsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id            string                         `pulumi:"id"`
	Ids           []string                       `pulumi:"ids"`
	NameRegex     *string                        `pulumi:"nameRegex"`
	Names         []string                       `pulumi:"names"`
	Organizations []GetOrganizationsOrganization `pulumi:"organizations"`
	OutputFile    *string                        `pulumi:"outputFile"`
	RealPk        *string                        `pulumi:"realPk"`
}
