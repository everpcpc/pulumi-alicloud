// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package bastionhost

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Bastion Host Host Account Attachment resource to add list host accounts into one user.
//
// > **NOTE:** Available in v1.135.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/bastionhost"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		defaultHost, err := bastionhost.NewHost(ctx, "defaultHost", &bastionhost.HostArgs{
// 			InstanceId:         pulumi.String("bastionhost-cn-tl32bh0no30"),
// 			HostName:           pulumi.Any(_var.Name),
// 			ActiveAddressType:  pulumi.String("Private"),
// 			HostPrivateAddress: pulumi.String("172.16.0.10"),
// 			OsType:             pulumi.String("Linux"),
// 			Source:             pulumi.String("Local"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		var defaultHostAccount []*bastionhost.HostAccount
// 		for key0, val0 := range 3 {
// 			__res, err := bastionhost.NewHostAccount(ctx, fmt.Sprintf("defaultHostAccount-%v", key0), &bastionhost.HostAccountArgs{
// 				InstanceId:      defaultHost.InstanceId,
// 				HostAccountName: pulumi.String(fmt.Sprintf("%v%v", "example_value-", val0)),
// 				HostId:          defaultHost.HostId,
// 				ProtocolName:    pulumi.String("SSH"),
// 				Password:        pulumi.String("YourPassword12345"),
// 			})
// 			if err != nil {
// 				return err
// 			}
// 			defaultHostAccount = append(defaultHostAccount, __res)
// 		}
// 		defaultUser, err := bastionhost.NewUser(ctx, "defaultUser", &bastionhost.UserArgs{
// 			InstanceId:        defaultHost.InstanceId,
// 			MobileCountryCode: pulumi.String("CN"),
// 			Mobile:            pulumi.String("13312345678"),
// 			Password:          pulumi.String("YourPassword-123"),
// 			Source:            pulumi.String("Local"),
// 			UserName:          pulumi.String("my-local-user"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		var splat0 pulumi.StringArray
// 		for _, val0 := range defaultHostAccount {
// 			splat0 = append(splat0, val0.HostAccountId)
// 		}
// 		_, err = bastionhost.NewHostAccountUserAttachment(ctx, "defaultHostAccountUserAttachment", &bastionhost.HostAccountUserAttachmentArgs{
// 			InstanceId:     defaultHost.InstanceId,
// 			UserId:         defaultUser.UserId,
// 			HostId:         defaultHost.HostId,
// 			HostAccountIds: toPulumiStringArray(splat0),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// func toPulumiStringArray(arr []string) pulumi.StringArray {
// 	var pulumiArr pulumi.StringArray
// 	for _, v := range arr {
// 		pulumiArr = append(pulumiArr, pulumi.String(v))
// 	}
// 	return pulumiArr
// }
// ```
//
// ## Import
//
// Bastion Host Host Account can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import alicloud:bastionhost/hostAccountUserAttachment:HostAccountUserAttachment example <instance_id>:<user_id>:<host_id>
// ```
type HostAccountUserAttachment struct {
	pulumi.CustomResourceState

	// A list IDs of the host account.
	HostAccountIds pulumi.StringArrayOutput `pulumi:"hostAccountIds"`
	// The ID of the host.
	HostId pulumi.StringOutput `pulumi:"hostId"`
	// The ID of the Bastionhost instance where you want to authorize the user to manage the specified hosts and host accounts.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The ID of the user that you want to authorize to manage the specified hosts and host accounts.
	UserId pulumi.StringOutput `pulumi:"userId"`
}

// NewHostAccountUserAttachment registers a new resource with the given unique name, arguments, and options.
func NewHostAccountUserAttachment(ctx *pulumi.Context,
	name string, args *HostAccountUserAttachmentArgs, opts ...pulumi.ResourceOption) (*HostAccountUserAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.HostAccountIds == nil {
		return nil, errors.New("invalid value for required argument 'HostAccountIds'")
	}
	if args.HostId == nil {
		return nil, errors.New("invalid value for required argument 'HostId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.UserId == nil {
		return nil, errors.New("invalid value for required argument 'UserId'")
	}
	var resource HostAccountUserAttachment
	err := ctx.RegisterResource("alicloud:bastionhost/hostAccountUserAttachment:HostAccountUserAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHostAccountUserAttachment gets an existing HostAccountUserAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHostAccountUserAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HostAccountUserAttachmentState, opts ...pulumi.ResourceOption) (*HostAccountUserAttachment, error) {
	var resource HostAccountUserAttachment
	err := ctx.ReadResource("alicloud:bastionhost/hostAccountUserAttachment:HostAccountUserAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HostAccountUserAttachment resources.
type hostAccountUserAttachmentState struct {
	// A list IDs of the host account.
	HostAccountIds []string `pulumi:"hostAccountIds"`
	// The ID of the host.
	HostId *string `pulumi:"hostId"`
	// The ID of the Bastionhost instance where you want to authorize the user to manage the specified hosts and host accounts.
	InstanceId *string `pulumi:"instanceId"`
	// The ID of the user that you want to authorize to manage the specified hosts and host accounts.
	UserId *string `pulumi:"userId"`
}

type HostAccountUserAttachmentState struct {
	// A list IDs of the host account.
	HostAccountIds pulumi.StringArrayInput
	// The ID of the host.
	HostId pulumi.StringPtrInput
	// The ID of the Bastionhost instance where you want to authorize the user to manage the specified hosts and host accounts.
	InstanceId pulumi.StringPtrInput
	// The ID of the user that you want to authorize to manage the specified hosts and host accounts.
	UserId pulumi.StringPtrInput
}

func (HostAccountUserAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*hostAccountUserAttachmentState)(nil)).Elem()
}

type hostAccountUserAttachmentArgs struct {
	// A list IDs of the host account.
	HostAccountIds []string `pulumi:"hostAccountIds"`
	// The ID of the host.
	HostId string `pulumi:"hostId"`
	// The ID of the Bastionhost instance where you want to authorize the user to manage the specified hosts and host accounts.
	InstanceId string `pulumi:"instanceId"`
	// The ID of the user that you want to authorize to manage the specified hosts and host accounts.
	UserId string `pulumi:"userId"`
}

// The set of arguments for constructing a HostAccountUserAttachment resource.
type HostAccountUserAttachmentArgs struct {
	// A list IDs of the host account.
	HostAccountIds pulumi.StringArrayInput
	// The ID of the host.
	HostId pulumi.StringInput
	// The ID of the Bastionhost instance where you want to authorize the user to manage the specified hosts and host accounts.
	InstanceId pulumi.StringInput
	// The ID of the user that you want to authorize to manage the specified hosts and host accounts.
	UserId pulumi.StringInput
}

func (HostAccountUserAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hostAccountUserAttachmentArgs)(nil)).Elem()
}

type HostAccountUserAttachmentInput interface {
	pulumi.Input

	ToHostAccountUserAttachmentOutput() HostAccountUserAttachmentOutput
	ToHostAccountUserAttachmentOutputWithContext(ctx context.Context) HostAccountUserAttachmentOutput
}

func (*HostAccountUserAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((*HostAccountUserAttachment)(nil))
}

func (i *HostAccountUserAttachment) ToHostAccountUserAttachmentOutput() HostAccountUserAttachmentOutput {
	return i.ToHostAccountUserAttachmentOutputWithContext(context.Background())
}

func (i *HostAccountUserAttachment) ToHostAccountUserAttachmentOutputWithContext(ctx context.Context) HostAccountUserAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostAccountUserAttachmentOutput)
}

func (i *HostAccountUserAttachment) ToHostAccountUserAttachmentPtrOutput() HostAccountUserAttachmentPtrOutput {
	return i.ToHostAccountUserAttachmentPtrOutputWithContext(context.Background())
}

func (i *HostAccountUserAttachment) ToHostAccountUserAttachmentPtrOutputWithContext(ctx context.Context) HostAccountUserAttachmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostAccountUserAttachmentPtrOutput)
}

type HostAccountUserAttachmentPtrInput interface {
	pulumi.Input

	ToHostAccountUserAttachmentPtrOutput() HostAccountUserAttachmentPtrOutput
	ToHostAccountUserAttachmentPtrOutputWithContext(ctx context.Context) HostAccountUserAttachmentPtrOutput
}

type hostAccountUserAttachmentPtrType HostAccountUserAttachmentArgs

func (*hostAccountUserAttachmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostAccountUserAttachment)(nil))
}

func (i *hostAccountUserAttachmentPtrType) ToHostAccountUserAttachmentPtrOutput() HostAccountUserAttachmentPtrOutput {
	return i.ToHostAccountUserAttachmentPtrOutputWithContext(context.Background())
}

func (i *hostAccountUserAttachmentPtrType) ToHostAccountUserAttachmentPtrOutputWithContext(ctx context.Context) HostAccountUserAttachmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostAccountUserAttachmentPtrOutput)
}

// HostAccountUserAttachmentArrayInput is an input type that accepts HostAccountUserAttachmentArray and HostAccountUserAttachmentArrayOutput values.
// You can construct a concrete instance of `HostAccountUserAttachmentArrayInput` via:
//
//          HostAccountUserAttachmentArray{ HostAccountUserAttachmentArgs{...} }
type HostAccountUserAttachmentArrayInput interface {
	pulumi.Input

	ToHostAccountUserAttachmentArrayOutput() HostAccountUserAttachmentArrayOutput
	ToHostAccountUserAttachmentArrayOutputWithContext(context.Context) HostAccountUserAttachmentArrayOutput
}

type HostAccountUserAttachmentArray []HostAccountUserAttachmentInput

func (HostAccountUserAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*HostAccountUserAttachment)(nil))
}

func (i HostAccountUserAttachmentArray) ToHostAccountUserAttachmentArrayOutput() HostAccountUserAttachmentArrayOutput {
	return i.ToHostAccountUserAttachmentArrayOutputWithContext(context.Background())
}

func (i HostAccountUserAttachmentArray) ToHostAccountUserAttachmentArrayOutputWithContext(ctx context.Context) HostAccountUserAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostAccountUserAttachmentArrayOutput)
}

// HostAccountUserAttachmentMapInput is an input type that accepts HostAccountUserAttachmentMap and HostAccountUserAttachmentMapOutput values.
// You can construct a concrete instance of `HostAccountUserAttachmentMapInput` via:
//
//          HostAccountUserAttachmentMap{ "key": HostAccountUserAttachmentArgs{...} }
type HostAccountUserAttachmentMapInput interface {
	pulumi.Input

	ToHostAccountUserAttachmentMapOutput() HostAccountUserAttachmentMapOutput
	ToHostAccountUserAttachmentMapOutputWithContext(context.Context) HostAccountUserAttachmentMapOutput
}

type HostAccountUserAttachmentMap map[string]HostAccountUserAttachmentInput

func (HostAccountUserAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*HostAccountUserAttachment)(nil))
}

func (i HostAccountUserAttachmentMap) ToHostAccountUserAttachmentMapOutput() HostAccountUserAttachmentMapOutput {
	return i.ToHostAccountUserAttachmentMapOutputWithContext(context.Background())
}

func (i HostAccountUserAttachmentMap) ToHostAccountUserAttachmentMapOutputWithContext(ctx context.Context) HostAccountUserAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostAccountUserAttachmentMapOutput)
}

type HostAccountUserAttachmentOutput struct {
	*pulumi.OutputState
}

func (HostAccountUserAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostAccountUserAttachment)(nil))
}

func (o HostAccountUserAttachmentOutput) ToHostAccountUserAttachmentOutput() HostAccountUserAttachmentOutput {
	return o
}

func (o HostAccountUserAttachmentOutput) ToHostAccountUserAttachmentOutputWithContext(ctx context.Context) HostAccountUserAttachmentOutput {
	return o
}

func (o HostAccountUserAttachmentOutput) ToHostAccountUserAttachmentPtrOutput() HostAccountUserAttachmentPtrOutput {
	return o.ToHostAccountUserAttachmentPtrOutputWithContext(context.Background())
}

func (o HostAccountUserAttachmentOutput) ToHostAccountUserAttachmentPtrOutputWithContext(ctx context.Context) HostAccountUserAttachmentPtrOutput {
	return o.ApplyT(func(v HostAccountUserAttachment) *HostAccountUserAttachment {
		return &v
	}).(HostAccountUserAttachmentPtrOutput)
}

type HostAccountUserAttachmentPtrOutput struct {
	*pulumi.OutputState
}

func (HostAccountUserAttachmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostAccountUserAttachment)(nil))
}

func (o HostAccountUserAttachmentPtrOutput) ToHostAccountUserAttachmentPtrOutput() HostAccountUserAttachmentPtrOutput {
	return o
}

func (o HostAccountUserAttachmentPtrOutput) ToHostAccountUserAttachmentPtrOutputWithContext(ctx context.Context) HostAccountUserAttachmentPtrOutput {
	return o
}

type HostAccountUserAttachmentArrayOutput struct{ *pulumi.OutputState }

func (HostAccountUserAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HostAccountUserAttachment)(nil))
}

func (o HostAccountUserAttachmentArrayOutput) ToHostAccountUserAttachmentArrayOutput() HostAccountUserAttachmentArrayOutput {
	return o
}

func (o HostAccountUserAttachmentArrayOutput) ToHostAccountUserAttachmentArrayOutputWithContext(ctx context.Context) HostAccountUserAttachmentArrayOutput {
	return o
}

func (o HostAccountUserAttachmentArrayOutput) Index(i pulumi.IntInput) HostAccountUserAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HostAccountUserAttachment {
		return vs[0].([]HostAccountUserAttachment)[vs[1].(int)]
	}).(HostAccountUserAttachmentOutput)
}

type HostAccountUserAttachmentMapOutput struct{ *pulumi.OutputState }

func (HostAccountUserAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]HostAccountUserAttachment)(nil))
}

func (o HostAccountUserAttachmentMapOutput) ToHostAccountUserAttachmentMapOutput() HostAccountUserAttachmentMapOutput {
	return o
}

func (o HostAccountUserAttachmentMapOutput) ToHostAccountUserAttachmentMapOutputWithContext(ctx context.Context) HostAccountUserAttachmentMapOutput {
	return o
}

func (o HostAccountUserAttachmentMapOutput) MapIndex(k pulumi.StringInput) HostAccountUserAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) HostAccountUserAttachment {
		return vs[0].(map[string]HostAccountUserAttachment)[vs[1].(string)]
	}).(HostAccountUserAttachmentOutput)
}

func init() {
	pulumi.RegisterOutputType(HostAccountUserAttachmentOutput{})
	pulumi.RegisterOutputType(HostAccountUserAttachmentPtrOutput{})
	pulumi.RegisterOutputType(HostAccountUserAttachmentArrayOutput{})
	pulumi.RegisterOutputType(HostAccountUserAttachmentMapOutput{})
}
