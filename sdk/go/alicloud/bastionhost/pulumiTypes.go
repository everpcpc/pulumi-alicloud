// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package bastionhost

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetInstancesInstance struct {
	// The instance's remark.
	Description string `pulumi:"description"`
	// The instance's id.
	Id string `pulumi:"id"`
	// The instance's status.
	InstanceStatus string `pulumi:"instanceStatus"`
	LicenseCode    string `pulumi:"licenseCode"`
	// The instance's private domain name.
	PrivateDomain string `pulumi:"privateDomain"`
	// The instance's public domain name.
	PublicDomain string `pulumi:"publicDomain"`
	// The instance's public network access configuration.
	PublicNetworkAccess bool `pulumi:"publicNetworkAccess"`
	// The instance's security group configuration.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A map of tags assigned to the bastionhost instance. It must be in the format:
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/bastionhost"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := bastionhost.GetInstances(ctx, &bastionhost.GetInstancesArgs{
	// 			Tags: map[string]interface{}{
	// 				"tagKey1": "tagValue1",
	// 			},
	// 		}, nil)
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	Tags map[string]interface{} `pulumi:"tags"`
	// The instance's vSwitch ID.
	UserVswitchId string `pulumi:"userVswitchId"`
}

// GetInstancesInstanceInput is an input type that accepts GetInstancesInstanceArgs and GetInstancesInstanceOutput values.
// You can construct a concrete instance of `GetInstancesInstanceInput` via:
//
//          GetInstancesInstanceArgs{...}
type GetInstancesInstanceInput interface {
	pulumi.Input

	ToGetInstancesInstanceOutput() GetInstancesInstanceOutput
	ToGetInstancesInstanceOutputWithContext(context.Context) GetInstancesInstanceOutput
}

type GetInstancesInstanceArgs struct {
	// The instance's remark.
	Description pulumi.StringInput `pulumi:"description"`
	// The instance's id.
	Id pulumi.StringInput `pulumi:"id"`
	// The instance's status.
	InstanceStatus pulumi.StringInput `pulumi:"instanceStatus"`
	LicenseCode    pulumi.StringInput `pulumi:"licenseCode"`
	// The instance's private domain name.
	PrivateDomain pulumi.StringInput `pulumi:"privateDomain"`
	// The instance's public domain name.
	PublicDomain pulumi.StringInput `pulumi:"publicDomain"`
	// The instance's public network access configuration.
	PublicNetworkAccess pulumi.BoolInput `pulumi:"publicNetworkAccess"`
	// The instance's security group configuration.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// A map of tags assigned to the bastionhost instance. It must be in the format:
	// ```go
	// package main
	//
	// import (
	// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/bastionhost"
	// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	// )
	//
	// func main() {
	// 	pulumi.Run(func(ctx *pulumi.Context) error {
	// 		_, err := bastionhost.GetInstances(ctx, &bastionhost.GetInstancesArgs{
	// 			Tags: map[string]interface{}{
	// 				"tagKey1": "tagValue1",
	// 			},
	// 		}, nil)
	// 		if err != nil {
	// 			return err
	// 		}
	// 		return nil
	// 	})
	// }
	// ```
	Tags pulumi.MapInput `pulumi:"tags"`
	// The instance's vSwitch ID.
	UserVswitchId pulumi.StringInput `pulumi:"userVswitchId"`
}

func (GetInstancesInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return i.ToGetInstancesInstanceOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArgs) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceOutput)
}

// GetInstancesInstanceArrayInput is an input type that accepts GetInstancesInstanceArray and GetInstancesInstanceArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceArrayInput` via:
//
//          GetInstancesInstanceArray{ GetInstancesInstanceArgs{...} }
type GetInstancesInstanceArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput
	ToGetInstancesInstanceArrayOutputWithContext(context.Context) GetInstancesInstanceArrayOutput
}

type GetInstancesInstanceArray []GetInstancesInstanceInput

func (GetInstancesInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return i.ToGetInstancesInstanceArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceArray) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceArrayOutput)
}

type GetInstancesInstanceOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutput() GetInstancesInstanceOutput {
	return o
}

func (o GetInstancesInstanceOutput) ToGetInstancesInstanceOutputWithContext(ctx context.Context) GetInstancesInstanceOutput {
	return o
}

// The instance's remark.
func (o GetInstancesInstanceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Description }).(pulumi.StringOutput)
}

// The instance's id.
func (o GetInstancesInstanceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.Id }).(pulumi.StringOutput)
}

// The instance's status.
func (o GetInstancesInstanceOutput) InstanceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.InstanceStatus }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceOutput) LicenseCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.LicenseCode }).(pulumi.StringOutput)
}

// The instance's private domain name.
func (o GetInstancesInstanceOutput) PrivateDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PrivateDomain }).(pulumi.StringOutput)
}

// The instance's public domain name.
func (o GetInstancesInstanceOutput) PublicDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.PublicDomain }).(pulumi.StringOutput)
}

// The instance's public network access configuration.
func (o GetInstancesInstanceOutput) PublicNetworkAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstance) bool { return v.PublicNetworkAccess }).(pulumi.BoolOutput)
}

// The instance's security group configuration.
func (o GetInstancesInstanceOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstance) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// A map of tags assigned to the bastionhost instance. It must be in the format:
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/bastionhost"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := bastionhost.GetInstances(ctx, &bastionhost.GetInstancesArgs{
// 			Tags: map[string]interface{}{
// 				"tagKey1": "tagValue1",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func (o GetInstancesInstanceOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetInstancesInstance) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// The instance's vSwitch ID.
func (o GetInstancesInstanceOutput) UserVswitchId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstance) string { return v.UserVswitchId }).(pulumi.StringOutput)
}

type GetInstancesInstanceArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstance)(nil)).Elem()
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutput() GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) ToGetInstancesInstanceArrayOutputWithContext(ctx context.Context) GetInstancesInstanceArrayOutput {
	return o
}

func (o GetInstancesInstanceArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstance {
		return vs[0].([]GetInstancesInstance)[vs[1].(int)]
	}).(GetInstancesInstanceOutput)
}

type GetUserGroupsGroup struct {
	// Specify the New Group of Remark Information. Supports up to 500 Characters.
	Comment string `pulumi:"comment"`
	// The ID of the User Group.
	Id string `pulumi:"id"`
	// Specify the New Group of the Bastion Host of Instance Id.
	InstanceId string `pulumi:"instanceId"`
	// The User Group ID.
	UserGroupId string `pulumi:"userGroupId"`
	// Specify the New Group Name. Supports up to 128 Characters.
	UserGroupName string `pulumi:"userGroupName"`
}

// GetUserGroupsGroupInput is an input type that accepts GetUserGroupsGroupArgs and GetUserGroupsGroupOutput values.
// You can construct a concrete instance of `GetUserGroupsGroupInput` via:
//
//          GetUserGroupsGroupArgs{...}
type GetUserGroupsGroupInput interface {
	pulumi.Input

	ToGetUserGroupsGroupOutput() GetUserGroupsGroupOutput
	ToGetUserGroupsGroupOutputWithContext(context.Context) GetUserGroupsGroupOutput
}

type GetUserGroupsGroupArgs struct {
	// Specify the New Group of Remark Information. Supports up to 500 Characters.
	Comment pulumi.StringInput `pulumi:"comment"`
	// The ID of the User Group.
	Id pulumi.StringInput `pulumi:"id"`
	// Specify the New Group of the Bastion Host of Instance Id.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The User Group ID.
	UserGroupId pulumi.StringInput `pulumi:"userGroupId"`
	// Specify the New Group Name. Supports up to 128 Characters.
	UserGroupName pulumi.StringInput `pulumi:"userGroupName"`
}

func (GetUserGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupsGroup)(nil)).Elem()
}

func (i GetUserGroupsGroupArgs) ToGetUserGroupsGroupOutput() GetUserGroupsGroupOutput {
	return i.ToGetUserGroupsGroupOutputWithContext(context.Background())
}

func (i GetUserGroupsGroupArgs) ToGetUserGroupsGroupOutputWithContext(ctx context.Context) GetUserGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGroupsGroupOutput)
}

// GetUserGroupsGroupArrayInput is an input type that accepts GetUserGroupsGroupArray and GetUserGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetUserGroupsGroupArrayInput` via:
//
//          GetUserGroupsGroupArray{ GetUserGroupsGroupArgs{...} }
type GetUserGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetUserGroupsGroupArrayOutput() GetUserGroupsGroupArrayOutput
	ToGetUserGroupsGroupArrayOutputWithContext(context.Context) GetUserGroupsGroupArrayOutput
}

type GetUserGroupsGroupArray []GetUserGroupsGroupInput

func (GetUserGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGroupsGroup)(nil)).Elem()
}

func (i GetUserGroupsGroupArray) ToGetUserGroupsGroupArrayOutput() GetUserGroupsGroupArrayOutput {
	return i.ToGetUserGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetUserGroupsGroupArray) ToGetUserGroupsGroupArrayOutputWithContext(ctx context.Context) GetUserGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserGroupsGroupArrayOutput)
}

type GetUserGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetUserGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupsGroup)(nil)).Elem()
}

func (o GetUserGroupsGroupOutput) ToGetUserGroupsGroupOutput() GetUserGroupsGroupOutput {
	return o
}

func (o GetUserGroupsGroupOutput) ToGetUserGroupsGroupOutputWithContext(ctx context.Context) GetUserGroupsGroupOutput {
	return o
}

// Specify the New Group of Remark Information. Supports up to 500 Characters.
func (o GetUserGroupsGroupOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsGroup) string { return v.Comment }).(pulumi.StringOutput)
}

// The ID of the User Group.
func (o GetUserGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// Specify the New Group of the Bastion Host of Instance Id.
func (o GetUserGroupsGroupOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsGroup) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The User Group ID.
func (o GetUserGroupsGroupOutput) UserGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsGroup) string { return v.UserGroupId }).(pulumi.StringOutput)
}

// Specify the New Group Name. Supports up to 128 Characters.
func (o GetUserGroupsGroupOutput) UserGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsGroup) string { return v.UserGroupName }).(pulumi.StringOutput)
}

type GetUserGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetUserGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserGroupsGroup)(nil)).Elem()
}

func (o GetUserGroupsGroupArrayOutput) ToGetUserGroupsGroupArrayOutput() GetUserGroupsGroupArrayOutput {
	return o
}

func (o GetUserGroupsGroupArrayOutput) ToGetUserGroupsGroupArrayOutputWithContext(ctx context.Context) GetUserGroupsGroupArrayOutput {
	return o
}

func (o GetUserGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetUserGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserGroupsGroup {
		return vs[0].([]GetUserGroupsGroup)[vs[1].(int)]
	}).(GetUserGroupsGroupOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstancesInstanceOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceArrayOutput{})
	pulumi.RegisterOutputType(GetUserGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetUserGroupsGroupArrayOutput{})
}
