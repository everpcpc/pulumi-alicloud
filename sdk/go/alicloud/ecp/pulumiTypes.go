// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetKeyPairsPair struct {
	// The ID of the Key Pair. Its value is same as Queue Name.
	Id string `pulumi:"id"`
	// The Private Key of the Fingerprint.
	KeyPairFingerPrint string `pulumi:"keyPairFingerPrint"`
	// The Key Name.
	KeyPairName string `pulumi:"keyPairName"`
}

// GetKeyPairsPairInput is an input type that accepts GetKeyPairsPairArgs and GetKeyPairsPairOutput values.
// You can construct a concrete instance of `GetKeyPairsPairInput` via:
//
//          GetKeyPairsPairArgs{...}
type GetKeyPairsPairInput interface {
	pulumi.Input

	ToGetKeyPairsPairOutput() GetKeyPairsPairOutput
	ToGetKeyPairsPairOutputWithContext(context.Context) GetKeyPairsPairOutput
}

type GetKeyPairsPairArgs struct {
	// The ID of the Key Pair. Its value is same as Queue Name.
	Id pulumi.StringInput `pulumi:"id"`
	// The Private Key of the Fingerprint.
	KeyPairFingerPrint pulumi.StringInput `pulumi:"keyPairFingerPrint"`
	// The Key Name.
	KeyPairName pulumi.StringInput `pulumi:"keyPairName"`
}

func (GetKeyPairsPairArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyPairsPair)(nil)).Elem()
}

func (i GetKeyPairsPairArgs) ToGetKeyPairsPairOutput() GetKeyPairsPairOutput {
	return i.ToGetKeyPairsPairOutputWithContext(context.Background())
}

func (i GetKeyPairsPairArgs) ToGetKeyPairsPairOutputWithContext(ctx context.Context) GetKeyPairsPairOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyPairsPairOutput)
}

// GetKeyPairsPairArrayInput is an input type that accepts GetKeyPairsPairArray and GetKeyPairsPairArrayOutput values.
// You can construct a concrete instance of `GetKeyPairsPairArrayInput` via:
//
//          GetKeyPairsPairArray{ GetKeyPairsPairArgs{...} }
type GetKeyPairsPairArrayInput interface {
	pulumi.Input

	ToGetKeyPairsPairArrayOutput() GetKeyPairsPairArrayOutput
	ToGetKeyPairsPairArrayOutputWithContext(context.Context) GetKeyPairsPairArrayOutput
}

type GetKeyPairsPairArray []GetKeyPairsPairInput

func (GetKeyPairsPairArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyPairsPair)(nil)).Elem()
}

func (i GetKeyPairsPairArray) ToGetKeyPairsPairArrayOutput() GetKeyPairsPairArrayOutput {
	return i.ToGetKeyPairsPairArrayOutputWithContext(context.Background())
}

func (i GetKeyPairsPairArray) ToGetKeyPairsPairArrayOutputWithContext(ctx context.Context) GetKeyPairsPairArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKeyPairsPairArrayOutput)
}

type GetKeyPairsPairOutput struct{ *pulumi.OutputState }

func (GetKeyPairsPairOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyPairsPair)(nil)).Elem()
}

func (o GetKeyPairsPairOutput) ToGetKeyPairsPairOutput() GetKeyPairsPairOutput {
	return o
}

func (o GetKeyPairsPairOutput) ToGetKeyPairsPairOutputWithContext(ctx context.Context) GetKeyPairsPairOutput {
	return o
}

// The ID of the Key Pair. Its value is same as Queue Name.
func (o GetKeyPairsPairOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsPair) string { return v.Id }).(pulumi.StringOutput)
}

// The Private Key of the Fingerprint.
func (o GetKeyPairsPairOutput) KeyPairFingerPrint() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsPair) string { return v.KeyPairFingerPrint }).(pulumi.StringOutput)
}

// The Key Name.
func (o GetKeyPairsPairOutput) KeyPairName() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyPairsPair) string { return v.KeyPairName }).(pulumi.StringOutput)
}

type GetKeyPairsPairArrayOutput struct{ *pulumi.OutputState }

func (GetKeyPairsPairArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKeyPairsPair)(nil)).Elem()
}

func (o GetKeyPairsPairArrayOutput) ToGetKeyPairsPairArrayOutput() GetKeyPairsPairArrayOutput {
	return o
}

func (o GetKeyPairsPairArrayOutput) ToGetKeyPairsPairArrayOutputWithContext(ctx context.Context) GetKeyPairsPairArrayOutput {
	return o
}

func (o GetKeyPairsPairArrayOutput) Index(i pulumi.IntInput) GetKeyPairsPairOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKeyPairsPair {
		return vs[0].([]GetKeyPairsPair)[vs[1].(int)]
	}).(GetKeyPairsPairOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyPairsPairInput)(nil)).Elem(), GetKeyPairsPairArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKeyPairsPairArrayInput)(nil)).Elem(), GetKeyPairsPairArray{})
	pulumi.RegisterOutputType(GetKeyPairsPairOutput{})
	pulumi.RegisterOutputType(GetKeyPairsPairArrayOutput{})
}
