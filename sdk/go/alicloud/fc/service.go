// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fc

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/fc_service.html.markdown.
type Service struct {
	s *pulumi.ResourceState
}

// NewService registers a new resource with the given unique name, arguments, and options.
func NewService(ctx *pulumi.Context,
	name string, args *ServiceArgs, opts ...pulumi.ResourceOpt) (*Service, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["internetAccess"] = nil
		inputs["logConfig"] = nil
		inputs["name"] = nil
		inputs["namePrefix"] = nil
		inputs["role"] = nil
		inputs["vpcConfig"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["internetAccess"] = args.InternetAccess
		inputs["logConfig"] = args.LogConfig
		inputs["name"] = args.Name
		inputs["namePrefix"] = args.NamePrefix
		inputs["role"] = args.Role
		inputs["vpcConfig"] = args.VpcConfig
	}
	inputs["lastModified"] = nil
	inputs["serviceId"] = nil
	s, err := ctx.RegisterResource("alicloud:fc/service:Service", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Service{s: s}, nil
}

// GetService gets an existing Service resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetService(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ServiceState, opts ...pulumi.ResourceOpt) (*Service, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["description"] = state.Description
		inputs["internetAccess"] = state.InternetAccess
		inputs["lastModified"] = state.LastModified
		inputs["logConfig"] = state.LogConfig
		inputs["name"] = state.Name
		inputs["namePrefix"] = state.NamePrefix
		inputs["role"] = state.Role
		inputs["serviceId"] = state.ServiceId
		inputs["vpcConfig"] = state.VpcConfig
	}
	s, err := ctx.ReadResource("alicloud:fc/service:Service", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Service{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Service) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Service) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The function compute service description.
func (r *Service) Description() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["description"])
}

// Whether to allow the service to access Internet. Default to "true".
func (r *Service) InternetAccess() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["internetAccess"])
}

// The date this resource was last modified.
func (r *Service) LastModified() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["lastModified"])
}

// Provide this to store your FC service logs. Fields documented below. See [Create a Service](https://www.alibabacloud.com/help/doc-detail/51924.htm).
func (r *Service) LogConfig() pulumi.Output {
	return r.s.State["logConfig"]
}

// The Function Compute service name. It is the only in one Alicloud account and is conflict with "namePrefix".
func (r *Service) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// Setting a prefix to get a only name. It is conflict with "name".
func (r *Service) NamePrefix() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["namePrefix"])
}

// RAM role arn attached to the Function Compute service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
func (r *Service) Role() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["role"])
}

// The Function Compute service ID.
func (r *Service) ServiceId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["serviceId"])
}

// Provide this to allow your FC service to access your VPC. Fields documented below. See [Function Compute Service in VPC](https://www.alibabacloud.com/help/faq-detail/72959.htm).
func (r *Service) VpcConfig() pulumi.Output {
	return r.s.State["vpcConfig"]
}

// Input properties used for looking up and filtering Service resources.
type ServiceState struct {
	// The function compute service description.
	Description interface{}
	// Whether to allow the service to access Internet. Default to "true".
	InternetAccess interface{}
	// The date this resource was last modified.
	LastModified interface{}
	// Provide this to store your FC service logs. Fields documented below. See [Create a Service](https://www.alibabacloud.com/help/doc-detail/51924.htm).
	LogConfig interface{}
	// The Function Compute service name. It is the only in one Alicloud account and is conflict with "namePrefix".
	Name interface{}
	// Setting a prefix to get a only name. It is conflict with "name".
	NamePrefix interface{}
	// RAM role arn attached to the Function Compute service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
	Role interface{}
	// The Function Compute service ID.
	ServiceId interface{}
	// Provide this to allow your FC service to access your VPC. Fields documented below. See [Function Compute Service in VPC](https://www.alibabacloud.com/help/faq-detail/72959.htm).
	VpcConfig interface{}
}

// The set of arguments for constructing a Service resource.
type ServiceArgs struct {
	// The function compute service description.
	Description interface{}
	// Whether to allow the service to access Internet. Default to "true".
	InternetAccess interface{}
	// Provide this to store your FC service logs. Fields documented below. See [Create a Service](https://www.alibabacloud.com/help/doc-detail/51924.htm).
	LogConfig interface{}
	// The Function Compute service name. It is the only in one Alicloud account and is conflict with "namePrefix".
	Name interface{}
	// Setting a prefix to get a only name. It is conflict with "name".
	NamePrefix interface{}
	// RAM role arn attached to the Function Compute service. This governs both who / what can invoke your Function, as well as what resources our Function has access to. See [User Permissions](https://www.alibabacloud.com/help/doc-detail/52885.htm) for more details.
	Role interface{}
	// Provide this to allow your FC service to access your VPC. Fields documented below. See [Function Compute Service in VPC](https://www.alibabacloud.com/help/faq-detail/72959.htm).
	VpcConfig interface{}
}
