// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an ECS Elastic Network Interface resource.
// 
// For information about Elastic Network Interface and how to use it, see [Elastic Network Interface](https://www.alibabacloud.com/help/doc-detail/58496.html).
// 
// > **NOTE** Only one of privateIps or privateIpsCount can be specified when assign private IPs. 
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/network_interface.html.markdown.
type NetworkInterface struct {
	s *pulumi.ResourceState
}

// NewNetworkInterface registers a new resource with the given unique name, arguments, and options.
func NewNetworkInterface(ctx *pulumi.Context,
	name string, args *NetworkInterfaceArgs, opts ...pulumi.ResourceOpt) (*NetworkInterface, error) {
	if args == nil || args.SecurityGroups == nil {
		return nil, errors.New("missing required argument 'SecurityGroups'")
	}
	if args == nil || args.VswitchId == nil {
		return nil, errors.New("missing required argument 'VswitchId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["name"] = nil
		inputs["privateIp"] = nil
		inputs["privateIps"] = nil
		inputs["privateIpsCount"] = nil
		inputs["resourceGroupId"] = nil
		inputs["securityGroups"] = nil
		inputs["tags"] = nil
		inputs["vswitchId"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["name"] = args.Name
		inputs["privateIp"] = args.PrivateIp
		inputs["privateIps"] = args.PrivateIps
		inputs["privateIpsCount"] = args.PrivateIpsCount
		inputs["resourceGroupId"] = args.ResourceGroupId
		inputs["securityGroups"] = args.SecurityGroups
		inputs["tags"] = args.Tags
		inputs["vswitchId"] = args.VswitchId
	}
	inputs["mac"] = nil
	s, err := ctx.RegisterResource("alicloud:vpc/networkInterface:NetworkInterface", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NetworkInterface{s: s}, nil
}

// GetNetworkInterface gets an existing NetworkInterface resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkInterface(ctx *pulumi.Context,
	name string, id pulumi.ID, state *NetworkInterfaceState, opts ...pulumi.ResourceOpt) (*NetworkInterface, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["description"] = state.Description
		inputs["mac"] = state.Mac
		inputs["name"] = state.Name
		inputs["privateIp"] = state.PrivateIp
		inputs["privateIps"] = state.PrivateIps
		inputs["privateIpsCount"] = state.PrivateIpsCount
		inputs["resourceGroupId"] = state.ResourceGroupId
		inputs["securityGroups"] = state.SecurityGroups
		inputs["tags"] = state.Tags
		inputs["vswitchId"] = state.VswitchId
	}
	s, err := ctx.ReadResource("alicloud:vpc/networkInterface:NetworkInterface", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NetworkInterface{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *NetworkInterface) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *NetworkInterface) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Description of the ENI. This description can have a string of 2 to 256 characters, It cannot begin with http:// or https://. Default value is null.
func (r *NetworkInterface) Description() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["description"])
}

// (Available in 1.54.0+) The MAC address of an ENI.
func (r *NetworkInterface) Mac() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["mac"])
}

// Name of the ENI. This name can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-", ".", "_", and must not begin or end with a hyphen, and must not begin with http:// or https://. Default value is null.
func (r *NetworkInterface) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// The primary private IP of the ENI.
func (r *NetworkInterface) PrivateIp() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["privateIp"])
}

// List of secondary private IPs to assign to the ENI. Don't use both privateIps and privateIpsCount in the same ENI resource block.
func (r *NetworkInterface) PrivateIps() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["privateIps"])
}

// Number of secondary private IPs to assign to the ENI. Don't use both privateIps and privateIpsCount in the same ENI resource block.
func (r *NetworkInterface) PrivateIpsCount() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["privateIpsCount"])
}

// The Id of resource group which the network interface belongs.
func (r *NetworkInterface) ResourceGroupId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGroupId"])
}

// A list of security group ids to associate with.
func (r *NetworkInterface) SecurityGroups() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["securityGroups"])
}

// A mapping of tags to assign to the resource.
func (r *NetworkInterface) Tags() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["tags"])
}

// The VSwitch to create the ENI in.
func (r *NetworkInterface) VswitchId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["vswitchId"])
}

// Input properties used for looking up and filtering NetworkInterface resources.
type NetworkInterfaceState struct {
	// Description of the ENI. This description can have a string of 2 to 256 characters, It cannot begin with http:// or https://. Default value is null.
	Description interface{}
	// (Available in 1.54.0+) The MAC address of an ENI.
	Mac interface{}
	// Name of the ENI. This name can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-", ".", "_", and must not begin or end with a hyphen, and must not begin with http:// or https://. Default value is null.
	Name interface{}
	// The primary private IP of the ENI.
	PrivateIp interface{}
	// List of secondary private IPs to assign to the ENI. Don't use both privateIps and privateIpsCount in the same ENI resource block.
	PrivateIps interface{}
	// Number of secondary private IPs to assign to the ENI. Don't use both privateIps and privateIpsCount in the same ENI resource block.
	PrivateIpsCount interface{}
	// The Id of resource group which the network interface belongs.
	ResourceGroupId interface{}
	// A list of security group ids to associate with.
	SecurityGroups interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// The VSwitch to create the ENI in.
	VswitchId interface{}
}

// The set of arguments for constructing a NetworkInterface resource.
type NetworkInterfaceArgs struct {
	// Description of the ENI. This description can have a string of 2 to 256 characters, It cannot begin with http:// or https://. Default value is null.
	Description interface{}
	// Name of the ENI. This name can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-", ".", "_", and must not begin or end with a hyphen, and must not begin with http:// or https://. Default value is null.
	Name interface{}
	// The primary private IP of the ENI.
	PrivateIp interface{}
	// List of secondary private IPs to assign to the ENI. Don't use both privateIps and privateIpsCount in the same ENI resource block.
	PrivateIps interface{}
	// Number of secondary private IPs to assign to the ENI. Don't use both privateIps and privateIpsCount in the same ENI resource block.
	PrivateIpsCount interface{}
	// The Id of resource group which the network interface belongs.
	ResourceGroupId interface{}
	// A list of security group ids to associate with.
	SecurityGroups interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// The VSwitch to create the ENI in.
	VswitchId interface{}
}
