// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/common_bandwidth_package.html.markdown.
type CommonBandwithPackage struct {
	s *pulumi.ResourceState
}

// NewCommonBandwithPackage registers a new resource with the given unique name, arguments, and options.
func NewCommonBandwithPackage(ctx *pulumi.Context,
	name string, args *CommonBandwithPackageArgs, opts ...pulumi.ResourceOpt) (*CommonBandwithPackage, error) {
	if args == nil || args.Bandwidth == nil {
		return nil, errors.New("missing required argument 'Bandwidth'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["bandwidth"] = nil
		inputs["description"] = nil
		inputs["internetChargeType"] = nil
		inputs["name"] = nil
		inputs["ratio"] = nil
		inputs["resourceGroupId"] = nil
	} else {
		inputs["bandwidth"] = args.Bandwidth
		inputs["description"] = args.Description
		inputs["internetChargeType"] = args.InternetChargeType
		inputs["name"] = args.Name
		inputs["ratio"] = args.Ratio
		inputs["resourceGroupId"] = args.ResourceGroupId
	}
	s, err := ctx.RegisterResource("alicloud:vpc/commonBandwithPackage:CommonBandwithPackage", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &CommonBandwithPackage{s: s}, nil
}

// GetCommonBandwithPackage gets an existing CommonBandwithPackage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCommonBandwithPackage(ctx *pulumi.Context,
	name string, id pulumi.ID, state *CommonBandwithPackageState, opts ...pulumi.ResourceOpt) (*CommonBandwithPackage, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["bandwidth"] = state.Bandwidth
		inputs["description"] = state.Description
		inputs["internetChargeType"] = state.InternetChargeType
		inputs["name"] = state.Name
		inputs["ratio"] = state.Ratio
		inputs["resourceGroupId"] = state.ResourceGroupId
	}
	s, err := ctx.ReadResource("alicloud:vpc/commonBandwithPackage:CommonBandwithPackage", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &CommonBandwithPackage{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *CommonBandwithPackage) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *CommonBandwithPackage) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The bandwidth of the common bandwidth package, in Mbps.
func (r *CommonBandwithPackage) Bandwidth() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["bandwidth"])
}

// The description of the common bandwidth package instance.
func (r *CommonBandwithPackage) Description() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["description"])
}

// The billing method of the common bandwidth package. Valid values are "PayByBandwidth" and "PayBy95" and "PayByTraffic". "PayBy95" is pay by classic 95th percentile pricing. International Account doesn't supports "PayByBandwidth" and "PayBy95". Default to "PayByTraffic".
func (r *CommonBandwithPackage) InternetChargeType() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["internetChargeType"])
}

// The name of the common bandwidth package.
func (r *CommonBandwithPackage) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

// Ratio of the common bandwidth package. It is valid when `internetChargeType` is `PayBy95`. Default to 100. Valid values: [10-100].
func (r *CommonBandwithPackage) Ratio() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["ratio"])
}

// The Id of resource group which the common bandwidth package belongs.
func (r *CommonBandwithPackage) ResourceGroupId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["resourceGroupId"])
}

// Input properties used for looking up and filtering CommonBandwithPackage resources.
type CommonBandwithPackageState struct {
	// The bandwidth of the common bandwidth package, in Mbps.
	Bandwidth interface{}
	// The description of the common bandwidth package instance.
	Description interface{}
	// The billing method of the common bandwidth package. Valid values are "PayByBandwidth" and "PayBy95" and "PayByTraffic". "PayBy95" is pay by classic 95th percentile pricing. International Account doesn't supports "PayByBandwidth" and "PayBy95". Default to "PayByTraffic".
	InternetChargeType interface{}
	// The name of the common bandwidth package.
	Name interface{}
	// Ratio of the common bandwidth package. It is valid when `internetChargeType` is `PayBy95`. Default to 100. Valid values: [10-100].
	Ratio interface{}
	// The Id of resource group which the common bandwidth package belongs.
	ResourceGroupId interface{}
}

// The set of arguments for constructing a CommonBandwithPackage resource.
type CommonBandwithPackageArgs struct {
	// The bandwidth of the common bandwidth package, in Mbps.
	Bandwidth interface{}
	// The description of the common bandwidth package instance.
	Description interface{}
	// The billing method of the common bandwidth package. Valid values are "PayByBandwidth" and "PayBy95" and "PayByTraffic". "PayBy95" is pay by classic 95th percentile pricing. International Account doesn't supports "PayByBandwidth" and "PayBy95". Default to "PayByTraffic".
	InternetChargeType interface{}
	// The name of the common bandwidth package.
	Name interface{}
	// Ratio of the common bandwidth package. It is valid when `internetChargeType` is `PayBy95`. Default to 100. Valid values: [10-100].
	Ratio interface{}
	// The Id of resource group which the common bandwidth package belongs.
	ResourceGroupId interface{}
}
