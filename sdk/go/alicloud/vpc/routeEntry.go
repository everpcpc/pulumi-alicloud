// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type RouteEntry struct {
	s *pulumi.ResourceState
}

// NewRouteEntry registers a new resource with the given unique name, arguments, and options.
func NewRouteEntry(ctx *pulumi.Context,
	name string, args *RouteEntryArgs, opts ...pulumi.ResourceOpt) (*RouteEntry, error) {
	if args == nil || args.RouteTableId == nil {
		return nil, errors.New("missing required argument 'RouteTableId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["destinationCidrblock"] = nil
		inputs["nexthopId"] = nil
		inputs["nexthopType"] = nil
		inputs["routeTableId"] = nil
		inputs["routerId"] = nil
	} else {
		inputs["destinationCidrblock"] = args.DestinationCidrblock
		inputs["nexthopId"] = args.NexthopId
		inputs["nexthopType"] = args.NexthopType
		inputs["routeTableId"] = args.RouteTableId
		inputs["routerId"] = args.RouterId
	}
	s, err := ctx.RegisterResource("alicloud:vpc/routeEntry:RouteEntry", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RouteEntry{s: s}, nil
}

// GetRouteEntry gets an existing RouteEntry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouteEntry(ctx *pulumi.Context,
	name string, id pulumi.ID, state *RouteEntryState, opts ...pulumi.ResourceOpt) (*RouteEntry, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["destinationCidrblock"] = state.DestinationCidrblock
		inputs["nexthopId"] = state.NexthopId
		inputs["nexthopType"] = state.NexthopType
		inputs["routeTableId"] = state.RouteTableId
		inputs["routerId"] = state.RouterId
	}
	s, err := ctx.ReadResource("alicloud:vpc/routeEntry:RouteEntry", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RouteEntry{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *RouteEntry) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *RouteEntry) ID() *pulumi.IDOutput {
	return r.s.ID
}

func (r *RouteEntry) DestinationCidrblock() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["destinationCidrblock"])
}

func (r *RouteEntry) NexthopId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["nexthopId"])
}

func (r *RouteEntry) NexthopType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["nexthopType"])
}

func (r *RouteEntry) RouteTableId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["routeTableId"])
}

func (r *RouteEntry) RouterId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["routerId"])
}

// Input properties used for looking up and filtering RouteEntry resources.
type RouteEntryState struct {
	DestinationCidrblock interface{}
	NexthopId interface{}
	NexthopType interface{}
	RouteTableId interface{}
	RouterId interface{}
}

// The set of arguments for constructing a RouteEntry resource.
type RouteEntryArgs struct {
	DestinationCidrblock interface{}
	NexthopId interface{}
	NexthopType interface{}
	RouteTableId interface{}
	RouterId interface{}
}
