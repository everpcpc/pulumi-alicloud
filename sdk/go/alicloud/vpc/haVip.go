// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a HaVip resource.
// 
// ~> **NOTE:** Terraform will auto build havip instance  while it uses `alicloud_havip` to build a havip resource.
type HaVip struct {
	s *pulumi.ResourceState
}

// NewHaVip registers a new resource with the given unique name, arguments, and options.
func NewHaVip(ctx *pulumi.Context,
	name string, args *HaVipArgs, opts ...pulumi.ResourceOpt) (*HaVip, error) {
	if args == nil || args.VswitchId == nil {
		return nil, errors.New("missing required argument 'VswitchId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["ipAddress"] = nil
		inputs["vswitchId"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["ipAddress"] = args.IpAddress
		inputs["vswitchId"] = args.VswitchId
	}
	s, err := ctx.RegisterResource("alicloud:vpc/haVip:HaVip", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &HaVip{s: s}, nil
}

// GetHaVip gets an existing HaVip resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHaVip(ctx *pulumi.Context,
	name string, id pulumi.ID, state *HaVipState, opts ...pulumi.ResourceOpt) (*HaVip, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["description"] = state.Description
		inputs["ipAddress"] = state.IpAddress
		inputs["vswitchId"] = state.VswitchId
	}
	s, err := ctx.ReadResource("alicloud:vpc/haVip:HaVip", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &HaVip{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *HaVip) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *HaVip) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The description of the HaVip instance.
func (r *HaVip) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// The ip address of the HaVip. If not filled, the default will be assigned one from the vswitch.
func (r *HaVip) IpAddress() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["ipAddress"])
}

// The vswitch_id of the HaVip, the field can't be changed.
func (r *HaVip) VswitchId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["vswitchId"])
}

// Input properties used for looking up and filtering HaVip resources.
type HaVipState struct {
	// The description of the HaVip instance.
	Description interface{}
	// The ip address of the HaVip. If not filled, the default will be assigned one from the vswitch.
	IpAddress interface{}
	// The vswitch_id of the HaVip, the field can't be changed.
	VswitchId interface{}
}

// The set of arguments for constructing a HaVip resource.
type HaVipArgs struct {
	// The description of the HaVip instance.
	Description interface{}
	// The ip address of the HaVip. If not filled, the default will be assigned one from the vswitch.
	IpAddress interface{}
	// The vswitch_id of the HaVip, the field can't be changed.
	VswitchId interface{}
}
