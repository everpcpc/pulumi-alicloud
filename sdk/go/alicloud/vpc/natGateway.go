// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a resource to create a VPC NAT Gateway.
// 
// 
// ~> **NOTE:** Resource bandwidth packages will not be supported since 00:00 on November 4, 2017, and public IP can be replaced be elastic IPs.
// If a Nat Gateway has already bought some bandwidth packages, it can not bind elastic IP and you have to submit the [work order](https://selfservice.console.aliyun.com/ticket/createIndex) to solve.
// If you want to add public IP, you can use resource 'alicloud_eip_association' to bind several elastic IPs for one Nat Gateway.
// 
// ~> **NOTE:** From version 1.7.1, this resource has deprecated bandwidth packages.
// But, in order to manage stock bandwidth packages, version 1.13.0 re-support configuring 'bandwidth_packages'.
// 
type NatGateway struct {
	s *pulumi.ResourceState
}

// NewNatGateway registers a new resource with the given unique name, arguments, and options.
func NewNatGateway(ctx *pulumi.Context,
	name string, args *NatGatewayArgs, opts ...pulumi.ResourceOpt) (*NatGateway, error) {
	if args == nil || args.VpcId == nil {
		return nil, errors.New("missing required argument 'VpcId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["bandwidthPackages"] = nil
		inputs["description"] = nil
		inputs["name"] = nil
		inputs["spec"] = nil
		inputs["specification"] = nil
		inputs["vpcId"] = nil
	} else {
		inputs["bandwidthPackages"] = args.BandwidthPackages
		inputs["description"] = args.Description
		inputs["name"] = args.Name
		inputs["spec"] = args.Spec
		inputs["specification"] = args.Specification
		inputs["vpcId"] = args.VpcId
	}
	inputs["bandwidthPackageIds"] = nil
	inputs["forwardTableIds"] = nil
	inputs["snatTableIds"] = nil
	s, err := ctx.RegisterResource("alicloud:vpc/natGateway:NatGateway", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NatGateway{s: s}, nil
}

// GetNatGateway gets an existing NatGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNatGateway(ctx *pulumi.Context,
	name string, id pulumi.ID, state *NatGatewayState, opts ...pulumi.ResourceOpt) (*NatGateway, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["bandwidthPackageIds"] = state.BandwidthPackageIds
		inputs["bandwidthPackages"] = state.BandwidthPackages
		inputs["description"] = state.Description
		inputs["forwardTableIds"] = state.ForwardTableIds
		inputs["name"] = state.Name
		inputs["snatTableIds"] = state.SnatTableIds
		inputs["spec"] = state.Spec
		inputs["specification"] = state.Specification
		inputs["vpcId"] = state.VpcId
	}
	s, err := ctx.ReadResource("alicloud:vpc/natGateway:NatGateway", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NatGateway{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *NatGateway) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *NatGateway) ID() *pulumi.IDOutput {
	return r.s.ID
}

// A list ID of the bandwidth packages, and split them with commas
func (r *NatGateway) BandwidthPackageIds() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["bandwidthPackageIds"])
}

// A list of bandwidth packages for the nat gatway. Only support nat gateway created before 00:00 on November 4, 2017. Available in v1.13.0+ and v1.7.1-.
func (r *NatGateway) BandwidthPackages() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["bandwidthPackages"])
}

// Description of the nat gateway, This description can have a string of 2 to 256 characters, It cannot begin with http:// or https://. Defaults to null.
func (r *NatGateway) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// The nat gateway will auto create a snap and forward item, the `forward_table_ids` is the created one.
func (r *NatGateway) ForwardTableIds() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["forwardTableIds"])
}

// Name of the nat gateway. The value can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin or end with a hyphen, and must not begin with http:// or https://. Defaults to null.
func (r *NatGateway) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The nat gateway will auto create a snap and forward item, the `snat_table_ids` is the created one.
func (r *NatGateway) SnatTableIds() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["snatTableIds"])
}

// It has been deprecated from provider version 1.7.1, and new field 'specification' can replace it.
func (r *NatGateway) Spec() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["spec"])
}

// The specification of the nat gateway. Valid values are `Small`, `Middle` and `Large`. Default to `Small`. Details refer to [Nat Gateway Specification](https://www.alibabacloud.com/help/doc-detail/42757.htm).
func (r *NatGateway) Specification() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["specification"])
}

// The VPC ID.
func (r *NatGateway) VpcId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["vpcId"])
}

// Input properties used for looking up and filtering NatGateway resources.
type NatGatewayState struct {
	// A list ID of the bandwidth packages, and split them with commas
	BandwidthPackageIds interface{}
	// A list of bandwidth packages for the nat gatway. Only support nat gateway created before 00:00 on November 4, 2017. Available in v1.13.0+ and v1.7.1-.
	BandwidthPackages interface{}
	// Description of the nat gateway, This description can have a string of 2 to 256 characters, It cannot begin with http:// or https://. Defaults to null.
	Description interface{}
	// The nat gateway will auto create a snap and forward item, the `forward_table_ids` is the created one.
	ForwardTableIds interface{}
	// Name of the nat gateway. The value can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin or end with a hyphen, and must not begin with http:// or https://. Defaults to null.
	Name interface{}
	// The nat gateway will auto create a snap and forward item, the `snat_table_ids` is the created one.
	SnatTableIds interface{}
	// It has been deprecated from provider version 1.7.1, and new field 'specification' can replace it.
	Spec interface{}
	// The specification of the nat gateway. Valid values are `Small`, `Middle` and `Large`. Default to `Small`. Details refer to [Nat Gateway Specification](https://www.alibabacloud.com/help/doc-detail/42757.htm).
	Specification interface{}
	// The VPC ID.
	VpcId interface{}
}

// The set of arguments for constructing a NatGateway resource.
type NatGatewayArgs struct {
	// A list of bandwidth packages for the nat gatway. Only support nat gateway created before 00:00 on November 4, 2017. Available in v1.13.0+ and v1.7.1-.
	BandwidthPackages interface{}
	// Description of the nat gateway, This description can have a string of 2 to 256 characters, It cannot begin with http:// or https://. Defaults to null.
	Description interface{}
	// Name of the nat gateway. The value can have a string of 2 to 128 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin or end with a hyphen, and must not begin with http:// or https://. Defaults to null.
	Name interface{}
	// It has been deprecated from provider version 1.7.1, and new field 'specification' can replace it.
	Spec interface{}
	// The specification of the nat gateway. Valid values are `Small`, `Middle` and `Large`. Default to `Small`. Details refer to [Nat Gateway Specification](https://www.alibabacloud.com/help/doc-detail/42757.htm).
	Specification interface{}
	// The VPC ID.
	VpcId interface{}
}
