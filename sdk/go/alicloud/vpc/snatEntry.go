// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type SnatEntry struct {
	s *pulumi.ResourceState
}

// NewSnatEntry registers a new resource with the given unique name, arguments, and options.
func NewSnatEntry(ctx *pulumi.Context,
	name string, args *SnatEntryArgs, opts ...pulumi.ResourceOpt) (*SnatEntry, error) {
	if args == nil || args.SnatIp == nil {
		return nil, errors.New("missing required argument 'SnatIp'")
	}
	if args == nil || args.SnatTableId == nil {
		return nil, errors.New("missing required argument 'SnatTableId'")
	}
	if args == nil || args.SourceVswitchId == nil {
		return nil, errors.New("missing required argument 'SourceVswitchId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["snatIp"] = nil
		inputs["snatTableId"] = nil
		inputs["sourceVswitchId"] = nil
	} else {
		inputs["snatIp"] = args.SnatIp
		inputs["snatTableId"] = args.SnatTableId
		inputs["sourceVswitchId"] = args.SourceVswitchId
	}
	s, err := ctx.RegisterResource("alicloud:vpc/snatEntry:SnatEntry", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &SnatEntry{s: s}, nil
}

// GetSnatEntry gets an existing SnatEntry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSnatEntry(ctx *pulumi.Context,
	name string, id pulumi.ID, state *SnatEntryState, opts ...pulumi.ResourceOpt) (*SnatEntry, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["snatIp"] = state.SnatIp
		inputs["snatTableId"] = state.SnatTableId
		inputs["sourceVswitchId"] = state.SourceVswitchId
	}
	s, err := ctx.ReadResource("alicloud:vpc/snatEntry:SnatEntry", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &SnatEntry{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *SnatEntry) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *SnatEntry) ID() *pulumi.IDOutput {
	return r.s.ID
}

func (r *SnatEntry) SnatIp() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["snatIp"])
}

func (r *SnatEntry) SnatTableId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["snatTableId"])
}

func (r *SnatEntry) SourceVswitchId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["sourceVswitchId"])
}

// Input properties used for looking up and filtering SnatEntry resources.
type SnatEntryState struct {
	SnatIp interface{}
	SnatTableId interface{}
	SourceVswitchId interface{}
}

// The set of arguments for constructing a SnatEntry resource.
type SnatEntryArgs struct {
	SnatIp interface{}
	SnatTableId interface{}
	SourceVswitchId interface{}
}
