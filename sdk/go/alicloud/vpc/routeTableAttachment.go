// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/route_table_attachment.html.markdown.
type RouteTableAttachment struct {
	s *pulumi.ResourceState
}

// NewRouteTableAttachment registers a new resource with the given unique name, arguments, and options.
func NewRouteTableAttachment(ctx *pulumi.Context,
	name string, args *RouteTableAttachmentArgs, opts ...pulumi.ResourceOpt) (*RouteTableAttachment, error) {
	if args == nil || args.RouteTableId == nil {
		return nil, errors.New("missing required argument 'RouteTableId'")
	}
	if args == nil || args.VswitchId == nil {
		return nil, errors.New("missing required argument 'VswitchId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["routeTableId"] = nil
		inputs["vswitchId"] = nil
	} else {
		inputs["routeTableId"] = args.RouteTableId
		inputs["vswitchId"] = args.VswitchId
	}
	s, err := ctx.RegisterResource("alicloud:vpc/routeTableAttachment:RouteTableAttachment", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RouteTableAttachment{s: s}, nil
}

// GetRouteTableAttachment gets an existing RouteTableAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouteTableAttachment(ctx *pulumi.Context,
	name string, id pulumi.ID, state *RouteTableAttachmentState, opts ...pulumi.ResourceOpt) (*RouteTableAttachment, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["routeTableId"] = state.RouteTableId
		inputs["vswitchId"] = state.VswitchId
	}
	s, err := ctx.ReadResource("alicloud:vpc/routeTableAttachment:RouteTableAttachment", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RouteTableAttachment{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *RouteTableAttachment) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *RouteTableAttachment) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The routeTableId of the route table attachment, the field can't be changed.
func (r *RouteTableAttachment) RouteTableId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["routeTableId"])
}

// The vswitchId of the route table attachment, the field can't be changed.
func (r *RouteTableAttachment) VswitchId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["vswitchId"])
}

// Input properties used for looking up and filtering RouteTableAttachment resources.
type RouteTableAttachmentState struct {
	// The routeTableId of the route table attachment, the field can't be changed.
	RouteTableId interface{}
	// The vswitchId of the route table attachment, the field can't be changed.
	VswitchId interface{}
}

// The set of arguments for constructing a RouteTableAttachment resource.
type RouteTableAttachmentArgs struct {
	// The routeTableId of the route table attachment, the field can't be changed.
	RouteTableId interface{}
	// The vswitchId of the route table attachment, the field can't be changed.
	VswitchId interface{}
}
