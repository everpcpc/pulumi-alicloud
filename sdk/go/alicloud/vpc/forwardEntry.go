// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package vpc

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a forward resource.
//
//
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/forward_entry.html.markdown.
type ForwardEntry struct {
	pulumi.CustomResourceState

	// The external ip address, the ip must along bandwidth package public ip which `vpc.NatGateway` argument `bandwidthPackages`.
	ExternalIp pulumi.StringOutput `pulumi:"externalIp"`
	// The external port, valid value is 1~65535|any.
	ExternalPort pulumi.StringOutput `pulumi:"externalPort"`
	// The id of the forward entry on the server.
	ForwardEntryId pulumi.StringOutput `pulumi:"forwardEntryId"`
	// The value can get from `vpc.NatGateway` Attributes "forwardTableIds".
	ForwardTableId pulumi.StringOutput `pulumi:"forwardTableId"`
	// The internal ip, must a private ip.
	InternalIp pulumi.StringOutput `pulumi:"internalIp"`
	// The internal port, valid value is 1~65535|any.
	InternalPort pulumi.StringOutput `pulumi:"internalPort"`
	// The ip protocal, valid value is tcp|udp|any.
	IpProtocol pulumi.StringOutput `pulumi:"ipProtocol"`
	// The name of forward entry.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewForwardEntry registers a new resource with the given unique name, arguments, and options.
func NewForwardEntry(ctx *pulumi.Context,
	name string, args *ForwardEntryArgs, opts ...pulumi.ResourceOption) (*ForwardEntry, error) {
	if args == nil || args.ExternalIp == nil {
		return nil, errors.New("missing required argument 'ExternalIp'")
	}
	if args == nil || args.ExternalPort == nil {
		return nil, errors.New("missing required argument 'ExternalPort'")
	}
	if args == nil || args.ForwardTableId == nil {
		return nil, errors.New("missing required argument 'ForwardTableId'")
	}
	if args == nil || args.InternalIp == nil {
		return nil, errors.New("missing required argument 'InternalIp'")
	}
	if args == nil || args.InternalPort == nil {
		return nil, errors.New("missing required argument 'InternalPort'")
	}
	if args == nil || args.IpProtocol == nil {
		return nil, errors.New("missing required argument 'IpProtocol'")
	}
	if args == nil {
		args = &ForwardEntryArgs{}
	}
	var resource ForwardEntry
	err := ctx.RegisterResource("alicloud:vpc/forwardEntry:ForwardEntry", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetForwardEntry gets an existing ForwardEntry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetForwardEntry(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ForwardEntryState, opts ...pulumi.ResourceOption) (*ForwardEntry, error) {
	var resource ForwardEntry
	err := ctx.ReadResource("alicloud:vpc/forwardEntry:ForwardEntry", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ForwardEntry resources.
type forwardEntryState struct {
	// The external ip address, the ip must along bandwidth package public ip which `vpc.NatGateway` argument `bandwidthPackages`.
	ExternalIp *string `pulumi:"externalIp"`
	// The external port, valid value is 1~65535|any.
	ExternalPort *string `pulumi:"externalPort"`
	// The id of the forward entry on the server.
	ForwardEntryId *string `pulumi:"forwardEntryId"`
	// The value can get from `vpc.NatGateway` Attributes "forwardTableIds".
	ForwardTableId *string `pulumi:"forwardTableId"`
	// The internal ip, must a private ip.
	InternalIp *string `pulumi:"internalIp"`
	// The internal port, valid value is 1~65535|any.
	InternalPort *string `pulumi:"internalPort"`
	// The ip protocal, valid value is tcp|udp|any.
	IpProtocol *string `pulumi:"ipProtocol"`
	// The name of forward entry.
	Name *string `pulumi:"name"`
}

type ForwardEntryState struct {
	// The external ip address, the ip must along bandwidth package public ip which `vpc.NatGateway` argument `bandwidthPackages`.
	ExternalIp pulumi.StringPtrInput
	// The external port, valid value is 1~65535|any.
	ExternalPort pulumi.StringPtrInput
	// The id of the forward entry on the server.
	ForwardEntryId pulumi.StringPtrInput
	// The value can get from `vpc.NatGateway` Attributes "forwardTableIds".
	ForwardTableId pulumi.StringPtrInput
	// The internal ip, must a private ip.
	InternalIp pulumi.StringPtrInput
	// The internal port, valid value is 1~65535|any.
	InternalPort pulumi.StringPtrInput
	// The ip protocal, valid value is tcp|udp|any.
	IpProtocol pulumi.StringPtrInput
	// The name of forward entry.
	Name pulumi.StringPtrInput
}

func (ForwardEntryState) ElementType() reflect.Type {
	return reflect.TypeOf((*forwardEntryState)(nil)).Elem()
}

type forwardEntryArgs struct {
	// The external ip address, the ip must along bandwidth package public ip which `vpc.NatGateway` argument `bandwidthPackages`.
	ExternalIp string `pulumi:"externalIp"`
	// The external port, valid value is 1~65535|any.
	ExternalPort string `pulumi:"externalPort"`
	// The value can get from `vpc.NatGateway` Attributes "forwardTableIds".
	ForwardTableId string `pulumi:"forwardTableId"`
	// The internal ip, must a private ip.
	InternalIp string `pulumi:"internalIp"`
	// The internal port, valid value is 1~65535|any.
	InternalPort string `pulumi:"internalPort"`
	// The ip protocal, valid value is tcp|udp|any.
	IpProtocol string `pulumi:"ipProtocol"`
	// The name of forward entry.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ForwardEntry resource.
type ForwardEntryArgs struct {
	// The external ip address, the ip must along bandwidth package public ip which `vpc.NatGateway` argument `bandwidthPackages`.
	ExternalIp pulumi.StringInput
	// The external port, valid value is 1~65535|any.
	ExternalPort pulumi.StringInput
	// The value can get from `vpc.NatGateway` Attributes "forwardTableIds".
	ForwardTableId pulumi.StringInput
	// The internal ip, must a private ip.
	InternalIp pulumi.StringInput
	// The internal port, valid value is 1~65535|any.
	InternalPort pulumi.StringInput
	// The ip protocal, valid value is tcp|udp|any.
	IpProtocol pulumi.StringInput
	// The name of forward entry.
	Name pulumi.StringPtrInput
}

func (ForwardEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*forwardEntryArgs)(nil)).Elem()
}
