// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ForwardEntry struct {
	s *pulumi.ResourceState
}

// NewForwardEntry registers a new resource with the given unique name, arguments, and options.
func NewForwardEntry(ctx *pulumi.Context,
	name string, args *ForwardEntryArgs, opts ...pulumi.ResourceOpt) (*ForwardEntry, error) {
	if args == nil || args.ExternalIp == nil {
		return nil, errors.New("missing required argument 'ExternalIp'")
	}
	if args == nil || args.ExternalPort == nil {
		return nil, errors.New("missing required argument 'ExternalPort'")
	}
	if args == nil || args.ForwardTableId == nil {
		return nil, errors.New("missing required argument 'ForwardTableId'")
	}
	if args == nil || args.InternalIp == nil {
		return nil, errors.New("missing required argument 'InternalIp'")
	}
	if args == nil || args.InternalPort == nil {
		return nil, errors.New("missing required argument 'InternalPort'")
	}
	if args == nil || args.IpProtocol == nil {
		return nil, errors.New("missing required argument 'IpProtocol'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["externalIp"] = nil
		inputs["externalPort"] = nil
		inputs["forwardTableId"] = nil
		inputs["internalIp"] = nil
		inputs["internalPort"] = nil
		inputs["ipProtocol"] = nil
	} else {
		inputs["externalIp"] = args.ExternalIp
		inputs["externalPort"] = args.ExternalPort
		inputs["forwardTableId"] = args.ForwardTableId
		inputs["internalIp"] = args.InternalIp
		inputs["internalPort"] = args.InternalPort
		inputs["ipProtocol"] = args.IpProtocol
	}
	s, err := ctx.RegisterResource("alicloud:vpc/forwardEntry:ForwardEntry", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ForwardEntry{s: s}, nil
}

// GetForwardEntry gets an existing ForwardEntry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetForwardEntry(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ForwardEntryState, opts ...pulumi.ResourceOpt) (*ForwardEntry, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["externalIp"] = state.ExternalIp
		inputs["externalPort"] = state.ExternalPort
		inputs["forwardTableId"] = state.ForwardTableId
		inputs["internalIp"] = state.InternalIp
		inputs["internalPort"] = state.InternalPort
		inputs["ipProtocol"] = state.IpProtocol
	}
	s, err := ctx.ReadResource("alicloud:vpc/forwardEntry:ForwardEntry", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ForwardEntry{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ForwardEntry) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ForwardEntry) ID() *pulumi.IDOutput {
	return r.s.ID
}

func (r *ForwardEntry) ExternalIp() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["externalIp"])
}

func (r *ForwardEntry) ExternalPort() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["externalPort"])
}

func (r *ForwardEntry) ForwardTableId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["forwardTableId"])
}

func (r *ForwardEntry) InternalIp() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["internalIp"])
}

func (r *ForwardEntry) InternalPort() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["internalPort"])
}

func (r *ForwardEntry) IpProtocol() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["ipProtocol"])
}

// Input properties used for looking up and filtering ForwardEntry resources.
type ForwardEntryState struct {
	ExternalIp interface{}
	ExternalPort interface{}
	ForwardTableId interface{}
	InternalIp interface{}
	InternalPort interface{}
	IpProtocol interface{}
}

// The set of arguments for constructing a ForwardEntry resource.
type ForwardEntryArgs struct {
	ExternalIp interface{}
	ExternalPort interface{}
	ForwardTableId interface{}
	InternalIp interface{}
	InternalPort interface{}
	IpProtocol interface{}
}
