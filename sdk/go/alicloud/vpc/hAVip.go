// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/havip.html.markdown.
type HAVip struct {
	s *pulumi.ResourceState
}

// NewHAVip registers a new resource with the given unique name, arguments, and options.
func NewHAVip(ctx *pulumi.Context,
	name string, args *HAVipArgs, opts ...pulumi.ResourceOpt) (*HAVip, error) {
	if args == nil || args.VswitchId == nil {
		return nil, errors.New("missing required argument 'VswitchId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["ipAddress"] = nil
		inputs["vswitchId"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["ipAddress"] = args.IpAddress
		inputs["vswitchId"] = args.VswitchId
	}
	s, err := ctx.RegisterResource("alicloud:vpc/hAVip:HAVip", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &HAVip{s: s}, nil
}

// GetHAVip gets an existing HAVip resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHAVip(ctx *pulumi.Context,
	name string, id pulumi.ID, state *HAVipState, opts ...pulumi.ResourceOpt) (*HAVip, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["description"] = state.Description
		inputs["ipAddress"] = state.IpAddress
		inputs["vswitchId"] = state.VswitchId
	}
	s, err := ctx.ReadResource("alicloud:vpc/hAVip:HAVip", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &HAVip{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *HAVip) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *HAVip) ID() pulumi.IDOutput {
	return r.s.ID()
}

// The description of the HaVip instance.
func (r *HAVip) Description() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["description"])
}

// The ip address of the HaVip. If not filled, the default will be assigned one from the vswitch.
func (r *HAVip) IpAddress() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["ipAddress"])
}

// The vswitchId of the HaVip, the field can't be changed.
func (r *HAVip) VswitchId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["vswitchId"])
}

// Input properties used for looking up and filtering HAVip resources.
type HAVipState struct {
	// The description of the HaVip instance.
	Description interface{}
	// The ip address of the HaVip. If not filled, the default will be assigned one from the vswitch.
	IpAddress interface{}
	// The vswitchId of the HaVip, the field can't be changed.
	VswitchId interface{}
}

// The set of arguments for constructing a HAVip resource.
type HAVipArgs struct {
	// The description of the HaVip instance.
	Description interface{}
	// The ip address of the HaVip. If not filled, the default will be assigned one from the vswitch.
	IpAddress interface{}
	// The vswitchId of the HaVip, the field can't be changed.
	VswitchId interface{}
}
