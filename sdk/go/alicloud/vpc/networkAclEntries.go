// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkAclEntries struct {
	pulumi.CustomResourceState

	// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
	Egresses NetworkAclEntriesEgressArrayOutput `pulumi:"egresses"`
	// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
	Ingresses NetworkAclEntriesIngressArrayOutput `pulumi:"ingresses"`
	// The id of the network acl, the field can't be changed.
	NetworkAclId pulumi.StringOutput `pulumi:"networkAclId"`
}

// NewNetworkAclEntries registers a new resource with the given unique name, arguments, and options.
func NewNetworkAclEntries(ctx *pulumi.Context,
	name string, args *NetworkAclEntriesArgs, opts ...pulumi.ResourceOption) (*NetworkAclEntries, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkAclId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkAclId'")
	}
	var resource NetworkAclEntries
	err := ctx.RegisterResource("alicloud:vpc/networkAclEntries:NetworkAclEntries", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkAclEntries gets an existing NetworkAclEntries resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkAclEntries(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkAclEntriesState, opts ...pulumi.ResourceOption) (*NetworkAclEntries, error) {
	var resource NetworkAclEntries
	err := ctx.ReadResource("alicloud:vpc/networkAclEntries:NetworkAclEntries", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkAclEntries resources.
type networkAclEntriesState struct {
	// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
	Egresses []NetworkAclEntriesEgress `pulumi:"egresses"`
	// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
	Ingresses []NetworkAclEntriesIngress `pulumi:"ingresses"`
	// The id of the network acl, the field can't be changed.
	NetworkAclId *string `pulumi:"networkAclId"`
}

type NetworkAclEntriesState struct {
	// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
	Egresses NetworkAclEntriesEgressArrayInput
	// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
	Ingresses NetworkAclEntriesIngressArrayInput
	// The id of the network acl, the field can't be changed.
	NetworkAclId pulumi.StringPtrInput
}

func (NetworkAclEntriesState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAclEntriesState)(nil)).Elem()
}

type networkAclEntriesArgs struct {
	// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
	Egresses []NetworkAclEntriesEgress `pulumi:"egresses"`
	// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
	Ingresses []NetworkAclEntriesIngress `pulumi:"ingresses"`
	// The id of the network acl, the field can't be changed.
	NetworkAclId string `pulumi:"networkAclId"`
}

// The set of arguments for constructing a NetworkAclEntries resource.
type NetworkAclEntriesArgs struct {
	// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
	Egresses NetworkAclEntriesEgressArrayInput
	// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
	Ingresses NetworkAclEntriesIngressArrayInput
	// The id of the network acl, the field can't be changed.
	NetworkAclId pulumi.StringInput
}

func (NetworkAclEntriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkAclEntriesArgs)(nil)).Elem()
}

type NetworkAclEntriesInput interface {
	pulumi.Input

	ToNetworkAclEntriesOutput() NetworkAclEntriesOutput
	ToNetworkAclEntriesOutputWithContext(ctx context.Context) NetworkAclEntriesOutput
}

func (*NetworkAclEntries) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEntries)(nil))
}

func (i *NetworkAclEntries) ToNetworkAclEntriesOutput() NetworkAclEntriesOutput {
	return i.ToNetworkAclEntriesOutputWithContext(context.Background())
}

func (i *NetworkAclEntries) ToNetworkAclEntriesOutputWithContext(ctx context.Context) NetworkAclEntriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEntriesOutput)
}

func (i *NetworkAclEntries) ToNetworkAclEntriesPtrOutput() NetworkAclEntriesPtrOutput {
	return i.ToNetworkAclEntriesPtrOutputWithContext(context.Background())
}

func (i *NetworkAclEntries) ToNetworkAclEntriesPtrOutputWithContext(ctx context.Context) NetworkAclEntriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEntriesPtrOutput)
}

type NetworkAclEntriesPtrInput interface {
	pulumi.Input

	ToNetworkAclEntriesPtrOutput() NetworkAclEntriesPtrOutput
	ToNetworkAclEntriesPtrOutputWithContext(ctx context.Context) NetworkAclEntriesPtrOutput
}

type networkAclEntriesPtrType NetworkAclEntriesArgs

func (*networkAclEntriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAclEntries)(nil))
}

func (i *networkAclEntriesPtrType) ToNetworkAclEntriesPtrOutput() NetworkAclEntriesPtrOutput {
	return i.ToNetworkAclEntriesPtrOutputWithContext(context.Background())
}

func (i *networkAclEntriesPtrType) ToNetworkAclEntriesPtrOutputWithContext(ctx context.Context) NetworkAclEntriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEntriesPtrOutput)
}

// NetworkAclEntriesArrayInput is an input type that accepts NetworkAclEntriesArray and NetworkAclEntriesArrayOutput values.
// You can construct a concrete instance of `NetworkAclEntriesArrayInput` via:
//
//          NetworkAclEntriesArray{ NetworkAclEntriesArgs{...} }
type NetworkAclEntriesArrayInput interface {
	pulumi.Input

	ToNetworkAclEntriesArrayOutput() NetworkAclEntriesArrayOutput
	ToNetworkAclEntriesArrayOutputWithContext(context.Context) NetworkAclEntriesArrayOutput
}

type NetworkAclEntriesArray []NetworkAclEntriesInput

func (NetworkAclEntriesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkAclEntries)(nil)).Elem()
}

func (i NetworkAclEntriesArray) ToNetworkAclEntriesArrayOutput() NetworkAclEntriesArrayOutput {
	return i.ToNetworkAclEntriesArrayOutputWithContext(context.Background())
}

func (i NetworkAclEntriesArray) ToNetworkAclEntriesArrayOutputWithContext(ctx context.Context) NetworkAclEntriesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEntriesArrayOutput)
}

// NetworkAclEntriesMapInput is an input type that accepts NetworkAclEntriesMap and NetworkAclEntriesMapOutput values.
// You can construct a concrete instance of `NetworkAclEntriesMapInput` via:
//
//          NetworkAclEntriesMap{ "key": NetworkAclEntriesArgs{...} }
type NetworkAclEntriesMapInput interface {
	pulumi.Input

	ToNetworkAclEntriesMapOutput() NetworkAclEntriesMapOutput
	ToNetworkAclEntriesMapOutputWithContext(context.Context) NetworkAclEntriesMapOutput
}

type NetworkAclEntriesMap map[string]NetworkAclEntriesInput

func (NetworkAclEntriesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkAclEntries)(nil)).Elem()
}

func (i NetworkAclEntriesMap) ToNetworkAclEntriesMapOutput() NetworkAclEntriesMapOutput {
	return i.ToNetworkAclEntriesMapOutputWithContext(context.Background())
}

func (i NetworkAclEntriesMap) ToNetworkAclEntriesMapOutputWithContext(ctx context.Context) NetworkAclEntriesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEntriesMapOutput)
}

type NetworkAclEntriesOutput struct{ *pulumi.OutputState }

func (NetworkAclEntriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEntries)(nil))
}

func (o NetworkAclEntriesOutput) ToNetworkAclEntriesOutput() NetworkAclEntriesOutput {
	return o
}

func (o NetworkAclEntriesOutput) ToNetworkAclEntriesOutputWithContext(ctx context.Context) NetworkAclEntriesOutput {
	return o
}

func (o NetworkAclEntriesOutput) ToNetworkAclEntriesPtrOutput() NetworkAclEntriesPtrOutput {
	return o.ToNetworkAclEntriesPtrOutputWithContext(context.Background())
}

func (o NetworkAclEntriesOutput) ToNetworkAclEntriesPtrOutputWithContext(ctx context.Context) NetworkAclEntriesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkAclEntries) *NetworkAclEntries {
		return &v
	}).(NetworkAclEntriesPtrOutput)
}

type NetworkAclEntriesPtrOutput struct{ *pulumi.OutputState }

func (NetworkAclEntriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkAclEntries)(nil))
}

func (o NetworkAclEntriesPtrOutput) ToNetworkAclEntriesPtrOutput() NetworkAclEntriesPtrOutput {
	return o
}

func (o NetworkAclEntriesPtrOutput) ToNetworkAclEntriesPtrOutputWithContext(ctx context.Context) NetworkAclEntriesPtrOutput {
	return o
}

func (o NetworkAclEntriesPtrOutput) Elem() NetworkAclEntriesOutput {
	return o.ApplyT(func(v *NetworkAclEntries) NetworkAclEntries {
		if v != nil {
			return *v
		}
		var ret NetworkAclEntries
		return ret
	}).(NetworkAclEntriesOutput)
}

type NetworkAclEntriesArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclEntriesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEntries)(nil))
}

func (o NetworkAclEntriesArrayOutput) ToNetworkAclEntriesArrayOutput() NetworkAclEntriesArrayOutput {
	return o
}

func (o NetworkAclEntriesArrayOutput) ToNetworkAclEntriesArrayOutputWithContext(ctx context.Context) NetworkAclEntriesArrayOutput {
	return o
}

func (o NetworkAclEntriesArrayOutput) Index(i pulumi.IntInput) NetworkAclEntriesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclEntries {
		return vs[0].([]NetworkAclEntries)[vs[1].(int)]
	}).(NetworkAclEntriesOutput)
}

type NetworkAclEntriesMapOutput struct{ *pulumi.OutputState }

func (NetworkAclEntriesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]NetworkAclEntries)(nil))
}

func (o NetworkAclEntriesMapOutput) ToNetworkAclEntriesMapOutput() NetworkAclEntriesMapOutput {
	return o
}

func (o NetworkAclEntriesMapOutput) ToNetworkAclEntriesMapOutputWithContext(ctx context.Context) NetworkAclEntriesMapOutput {
	return o
}

func (o NetworkAclEntriesMapOutput) MapIndex(k pulumi.StringInput) NetworkAclEntriesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) NetworkAclEntries {
		return vs[0].(map[string]NetworkAclEntries)[vs[1].(string)]
	}).(NetworkAclEntriesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclEntriesInput)(nil)).Elem(), &NetworkAclEntries{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclEntriesPtrInput)(nil)).Elem(), &NetworkAclEntries{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclEntriesArrayInput)(nil)).Elem(), NetworkAclEntriesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkAclEntriesMapInput)(nil)).Elem(), NetworkAclEntriesMap{})
	pulumi.RegisterOutputType(NetworkAclEntriesOutput{})
	pulumi.RegisterOutputType(NetworkAclEntriesPtrOutput{})
	pulumi.RegisterOutputType(NetworkAclEntriesArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclEntriesMapOutput{})
}
