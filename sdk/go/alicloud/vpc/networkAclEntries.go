// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a network acl entries resource to create ingress and egress entries.
// 
// > **NOTE:** Available in 1.45.0+. Currently, the resource are only available in Hongkong(cn-hongkong), India(ap-south-1), and Indonesia(ap-southeast-1) regions.
// 
// > **NOTE:** It doesn't support concurrency and the order of the ingress and egress entries determines the priority.
// 
// > **NOTE:** Using this resource need to open a whitelist.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/network_acl_entries.html.markdown.
type NetworkAclEntries struct {
	s *pulumi.ResourceState
}

// NewNetworkAclEntries registers a new resource with the given unique name, arguments, and options.
func NewNetworkAclEntries(ctx *pulumi.Context,
	name string, args *NetworkAclEntriesArgs, opts ...pulumi.ResourceOpt) (*NetworkAclEntries, error) {
	if args == nil || args.NetworkAclId == nil {
		return nil, errors.New("missing required argument 'NetworkAclId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["egresses"] = nil
		inputs["ingresses"] = nil
		inputs["networkAclId"] = nil
	} else {
		inputs["egresses"] = args.Egresses
		inputs["ingresses"] = args.Ingresses
		inputs["networkAclId"] = args.NetworkAclId
	}
	s, err := ctx.RegisterResource("alicloud:vpc/networkAclEntries:NetworkAclEntries", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NetworkAclEntries{s: s}, nil
}

// GetNetworkAclEntries gets an existing NetworkAclEntries resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkAclEntries(ctx *pulumi.Context,
	name string, id pulumi.ID, state *NetworkAclEntriesState, opts ...pulumi.ResourceOpt) (*NetworkAclEntries, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["egresses"] = state.Egresses
		inputs["ingresses"] = state.Ingresses
		inputs["networkAclId"] = state.NetworkAclId
	}
	s, err := ctx.ReadResource("alicloud:vpc/networkAclEntries:NetworkAclEntries", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NetworkAclEntries{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *NetworkAclEntries) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *NetworkAclEntries) ID() pulumi.IDOutput {
	return r.s.ID()
}

// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
func (r *NetworkAclEntries) Egresses() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["egresses"])
}

// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
func (r *NetworkAclEntries) Ingresses() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["ingresses"])
}

// The id of the network acl, the field can't be changed.
func (r *NetworkAclEntries) NetworkAclId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["networkAclId"])
}

// Input properties used for looking up and filtering NetworkAclEntries resources.
type NetworkAclEntriesState struct {
	// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
	Egresses interface{}
	// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
	Ingresses interface{}
	// The id of the network acl, the field can't be changed.
	NetworkAclId interface{}
}

// The set of arguments for constructing a NetworkAclEntries resource.
type NetworkAclEntriesArgs struct {
	// List of the egress entries of the network acl. The order of the egress entries determines the priority. The details see Block Egress.
	Egresses interface{}
	// List of the ingress entries of the network acl. The order of the ingress entries determines the priority. The details see Block Ingress.
	Ingresses interface{}
	// The id of the network acl, the field can't be changed.
	NetworkAclId interface{}
}
