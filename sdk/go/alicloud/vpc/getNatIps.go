// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source provides the Vpc Nat Ips of the current Alibaba Cloud user.
//
// > **NOTE:** Available in v1.136.0+.
//
// ## Example Usage
//
// Basic Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-alicloud/sdk/v3/go/alicloud/vpc"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		ids, err := vpc.GetNatIps(ctx, &vpc.GetNatIpsArgs{
// 			NatGatewayId: "example_value",
// 			Ids: []string{
// 				"example_value-1",
// 				"example_value-2",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("vpcNatIpId1", ids.Ips[0].Id)
// 		opt0 := "^my-NatIp"
// 		nameRegex, err := vpc.GetNatIps(ctx, &vpc.GetNatIpsArgs{
// 			NatGatewayId: "example_value",
// 			NameRegex:    &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("vpcNatIpId2", nameRegex.Ips[0].Id)
// 		opt1 := "example_value"
// 		opt2 := "^my-NatIp"
// 		natIpCidr, err := vpc.GetNatIps(ctx, &vpc.GetNatIpsArgs{
// 			NatGatewayId: "example_value",
// 			NatIpCidr:    &opt1,
// 			NameRegex:    &opt2,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("vpcNatIpId3", natIpCidr.Ips[0].Id)
// 		natIpName, err := vpc.GetNatIps(ctx, &vpc.GetNatIpsArgs{
// 			NatGatewayId: "example_value",
// 			Ids: []string{
// 				"example_value",
// 			},
// 			NatIpNames: []string{
// 				"example_value",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("vpcNatIpId4", natIpName.Ips[0].Id)
// 		natIpIds, err := vpc.GetNatIps(ctx, &vpc.GetNatIpsArgs{
// 			NatGatewayId: "example_value",
// 			Ids: []string{
// 				"example_value",
// 			},
// 			NatIpIds: []string{
// 				"example_value",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("vpcNatIpId5", natIpIds.Ips[0].Id)
// 		opt3 := "example_value"
// 		status, err := vpc.GetNatIps(ctx, &vpc.GetNatIpsArgs{
// 			NatGatewayId: "example_value",
// 			Ids: []string{
// 				"example_value",
// 			},
// 			Status: &opt3,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("vpcNatIpId6", status.Ips[0].Id)
// 		return nil
// 	})
// }
// ```
func GetNatIps(ctx *pulumi.Context, args *GetNatIpsArgs, opts ...pulumi.InvokeOption) (*GetNatIpsResult, error) {
	var rv GetNatIpsResult
	err := ctx.Invoke("alicloud:vpc/getNatIps:getNatIps", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNatIps.
type GetNatIpsArgs struct {
	// A list of Nat Ip IDs.
	Ids []string `pulumi:"ids"`
	// A regex string to filter results by Nat Ip name.
	NameRegex *string `pulumi:"nameRegex"`
	// The ID of the Virtual Private Cloud (VPC) NAT gateway to which the NAT IP address belongs.
	NatGatewayId string `pulumi:"natGatewayId"`
	// The CIDR block to which the NAT IP address belongs.
	NatIpCidr *string  `pulumi:"natIpCidr"`
	NatIpIds  []string `pulumi:"natIpIds"`
	// The name of the NAT IP address.
	NatIpNames []string `pulumi:"natIpNames"`
	OutputFile *string  `pulumi:"outputFile"`
	// The status of the NAT IP address. Valid values: `Available`, `Deleting` and `Creating`.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getNatIps.
type GetNatIpsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id           string        `pulumi:"id"`
	Ids          []string      `pulumi:"ids"`
	Ips          []GetNatIpsIp `pulumi:"ips"`
	NameRegex    *string       `pulumi:"nameRegex"`
	Names        []string      `pulumi:"names"`
	NatGatewayId string        `pulumi:"natGatewayId"`
	NatIpCidr    *string       `pulumi:"natIpCidr"`
	NatIpIds     []string      `pulumi:"natIpIds"`
	NatIpNames   []string      `pulumi:"natIpNames"`
	OutputFile   *string       `pulumi:"outputFile"`
	Status       *string       `pulumi:"status"`
}
