// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package edas

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides an EDAS K8s cluster resource. For information about EDAS K8s Cluster and how to use it, see[What is EDAS K8s Cluster](https://www.alibabacloud.com/help/en/doc-detail/85108.htm).
//
// > **NOTE:** Available in 1.93.0+
type K8sCluster struct {
	pulumi.CustomResourceState

	// The import status of cluster:
	// `1`: success.
	// `2`: failed.
	// `3`: importing.
	// `4`: deleted.
	ClusterImportStatus pulumi.IntOutput `pulumi:"clusterImportStatus"`
	// The name of the cluster that you want to create.
	ClusterName pulumi.StringOutput `pulumi:"clusterName"`
	// The type of the cluster that you want to create. Valid values only: 5: K8s cluster.
	ClusterType pulumi.IntOutput `pulumi:"clusterType"`
	// The ID of the alicloud container service kubernetes cluster that you want to import.
	CsClusterId pulumi.StringOutput `pulumi:"csClusterId"`
	// The ID of the namespace where you want to import. You can call the [ListUserDefineRegion](https://www.alibabacloud.com/help/en/doc-detail/149377.htm?spm=a2c63.p38356.879954.34.331054faK2yNvC#doc-api-Edas-ListUserDefineRegion) operation to query the namespace ID.
	NamespaceId pulumi.StringPtrOutput `pulumi:"namespaceId"`
	// The network type of the cluster that you want to create. Valid values: 1: classic network. 2: VPC.
	NetworkMode pulumi.IntOutput `pulumi:"networkMode"`
	// The ID of the Virtual Private Cloud (VPC) for the cluster.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewK8sCluster registers a new resource with the given unique name, arguments, and options.
func NewK8sCluster(ctx *pulumi.Context,
	name string, args *K8sClusterArgs, opts ...pulumi.ResourceOption) (*K8sCluster, error) {
	if args == nil || args.CsClusterId == nil {
		return nil, errors.New("missing required argument 'CsClusterId'")
	}
	if args == nil {
		args = &K8sClusterArgs{}
	}
	var resource K8sCluster
	err := ctx.RegisterResource("alicloud:edas/k8sCluster:K8sCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetK8sCluster gets an existing K8sCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetK8sCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *K8sClusterState, opts ...pulumi.ResourceOption) (*K8sCluster, error) {
	var resource K8sCluster
	err := ctx.ReadResource("alicloud:edas/k8sCluster:K8sCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering K8sCluster resources.
type k8sClusterState struct {
	// The import status of cluster:
	// `1`: success.
	// `2`: failed.
	// `3`: importing.
	// `4`: deleted.
	ClusterImportStatus *int `pulumi:"clusterImportStatus"`
	// The name of the cluster that you want to create.
	ClusterName *string `pulumi:"clusterName"`
	// The type of the cluster that you want to create. Valid values only: 5: K8s cluster.
	ClusterType *int `pulumi:"clusterType"`
	// The ID of the alicloud container service kubernetes cluster that you want to import.
	CsClusterId *string `pulumi:"csClusterId"`
	// The ID of the namespace where you want to import. You can call the [ListUserDefineRegion](https://www.alibabacloud.com/help/en/doc-detail/149377.htm?spm=a2c63.p38356.879954.34.331054faK2yNvC#doc-api-Edas-ListUserDefineRegion) operation to query the namespace ID.
	NamespaceId *string `pulumi:"namespaceId"`
	// The network type of the cluster that you want to create. Valid values: 1: classic network. 2: VPC.
	NetworkMode *int `pulumi:"networkMode"`
	// The ID of the Virtual Private Cloud (VPC) for the cluster.
	VpcId *string `pulumi:"vpcId"`
}

type K8sClusterState struct {
	// The import status of cluster:
	// `1`: success.
	// `2`: failed.
	// `3`: importing.
	// `4`: deleted.
	ClusterImportStatus pulumi.IntPtrInput
	// The name of the cluster that you want to create.
	ClusterName pulumi.StringPtrInput
	// The type of the cluster that you want to create. Valid values only: 5: K8s cluster.
	ClusterType pulumi.IntPtrInput
	// The ID of the alicloud container service kubernetes cluster that you want to import.
	CsClusterId pulumi.StringPtrInput
	// The ID of the namespace where you want to import. You can call the [ListUserDefineRegion](https://www.alibabacloud.com/help/en/doc-detail/149377.htm?spm=a2c63.p38356.879954.34.331054faK2yNvC#doc-api-Edas-ListUserDefineRegion) operation to query the namespace ID.
	NamespaceId pulumi.StringPtrInput
	// The network type of the cluster that you want to create. Valid values: 1: classic network. 2: VPC.
	NetworkMode pulumi.IntPtrInput
	// The ID of the Virtual Private Cloud (VPC) for the cluster.
	VpcId pulumi.StringPtrInput
}

func (K8sClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*k8sClusterState)(nil)).Elem()
}

type k8sClusterArgs struct {
	// The ID of the alicloud container service kubernetes cluster that you want to import.
	CsClusterId string `pulumi:"csClusterId"`
	// The ID of the namespace where you want to import. You can call the [ListUserDefineRegion](https://www.alibabacloud.com/help/en/doc-detail/149377.htm?spm=a2c63.p38356.879954.34.331054faK2yNvC#doc-api-Edas-ListUserDefineRegion) operation to query the namespace ID.
	NamespaceId *string `pulumi:"namespaceId"`
}

// The set of arguments for constructing a K8sCluster resource.
type K8sClusterArgs struct {
	// The ID of the alicloud container service kubernetes cluster that you want to import.
	CsClusterId pulumi.StringInput
	// The ID of the namespace where you want to import. You can call the [ListUserDefineRegion](https://www.alibabacloud.com/help/en/doc-detail/149377.htm?spm=a2c63.p38356.879954.34.331054faK2yNvC#doc-api-Edas-ListUserDefineRegion) operation to query the namespace ID.
	NamespaceId pulumi.StringPtrInput
}

func (K8sClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*k8sClusterArgs)(nil)).Elem()
}
