// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a CDN Accelerated Domain resource.
// 
// For information about domain config and how to use it, see [Batch set config](https://www.alibabacloud.com/help/zh/doc-detail/90915.htm)
// 
// > **NOTE:** Available in v1.34.0+.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-alicloud/blob/master/website/docs/r/cdn_domain_config.html.markdown.
type DomainConfig struct {
	s *pulumi.ResourceState
}

// NewDomainConfig registers a new resource with the given unique name, arguments, and options.
func NewDomainConfig(ctx *pulumi.Context,
	name string, args *DomainConfigArgs, opts ...pulumi.ResourceOpt) (*DomainConfig, error) {
	if args == nil || args.DomainName == nil {
		return nil, errors.New("missing required argument 'DomainName'")
	}
	if args == nil || args.FunctionArgs == nil {
		return nil, errors.New("missing required argument 'FunctionArgs'")
	}
	if args == nil || args.FunctionName == nil {
		return nil, errors.New("missing required argument 'FunctionName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["domainName"] = nil
		inputs["functionArgs"] = nil
		inputs["functionName"] = nil
	} else {
		inputs["domainName"] = args.DomainName
		inputs["functionArgs"] = args.FunctionArgs
		inputs["functionName"] = args.FunctionName
	}
	s, err := ctx.RegisterResource("alicloud:cdn/domainConfig:DomainConfig", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &DomainConfig{s: s}, nil
}

// GetDomainConfig gets an existing DomainConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainConfig(ctx *pulumi.Context,
	name string, id pulumi.ID, state *DomainConfigState, opts ...pulumi.ResourceOpt) (*DomainConfig, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["domainName"] = state.DomainName
		inputs["functionArgs"] = state.FunctionArgs
		inputs["functionName"] = state.FunctionName
	}
	s, err := ctx.ReadResource("alicloud:cdn/domainConfig:DomainConfig", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &DomainConfig{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *DomainConfig) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *DomainConfig) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Name of the accelerated domain. This name without suffix can have a string of 1 to 63 characters, must contain only alphanumeric characters or "-", and must not begin or end with "-", and "-" must not in the 3th and 4th character positions at the same time. Suffix `.sh` and `.tel` are not supported.
func (r *DomainConfig) DomainName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["domainName"])
}

// The args of the domain config.
func (r *DomainConfig) FunctionArgs() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["functionArgs"])
}

// The name of the domain config.
func (r *DomainConfig) FunctionName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["functionName"])
}

// Input properties used for looking up and filtering DomainConfig resources.
type DomainConfigState struct {
	// Name of the accelerated domain. This name without suffix can have a string of 1 to 63 characters, must contain only alphanumeric characters or "-", and must not begin or end with "-", and "-" must not in the 3th and 4th character positions at the same time. Suffix `.sh` and `.tel` are not supported.
	DomainName interface{}
	// The args of the domain config.
	FunctionArgs interface{}
	// The name of the domain config.
	FunctionName interface{}
}

// The set of arguments for constructing a DomainConfig resource.
type DomainConfigArgs struct {
	// Name of the accelerated domain. This name without suffix can have a string of 1 to 63 characters, must contain only alphanumeric characters or "-", and must not begin or end with "-", and "-" must not in the 3th and 4th character positions at the same time. Suffix `.sh` and `.tel` are not supported.
	DomainName interface{}
	// The args of the domain config.
	FunctionArgs interface{}
	// The name of the domain config.
	FunctionName interface{}
}
